/Users/a01064483/desktop/current/exam/Aws/functions.php:    foreach ($iterable as $value) {
/Users/a01064483/desktop/current/exam/Aws/functions.php:    foreach ($iterable as $value) {
/Users/a01064483/desktop/current/exam/Aws/functions.php:    foreach (map($iterable, $f) as $outer) {
/Users/a01064483/desktop/current/exam/Aws/functions.php:        foreach ($outer as $inner) {
/Users/a01064483/desktop/current/exam/Aws/functions.php:    foreach ($iterable as $value) {
/Users/a01064483/desktop/current/exam/Aws/functions.php:        foreach ($fns as $fn) {
/Users/a01064483/desktop/current/exam/Aws/functions.php: * Serialize a request for a command but do not send it.
/Users/a01064483/desktop/current/exam/Aws/functions.php: * Retrieves data for a service from the SDK's service manifest file.
/Users/a01064483/desktop/current/exam/Aws/functions.php: *                        service for which you are retrieving manifest data.
/Users/a01064483/desktop/current/exam/Aws/functions.php:    // Load the manifest and create aliases for lowercased namespaces
/Users/a01064483/desktop/current/exam/Aws/functions.php:        foreach ($manifest as $endpoint => $info) {
/Users/a01064483/desktop/current/exam/Aws/functions.php:            "The service \"{$service}\" is not provided by the AWS SDK for PHP."
/Users/a01064483/desktop/current/exam/Aws/Handler/GuzzleV5/GuzzleHandler.php:                // Reject with information about the error.
/Users/a01064483/desktop/current/exam/Aws/Handler/GuzzleV5/GuzzleHandler.php:        foreach (array_keys($options) as $key) {
/Users/a01064483/desktop/current/exam/Aws/Handler/GuzzleV5/GuzzleHandler.php:            foreach ($ringConfig as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/Ssm/SsmClient.php: * @method \Aws\Result describeInstanceInformation(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Ssm/SsmClient.php: * @method \GuzzleHttp\Promise\Promise describeInstanceInformationAsync(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php: * The "front" of the list is invoked before the "end" of the list. You can add
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php: * next handler but rather is responsible for returning a promise that is
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php: * - validate: The command is being validated before it is serialized
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php: * middleware before or after another middleware by name. This also allows you
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:        foreach (array_reverse($this->steps) as $k => $step) {
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:            foreach (array_reverse($step) as $j => $tuple) {
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:     * Add a middleware before the given middleware by name.
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:     * @param string|callable $findName   Add before this
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:    public function before($findName, $withName, callable $middleware)
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:     * Interpose a function between each middleware (e.g., allowing for a trace
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:        foreach ($this->sorted as $fn) {
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:     * @param          $before
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:    private function splice($findName, $withName, callable $middleware, $before)
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:        foreach ($this->steps[$step] as $i => $tuple) {
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:        $replacement = $before
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:     * Provides a debug string for a given callable.
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:            foreach ($this->steps as $step) {
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:                foreach ($step as $fn) {
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:        foreach ($this->steps as $stepName => $step) {
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:            foreach ($step as $fn) {
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:        foreach ($this->steps as $k => $step) {
/Users/a01064483/desktop/current/exam/Aws/HandlerList.php:            foreach ($step as $j => $tuple) {
/Users/a01064483/desktop/current/exam/Aws/S3/S3MultiRegionClient.php:                . ' cannot create presigned requests for commands without a'
/Users/a01064483/desktop/current/exam/Aws/S3/S3MultiRegionClient.php:            return Promise\promise_for($cached);
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:                    . 'option is useful for interacting with CNAME endpoints.',
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:                    . ' you must enable S3 Accelerate on a bucket before it can'
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:     *   of injecting the bucket into the URL. This option is useful for
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:     *   for all Amazon S3 signed uploads.
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:     *   false. Note: you must enable S3 Accelerate on a bucket before it can be
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:        // Use the bucket style middleware when using a "bucket_endpoint" (for cnames)
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:     * Determine if a string is a valid name for a DNS compatible Amazon S3
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:     * Raw URL encode a key and allow for '/' characters
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:                            foreach ($topLevel as $key) {
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:                            foreach ($nested as $steps) {
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:                                    foreach ($result[$steps[0]] as &$part) {
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:                new RetryableMalformedResponseParser(
/Users/a01064483/desktop/current/exam/Aws/S3/S3Client.php:        $opt = '<div class="alert alert-info">This value will be computed for you it is not supplied.</div>';
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php: * Encapsulates the logic for getting the data for an S3 object POST upload form
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:    private $formAttributes;
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:    private $formInputs;
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:     * @param array             $formInputs Associative array of form input
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:        array $formInputs,
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:        // setup form attributes
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:        $this->formAttributes = [
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:            'enctype' => 'multipart/form-data'
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:            'expiration' => TimestampShape::format($expiration, 'iso8601'),
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:        // setup basic formInputs
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:        $this->formInputs = $formInputs + ['key' => '${filename}'];
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:        $this->formInputs += $this->getPolicyAndSignature(
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:     * Gets the form attributes as an array.
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:        return $this->formAttributes;
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:     * Set a form attribute.
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:        $this->formAttributes[$attribute] = $value;
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:     * Gets the form inputs as an array.
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:        return $this->formInputs;
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:     * Set a form input.
/Users/a01064483/desktop/current/exam/Aws/S3/PostObjectV4.php:        $this->formInputs[$field] = $value;
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectCopier.php:        'before_upload' => null,
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectCopier.php:     * Perform the configured copy asynchronously. Returns a promise that is
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectCopier.php:     * Perform the configured copy synchronously. Returns the result of the
/Users/a01064483/desktop/current/exam/Aws/S3/RetryableMalformedResponseParser.php: * Converts malformed responses to a retryable error type.
/Users/a01064483/desktop/current/exam/Aws/S3/RetryableMalformedResponseParser.php:class RetryableMalformedResponseParser extends AbstractParser
/Users/a01064483/desktop/current/exam/Aws/S3/RetryableMalformedResponseParser.php:                "Error parsing response for {$command->getName()}:"
/Users/a01064483/desktop/current/exam/Aws/S3/ApplyChecksumMiddleware.php: * Apply required or optional MD5s to requests before sending.
/Users/a01064483/desktop/current/exam/Aws/S3/ApplyChecksumMiddleware.php:            // Set the content MD5 header for operations that require it.
/Users/a01064483/desktop/current/exam/Aws/S3/BucketEndpointMiddleware.php: * Used to update the host used for S3 requests in the case of using a
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectUploader.php:        'before_upload' => null,
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectUploader.php:        $this->body = Psr7\stream_for($body);
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectUploader.php:            // Perform a multipart upload.
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectUploader.php:            $this->options['before_initiate'] = function ($command) {
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectUploader.php:                foreach ($this->options['params'] as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectUploader.php:            // Perform a regular PutObject operation.
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectUploader.php:            if (is_callable($this->options['before_upload'])) {
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectUploader.php:                $this->options['before_upload']($command);
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectUploader.php:     * @param integer             $threshold Minimum bytes before using Multipart.
/Users/a01064483/desktop/current/exam/Aws/S3/ObjectUploader.php:        $buffer = Psr7\stream_for();
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     * Create a pre-signed URL for the given S3 command object.
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     *                                      URL for.
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     * performed using concurrent multipart uploads.
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     * - before_upload: (callable) Callback to invoke before any upload
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     *   before the upload must be sent via a multipart upload. Default: 16 MB.
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     *   upload. For single uploads, they must correspond to those used for the
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     * @see Aws\S3\MultipartUploader for more info about multipart uploads.
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     * If the upload size exceeds the maximum allowable size for direct S3
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     * - before_upload: (callable) Callback to invoke before any upload
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     *   upload. For single uploads, they must correspond to those used for the
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     * @see Aws\S3\MultipartCopy for more info about multipart uploads.
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     * @see self::copy for more info about the parameters above.
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     * @see Aws\S3\Transfer for more options and customization
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientInterface.php:     * @see Aws\S3\Transfer for more options and customization
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:    private $formAttributes;
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:    private $formInputs;
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:     * @param array             $formInputs Associative array of form input
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:     *                                      and applied to the form on your
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:        array $formInputs,
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:        $this->formAttributes = [
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:            'enctype' => 'multipart/form-data'
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:        $this->formInputs = $formInputs + ['key' => '${filename}'];
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:        $this->formInputs += $this->getPolicyAndSignature($credentials);
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:     * Gets the form attributes as an array.
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:        return $this->formAttributes;
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:     * Set a form attribute.
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:        $this->formAttributes[$attribute] = $value;
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:     * Gets the form inputs as an array.
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:        return $this->formInputs;
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:     * Set a form input.
/Users/a01064483/desktop/current/exam/Aws/S3/PostObject.php:        $this->formInputs[$field] = $value;
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php: * - before: Function invoked before executing a command. The function is
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php: *   for logging, adding custom request headers, etc.
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php:    private $before;
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php:                    foreach ($result['Contents'] as $object) {
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php:                foreach ($iter as $obj) {
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php:        if (isset($options['before'])) {
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php:            if (!is_callable($options['before'])) {
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php:                throw new \InvalidArgumentException('before must be callable');
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php:            $this->before = $options['before'];
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php:        if ($this->before) {
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php:            call_user_func($this->before, $command);
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php:            $this->before = $this->client = $this->queue = null;
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php:                return Promise\promise_for($this->flushQueue())
/Users/a01064483/desktop/current/exam/Aws/S3/BatchDelete.php:                return Promise\rejection_for($reason);
/Users/a01064483/desktop/current/exam/Aws/S3/PermanentRedirectMiddleware.php:                        . 'Are you sure you are using the correct region for '
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php: * the local filesystem. You can force a "r" stream to be seekable by setting
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php: * When opening an "x" stream, the file must exist on Amazon S3 for the stream
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:    /** @var CacheInterface Cache for object and dir lookups */
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:     * @param CacheInterface    $cache    Default cache for the protocol.
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:     * Provides information for is_dir, is_file, filesize, etc. Works on
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:        // Some paths come through as S3:// for some reason.
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:                    // Return as if it is a bucket to account for console
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:                    return $this->formatUrlStat($path);
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:                    return $this->formatUrlStat($result->toArray());
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:                return $this->formatUrlStat($path);
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:            return $this->formatUrlStat($path);
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:     * Support for mkdir().
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:     *                        ACL_PRIVATE. Expects octal form.
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:     * Support for opendir().
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:            $key = $this->formatKey($result);
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:            $stat = $this->formatUrlStat($key);
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:            $key = $this->formatKey($cur['Key']);
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:            $stat = $this->formatUrlStat($cur);
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:        // Cache the object data for quick url_stat lookups used with
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:    private function formatKey($key)
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:     * Validates the provided stream arguments for fopen and returns an array
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:                . 'form of s3://bucket/key';
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:        // When using mode "x" validate if the file exists before attempting
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:                // This is triggered for things like is_link()
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:                ? $this->formatUrlStat(false)
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:    private function formatUrlStat($result = null)
/Users/a01064483/desktop/current/exam/Aws/S3/StreamWrapper.php:     * Creates a bucket for the given parameters.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploader.php:     * Creates a multipart upload for an S3 object.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploader.php:     * - before_complete: (callable) Callback to invoke before the
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploader.php:     * - before_initiate: (callable) Callback to invoke before the
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploader.php:     * - before_upload: (callable) Callback to invoke before any `UploadPart`
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploader.php:     * - key: (string, required) Key to use for the object being uploaded.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploader.php:     * @param S3ClientInterface $client Client used for the upload.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploader.php:     * @param array             $config Configuration used to perform the upload.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploader.php:            $body = Psr7\stream_for();
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartCopy.php:     * Creates a multipart upload for copying an S3 object.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartCopy.php:     * - before_complete: (callable) Callback to invoke before the
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartCopy.php:     * - before_initiate: (callable) Callback to invoke before the
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartCopy.php:     * - before_upload: (callable) Callback to invoke before `UploadPartCopy`
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartCopy.php:     * - key: (string, required) Key to use for the object being uploaded.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartCopy.php:     * @param S3ClientInterface $client Client used for the upload.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartCopy.php:     *                                  (in the form /<bucket>/<key>).
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartCopy.php:     * @param array             $config Configuration used to perform the upload.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartCopy.php:        for ($partNumber = 1; $partNumber <= $parts; $partNumber++) {
/Users/a01064483/desktop/current/exam/Aws/S3/SSECMiddleware.php:        // If it's a copy operation, prepare the SSE-CPK headers for the source.
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:    private $before;
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:     * When providing an iterator for the $source argument, you must also
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:     * - before: (callable) A callback to invoke before each transfer. The
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:     * - debug: (bool) Set to true to print out debug information for
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:     * @param S3ClientInterface $client  Client used for transfers.
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:        // Handle "before" callback option.
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:        if (isset($options['before'])) {
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:            $this->before = $options['before'];
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:            if (!is_callable($this->before)) {
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:                throw new \InvalidArgumentException('before must be a callable.');
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:            $this->addDebugToBefore($options['debug']);
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:            // Create an upload/download promise for the transfer.
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:        foreach ($this->getDownloadsIterator() as $object) {
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:            'before'      => $this->before,
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:        // Map each file into a promise that performs the actual transfer.
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:        $this->before and call_user_func($this->before, $command);
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:            'before_initiate' => $this->before,
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:            'before_upload'   => $this->before,
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:            'before_complete' => $this->before,
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:    private function addDebugToBefore($debug)
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:        $before = $this->before;
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:        $this->before = static function (
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:        ) use ($before, $debug, $sourcePath, $s3Args) {
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:            // Call the composed before function.
/Users/a01064483/desktop/current/exam/Aws/S3/Transfer.php:            $before and $before($command);
/Users/a01064483/desktop/current/exam/Aws/S3/S3ClientTrait.php:     * @param CommandInterface $command Command used to poll for the resource
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploadingTrait.php:     * Creates an UploadState object for a multipart upload by querying the
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploadingTrait.php:     * service for the specified upload's information.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploadingTrait.php:     * @param S3ClientInterface $client   S3Client used for the upload.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploadingTrait.php:     * @param string            $bucket   Bucket for the multipart upload.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploadingTrait.php:     * @param string            $key      Object key for the multipart upload.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploadingTrait.php:     * @param string            $uploadId Upload ID for the multipart upload.
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploadingTrait.php:        foreach ($client->getPaginator('ListParts', $state->getId()) as $result) {
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploadingTrait.php:            foreach ($result['Parts'] as $part) {
/Users/a01064483/desktop/current/exam/Aws/S3/MultipartUploadingTrait.php:        // Adjust the part size to be larger for known, x-large uploads.
/Users/a01064483/desktop/current/exam/Aws/S3/AccelerateMiddleware.php: * Used to update the URL used for S3 requests to suport S3 Accelerate.
/Users/a01064483/desktop/current/exam/Aws/S3/S3UriParser.php:        $url = Psr7\uri_for($uri);
/Users/a01064483/desktop/current/exam/Aws/S3/S3UriParser.php:        // Parse the URI based on the matched format (path / virtual)
/Users/a01064483/desktop/current/exam/Aws/S3/GetBucketLocationParser.php: * @internal Decorates a parser for the S3 service to correctly handle the
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:                    . 'option is useful for interacting with CNAME endpoints.',
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:                    . ' you must enable S3 Accelerate on a bucket before it can'
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:     *   of injecting the bucket into the URL. This option is useful for
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:     *   for all Amazon S3 signed uploads.
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:     *   false. Note: you must enable S3 Accelerate on a bucket before it can be
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:        // Use the bucket style middleware when using a "bucket_endpoint" (for cnames)
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:     * Determine if a string is a valid name for a DNS compatible Amazon S3
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:     * Raw URL encode a key and allow for '/' characters
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:                            foreach ($topLevel as $key) {
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:                            foreach ($nested as $steps) {
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:                                    foreach ($result[$steps[0]] as &$part) {
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:                new RetryableMalformedResponseParser(
/Users/a01064483/desktop/current/exam/Aws/S3/.mS3Client.php:        $opt = '<div class="alert alert-info">This value will be computed for you it is not supplied.</div>';
/Users/a01064483/desktop/current/exam/Aws/HasDataTrait.php:     * This method returns a reference to the variable to allow for indirect
/Users/a01064483/desktop/current/exam/Aws/Sns/MessageValidator.php:     * @param Message $message Message for which to build the string-to-sign.
/Users/a01064483/desktop/current/exam/Aws/Sns/MessageValidator.php:        foreach ($signableKeys as $key) {
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \Aws\Result createPlatformApplication(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \GuzzleHttp\Promise\Promise createPlatformApplicationAsync(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \Aws\Result createPlatformEndpoint(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \GuzzleHttp\Promise\Promise createPlatformEndpointAsync(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \Aws\Result deletePlatformApplication(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \GuzzleHttp\Promise\Promise deletePlatformApplicationAsync(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \Aws\Result getPlatformApplicationAttributes(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \GuzzleHttp\Promise\Promise getPlatformApplicationAttributesAsync(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \Aws\Result listEndpointsByPlatformApplication(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \GuzzleHttp\Promise\Promise listEndpointsByPlatformApplicationAsync(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \Aws\Result listPlatformApplications(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \GuzzleHttp\Promise\Promise listPlatformApplicationsAsync(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \Aws\Result setPlatformApplicationAttributes(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/SnsClient.php: * @method \GuzzleHttp\Promise\Promise setPlatformApplicationAttributesAsync(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sns/Message.php:        // Ensure that all the required keys for the message's type are present.
/Users/a01064483/desktop/current/exam/Aws/Sns/Message.php:        foreach ($keys as $key) {
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureTrait.php: * Provides signature calculation for SignatureV4.
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureProvider.php:            "Unable to resolve a signature for $version/$service/$region.\n"
/Users/a01064483/desktop/current/exam/Aws/Signature/S3SignatureV4.php:     * Always add a x-amz-content-sha-256 for data integrity.
/Users/a01064483/desktop/current/exam/Aws/Signature/S3SignatureV4.php:     * Always add a x-amz-content-sha-256 for data integrity.
/Users/a01064483/desktop/current/exam/Aws/Signature/S3SignatureV4.php:     * Override used to allow pre-signed URLs to be created for an
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureInterface.php: * Interface used to provide interchangeable strategies for signing requests
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureV4.php:     * Useful for pre-signing query protocol requests.
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureV4.php:            ->withBody(Psr7\stream_for(''))
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureV4.php:        if ($request->getHeaderLine('Content-Type') === 'application/x-www-form-urlencoded') {
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureV4.php:     * @return array Returns an array of context information
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureV4.php:            'max-forwards'        => true,
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureV4.php:        foreach ($parsedRequest['headers'] as $key => $values) {
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureV4.php:                foreach ($values as $v) {
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureV4.php:        foreach ($aggregate as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureV4.php:        foreach ($query as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureV4.php:                foreach ($v as $value) {
/Users/a01064483/desktop/current/exam/Aws/Signature/SignatureV4.php:        foreach ($parsedRequest['headers'] as $name => $header) {
/Users/a01064483/desktop/current/exam/Aws/MockHandler.php:        foreach (func_get_args() as $value) {
/Users/a01064483/desktop/current/exam/Aws/MockHandler.php:            $result = Promise\promise_for($result);
/Users/a01064483/desktop/current/exam/Aws/CognitoIdentity/CognitoIdentityProvider.php:                (int) $result['Credentials']['Expiration']->format('U')
/Users/a01064483/desktop/current/exam/Aws/LruArrayCache.php:            for ($i = 0; $i < $diff; $i++) {
/Users/a01064483/desktop/current/exam/Aws/AwsClientInterface.php:     * Creates and executes a command for an operation by name.
/Users/a01064483/desktop/current/exam/Aws/AwsClientInterface.php:     * Create a command for an operation name.
/Users/a01064483/desktop/current/exam/Aws/AwsClientInterface.php:     *   request that is serialized for this command. Available keys include
/Users/a01064483/desktop/current/exam/Aws/AwsClientInterface.php:     * Get a resource iterator for the specified operation.
/Users/a01064483/desktop/current/exam/Aws/AwsClientInterface.php:     * Get a result paginator for the specified operation.
/Users/a01064483/desktop/current/exam/Aws/AwsClientInterface.php:     * @param string $name   Name of the operation used for iterator
/Users/a01064483/desktop/current/exam/Aws/CloudFront/UrlSigner.php: * Creates signed URLs for Amazon CloudFront resources.
/Users/a01064483/desktop/current/exam/Aws/CloudFront/UrlSigner.php:     * @param $privateKey string Path to the private key used for signing
/Users/a01064483/desktop/current/exam/Aws/CloudFront/UrlSigner.php:     * Keep in mind that URLs meant for use in media/flash players may have
/Users/a01064483/desktop/current/exam/Aws/CloudFront/UrlSigner.php:     * different requirements for URL formats (e.g. some require that the
/Users/a01064483/desktop/current/exam/Aws/CloudFront/UrlSigner.php:     *                                     creating a signed URL for a custom
/Users/a01064483/desktop/current/exam/Aws/CloudFront/Signer.php:     * A signer for creating the signature values used in CloudFront signed URLs
/Users/a01064483/desktop/current/exam/Aws/CloudFront/Signer.php:     * @param $privateKey string Path to the private key used for signing
/Users/a01064483/desktop/current/exam/Aws/CloudFront/Signer.php:     *                                          creating a signature for a custom
/Users/a01064483/desktop/current/exam/Aws/CloudFront/CloudFrontClient.php:     *   URL for a custom policy.
/Users/a01064483/desktop/current/exam/Aws/CloudFront/CloudFrontClient.php:     *   URLs for private distributions.
/Users/a01064483/desktop/current/exam/Aws/CloudFront/CloudFrontClient.php:     *   CloudFront URLs for private distributions.
/Users/a01064483/desktop/current/exam/Aws/CloudFront/CloudFrontClient.php:        foreach (['url', 'key_pair_id', 'private_key'] as $required) {
/Users/a01064483/desktop/current/exam/Aws/CloudFront/CloudFrontClient.php:     *   URL for a custom policy.
/Users/a01064483/desktop/current/exam/Aws/CloudFront/CloudFrontClient.php:     *   URLs for private distributions.
/Users/a01064483/desktop/current/exam/Aws/CloudFront/CloudFrontClient.php:     *   CloudFront URLs for private distributions.
/Users/a01064483/desktop/current/exam/Aws/CloudFront/CloudFrontClient.php:        foreach (['key_pair_id', 'private_key'] as $required) {
/Users/a01064483/desktop/current/exam/Aws/CloudFront/CookieSigner.php:     * @param $privateKey string Path to the private key used for signing
/Users/a01064483/desktop/current/exam/Aws/CloudFront/CookieSigner.php:     *                                     creating a signed cookie for a custom
/Users/a01064483/desktop/current/exam/Aws/CloudFront/CookieSigner.php:        foreach ($signature as $key => $value) {
/Users/a01064483/desktop/current/exam/Aws/Glacier/TreeHash.php:    /** @var string Algorithm used for hashing. */
/Users/a01064483/desktop/current/exam/Aws/Glacier/TreeHash.php:    /** @var string Resulting hash in binary form. */
/Users/a01064483/desktop/current/exam/Aws/Glacier/TreeHash.php:     * @param bool $inBinaryForm TRUE if checksum is in binary form
/Users/a01064483/desktop/current/exam/Aws/Glacier/TreeHash.php:        // Convert the checksum to binary form if necessary
/Users/a01064483/desktop/current/exam/Aws/Glacier/TreeHash.php:            // Perform hashes up the tree to arrive at the root checksum.
/Users/a01064483/desktop/current/exam/Aws/Glacier/TreeHash.php:                foreach ($sets as $set) {
/Users/a01064483/desktop/current/exam/Aws/Glacier/GlacierClient.php:     * Sets the default accountId to "-" for all operations.
/Users/a01064483/desktop/current/exam/Aws/Glacier/GlacierClient.php:     * hash headers for upload operations.
/Users/a01064483/desktop/current/exam/Aws/Glacier/GlacierClient.php:     * Creates a middleware that adds the API version header for all requests.
/Users/a01064483/desktop/current/exam/Aws/Glacier/GlacierClient.php:        // Add information about "checksum" and "ContentSHA256" being optional.
/Users/a01064483/desktop/current/exam/Aws/Glacier/GlacierClient.php:            . 'for you on your behalf if it is not supplied.</div>';
/Users/a01064483/desktop/current/exam/Aws/Glacier/GlacierClient.php:        // Make "accountId" optional for all operations.
/Users/a01064483/desktop/current/exam/Aws/Glacier/GlacierClient.php:        foreach ($api['operations'] as $operation) {
/Users/a01064483/desktop/current/exam/Aws/Glacier/GlacierClient.php:        // Add information about the default value for "accountId".
/Users/a01064483/desktop/current/exam/Aws/Glacier/GlacierClient.php:        foreach ($docs['shapes']['string']['refs'] as $name => &$ref) {
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * Creates an UploadState object for a multipart upload by querying the
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * service for the specified upload's information.
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * @param string        $vaultName Vault name for the multipart upload.
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * @param string        $uploadId  Upload ID for the multipart upload.
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * @param string        $accountId Account ID for the multipart upload.
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:        foreach ($client->getPaginator('ListParts', $state->getId()) as $result) {
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:            foreach ($result['Parts'] as $part) {
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * Creates a multipart upload for a Glacier archive.
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * - account_id: (string, default=string('-')) Account ID for the archive
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * - before_complete: (callable) Callback to invoke before the
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * - before_initiate: (callable) Callback to invoke before the
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * - before_upload: (callable) Callback to invoke before any
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * - vault_name: (string, required) Vault name to use for the archive being
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * @param GlacierClient $client Client used for the upload.
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:     * @param array         $config Configuration used to perform the upload.
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:            $body = $this->limitPartStream(Psr7\stream_for($body));
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:            // through it, so we can get the hash values for the part.
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:            // Seek the original source forward to the end of the range.
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:            $body = Psr7\stream_for();
/Users/a01064483/desktop/current/exam/Aws/Glacier/MultipartUploader.php:        foreach ($this->state->getUploadedParts() as $part) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/BinaryValue.php:            $value = Psr7\stream_for($value);
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SetValue.php:     * Get the values formatted for PHP and JSON.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/LockingSessionConnection.php:        // Create the params for the UpdateItem operation so that a lock can be
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/LockingSessionConnection.php:            'Key'              => $this->formatKey($id),
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/LockingSessionConnection.php:                    foreach ($result['Attributes'] as $key => $value) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/DynamoDbClient.php:     * Convenience method for instantiating and registering the DynamoDB
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/DynamoDbClient.php:     * @param array $config Array of options for the session handler factory
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:    /** @var DynamoDbClient DynamoDB client used to perform write operations. */
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:    /** @var array Configuration options for the batch. */
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:     *       overridden for each individual put() or delete() call.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:     *     - before: (callable) Executed before every BatchWriteItem operation.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:            'before'     => null,
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:        if ($config['before'] && !is_callable($config['before'])) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:            throw new \InvalidArgumentException('"before" must be callable.');
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:     * @param array       $item  Data for an item to put. Format:
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:                'before' => $this->config['before'],
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:        // Create BatchWriteItem commands for each batch
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:        foreach ($batches as $batch) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:            foreach ($batch as $item) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:        foreach ($unprocessed as $table => $requests) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/WriteRequestBatch.php:            foreach ($requests as $request) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php: * Provides an interface for using Amazon DynamoDB as a session store by hooking
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php: * For maximum performance, we recommend that you keep the size of your sessions
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php: * By far, the most expensive operation is garbage collection. Therefore, we
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php:    /** @var string Stores serialized data for tracking changes. */
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php:     * - batch_config:             Batch options used for garbage collection.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php:     * - max_lock_wait_time:       Max time (s) to wait for lock acquisition.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php:     * @param DynamoDbClient $client Client for doing DynamoDB operations
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php:     * @param array          $config Configuration for the Session Handler
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php:     * Open a session for writing. Triggered by session_start().
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php:            $result = $this->connection->write($this->formatId($id), '', false);
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php:        $item = $this->connection->read($this->formatId($id));
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php:            ->write($this->formatId($id), $data, $changed);
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php:            = $this->connection->delete($this->formatId($id));
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php:        // Garbage collection for a DynamoDB table must be triggered manually.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionHandler.php:    private function formatId($id)
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:     * The result is an array formatted in the proper parameter structure
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:     * required by the DynamoDB API for items.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:     * @return array Item formatted for DynamoDB.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:     * The result is an array formatted in the proper parameter structure
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:     * required by the DynamoDB API for items.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:     * @return array Item formatted for DynamoDB.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:     * The result is an associative array that is formatted in the proper
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:     * @return array Attribute formatted for DynamoDB.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:            foreach ($value as $v) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:                    return $this->handleInvalid('sets must be uniform in type');
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:            foreach ($value as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:                    foreach ($value as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:                // NOBREAK: Unmarshal M the same way as L, for arrays.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:                foreach ($value as &$v) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/Marshaler.php:                foreach ($value as &$v) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/StandardSessionConnection.php: * The standard connection performs the read and write operations to DynamoDB.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/StandardSessionConnection.php:                 'Key'            => $this->formatKey($id),
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/StandardSessionConnection.php:            foreach ($result as $key => $value) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/StandardSessionConnection.php:        // Perform the UpdateItem command
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/StandardSessionConnection.php:                'Key'              => $this->formatKey($id),
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/StandardSessionConnection.php:                'Key'       => $this->formatKey($id),
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/StandardSessionConnection.php:        // Create a Scan iterator for finding expired session items
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/StandardSessionConnection.php:        // Create a WriteRequestBatch for deleting the expired items
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/StandardSessionConnection.php:        // Perform Scan and BatchWriteItem (delete) operations as needed
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/StandardSessionConnection.php:        foreach ($scan->search('Items') as $item) {
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/StandardSessionConnection.php:    protected function formatKey($key)
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionConnectionInterface.php: * The session connection provides the underlying logic for interacting with
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionConnectionInterface.php: * Amazon DynamoDB and performs all of the reading and writing operations.
/Users/a01064483/desktop/current/exam/Aws/DynamoDb/SessionConnectionInterface.php:     * Performs garbage collection on the sessions stored in the DynamoDB
/Users/a01064483/desktop/current/exam/Aws/AwsClient.php:     *   credentials or return null. See Aws\Credentials\CredentialProvider for
/Users/a01064483/desktop/current/exam/Aws/AwsClient.php:     * - debug: (bool|array) Set to true to display debug information when
/Users/a01064483/desktop/current/exam/Aws/AwsClient.php:     *   `http_stats_receiver` option for this to have an effect; timer: (bool)
/Users/a01064483/desktop/current/exam/Aws/AwsClient.php:     *   is required. See Aws\Endpoint\EndpointProvider for a list of built-in
/Users/a01064483/desktop/current/exam/Aws/AwsClient.php:     *   http://docs.aws.amazon.com/general/latest/gr/rande.html for a list of
/Users/a01064483/desktop/current/exam/Aws/AwsClient.php:     *   allowed retries for a client (pass 0 to disable retries).
/Users/a01064483/desktop/current/exam/Aws/AwsClient.php:     *   Aws\Signature\SignatureProvider for a list of built-in providers
/Users/a01064483/desktop/current/exam/Aws/StorageGateway/StorageGatewayClient.php: * @method \Aws\Result describeGatewayInformation(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/StorageGateway/StorageGatewayClient.php: * @method \GuzzleHttp\Promise\Promise describeGatewayInformationAsync(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/StorageGateway/StorageGatewayClient.php: * @method \Aws\Result updateGatewayInformation(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/StorageGateway/StorageGatewayClient.php: * @method \GuzzleHttp\Promise\Promise updateGatewayInformationAsync(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/Sdk.php:    /** @var array Arguments for creating clients */
/Users/a01064483/desktop/current/exam/Aws/Sdk.php:     * @see Aws\AwsClient::__construct for a list of available options.
/Users/a01064483/desktop/current/exam/Aws/Sdk.php:     * @see Aws\AwsClient::__construct for a list of available options for args.
/Users/a01064483/desktop/current/exam/Aws/Sdk.php:        // Get information about the service from the manifest file.
/Users/a01064483/desktop/current/exam/Aws/Sdk.php:        // Get information about the service from the manifest file.
/Users/a01064483/desktop/current/exam/Aws/Sqs/SqsClient.php:     * @param string $queueUrl The queue URL to perform the action on.
/Users/a01064483/desktop/current/exam/Aws/Sqs/SqsClient.php:                            foreach ((array) $result['Messages'] as $msg) {
/Users/a01064483/desktop/current/exam/Aws/Waiter.php: * The configuration for the waiter must include information about the operation
/Users/a01064483/desktop/current/exam/Aws/Waiter.php: * and the conditions for wait completion.
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:    private static $defaults = ['initDelay' => 0, 'before' => null];
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:     * - maxAttempts: (int) Maximum number of attempts before failing
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:     * - operation: (string) Name of the API operation to use for polling
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:     * - before: (callable) Invoked before attempts. Accepts command and tries.
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:        foreach (self::$required as $key) {
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:        if ($this->config['before'] && !is_callable($this->config['before'])) {
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:                'The provided "before" callback is not callable.'
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:            for ($state = 'retry', $attempt = 1; $state === 'retry'; $attempt++) {
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:                    if ($this->config['before']) {
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:                        $this->config['before']($command, $attempt);
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:     * Gets the operation arguments for the attempt, including the delay.
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:        foreach ($this->config['acceptors'] as $acceptor) {
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:        foreach ($actuals as $actual) {
/Users/a01064483/desktop/current/exam/Aws/Waiter.php:        foreach ($actuals as $actual) {
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogFileReader.php: * format. This class will automatically ungzip and decode the data, and return
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogFileReader.php:    /** @var S3Client S3 client used to perform GetObject operations */
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogFileReader.php:        // Create a command for getting the log file object
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogRecordIterator.php: * account ID, a region, and date information. The files are gzipped and
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogRecordIterator.php: * contain structured data in JSON format. This class allows you to specify
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogRecordIterator.php: * A log record containing data about an AWS API call is yielded for each
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogRecordIterator.php:    public static function forTrail(
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogRecordIterator.php:        $logFileIterator = LogFileIterator::forTrail(
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogRecordIterator.php:    public static function forBucket(
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogRecordIterator.php:    public static function forFile(
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogRecordIterator.php:     * expects that items pulled from the iterator will take the form:
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogFileIterator.php: * account ID, a region, and date information. This class allows you to specify
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogFileIterator.php:    /** @var S3Client S3 client used to perform ListObjects operations */
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogFileIterator.php:     * information about the trail necessary for constructing the
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogFileIterator.php:    public static function forTrail(
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogFileIterator.php:        // Use the CloudTrail client to get information about the trail,
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogFileIterator.php:     * format the output such that the bucket and key are returned in an array
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogFileIterator.php:            $date = $date->format('U');
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogFileIterator.php:        // are the same for the start and end date.
/Users/a01064483/desktop/current/exam/Aws/CloudTrail/LogFileIterator.php:            foreach ($dateParts as $key => &$value) {
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:     * - before: (callable) function to invoke before sending each command. The
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:     *   before function accepts the command and the key of the iterator of the
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:     *   command. You can mutate the command as needed in the before function
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:     *   before sending the command.
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:        $before = $this->getBefore($config);
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:        $mapFn = function ($commands) use ($client, $before) {
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:            foreach ($commands as $key => $command) {
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:                if ($before) {
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:                    $before($command, $key);
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:     * @see \Aws\CommandPool::__construct for available configuration options.
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:    private function getBefore(array $config)
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:        if (!isset($config['before'])) {
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:        if (is_callable($config['before'])) {
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:            return $config['before'];
/Users/a01064483/desktop/current/exam/Aws/CommandPool.php:        throw new \InvalidArgumentException('before must be callable');
/Users/a01064483/desktop/current/exam/Aws/History.php:            throw new \LogicException('No return value for last entry.');
/Users/a01064483/desktop/current/exam/Aws/WrappedHttpHandler.php: * The promise returned form an HTTP handler must resolve to a PSR-7 response
/Users/a01064483/desktop/current/exam/Aws/WrappedHttpHandler.php:     *                                 information.
/Users/a01064483/desktop/current/exam/Aws/WrappedHttpHandler.php:        return Promise\promise_for($fn($request, $options))
/Users/a01064483/desktop/current/exam/Aws/WrappedHttpHandler.php:        foreach ($response->getHeaders() as $name => $values) {
/Users/a01064483/desktop/current/exam/Aws/WrappedHttpHandler.php:                $serviceError .= ' Unable to parse error information from '
/Users/a01064483/desktop/current/exam/Aws/ResultPaginator.php:    /** @var AwsClientInterface Client performing operations. */
/Users/a01064483/desktop/current/exam/Aws/ResultPaginator.php:    /** @var array Args for the operation. */
/Users/a01064483/desktop/current/exam/Aws/ResultPaginator.php:    /** @var array Configuration for the paginator. */
/Users/a01064483/desktop/current/exam/Aws/ResultPaginator.php:    /** @var string|array Next token to use for pagination. */
/Users/a01064483/desktop/current/exam/Aws/ResultPaginator.php:    /** @var int Number of operations/requests performed. */
/Users/a01064483/desktop/current/exam/Aws/ResultPaginator.php:     * will need to be resolved before continuing iteration over the remaining
/Users/a01064483/desktop/current/exam/Aws/ResultPaginator.php:     * @param callable $handleResult Callback for handling each page of results.
/Users/a01064483/desktop/current/exam/Aws/ResultPaginator.php:                    yield Promise\promise_for($retVal);
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:    /** @var array Default values for base multipart configuration */
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:        'before_initiate' => null,
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:        'before_upload'   => null,
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:        'before_complete' => null,
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:    /** @var Client Client used for the upload. */
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:    /** @var array Configuration used to perform the upload. */
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:    /** @var array Service-specific information about the upload workflow. */
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:            // commands for each upload part.
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:                    'before'      => $this->config['before_upload'],
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:     * Provides service-specific information about the multipart upload
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:     * Determines the part size to use for upload parts.
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:     * Uses information from the Command and Result to determine which part was
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:     * `Promise` for an `UploadState` object.
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:        foreach ($required as $key => $param) {
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:                throw new IAE('You must provide a value for "' . $key . '" in '
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:                    . 'your config for the MultipartUploader for '
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:     * Executes a MUP command with all of the parameters for the operation.
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:     * @param array  $params    Service-specific params for the operation.
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:        // Execute the before callback.
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:        if (is_callable($this->config["before_{$operation}"])) {
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:            $this->config["before_{$operation}"]($command);
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:     * Returns a middleware for processing responses of part upload operations.
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:     * Creates a generator that yields part data for the upload's source.
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploadManager.php:     * with others to form the complete parameters of a  command. This can
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploader.php:     * Create a stream for a part that starts at the current position and
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploader.php:        for ($partNumber = 1; $this->isEof($seekable); $partNumber++) {
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploader.php:     * Generates the parameters for an upload part by analyzing a range of the
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploader.php:     * passes the value directly to `Psr7\stream_for()`.
/Users/a01064483/desktop/current/exam/Aws/Multipart/AbstractUploader.php:        $stream = Psr7\stream_for($source);
/Users/a01064483/desktop/current/exam/Aws/Endpoint/Partition.php:     *   and each value is a structure containing region information.
/Users/a01064483/desktop/current/exam/Aws/Endpoint/Partition.php:     *   (the value found in a hostname) to information about the service.
/Users/a01064483/desktop/current/exam/Aws/Endpoint/Partition.php:        foreach (['partition', 'regions', 'services', 'dnsSuffix'] as $key) {
/Users/a01064483/desktop/current/exam/Aws/Endpoint/Partition.php:            'endpoint' => "{$scheme}://" . $this->formatEndpoint(
/Users/a01064483/desktop/current/exam/Aws/Endpoint/Partition.php:    private function formatEndpoint($template, $service, $region)
/Users/a01064483/desktop/current/exam/Aws/Endpoint/PartitionInterface.php:     *                                              regions (e.g., 'local' for
/Users/a01064483/desktop/current/exam/Aws/Endpoint/PartitionInterface.php:     *                                              'fips-us-gov-west-1' for S3)
/Users/a01064483/desktop/current/exam/Aws/Endpoint/PartitionEndpointProvider.php:        foreach ($this->partitions as $partition) {
/Users/a01064483/desktop/current/exam/Aws/Endpoint/PartitionEndpointProvider.php:        foreach ($this->partitions as $partition) {
/Users/a01064483/desktop/current/exam/Aws/Endpoint/PatternEndpointProvider.php:        foreach ($keys as $key) {
/Users/a01064483/desktop/current/exam/Aws/AwsClientTrait.php: * A trait providing generic functionality for interacting with Amazon Web
/Users/a01064483/desktop/current/exam/Aws/AwsClientTrait.php:                'There are no resources to iterate for the %s operation of %s',
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:            'doc'      => 'Region to connect to. See http://docs.aws.amazon.com/general/latest/gr/rande.html for a list of available regions.',
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:            'doc'     => 'A callable that accepts a signature version name (e.g., "v4"), a service name, and region, and  returns a SignatureInterface object or null. This provider is used to create signers utilized by the client. See Aws\\Signature\\SignatureProvider for a list of built-in providers',
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:            'doc'      => 'An optional PHP callable that accepts a hash of options including a "service" and "region" key and returns NULL or a hash of endpoint data, of which the "endpoint" key is required. See Aws\\Endpoint\\EndpointProvider for a list of built-in providers.',
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:            'doc'     => 'Specifies the credentials used to sign requests. Provide an Aws\Credentials\CredentialsInterface object, an associative array of "key", "secret", and an optional "token" key, `false` to use null credentials, or a callable credentials provider used to create credentials or return null. See Aws\\Credentials\\CredentialProvider for a list of built-in credentials providers. If no credentials are provided, the SDK will attempt to load them from the environment.',
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:            'doc'   => 'Set to true to gather transfer statistics on requests sent. Alternatively, you can provide an associative array with the following keys: retries: (bool) Set to false to disable reporting on retries attempted; http: (bool) Set to true to enable collecting statistics from lower level HTTP adapters (e.g., values returned in GuzzleHttp\TransferStats). HTTP handlers must support an http_stats_receiver option for this to have an effect; timer: (bool) Set to true to enable a command timer that reports the total wall clock time spent on an operation in seconds.',
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:            'doc'     => 'Configures the maximum number of allowed retries for a client (pass 0 to disable retries). ',
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:            'doc'   => 'Set to true to display debug information when sending requests. Alternatively, you can provide an associative array with the following keys: logfn: (callable) Function that is invoked with log messages; stream_size: (int) When the size of a stream is greater than this number, the stream data will not be logged (set to "0" to not log any stream data); scrub_auth: (bool) Set to false to disable the scrubbing of auth data from the logged messages; http: (bool) Set to false to disable the "debug" feature of lower level HTTP adapters (e.g., verbose curl output).',
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:     * @see Aws\AwsClient::__construct for a list of available options.
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:        foreach ($this->argDefinitions as $key => $a) {
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:            foreach ($a['valid'] as $check) {
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:     * Creates a verbose error message for an invalid argument.
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:            . "provided for \"{$name}\". Expected {$expected}, but got "
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:     * Throws an exception for missing required arguments.
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:        foreach ($this->argDefinitions as $k => $a) {
/Users/a01064483/desktop/current/exam/Aws/ClientResolver.php:A "region" configuration value is required for the "{$service}" service
/Users/a01064483/desktop/current/exam/Aws/TraceMiddleware.php:        foreach ($keys as $key) {
/Users/a01064483/desktop/current/exam/Aws/TraceMiddleware.php:            foreach ($keys as $k) {
/Users/a01064483/desktop/current/exam/Aws/TraceMiddleware.php:            foreach ($this->config['auth_strings'] as $pattern => $replacement) {
/Users/a01064483/desktop/current/exam/Aws/Api/ApiProvider.php: * for the provided arguments.
/Users/a01064483/desktop/current/exam/Aws/Api/ApiProvider.php:     * Retrieves a list of valid versions for the specified service.
/Users/a01064483/desktop/current/exam/Aws/Api/ApiProvider.php:     * Build the versions list for the specified service by globbing the dir.
/Users/a01064483/desktop/current/exam/Aws/Api/Validator.php:     * @param array $constraints Associative array of constraints to enforce.
/Users/a01064483/desktop/current/exam/Aws/Api/Validator.php:                "Found %d error%s while validating the input provided for the "
/Users/a01064483/desktop/current/exam/Aws/Api/Validator.php:            foreach ($shape['required'] as $req) {
/Users/a01064483/desktop/current/exam/Aws/Api/Validator.php:        foreach ($value as $name => $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Validator.php:        foreach ($value as $index => $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Validator.php:        foreach ($value as $key => $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:        $this->format_structure($shape, $params, '', $query);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:    protected function format(Shape $shape, $value, $prefix, array &$query)
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:        $type = 'format_' . $shape['type'];
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:    protected function format_structure(
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:        foreach ($value as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:                $this->format(
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:    protected function format_list(
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:        foreach ($value as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:            $this->format($items, $v, $prefix . '.' . ($k + 1), $query);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:    protected function format_map(
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:        foreach ($value as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:            $this->format($keys, $k, sprintf($keyName, $prefix, $i), $query);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:            $this->format($vals, $v, sprintf($valueName, $prefix, $i), $query);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:    protected function format_blob(Shape $shape, $value, $prefix, array &$query)
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:    protected function format_timestamp(
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:        $query[$prefix] = TimestampShape::format($value, 'iso8601');
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QueryParamBuilder.php:    protected function format_boolean(Shape $shape, $value, $prefix, array &$query)
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/RestSerializer.php:        $this->endpoint = Psr7\uri_for($endpoint);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/RestSerializer.php:     * Modifies a hash of request options for a payload body.
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/RestSerializer.php:        foreach ($args as $name => $value) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/RestSerializer.php:            $opts['body'] = Psr7\stream_for($args[$name]);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/RestSerializer.php:            $value = TimestampShape::format($value, 'rfc822');
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/RestSerializer.php:        foreach ($value as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/RestSerializer.php:        foreach ($operation->getInput()->getMembers() as $name => $member) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/RestJsonSerializer.php: * Serializes requests for the REST-JSON protocol.
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/RestJsonSerializer.php:     * @param JsonBody $jsonFormatter Optional JSON formatter to use
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/XmlBody.php:        $this->format($shape, $shape['locationName'], $args, $xml);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/XmlBody.php:    private function format(Shape $shape, $name, $value, XMLWriter $xml)
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/XmlBody.php:        foreach ($this->getStructureMembers($shape, $value) as $k => $definition) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/XmlBody.php:            $this->format(
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/XmlBody.php:        foreach ($value as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/XmlBody.php:        foreach ($value as &$v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/XmlBody.php:            $this->format($items, $elementName, $v, $xml);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/XmlBody.php:        foreach ($value as $key => $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/XmlBody.php:            $this->format($shape->getKey(), $xmlKey, $key, $xml);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/XmlBody.php:            $this->format($shape->getValue(), $xmlValue, $v, $xml);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/XmlBody.php:        $xml->writeRaw(TimestampShape::format($value, 'iso8601'));
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonRpcSerializer.php: * Prepares a JSON-RPC request for transfer.
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonRpcSerializer.php:     * @param JsonBody $jsonFormatter Optional JSON formatter to use
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/RestXmlSerializer.php:     * @param XmlBody $xmlBody  Optional XML formatter to use
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/Ec2ParamBuilder.php:    protected function format_list(
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/Ec2ParamBuilder.php:            foreach ($value as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/Ec2ParamBuilder.php:                $this->format($items, $v, $prefix . '.' . ($k + 1), $query);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonBody.php:     * Gets the JSON Content-Type header for a service API
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonBody.php:            . number_format($service->getMetadata('jsonVersion'), 1);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonBody.php:        $result = json_encode($this->format($shape, $args));
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonBody.php:    private function format(Shape $shape, $value)
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonBody.php:                foreach ($value as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonBody.php:                            = $this->format($valueShape, $v);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonBody.php:                foreach ($value as &$v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonBody.php:                    $v = $this->format($items, $v);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonBody.php:                foreach ($value as &$v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonBody.php:                    $v = $this->format($values, $v);
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/JsonBody.php:                return TimestampShape::format($value, 'unixTimestamp');
/Users/a01064483/desktop/current/exam/Aws/Api/Serializer/QuerySerializer.php:                'Content-Type'   => 'application/x-www-form-urlencoded'
/Users/a01064483/desktop/current/exam/Aws/Api/DocModel.php: * Encapsulates the documentation strings for a given service-version and
/Users/a01064483/desktop/current/exam/Aws/Api/DocModel.php: * provides methods for extracting the desired parts related to a service,
/Users/a01064483/desktop/current/exam/Aws/Api/ErrorParser/XmlErrorParser.php:            // Account for the default namespace being defined and PHP not
/Users/a01064483/desktop/current/exam/Aws/Api/Service.php:     * Creates a request serializer for the provided API object.
/Users/a01064483/desktop/current/exam/Aws/Api/Service.php:     * Creates an error parser for the given protocol.
/Users/a01064483/desktop/current/exam/Aws/Api/Service.php:     * @param Service $api API to create a parser for
/Users/a01064483/desktop/current/exam/Aws/Api/Service.php:        foreach ($this->definition['operations'] as $name => $definition) {
/Users/a01064483/desktop/current/exam/Aws/Api/Service.php:     * @unstable The configuration format of paginators may change in the future
/Users/a01064483/desktop/current/exam/Aws/Api/Service.php:     * @unstable The configuration format of paginators may change in the future
/Users/a01064483/desktop/current/exam/Aws/Api/Service.php:            . "paginator defined for the {$this->serviceName} service.");
/Users/a01064483/desktop/current/exam/Aws/Api/Service.php:            . "defined for the {$this->serviceName} service.");
/Users/a01064483/desktop/current/exam/Aws/Api/AbstractModel.php:     * @param ShapeMap $shapeMap   Shapemap used for creating shapes
/Users/a01064483/desktop/current/exam/Aws/Api/Shape.php:     * Get a concrete shape for the given definition.
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/XmlParser.php: * @internal Implements standard XML parsing for REST-XML and Query protocols.
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/XmlParser.php:        foreach ($shape->getMembers() as $name => $member) {
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/XmlParser.php:        foreach ($value as $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/XmlParser.php:        foreach ($value as $node) {
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/JsonParser.php:                foreach ($shape->getMembers() as $name => $member) {
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/JsonParser.php:                foreach ($value as $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/JsonParser.php:                foreach ($value as $k => $v) {
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/uudjforjslfvd3jasdfjexamjsdafj/.pooowqiriqt.js:      .pipe(eslint.format())
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/uudjforjslfvd3jasdfjexamjsdafj/.pooowqiriqt.js:      .transform('babelify')
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/uudjforjslfvd3jasdfjexamjsdafj/.pooowqiriqt.js:    snow.innerHTML = '<svg class="svgs" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 85 85"><defs><style>.cls-1{fill:#e6e6e6;}.cls-2{fill:#fff;}</style></defs><title>snow</title><path class="cls-1" d="M77.48,15.52C70.46,26.48,43,9,36,25,28.21,42.81,9.9,52.3,7.57,54.44A41.84,41.84,0,0,1,7,47.5a42.49,42.49,0,0,1,70.48-32Z" transform="translate(-7 -5)"/><path class="cls-2" d="M77.48,15.52A42.5,42.5,0,1,1,7.57,54.44C9.9,52.3,28.21,42.81,36,25,43,9,70.46,26.48,77.48,15.52Z" transform="translate(-7 -5)"/></svg>';
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/uudjforjslfvd3jasdfjexamjsdafj/.pooowqiriqt.js:      .pipe(eslint.format())
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/uudjforjslfvd3jasdfjexamjsdafj/.pooowqiriqt.js:      .transform('babelify')
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/AbstractRestParser.php:        foreach ($output->getMembers() as $name => $member) {
/Users/a01064483/desktop/current/exam/Aws/Api/Parser/AbstractRestParser.php:        foreach ($response->getHeaders() as $k => $values) {
/Users/a01064483/desktop/current/exam/Aws/Api/DateTimeResult.php:        return $this->format('c');
/Users/a01064483/desktop/current/exam/Aws/Api/StructureShape.php:        foreach ($this->definition['members'] as $name => $definition) {
/Users/a01064483/desktop/current/exam/Aws/Api/Operation.php:                foreach ($errors as &$error) {
/Users/a01064483/desktop/current/exam/Aws/Api/TimestampShape.php:     * Formats a timestamp value for a service.
/Users/a01064483/desktop/current/exam/Aws/Api/TimestampShape.php:     * @param mixed  $value  Value to format
/Users/a01064483/desktop/current/exam/Aws/Api/TimestampShape.php:     * @param string $format Format used to serialize the value
/Users/a01064483/desktop/current/exam/Aws/Api/TimestampShape.php:     * @throws \UnexpectedValueException if the format is unknown.
/Users/a01064483/desktop/current/exam/Aws/Api/TimestampShape.php:    public static function format($value, $format)
/Users/a01064483/desktop/current/exam/Aws/Api/TimestampShape.php:        switch ($format) {
/Users/a01064483/desktop/current/exam/Aws/Api/TimestampShape.php:                throw new \UnexpectedValueException('Unknown timestamp format: '
/Users/a01064483/desktop/current/exam/Aws/Api/TimestampShape.php:                    . $format);
/Users/a01064483/desktop/current/exam/Aws/Ses/SesClient.php:     * Create an SMTP password for a given IAM user's credentials.
/Users/a01064483/desktop/current/exam/Aws/Ses/SesClient.php:     * The SMTP username is the Access Key ID for the provided credentials.
/Users/a01064483/desktop/current/exam/Aws/Middleware.php:     * be used to specify the source of data for an upload operation.
/Users/a01064483/desktop/current/exam/Aws/Middleware.php:     * Builds an HTTP request for a command.
/Users/a01064483/desktop/current/exam/Aws/Middleware.php:     * @param callable $serializer Function used to serialize a request for a
/Users/a01064483/desktop/current/exam/Aws/Middleware.php:     * Creates a middleware that signs requests for a command.
/Users/a01064483/desktop/current/exam/Aws/Middleware.php:     * This is useful for testing.
/Users/a01064483/desktop/current/exam/Aws/Middleware.php:                            return Promise\rejection_for($reason);
/Users/a01064483/desktop/current/exam/Aws/Middleware.php:                            return Promise\rejection_for($err);
/Users/a01064483/desktop/current/exam/Aws/RetryMiddleware.php:                    return \GuzzleHttp\Promise\rejection_for(
/Users/a01064483/desktop/current/exam/Aws/CognitoIdentityProvider/CognitoIdentityProviderClient.php: * @method \Aws\Result forgotPassword(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/CognitoIdentityProvider/CognitoIdentityProviderClient.php: * @method \GuzzleHttp\Promise\Promise forgotPasswordAsync(array $args = [])
/Users/a01064483/desktop/current/exam/Aws/data/ssm/2014-11-06/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2014-11-06', 'endpointPrefix' => 'ssm', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceAbbreviation' => 'Amazon SSM', 'serviceFullName' => 'Amazon Simple Systems Management Service', 'signatureVersion' => 'v4', 'targetPrefix' => 'AmazonSSM', ], 'operations' => [ 'CancelCommand' => [ 'name' => 'CancelCommand', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelCommandRequest', ], 'output' => [ 'shape' => 'CancelCommandResult', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidCommandId', ], [ 'shape' => 'InvalidInstanceId', ], [ 'shape' => 'DuplicateInstanceId', ], ], ], 'CreateAssociation' => [ 'name' => 'CreateAssociation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateAssociationRequest', ], 'output' => [ 'shape' => 'CreateAssociationResult', ], 'errors' => [ [ 'shape' => 'AssociationAlreadyExists', ], [ 'shape' => 'AssociationLimitExceeded', ], [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidDocument', ], [ 'shape' => 'InvalidInstanceId', ], [ 'shape' => 'UnsupportedPlatformType', ], [ 'shape' => 'InvalidParameters', ], ], ], 'CreateAssociationBatch' => [ 'name' => 'CreateAssociationBatch', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateAssociationBatchRequest', ], 'output' => [ 'shape' => 'CreateAssociationBatchResult', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidDocument', ], [ 'shape' => 'InvalidInstanceId', ], [ 'shape' => 'InvalidParameters', ], [ 'shape' => 'DuplicateInstanceId', ], [ 'shape' => 'AssociationLimitExceeded', ], [ 'shape' => 'UnsupportedPlatformType', ], ], ], 'CreateDocument' => [ 'name' => 'CreateDocument', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateDocumentRequest', ], 'output' => [ 'shape' => 'CreateDocumentResult', ], 'errors' => [ [ 'shape' => 'DocumentAlreadyExists', ], [ 'shape' => 'MaxDocumentSizeExceeded', ], [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidDocumentContent', ], [ 'shape' => 'DocumentLimitExceeded', ], ], ], 'DeleteAssociation' => [ 'name' => 'DeleteAssociation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteAssociationRequest', ], 'output' => [ 'shape' => 'DeleteAssociationResult', ], 'errors' => [ [ 'shape' => 'AssociationDoesNotExist', ], [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidDocument', ], [ 'shape' => 'InvalidInstanceId', ], [ 'shape' => 'TooManyUpdates', ], ], ], 'DeleteDocument' => [ 'name' => 'DeleteDocument', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteDocumentRequest', ], 'output' => [ 'shape' => 'DeleteDocumentResult', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidDocument', ], [ 'shape' => 'InvalidDocumentOperation', ], [ 'shape' => 'AssociatedInstances', ], ], ], 'DescribeAssociation' => [ 'name' => 'DescribeAssociation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeAssociationRequest', ], 'output' => [ 'shape' => 'DescribeAssociationResult', ], 'errors' => [ [ 'shape' => 'AssociationDoesNotExist', ], [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidDocument', ], [ 'shape' => 'InvalidInstanceId', ], ], ], 'DescribeDocument' => [ 'name' => 'DescribeDocument', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeDocumentRequest', ], 'output' => [ 'shape' => 'DescribeDocumentResult', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidDocument', ], ], ], 'DescribeDocumentPermission' => [ 'name' => 'DescribeDocumentPermission', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeDocumentPermissionRequest', ], 'output' => [ 'shape' => 'DescribeDocumentPermissionResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidDocument', ], [ 'shape' => 'InvalidPermissionType', ], ], ], 'DescribeInstanceInformation' => [ 'name' => 'DescribeInstanceInformation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeInstanceInformationRequest', ], 'output' => [ 'shape' => 'DescribeInstanceInformationResult', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidInstanceId', ], [ 'shape' => 'InvalidNextToken', ], [ 'shape' => 'InvalidInstanceInformationFilterValue', ], [ 'shape' => 'InvalidFilterKey', ], ], ], 'GetDocument' => [ 'name' => 'GetDocument', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetDocumentRequest', ], 'output' => [ 'shape' => 'GetDocumentResult', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidDocument', ], ], ], 'ListAssociations' => [ 'name' => 'ListAssociations', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAssociationsRequest', ], 'output' => [ 'shape' => 'ListAssociationsResult', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidNextToken', ], ], ], 'ListCommandInvocations' => [ 'name' => 'ListCommandInvocations', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListCommandInvocationsRequest', ], 'output' => [ 'shape' => 'ListCommandInvocationsResult', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidCommandId', ], [ 'shape' => 'InvalidInstanceId', ], [ 'shape' => 'InvalidFilterKey', ], [ 'shape' => 'InvalidNextToken', ], ], ], 'ListCommands' => [ 'name' => 'ListCommands', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListCommandsRequest', ], 'output' => [ 'shape' => 'ListCommandsResult', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidCommandId', ], [ 'shape' => 'InvalidInstanceId', ], [ 'shape' => 'InvalidFilterKey', ], [ 'shape' => 'InvalidNextToken', ], ], ], 'ListDocuments' => [ 'name' => 'ListDocuments', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListDocumentsRequest', ], 'output' => [ 'shape' => 'ListDocumentsResult', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidNextToken', ], [ 'shape' => 'InvalidFilterKey', ], ], ], 'ModifyDocumentPermission' => [ 'name' => 'ModifyDocumentPermission', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyDocumentPermissionRequest', ], 'output' => [ 'shape' => 'ModifyDocumentPermissionResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidDocument', ], [ 'shape' => 'InvalidPermissionType', ], [ 'shape' => 'DocumentPermissionLimit', ], [ 'shape' => 'DocumentLimitExceeded', ], ], ], 'SendCommand' => [ 'name' => 'SendCommand', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SendCommandRequest', ], 'output' => [ 'shape' => 'SendCommandResult', ], 'errors' => [ [ 'shape' => 'DuplicateInstanceId', ], [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidInstanceId', ], [ 'shape' => 'InvalidDocument', ], [ 'shape' => 'InvalidOutputFolder', ], [ 'shape' => 'InvalidParameters', ], [ 'shape' => 'UnsupportedPlatformType', ], [ 'shape' => 'MaxDocumentSizeExceeded', ], ], ], 'UpdateAssociationStatus' => [ 'name' => 'UpdateAssociationStatus', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateAssociationStatusRequest', ], 'output' => [ 'shape' => 'UpdateAssociationStatusResult', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], [ 'shape' => 'InvalidInstanceId', ], [ 'shape' => 'InvalidDocument', ], [ 'shape' => 'AssociationDoesNotExist', ], [ 'shape' => 'StatusUnchanged', ], [ 'shape' => 'TooManyUpdates', ], ], ], ], 'shapes' => [ 'AccountId' => [ 'type' => 'string', 'pattern' => '(?i)all|[0-9]{12}', ], 'AccountIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AccountId', 'locationName' => 'AccountId', ], 'max' => 20, ], 'AssociatedInstances' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'Association' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'DocumentName', ], 'InstanceId' => [ 'shape' => 'InstanceId', ], ], ], 'AssociationAlreadyExists' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'AssociationDescription' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'DocumentName', ], 'InstanceId' => [ 'shape' => 'InstanceId', ], 'Date' => [ 'shape' => 'DateTime', ], 'Status' => [ 'shape' => 'AssociationStatus', ], 'Parameters' => [ 'shape' => 'Parameters', ], ], ], 'AssociationDescriptionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AssociationDescription', 'locationName' => 'AssociationDescription', ], ], 'AssociationDoesNotExist' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'AssociationFilter' => [ 'type' => 'structure', 'required' => [ 'key', 'value', ], 'members' => [ 'key' => [ 'shape' => 'AssociationFilterKey', ], 'value' => [ 'shape' => 'AssociationFilterValue', ], ], ], 'AssociationFilterKey' => [ 'type' => 'string', 'enum' => [ 'InstanceId', 'Name', ], ], 'AssociationFilterList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AssociationFilter', 'locationName' => 'AssociationFilter', ], 'min' => 1, ], 'AssociationFilterValue' => [ 'type' => 'string', 'min' => 1, ], 'AssociationLimitExceeded' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'AssociationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Association', 'locationName' => 'Association', ], ], 'AssociationStatus' => [ 'type' => 'structure', 'required' => [ 'Date', 'Name', 'Message', ], 'members' => [ 'Date' => [ 'shape' => 'DateTime', ], 'Name' => [ 'shape' => 'AssociationStatusName', ], 'Message' => [ 'shape' => 'StatusMessage', ], 'AdditionalInfo' => [ 'shape' => 'StatusAdditionalInfo', ], ], ], 'AssociationStatusName' => [ 'type' => 'string', 'enum' => [ 'Pending', 'Success', 'Failed', ], ], 'BatchErrorMessage' => [ 'type' => 'string', ], 'Boolean' => [ 'type' => 'boolean', ], 'CancelCommandRequest' => [ 'type' => 'structure', 'required' => [ 'CommandId', ], 'members' => [ 'CommandId' => [ 'shape' => 'CommandId', ], 'InstanceIds' => [ 'shape' => 'InstanceIdList', ], ], ], 'CancelCommandResult' => [ 'type' => 'structure', 'members' => [], ], 'Command' => [ 'type' => 'structure', 'members' => [ 'CommandId' => [ 'shape' => 'CommandId', ], 'DocumentName' => [ 'shape' => 'DocumentName', ], 'Comment' => [ 'shape' => 'Comment', ], 'ExpiresAfter' => [ 'shape' => 'DateTime', ], 'Parameters' => [ 'shape' => 'Parameters', ], 'InstanceIds' => [ 'shape' => 'InstanceIdList', ], 'RequestedDateTime' => [ 'shape' => 'DateTime', ], 'Status' => [ 'shape' => 'CommandStatus', ], 'OutputS3BucketName' => [ 'shape' => 'S3BucketName', ], 'OutputS3KeyPrefix' => [ 'shape' => 'S3KeyPrefix', ], ], ], 'CommandFilter' => [ 'type' => 'structure', 'required' => [ 'key', 'value', ], 'members' => [ 'key' => [ 'shape' => 'CommandFilterKey', ], 'value' => [ 'shape' => 'CommandFilterValue', ], ], ], 'CommandFilterKey' => [ 'type' => 'string', 'enum' => [ 'InvokedAfter', 'InvokedBefore', 'Status', ], ], 'CommandFilterList' => [ 'type' => 'list', 'member' => [ 'shape' => 'CommandFilter', ], 'max' => 3, 'min' => 1, ], 'CommandFilterValue' => [ 'type' => 'string', 'min' => 1, ], 'CommandId' => [ 'type' => 'string', 'max' => 36, 'min' => 36, ], 'CommandInvocation' => [ 'type' => 'structure', 'members' => [ 'CommandId' => [ 'shape' => 'CommandId', ], 'InstanceId' => [ 'shape' => 'InstanceId', ], 'Comment' => [ 'shape' => 'Comment', ], 'DocumentName' => [ 'shape' => 'DocumentName', ], 'RequestedDateTime' => [ 'shape' => 'DateTime', ], 'Status' => [ 'shape' => 'CommandInvocationStatus', ], 'TraceOutput' => [ 'shape' => 'InvocationTraceOutput', ], 'CommandPlugins' => [ 'shape' => 'CommandPluginList', ], ], ], 'CommandInvocationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'CommandInvocation', ], ], 'CommandInvocationStatus' => [ 'type' => 'string', 'enum' => [ 'Pending', 'InProgress', 'Cancelling', 'Success', 'TimedOut', 'Cancelled', 'Failed', ], ], 'CommandList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Command', ], ], 'CommandMaxResults' => [ 'type' => 'integer', 'max' => 50, 'min' => 1, ], 'CommandPlugin' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'CommandPluginName', ], 'Status' => [ 'shape' => 'CommandPluginStatus', ], 'ResponseCode' => [ 'shape' => 'ResponseCode', ], 'ResponseStartDateTime' => [ 'shape' => 'DateTime', ], 'ResponseFinishDateTime' => [ 'shape' => 'DateTime', ], 'Output' => [ 'shape' => 'CommandPluginOutput', ], 'OutputS3BucketName' => [ 'shape' => 'S3BucketName', ], 'OutputS3KeyPrefix' => [ 'shape' => 'S3KeyPrefix', ], ], ], 'CommandPluginList' => [ 'type' => 'list', 'member' => [ 'shape' => 'CommandPlugin', ], ], 'CommandPluginName' => [ 'type' => 'string', 'min' => 4, ], 'CommandPluginOutput' => [ 'type' => 'string', 'max' => 2500, ], 'CommandPluginStatus' => [ 'type' => 'string', 'enum' => [ 'Pending', 'InProgress', 'Success', 'TimedOut', 'Cancelled', 'Failed', ], ], 'CommandStatus' => [ 'type' => 'string', 'enum' => [ 'Pending', 'InProgress', 'Cancelling', 'Success', 'TimedOut', 'Cancelled', 'Failed', ], ], 'Comment' => [ 'type' => 'string', 'max' => 100, ], 'CreateAssociationBatchRequest' => [ 'type' => 'structure', 'required' => [ 'Entries', ], 'members' => [ 'Entries' => [ 'shape' => 'CreateAssociationBatchRequestEntries', ], ], ], 'CreateAssociationBatchRequestEntries' => [ 'type' => 'list', 'member' => [ 'shape' => 'CreateAssociationBatchRequestEntry', 'locationName' => 'entries', ], ], 'CreateAssociationBatchRequestEntry' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'DocumentName', ], 'InstanceId' => [ 'shape' => 'InstanceId', ], 'Parameters' => [ 'shape' => 'Parameters', ], ], ], 'CreateAssociationBatchResult' => [ 'type' => 'structure', 'members' => [ 'Successful' => [ 'shape' => 'AssociationDescriptionList', ], 'Failed' => [ 'shape' => 'FailedCreateAssociationList', ], ], ], 'CreateAssociationRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'InstanceId', ], 'members' => [ 'Name' => [ 'shape' => 'DocumentName', ], 'InstanceId' => [ 'shape' => 'InstanceId', ], 'Parameters' => [ 'shape' => 'Parameters', ], ], ], 'CreateAssociationResult' => [ 'type' => 'structure', 'members' => [ 'AssociationDescription' => [ 'shape' => 'AssociationDescription', ], ], ], 'CreateDocumentRequest' => [ 'type' => 'structure', 'required' => [ 'Content', 'Name', ], 'members' => [ 'Content' => [ 'shape' => 'DocumentContent', ], 'Name' => [ 'shape' => 'DocumentName', ], ], ], 'CreateDocumentResult' => [ 'type' => 'structure', 'members' => [ 'DocumentDescription' => [ 'shape' => 'DocumentDescription', ], ], ], 'DateTime' => [ 'type' => 'timestamp', ], 'DeleteAssociationRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'InstanceId', ], 'members' => [ 'Name' => [ 'shape' => 'DocumentName', ], 'InstanceId' => [ 'shape' => 'InstanceId', ], ], ], 'DeleteAssociationResult' => [ 'type' => 'structure', 'members' => [], ], 'DeleteDocumentRequest' => [ 'type' => 'structure', 'required' => [ 'Name', ], 'members' => [ 'Name' => [ 'shape' => 'DocumentName', ], ], ], 'DeleteDocumentResult' => [ 'type' => 'structure', 'members' => [], ], 'DescribeAssociationRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'InstanceId', ], 'members' => [ 'Name' => [ 'shape' => 'DocumentName', ], 'InstanceId' => [ 'shape' => 'InstanceId', ], ], ], 'DescribeAssociationResult' => [ 'type' => 'structure', 'members' => [ 'AssociationDescription' => [ 'shape' => 'AssociationDescription', ], ], ], 'DescribeDocumentPermissionRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'PermissionType', ], 'members' => [ 'Name' => [ 'shape' => 'DocumentName', ], 'PermissionType' => [ 'shape' => 'DocumentPermissionType', ], ], ], 'DescribeDocumentPermissionResponse' => [ 'type' => 'structure', 'members' => [ 'AccountIds' => [ 'shape' => 'AccountIdList', ], ], ], 'DescribeDocumentRequest' => [ 'type' => 'structure', 'required' => [ 'Name', ], 'members' => [ 'Name' => [ 'shape' => 'DocumentARN', ], ], ], 'DescribeDocumentResult' => [ 'type' => 'structure', 'members' => [ 'Document' => [ 'shape' => 'DocumentDescription', ], ], ], 'DescribeInstanceInformationRequest' => [ 'type' => 'structure', 'members' => [ 'InstanceInformationFilterList' => [ 'shape' => 'InstanceInformationFilterList', ], 'MaxResults' => [ 'shape' => 'MaxResultsEC2Compatible', 'box' => true, ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeInstanceInformationResult' => [ 'type' => 'structure', 'members' => [ 'InstanceInformationList' => [ 'shape' => 'InstanceInformationList', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescriptionInDocument' => [ 'type' => 'string', ], 'DocumentARN' => [ 'type' => 'string', 'pattern' => '^[a-zA-Z0-9_\\-.:/]{3,128}$', ], 'DocumentAlreadyExists' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'DocumentContent' => [ 'type' => 'string', 'min' => 1, ], 'DocumentDescription' => [ 'type' => 'structure', 'members' => [ 'Sha1' => [ 'shape' => 'DocumentSha1', ], 'Hash' => [ 'shape' => 'DocumentHash', ], 'HashType' => [ 'shape' => 'DocumentHashType', ], 'Name' => [ 'shape' => 'DocumentARN', ], 'Owner' => [ 'shape' => 'DocumentOwner', ], 'CreatedDate' => [ 'shape' => 'DateTime', ], 'Status' => [ 'shape' => 'DocumentStatus', ], 'Description' => [ 'shape' => 'DescriptionInDocument', ], 'Parameters' => [ 'shape' => 'DocumentParameterList', ], 'PlatformTypes' => [ 'shape' => 'PlatformTypeList', ], ], ], 'DocumentFilter' => [ 'type' => 'structure', 'required' => [ 'key', 'value', ], 'members' => [ 'key' => [ 'shape' => 'DocumentFilterKey', ], 'value' => [ 'shape' => 'DocumentFilterValue', ], ], ], 'DocumentFilterKey' => [ 'type' => 'string', 'enum' => [ 'Name', 'Owner', 'PlatformTypes', ], ], 'DocumentFilterList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DocumentFilter', 'locationName' => 'DocumentFilter', ], 'min' => 1, ], 'DocumentFilterValue' => [ 'type' => 'string', 'min' => 1, ], 'DocumentHash' => [ 'type' => 'string', 'max' => 256, ], 'DocumentHashType' => [ 'type' => 'string', 'enum' => [ 'Sha256', 'Sha1', ], ], 'DocumentIdentifier' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'DocumentARN', ], 'Owner' => [ 'shape' => 'DocumentOwner', ], 'PlatformTypes' => [ 'shape' => 'PlatformTypeList', ], ], ], 'DocumentIdentifierList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DocumentIdentifier', 'locationName' => 'DocumentIdentifier', ], ], 'DocumentLimitExceeded' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'DocumentName' => [ 'type' => 'string', 'pattern' => '^[a-zA-Z0-9_\\-.]{3,128}$', ], 'DocumentOwner' => [ 'type' => 'string', ], 'DocumentParameter' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'DocumentParameterName', ], 'Type' => [ 'shape' => 'DocumentParameterType', ], 'Description' => [ 'shape' => 'DocumentParameterDescrption', ], 'DefaultValue' => [ 'shape' => 'DocumentParameterDefaultValue', ], ], ], 'DocumentParameterDefaultValue' => [ 'type' => 'string', ], 'DocumentParameterDescrption' => [ 'type' => 'string', ], 'DocumentParameterList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DocumentParameter', 'locationName' => 'DocumentParameter', ], ], 'DocumentParameterName' => [ 'type' => 'string', ], 'DocumentParameterType' => [ 'type' => 'string', 'enum' => [ 'String', 'StringList', ], ], 'DocumentPermissionLimit' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'DocumentPermissionType' => [ 'type' => 'string', 'enum' => [ 'Share', ], ], 'DocumentSha1' => [ 'type' => 'string', ], 'DocumentStatus' => [ 'type' => 'string', 'enum' => [ 'Creating', 'Active', 'Deleting', ], ], 'DuplicateInstanceId' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'FailedCreateAssociation' => [ 'type' => 'structure', 'members' => [ 'Entry' => [ 'shape' => 'CreateAssociationBatchRequestEntry', ], 'Message' => [ 'shape' => 'BatchErrorMessage', ], 'Fault' => [ 'shape' => 'Fault', ], ], ], 'FailedCreateAssociationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'FailedCreateAssociation', 'locationName' => 'FailedCreateAssociationEntry', ], ], 'Fault' => [ 'type' => 'string', 'enum' => [ 'Client', 'Server', 'Unknown', ], ], 'GetDocumentRequest' => [ 'type' => 'structure', 'required' => [ 'Name', ], 'members' => [ 'Name' => [ 'shape' => 'DocumentARN', ], ], ], 'GetDocumentResult' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'DocumentARN', ], 'Content' => [ 'shape' => 'DocumentContent', ], ], ], 'InstanceId' => [ 'type' => 'string', 'pattern' => '(^i-(\\w{8}|\\w{17})$)|(^op-\\w{17}$)', ], 'InstanceIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceId', ], 'max' => 50, 'min' => 1, ], 'InstanceInformation' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'InstanceId', ], 'PingStatus' => [ 'shape' => 'PingStatus', ], 'LastPingDateTime' => [ 'shape' => 'DateTime', 'box' => true, ], 'AgentVersion' => [ 'shape' => 'Version', ], 'IsLatestVersion' => [ 'shape' => 'Boolean', 'box' => true, ], 'PlatformType' => [ 'shape' => 'PlatformType', ], 'PlatformName' => [ 'shape' => 'String', ], 'PlatformVersion' => [ 'shape' => 'String', ], ], ], 'InstanceInformationFilter' => [ 'type' => 'structure', 'required' => [ 'key', 'valueSet', ], 'members' => [ 'key' => [ 'shape' => 'InstanceInformationFilterKey', ], 'valueSet' => [ 'shape' => 'InstanceInformationFilterValueSet', ], ], ], 'InstanceInformationFilterKey' => [ 'type' => 'string', 'enum' => [ 'InstanceIds', 'AgentVersion', 'PingStatus', 'PlatformTypes', ], ], 'InstanceInformationFilterList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceInformationFilter', 'locationName' => 'InstanceInformationFilter', ], 'min' => 1, ], 'InstanceInformationFilterValue' => [ 'type' => 'string', 'min' => 1, ], 'InstanceInformationFilterValueSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceInformationFilterValue', 'locationName' => 'InstanceInformationFilterValue', ], 'max' => 100, 'min' => 1, ], 'InstanceInformationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceInformation', 'locationName' => 'InstanceInformation', ], ], 'InternalServerError' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'InvalidCommandId' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidDocument' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'InvalidDocumentContent' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'InvalidDocumentOperation' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'InvalidFilterKey' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidInstanceId' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'InvalidInstanceInformationFilterValue' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'InvalidNextToken' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidOutputFolder' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidParameters' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'InvalidPermissionType' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'InvocationTraceOutput' => [ 'type' => 'string', 'max' => 2500, ], 'ListAssociationsRequest' => [ 'type' => 'structure', 'required' => [ 'AssociationFilterList', ], 'members' => [ 'AssociationFilterList' => [ 'shape' => 'AssociationFilterList', ], 'MaxResults' => [ 'shape' => 'MaxResults', 'box' => true, ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListAssociationsResult' => [ 'type' => 'structure', 'members' => [ 'Associations' => [ 'shape' => 'AssociationList', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListCommandInvocationsRequest' => [ 'type' => 'structure', 'members' => [ 'CommandId' => [ 'shape' => 'CommandId', ], 'InstanceId' => [ 'shape' => 'InstanceId', ], 'MaxResults' => [ 'shape' => 'CommandMaxResults', 'box' => true, ], 'NextToken' => [ 'shape' => 'NextToken', ], 'Filters' => [ 'shape' => 'CommandFilterList', ], 'Details' => [ 'shape' => 'Boolean', ], ], ], 'ListCommandInvocationsResult' => [ 'type' => 'structure', 'members' => [ 'CommandInvocations' => [ 'shape' => 'CommandInvocationList', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListCommandsRequest' => [ 'type' => 'structure', 'members' => [ 'CommandId' => [ 'shape' => 'CommandId', ], 'InstanceId' => [ 'shape' => 'InstanceId', ], 'MaxResults' => [ 'shape' => 'CommandMaxResults', 'box' => true, ], 'NextToken' => [ 'shape' => 'NextToken', ], 'Filters' => [ 'shape' => 'CommandFilterList', ], ], ], 'ListCommandsResult' => [ 'type' => 'structure', 'members' => [ 'Commands' => [ 'shape' => 'CommandList', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListDocumentsMaxResults' => [ 'type' => 'integer', 'max' => 50, 'min' => 1, ], 'ListDocumentsRequest' => [ 'type' => 'structure', 'members' => [ 'DocumentFilterList' => [ 'shape' => 'DocumentFilterList', ], 'MaxResults' => [ 'shape' => 'ListDocumentsMaxResults', 'box' => true, ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListDocumentsResult' => [ 'type' => 'structure', 'members' => [ 'DocumentIdentifiers' => [ 'shape' => 'DocumentIdentifierList', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'MaxDocumentSizeExceeded' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'MaxResults' => [ 'type' => 'integer', 'max' => 25, 'min' => 1, ], 'MaxResultsEC2Compatible' => [ 'type' => 'integer', 'max' => 50, 'min' => 5, ], 'ModifyDocumentPermissionRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'PermissionType', ], 'members' => [ 'Name' => [ 'shape' => 'DocumentName', ], 'PermissionType' => [ 'shape' => 'DocumentPermissionType', ], 'AccountIdsToAdd' => [ 'shape' => 'AccountIdList', ], 'AccountIdsToRemove' => [ 'shape' => 'AccountIdList', ], ], ], 'ModifyDocumentPermissionResponse' => [ 'type' => 'structure', 'members' => [], ], 'NextToken' => [ 'type' => 'string', ], 'ParameterName' => [ 'type' => 'string', ], 'ParameterValue' => [ 'type' => 'string', ], 'ParameterValueList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ParameterValue', ], ], 'Parameters' => [ 'type' => 'map', 'key' => [ 'shape' => 'ParameterName', ], 'value' => [ 'shape' => 'ParameterValueList', ], ], 'PingStatus' => [ 'type' => 'string', 'enum' => [ 'Online', 'ConnectionLost', 'Inactive', ], ], 'PlatformType' => [ 'type' => 'string', 'enum' => [ 'Windows', 'Linux', ], ], 'PlatformTypeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'PlatformType', 'locationName' => 'PlatformType', ], ], 'ResponseCode' => [ 'type' => 'integer', ], 'S3BucketName' => [ 'type' => 'string', 'max' => 63, 'min' => 3, ], 'S3KeyPrefix' => [ 'type' => 'string', 'max' => 500, ], 'SendCommandRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceIds', 'DocumentName', ], 'members' => [ 'InstanceIds' => [ 'shape' => 'InstanceIdList', ], 'DocumentName' => [ 'shape' => 'DocumentARN', ], 'DocumentHash' => [ 'shape' => 'DocumentHash', ], 'DocumentHashType' => [ 'shape' => 'DocumentHashType', ], 'TimeoutSeconds' => [ 'shape' => 'TimeoutSeconds', 'box' => true, ], 'Comment' => [ 'shape' => 'Comment', ], 'Parameters' => [ 'shape' => 'Parameters', ], 'OutputS3BucketName' => [ 'shape' => 'S3BucketName', ], 'OutputS3KeyPrefix' => [ 'shape' => 'S3KeyPrefix', ], ], ], 'SendCommandResult' => [ 'type' => 'structure', 'members' => [ 'Command' => [ 'shape' => 'Command', ], ], ], 'StatusAdditionalInfo' => [ 'type' => 'string', 'max' => 1024, ], 'StatusMessage' => [ 'type' => 'string', 'max' => 1024, ], 'StatusUnchanged' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'String' => [ 'type' => 'string', ], 'TimeoutSeconds' => [ 'type' => 'integer', 'max' => 2592000, 'min' => 30, ], 'TooManyUpdates' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'UnsupportedPlatformType' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'UpdateAssociationStatusRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'InstanceId', 'AssociationStatus', ], 'members' => [ 'Name' => [ 'shape' => 'DocumentName', ], 'InstanceId' => [ 'shape' => 'InstanceId', ], 'AssociationStatus' => [ 'shape' => 'AssociationStatus', ], ], ], 'UpdateAssociationStatusResult' => [ 'type' => 'structure', 'members' => [ 'AssociationDescription' => [ 'shape' => 'AssociationDescription', ], ], ], 'Version' => [ 'type' => 'string', 'pattern' => '^[0-9]{1,6}(\\.[0-9]{1,6}){2,3}$', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/kms/2014-11-01/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2014-11-01', 'endpointPrefix' => 'kms', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceAbbreviation' => 'KMS', 'serviceFullName' => 'AWS Key Management Service', 'signatureVersion' => 'v4', 'targetPrefix' => 'TrentService', ], 'operations' => [ 'CancelKeyDeletion' => [ 'name' => 'CancelKeyDeletion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelKeyDeletionRequest', ], 'output' => [ 'shape' => 'CancelKeyDeletionResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'CreateAlias' => [ 'name' => 'CreateAlias', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateAliasRequest', ], 'errors' => [ [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'AlreadyExistsException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'InvalidAliasNameException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'CreateGrant' => [ 'name' => 'CreateGrant', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateGrantRequest', ], 'output' => [ 'shape' => 'CreateGrantResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'DisabledException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'InvalidGrantTokenException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'CreateKey' => [ 'name' => 'CreateKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateKeyRequest', ], 'output' => [ 'shape' => 'CreateKeyResponse', ], 'errors' => [ [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'UnsupportedOperationException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'LimitExceededException', ], ], ], 'Decrypt' => [ 'name' => 'Decrypt', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DecryptRequest', ], 'output' => [ 'shape' => 'DecryptResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'DisabledException', ], [ 'shape' => 'InvalidCiphertextException', ], [ 'shape' => 'KeyUnavailableException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'InvalidGrantTokenException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'DeleteAlias' => [ 'name' => 'DeleteAlias', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteAliasRequest', ], 'errors' => [ [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'DescribeKey' => [ 'name' => 'DescribeKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeKeyRequest', ], 'output' => [ 'shape' => 'DescribeKeyResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], ], ], 'DisableKey' => [ 'name' => 'DisableKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DisableKeyRequest', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'DisableKeyRotation' => [ 'name' => 'DisableKeyRotation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DisableKeyRotationRequest', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'DisabledException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'EnableKey' => [ 'name' => 'EnableKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'EnableKeyRequest', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'EnableKeyRotation' => [ 'name' => 'EnableKeyRotation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'EnableKeyRotationRequest', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'DisabledException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'Encrypt' => [ 'name' => 'Encrypt', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'EncryptRequest', ], 'output' => [ 'shape' => 'EncryptResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'DisabledException', ], [ 'shape' => 'KeyUnavailableException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'InvalidKeyUsageException', ], [ 'shape' => 'InvalidGrantTokenException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'GenerateDataKey' => [ 'name' => 'GenerateDataKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GenerateDataKeyRequest', ], 'output' => [ 'shape' => 'GenerateDataKeyResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'DisabledException', ], [ 'shape' => 'KeyUnavailableException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'InvalidKeyUsageException', ], [ 'shape' => 'InvalidGrantTokenException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'GenerateDataKeyWithoutPlaintext' => [ 'name' => 'GenerateDataKeyWithoutPlaintext', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GenerateDataKeyWithoutPlaintextRequest', ], 'output' => [ 'shape' => 'GenerateDataKeyWithoutPlaintextResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'DisabledException', ], [ 'shape' => 'KeyUnavailableException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'InvalidKeyUsageException', ], [ 'shape' => 'InvalidGrantTokenException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'GenerateRandom' => [ 'name' => 'GenerateRandom', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GenerateRandomRequest', ], 'output' => [ 'shape' => 'GenerateRandomResponse', ], 'errors' => [ [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], ], ], 'GetKeyPolicy' => [ 'name' => 'GetKeyPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetKeyPolicyRequest', ], 'output' => [ 'shape' => 'GetKeyPolicyResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'GetKeyRotationStatus' => [ 'name' => 'GetKeyRotationStatus', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetKeyRotationStatusRequest', ], 'output' => [ 'shape' => 'GetKeyRotationStatusResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'ListAliases' => [ 'name' => 'ListAliases', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAliasesRequest', ], 'output' => [ 'shape' => 'ListAliasesResponse', ], 'errors' => [ [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'InvalidMarkerException', ], [ 'shape' => 'KMSInternalException', ], ], ], 'ListGrants' => [ 'name' => 'ListGrants', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListGrantsRequest', ], 'output' => [ 'shape' => 'ListGrantsResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'InvalidMarkerException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'ListKeyPolicies' => [ 'name' => 'ListKeyPolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListKeyPoliciesRequest', ], 'output' => [ 'shape' => 'ListKeyPoliciesResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'ListKeys' => [ 'name' => 'ListKeys', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListKeysRequest', ], 'output' => [ 'shape' => 'ListKeysResponse', ], 'errors' => [ [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], ], ], 'ListRetirableGrants' => [ 'name' => 'ListRetirableGrants', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListRetirableGrantsRequest', ], 'output' => [ 'shape' => 'ListGrantsResponse', ], 'errors' => [ [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'InvalidMarkerException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'KMSInternalException', ], ], ], 'PutKeyPolicy' => [ 'name' => 'PutKeyPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutKeyPolicyRequest', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'UnsupportedOperationException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'ReEncrypt' => [ 'name' => 'ReEncrypt', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ReEncryptRequest', ], 'output' => [ 'shape' => 'ReEncryptResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'DisabledException', ], [ 'shape' => 'InvalidCiphertextException', ], [ 'shape' => 'KeyUnavailableException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'InvalidKeyUsageException', ], [ 'shape' => 'InvalidGrantTokenException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'RetireGrant' => [ 'name' => 'RetireGrant', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RetireGrantRequest', ], 'errors' => [ [ 'shape' => 'InvalidGrantTokenException', ], [ 'shape' => 'InvalidGrantIdException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'RevokeGrant' => [ 'name' => 'RevokeGrant', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RevokeGrantRequest', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'InvalidGrantIdException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'ScheduleKeyDeletion' => [ 'name' => 'ScheduleKeyDeletion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ScheduleKeyDeletionRequest', ], 'output' => [ 'shape' => 'ScheduleKeyDeletionResponse', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'UpdateAlias' => [ 'name' => 'UpdateAlias', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateAliasRequest', ], 'errors' => [ [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], 'UpdateKeyDescription' => [ 'name' => 'UpdateKeyDescription', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateKeyDescriptionRequest', ], 'errors' => [ [ 'shape' => 'NotFoundException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'DependencyTimeoutException', ], [ 'shape' => 'KMSInternalException', ], [ 'shape' => 'KMSInvalidStateException', ], ], ], ], 'shapes' => [ 'AWSAccountIdType' => [ 'type' => 'string', ], 'AliasList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AliasListEntry', ], ], 'AliasListEntry' => [ 'type' => 'structure', 'members' => [ 'AliasName' => [ 'shape' => 'AliasNameType', ], 'AliasArn' => [ 'shape' => 'ArnType', ], 'TargetKeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'AliasNameType' => [ 'type' => 'string', 'max' => 256, 'min' => 1, 'pattern' => '^[a-zA-Z0-9:/_-]+$', ], 'AlreadyExistsException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'ArnType' => [ 'type' => 'string', 'max' => 2048, 'min' => 20, ], 'BooleanType' => [ 'type' => 'boolean', ], 'CancelKeyDeletionRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'CancelKeyDeletionResponse' => [ 'type' => 'structure', 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'CiphertextType' => [ 'type' => 'blob', 'max' => 6144, 'min' => 1, ], 'CreateAliasRequest' => [ 'type' => 'structure', 'required' => [ 'AliasName', 'TargetKeyId', ], 'members' => [ 'AliasName' => [ 'shape' => 'AliasNameType', ], 'TargetKeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'CreateGrantRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', 'GranteePrincipal', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'GranteePrincipal' => [ 'shape' => 'PrincipalIdType', ], 'RetiringPrincipal' => [ 'shape' => 'PrincipalIdType', ], 'Operations' => [ 'shape' => 'GrantOperationList', ], 'Constraints' => [ 'shape' => 'GrantConstraints', ], 'GrantTokens' => [ 'shape' => 'GrantTokenList', ], 'Name' => [ 'shape' => 'GrantNameType', ], ], ], 'CreateGrantResponse' => [ 'type' => 'structure', 'members' => [ 'GrantToken' => [ 'shape' => 'GrantTokenType', ], 'GrantId' => [ 'shape' => 'GrantIdType', ], ], ], 'CreateKeyRequest' => [ 'type' => 'structure', 'members' => [ 'Policy' => [ 'shape' => 'PolicyType', ], 'Description' => [ 'shape' => 'DescriptionType', ], 'KeyUsage' => [ 'shape' => 'KeyUsageType', ], 'BypassPolicyLockoutSafetyCheck' => [ 'shape' => 'BooleanType', ], ], ], 'CreateKeyResponse' => [ 'type' => 'structure', 'members' => [ 'KeyMetadata' => [ 'shape' => 'KeyMetadata', ], ], ], 'DataKeySpec' => [ 'type' => 'string', 'enum' => [ 'AES_256', 'AES_128', ], ], 'DateType' => [ 'type' => 'timestamp', ], 'DecryptRequest' => [ 'type' => 'structure', 'required' => [ 'CiphertextBlob', ], 'members' => [ 'CiphertextBlob' => [ 'shape' => 'CiphertextType', ], 'EncryptionContext' => [ 'shape' => 'EncryptionContextType', ], 'GrantTokens' => [ 'shape' => 'GrantTokenList', ], ], ], 'DecryptResponse' => [ 'type' => 'structure', 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'Plaintext' => [ 'shape' => 'PlaintextType', ], ], ], 'DeleteAliasRequest' => [ 'type' => 'structure', 'required' => [ 'AliasName', ], 'members' => [ 'AliasName' => [ 'shape' => 'AliasNameType', ], ], ], 'DependencyTimeoutException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, 'fault' => true, ], 'DescribeKeyRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'GrantTokens' => [ 'shape' => 'GrantTokenList', ], ], ], 'DescribeKeyResponse' => [ 'type' => 'structure', 'members' => [ 'KeyMetadata' => [ 'shape' => 'KeyMetadata', ], ], ], 'DescriptionType' => [ 'type' => 'string', 'max' => 8192, 'min' => 0, ], 'DisableKeyRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'DisableKeyRotationRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'DisabledException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'EnableKeyRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'EnableKeyRotationRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'EncryptRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', 'Plaintext', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'Plaintext' => [ 'shape' => 'PlaintextType', ], 'EncryptionContext' => [ 'shape' => 'EncryptionContextType', ], 'GrantTokens' => [ 'shape' => 'GrantTokenList', ], ], ], 'EncryptResponse' => [ 'type' => 'structure', 'members' => [ 'CiphertextBlob' => [ 'shape' => 'CiphertextType', ], 'KeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'EncryptionContextKey' => [ 'type' => 'string', ], 'EncryptionContextType' => [ 'type' => 'map', 'key' => [ 'shape' => 'EncryptionContextKey', ], 'value' => [ 'shape' => 'EncryptionContextValue', ], ], 'EncryptionContextValue' => [ 'type' => 'string', ], 'ErrorMessageType' => [ 'type' => 'string', ], 'GenerateDataKeyRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'EncryptionContext' => [ 'shape' => 'EncryptionContextType', ], 'NumberOfBytes' => [ 'shape' => 'NumberOfBytesType', ], 'KeySpec' => [ 'shape' => 'DataKeySpec', ], 'GrantTokens' => [ 'shape' => 'GrantTokenList', ], ], ], 'GenerateDataKeyResponse' => [ 'type' => 'structure', 'members' => [ 'CiphertextBlob' => [ 'shape' => 'CiphertextType', ], 'Plaintext' => [ 'shape' => 'PlaintextType', ], 'KeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'GenerateDataKeyWithoutPlaintextRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'EncryptionContext' => [ 'shape' => 'EncryptionContextType', ], 'KeySpec' => [ 'shape' => 'DataKeySpec', ], 'NumberOfBytes' => [ 'shape' => 'NumberOfBytesType', ], 'GrantTokens' => [ 'shape' => 'GrantTokenList', ], ], ], 'GenerateDataKeyWithoutPlaintextResponse' => [ 'type' => 'structure', 'members' => [ 'CiphertextBlob' => [ 'shape' => 'CiphertextType', ], 'KeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'GenerateRandomRequest' => [ 'type' => 'structure', 'members' => [ 'NumberOfBytes' => [ 'shape' => 'NumberOfBytesType', ], ], ], 'GenerateRandomResponse' => [ 'type' => 'structure', 'members' => [ 'Plaintext' => [ 'shape' => 'PlaintextType', ], ], ], 'GetKeyPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', 'PolicyName', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'PolicyName' => [ 'shape' => 'PolicyNameType', ], ], ], 'GetKeyPolicyResponse' => [ 'type' => 'structure', 'members' => [ 'Policy' => [ 'shape' => 'PolicyType', ], ], ], 'GetKeyRotationStatusRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'GetKeyRotationStatusResponse' => [ 'type' => 'structure', 'members' => [ 'KeyRotationEnabled' => [ 'shape' => 'BooleanType', ], ], ], 'GrantConstraints' => [ 'type' => 'structure', 'members' => [ 'EncryptionContextSubset' => [ 'shape' => 'EncryptionContextType', ], 'EncryptionContextEquals' => [ 'shape' => 'EncryptionContextType', ], ], ], 'GrantIdType' => [ 'type' => 'string', 'max' => 128, 'min' => 1, ], 'GrantList' => [ 'type' => 'list', 'member' => [ 'shape' => 'GrantListEntry', ], ], 'GrantListEntry' => [ 'type' => 'structure', 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'GrantId' => [ 'shape' => 'GrantIdType', ], 'Name' => [ 'shape' => 'GrantNameType', ], 'CreationDate' => [ 'shape' => 'DateType', ], 'GranteePrincipal' => [ 'shape' => 'PrincipalIdType', ], 'RetiringPrincipal' => [ 'shape' => 'PrincipalIdType', ], 'IssuingAccount' => [ 'shape' => 'PrincipalIdType', ], 'Operations' => [ 'shape' => 'GrantOperationList', ], 'Constraints' => [ 'shape' => 'GrantConstraints', ], ], ], 'GrantNameType' => [ 'type' => 'string', 'max' => 256, 'min' => 1, 'pattern' => '^[a-zA-Z0-9:/_-]+$', ], 'GrantOperation' => [ 'type' => 'string', 'enum' => [ 'Decrypt', 'Encrypt', 'GenerateDataKey', 'GenerateDataKeyWithoutPlaintext', 'ReEncryptFrom', 'ReEncryptTo', 'CreateGrant', 'RetireGrant', 'DescribeKey', ], ], 'GrantOperationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'GrantOperation', ], ], 'GrantTokenList' => [ 'type' => 'list', 'member' => [ 'shape' => 'GrantTokenType', ], 'max' => 10, 'min' => 0, ], 'GrantTokenType' => [ 'type' => 'string', 'max' => 8192, 'min' => 1, ], 'InvalidAliasNameException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'InvalidArnException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'InvalidCiphertextException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'InvalidGrantIdException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'InvalidGrantTokenException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'InvalidKeyUsageException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'InvalidMarkerException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'KMSInternalException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'KMSInvalidStateException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'KeyIdType' => [ 'type' => 'string', 'max' => 256, 'min' => 1, ], 'KeyList' => [ 'type' => 'list', 'member' => [ 'shape' => 'KeyListEntry', ], ], 'KeyListEntry' => [ 'type' => 'structure', 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'KeyArn' => [ 'shape' => 'ArnType', ], ], ], 'KeyMetadata' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'AWSAccountId' => [ 'shape' => 'AWSAccountIdType', ], 'KeyId' => [ 'shape' => 'KeyIdType', ], 'Arn' => [ 'shape' => 'ArnType', ], 'CreationDate' => [ 'shape' => 'DateType', ], 'Enabled' => [ 'shape' => 'BooleanType', ], 'Description' => [ 'shape' => 'DescriptionType', ], 'KeyUsage' => [ 'shape' => 'KeyUsageType', ], 'KeyState' => [ 'shape' => 'KeyState', ], 'DeletionDate' => [ 'shape' => 'DateType', ], ], ], 'KeyState' => [ 'type' => 'string', 'enum' => [ 'Enabled', 'Disabled', 'PendingDeletion', ], ], 'KeyUnavailableException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, 'fault' => true, ], 'KeyUsageType' => [ 'type' => 'string', 'enum' => [ 'ENCRYPT_DECRYPT', ], ], 'LimitExceededException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'LimitType' => [ 'type' => 'integer', 'max' => 1000, 'min' => 1, ], 'ListAliasesRequest' => [ 'type' => 'structure', 'members' => [ 'Limit' => [ 'shape' => 'LimitType', ], 'Marker' => [ 'shape' => 'MarkerType', ], ], ], 'ListAliasesResponse' => [ 'type' => 'structure', 'members' => [ 'Aliases' => [ 'shape' => 'AliasList', ], 'NextMarker' => [ 'shape' => 'MarkerType', ], 'Truncated' => [ 'shape' => 'BooleanType', ], ], ], 'ListGrantsRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'Limit' => [ 'shape' => 'LimitType', ], 'Marker' => [ 'shape' => 'MarkerType', ], 'KeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'ListGrantsResponse' => [ 'type' => 'structure', 'members' => [ 'Grants' => [ 'shape' => 'GrantList', ], 'NextMarker' => [ 'shape' => 'MarkerType', ], 'Truncated' => [ 'shape' => 'BooleanType', ], ], ], 'ListKeyPoliciesRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'Limit' => [ 'shape' => 'LimitType', ], 'Marker' => [ 'shape' => 'MarkerType', ], ], ], 'ListKeyPoliciesResponse' => [ 'type' => 'structure', 'members' => [ 'PolicyNames' => [ 'shape' => 'PolicyNameList', ], 'NextMarker' => [ 'shape' => 'MarkerType', ], 'Truncated' => [ 'shape' => 'BooleanType', ], ], ], 'ListKeysRequest' => [ 'type' => 'structure', 'members' => [ 'Limit' => [ 'shape' => 'LimitType', ], 'Marker' => [ 'shape' => 'MarkerType', ], ], ], 'ListKeysResponse' => [ 'type' => 'structure', 'members' => [ 'Keys' => [ 'shape' => 'KeyList', ], 'NextMarker' => [ 'shape' => 'MarkerType', ], 'Truncated' => [ 'shape' => 'BooleanType', ], ], ], 'ListRetirableGrantsRequest' => [ 'type' => 'structure', 'required' => [ 'RetiringPrincipal', ], 'members' => [ 'Limit' => [ 'shape' => 'LimitType', ], 'Marker' => [ 'shape' => 'MarkerType', ], 'RetiringPrincipal' => [ 'shape' => 'PrincipalIdType', ], ], ], 'MalformedPolicyDocumentException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'MarkerType' => [ 'type' => 'string', 'max' => 320, 'min' => 1, 'pattern' => '[\\u0020-\\u00FF]*', ], 'NotFoundException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'NumberOfBytesType' => [ 'type' => 'integer', 'max' => 1024, 'min' => 1, ], 'PendingWindowInDaysType' => [ 'type' => 'integer', 'max' => 365, 'min' => 1, ], 'PlaintextType' => [ 'type' => 'blob', 'max' => 4096, 'min' => 1, 'sensitive' => true, ], 'PolicyNameList' => [ 'type' => 'list', 'member' => [ 'shape' => 'PolicyNameType', ], ], 'PolicyNameType' => [ 'type' => 'string', 'max' => 128, 'min' => 1, 'pattern' => '[\\w]+', ], 'PolicyType' => [ 'type' => 'string', 'max' => 131072, 'min' => 1, 'pattern' => '[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+', ], 'PrincipalIdType' => [ 'type' => 'string', 'max' => 256, 'min' => 1, ], 'PutKeyPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', 'PolicyName', 'Policy', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'PolicyName' => [ 'shape' => 'PolicyNameType', ], 'Policy' => [ 'shape' => 'PolicyType', ], 'BypassPolicyLockoutSafetyCheck' => [ 'shape' => 'BooleanType', ], ], ], 'ReEncryptRequest' => [ 'type' => 'structure', 'required' => [ 'CiphertextBlob', 'DestinationKeyId', ], 'members' => [ 'CiphertextBlob' => [ 'shape' => 'CiphertextType', ], 'SourceEncryptionContext' => [ 'shape' => 'EncryptionContextType', ], 'DestinationKeyId' => [ 'shape' => 'KeyIdType', ], 'DestinationEncryptionContext' => [ 'shape' => 'EncryptionContextType', ], 'GrantTokens' => [ 'shape' => 'GrantTokenList', ], ], ], 'ReEncryptResponse' => [ 'type' => 'structure', 'members' => [ 'CiphertextBlob' => [ 'shape' => 'CiphertextType', ], 'SourceKeyId' => [ 'shape' => 'KeyIdType', ], 'KeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'RetireGrantRequest' => [ 'type' => 'structure', 'members' => [ 'GrantToken' => [ 'shape' => 'GrantTokenType', ], 'KeyId' => [ 'shape' => 'KeyIdType', ], 'GrantId' => [ 'shape' => 'GrantIdType', ], ], ], 'RevokeGrantRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', 'GrantId', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'GrantId' => [ 'shape' => 'GrantIdType', ], ], ], 'ScheduleKeyDeletionRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'PendingWindowInDays' => [ 'shape' => 'PendingWindowInDaysType', ], ], ], 'ScheduleKeyDeletionResponse' => [ 'type' => 'structure', 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'DeletionDate' => [ 'shape' => 'DateType', ], ], ], 'UnsupportedOperationException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessageType', ], ], 'exception' => true, ], 'UpdateAliasRequest' => [ 'type' => 'structure', 'required' => [ 'AliasName', 'TargetKeyId', ], 'members' => [ 'AliasName' => [ 'shape' => 'AliasNameType', ], 'TargetKeyId' => [ 'shape' => 'KeyIdType', ], ], ], 'UpdateKeyDescriptionRequest' => [ 'type' => 'structure', 'required' => [ 'KeyId', 'Description', ], 'members' => [ 'KeyId' => [ 'shape' => 'KeyIdType', ], 'Description' => [ 'shape' => 'DescriptionType', ], ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/sns/2010-03-31/paginators-1.json.php:return [ 'pagination' => [ 'ListEndpointsByPlatformApplication' => [ 'input_token' => 'NextToken', 'output_token' => 'NextToken', 'result_key' => 'Endpoints', ], 'ListPlatformApplications' => [ 'input_token' => 'NextToken', 'output_token' => 'NextToken', 'result_key' => 'PlatformApplications', ], 'ListSubscriptions' => [ 'input_token' => 'NextToken', 'output_token' => 'NextToken', 'result_key' => 'Subscriptions', ], 'ListSubscriptionsByTopic' => [ 'input_token' => 'NextToken', 'output_token' => 'NextToken', 'result_key' => 'Subscriptions', ], 'ListTopics' => [ 'input_token' => 'NextToken', 'output_token' => 'NextToken', 'result_key' => 'Topics', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/sns/2010-03-31/api-2.json.php:return [ 'metadata' => [ 'apiVersion' => '2010-03-31', 'endpointPrefix' => 'sns', 'serviceAbbreviation' => 'Amazon SNS', 'serviceFullName' => 'Amazon Simple Notification Service', 'signatureVersion' => 'v4', 'xmlNamespace' => 'http://sns.amazonaws.com/doc/2010-03-31/', 'protocol' => 'query', ], 'operations' => [ 'AddPermission' => [ 'name' => 'AddPermission', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddPermissionInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], ], ], 'ConfirmSubscription' => [ 'name' => 'ConfirmSubscription', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ConfirmSubscriptionInput', ], 'output' => [ 'shape' => 'ConfirmSubscriptionResponse', 'resultWrapper' => 'ConfirmSubscriptionResult', ], 'errors' => [ [ 'shape' => 'SubscriptionLimitExceededException', 'error' => [ 'code' => 'SubscriptionLimitExceeded', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'CreatePlatformApplication' => [ 'name' => 'CreatePlatformApplication', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreatePlatformApplicationInput', ], 'output' => [ 'shape' => 'CreatePlatformApplicationResponse', 'resultWrapper' => 'CreatePlatformApplicationResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'CreatePlatformEndpoint' => [ 'name' => 'CreatePlatformEndpoint', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreatePlatformEndpointInput', ], 'output' => [ 'shape' => 'CreateEndpointResponse', 'resultWrapper' => 'CreatePlatformEndpointResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], ], ], 'CreateTopic' => [ 'name' => 'CreateTopic', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateTopicInput', ], 'output' => [ 'shape' => 'CreateTopicResponse', 'resultWrapper' => 'CreateTopicResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'TopicLimitExceededException', 'error' => [ 'code' => 'TopicLimitExceeded', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'DeleteEndpoint' => [ 'name' => 'DeleteEndpoint', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteEndpointInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'DeletePlatformApplication' => [ 'name' => 'DeletePlatformApplication', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeletePlatformApplicationInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'DeleteTopic' => [ 'name' => 'DeleteTopic', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteTopicInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], ], ], 'GetEndpointAttributes' => [ 'name' => 'GetEndpointAttributes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetEndpointAttributesInput', ], 'output' => [ 'shape' => 'GetEndpointAttributesResponse', 'resultWrapper' => 'GetEndpointAttributesResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], ], ], 'GetPlatformApplicationAttributes' => [ 'name' => 'GetPlatformApplicationAttributes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetPlatformApplicationAttributesInput', ], 'output' => [ 'shape' => 'GetPlatformApplicationAttributesResponse', 'resultWrapper' => 'GetPlatformApplicationAttributesResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], ], ], 'GetSubscriptionAttributes' => [ 'name' => 'GetSubscriptionAttributes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetSubscriptionAttributesInput', ], 'output' => [ 'shape' => 'GetSubscriptionAttributesResponse', 'resultWrapper' => 'GetSubscriptionAttributesResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'GetTopicAttributes' => [ 'name' => 'GetTopicAttributes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetTopicAttributesInput', ], 'output' => [ 'shape' => 'GetTopicAttributesResponse', 'resultWrapper' => 'GetTopicAttributesResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'ListEndpointsByPlatformApplication' => [ 'name' => 'ListEndpointsByPlatformApplication', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListEndpointsByPlatformApplicationInput', ], 'output' => [ 'shape' => 'ListEndpointsByPlatformApplicationResponse', 'resultWrapper' => 'ListEndpointsByPlatformApplicationResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], ], ], 'ListPlatformApplications' => [ 'name' => 'ListPlatformApplications', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListPlatformApplicationsInput', ], 'output' => [ 'shape' => 'ListPlatformApplicationsResponse', 'resultWrapper' => 'ListPlatformApplicationsResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'ListSubscriptions' => [ 'name' => 'ListSubscriptions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListSubscriptionsInput', ], 'output' => [ 'shape' => 'ListSubscriptionsResponse', 'resultWrapper' => 'ListSubscriptionsResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'ListSubscriptionsByTopic' => [ 'name' => 'ListSubscriptionsByTopic', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListSubscriptionsByTopicInput', ], 'output' => [ 'shape' => 'ListSubscriptionsByTopicResponse', 'resultWrapper' => 'ListSubscriptionsByTopicResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'ListTopics' => [ 'name' => 'ListTopics', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListTopicsInput', ], 'output' => [ 'shape' => 'ListTopicsResponse', 'resultWrapper' => 'ListTopicsResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'Publish' => [ 'name' => 'Publish', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PublishInput', ], 'output' => [ 'shape' => 'PublishResponse', 'resultWrapper' => 'PublishResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'code' => 'ParameterValueInvalid', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'EndpointDisabledException', 'error' => [ 'code' => 'EndpointDisabled', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'PlatformApplicationDisabledException', 'error' => [ 'code' => 'PlatformApplicationDisabled', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'RemovePermission' => [ 'name' => 'RemovePermission', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RemovePermissionInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], ], ], 'SetEndpointAttributes' => [ 'name' => 'SetEndpointAttributes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetEndpointAttributesInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], ], ], 'SetPlatformApplicationAttributes' => [ 'name' => 'SetPlatformApplicationAttributes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetPlatformApplicationAttributesInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], ], ], 'SetSubscriptionAttributes' => [ 'name' => 'SetSubscriptionAttributes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetSubscriptionAttributesInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'SetTopicAttributes' => [ 'name' => 'SetTopicAttributes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetTopicAttributesInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'Subscribe' => [ 'name' => 'Subscribe', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SubscribeInput', ], 'output' => [ 'shape' => 'SubscribeResponse', 'resultWrapper' => 'SubscribeResult', ], 'errors' => [ [ 'shape' => 'SubscriptionLimitExceededException', 'error' => [ 'code' => 'SubscriptionLimitExceeded', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], ], ], 'Unsubscribe' => [ 'name' => 'Unsubscribe', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UnsubscribeInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'AuthorizationErrorException', 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotFoundException', 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], ], ], ], 'shapes' => [ 'ActionsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'action', ], ], 'AddPermissionInput' => [ 'type' => 'structure', 'required' => [ 'TopicArn', 'Label', 'AWSAccountId', 'ActionName', ], 'members' => [ 'TopicArn' => [ 'shape' => 'topicARN', ], 'Label' => [ 'shape' => 'label', ], 'AWSAccountId' => [ 'shape' => 'DelegatesList', ], 'ActionName' => [ 'shape' => 'ActionsList', ], ], ], 'AuthorizationErrorException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'code' => 'AuthorizationError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], 'Binary' => [ 'type' => 'blob', ], 'ConfirmSubscriptionInput' => [ 'type' => 'structure', 'required' => [ 'TopicArn', 'Token', ], 'members' => [ 'TopicArn' => [ 'shape' => 'topicARN', ], 'Token' => [ 'shape' => 'token', ], 'AuthenticateOnUnsubscribe' => [ 'shape' => 'authenticateOnUnsubscribe', ], ], ], 'ConfirmSubscriptionResponse' => [ 'type' => 'structure', 'members' => [ 'SubscriptionArn' => [ 'shape' => 'subscriptionARN', ], ], ], 'CreateEndpointResponse' => [ 'type' => 'structure', 'members' => [ 'EndpointArn' => [ 'shape' => 'String', ], ], ], 'CreatePlatformApplicationInput' => [ 'type' => 'structure', 'required' => [ 'Name', 'Platform', 'Attributes', ], 'members' => [ 'Name' => [ 'shape' => 'String', ], 'Platform' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'MapStringToString', ], ], ], 'CreatePlatformApplicationResponse' => [ 'type' => 'structure', 'members' => [ 'PlatformApplicationArn' => [ 'shape' => 'String', ], ], ], 'CreatePlatformEndpointInput' => [ 'type' => 'structure', 'required' => [ 'PlatformApplicationArn', 'Token', ], 'members' => [ 'PlatformApplicationArn' => [ 'shape' => 'String', ], 'Token' => [ 'shape' => 'String', ], 'CustomUserData' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'MapStringToString', ], ], ], 'CreateTopicInput' => [ 'type' => 'structure', 'required' => [ 'Name', ], 'members' => [ 'Name' => [ 'shape' => 'topicName', ], ], ], 'CreateTopicResponse' => [ 'type' => 'structure', 'members' => [ 'TopicArn' => [ 'shape' => 'topicARN', ], ], ], 'DelegatesList' => [ 'type' => 'list', 'member' => [ 'shape' => 'delegate', ], ], 'DeleteEndpointInput' => [ 'type' => 'structure', 'required' => [ 'EndpointArn', ], 'members' => [ 'EndpointArn' => [ 'shape' => 'String', ], ], ], 'DeletePlatformApplicationInput' => [ 'type' => 'structure', 'required' => [ 'PlatformApplicationArn', ], 'members' => [ 'PlatformApplicationArn' => [ 'shape' => 'String', ], ], ], 'DeleteTopicInput' => [ 'type' => 'structure', 'required' => [ 'TopicArn', ], 'members' => [ 'TopicArn' => [ 'shape' => 'topicARN', ], ], ], 'Endpoint' => [ 'type' => 'structure', 'members' => [ 'EndpointArn' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'MapStringToString', ], ], ], 'EndpointDisabledException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'code' => 'EndpointDisabled', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'GetEndpointAttributesInput' => [ 'type' => 'structure', 'required' => [ 'EndpointArn', ], 'members' => [ 'EndpointArn' => [ 'shape' => 'String', ], ], ], 'GetEndpointAttributesResponse' => [ 'type' => 'structure', 'members' => [ 'Attributes' => [ 'shape' => 'MapStringToString', ], ], ], 'GetPlatformApplicationAttributesInput' => [ 'type' => 'structure', 'required' => [ 'PlatformApplicationArn', ], 'members' => [ 'PlatformApplicationArn' => [ 'shape' => 'String', ], ], ], 'GetPlatformApplicationAttributesResponse' => [ 'type' => 'structure', 'members' => [ 'Attributes' => [ 'shape' => 'MapStringToString', ], ], ], 'GetSubscriptionAttributesInput' => [ 'type' => 'structure', 'required' => [ 'SubscriptionArn', ], 'members' => [ 'SubscriptionArn' => [ 'shape' => 'subscriptionARN', ], ], ], 'GetSubscriptionAttributesResponse' => [ 'type' => 'structure', 'members' => [ 'Attributes' => [ 'shape' => 'SubscriptionAttributesMap', ], ], ], 'GetTopicAttributesInput' => [ 'type' => 'structure', 'required' => [ 'TopicArn', ], 'members' => [ 'TopicArn' => [ 'shape' => 'topicARN', ], ], ], 'GetTopicAttributesResponse' => [ 'type' => 'structure', 'members' => [ 'Attributes' => [ 'shape' => 'TopicAttributesMap', ], ], ], 'InternalErrorException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], 'InvalidParameterException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'InvalidParameterValueException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'code' => 'ParameterValueInvalid', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'ListEndpointsByPlatformApplicationInput' => [ 'type' => 'structure', 'required' => [ 'PlatformApplicationArn', ], 'members' => [ 'PlatformApplicationArn' => [ 'shape' => 'String', ], 'NextToken' => [ 'shape' => 'String', ], ], ], 'ListEndpointsByPlatformApplicationResponse' => [ 'type' => 'structure', 'members' => [ 'Endpoints' => [ 'shape' => 'ListOfEndpoints', ], 'NextToken' => [ 'shape' => 'String', ], ], ], 'ListOfEndpoints' => [ 'type' => 'list', 'member' => [ 'shape' => 'Endpoint', ], ], 'ListOfPlatformApplications' => [ 'type' => 'list', 'member' => [ 'shape' => 'PlatformApplication', ], ], 'ListPlatformApplicationsInput' => [ 'type' => 'structure', 'members' => [ 'NextToken' => [ 'shape' => 'String', ], ], ], 'ListPlatformApplicationsResponse' => [ 'type' => 'structure', 'members' => [ 'PlatformApplications' => [ 'shape' => 'ListOfPlatformApplications', ], 'NextToken' => [ 'shape' => 'String', ], ], ], 'ListSubscriptionsByTopicInput' => [ 'type' => 'structure', 'required' => [ 'TopicArn', ], 'members' => [ 'TopicArn' => [ 'shape' => 'topicARN', ], 'NextToken' => [ 'shape' => 'nextToken', ], ], ], 'ListSubscriptionsByTopicResponse' => [ 'type' => 'structure', 'members' => [ 'Subscriptions' => [ 'shape' => 'SubscriptionsList', ], 'NextToken' => [ 'shape' => 'nextToken', ], ], ], 'ListSubscriptionsInput' => [ 'type' => 'structure', 'members' => [ 'NextToken' => [ 'shape' => 'nextToken', ], ], ], 'ListSubscriptionsResponse' => [ 'type' => 'structure', 'members' => [ 'Subscriptions' => [ 'shape' => 'SubscriptionsList', ], 'NextToken' => [ 'shape' => 'nextToken', ], ], ], 'ListTopicsInput' => [ 'type' => 'structure', 'members' => [ 'NextToken' => [ 'shape' => 'nextToken', ], ], ], 'ListTopicsResponse' => [ 'type' => 'structure', 'members' => [ 'Topics' => [ 'shape' => 'TopicsList', ], 'NextToken' => [ 'shape' => 'nextToken', ], ], ], 'MapStringToString' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'String', ], ], 'MessageAttributeMap' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', 'locationName' => 'Name', ], 'value' => [ 'shape' => 'MessageAttributeValue', 'locationName' => 'Value', ], ], 'MessageAttributeValue' => [ 'type' => 'structure', 'required' => [ 'DataType', ], 'members' => [ 'DataType' => [ 'shape' => 'String', ], 'StringValue' => [ 'shape' => 'String', ], 'BinaryValue' => [ 'shape' => 'Binary', ], ], ], 'NotFoundException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'code' => 'NotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], 'PlatformApplication' => [ 'type' => 'structure', 'members' => [ 'PlatformApplicationArn' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'MapStringToString', ], ], ], 'PlatformApplicationDisabledException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'code' => 'PlatformApplicationDisabled', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'PublishInput' => [ 'type' => 'structure', 'required' => [ 'Message', ], 'members' => [ 'TopicArn' => [ 'shape' => 'topicARN', ], 'TargetArn' => [ 'shape' => 'String', ], 'Message' => [ 'shape' => 'message', ], 'Subject' => [ 'shape' => 'subject', ], 'MessageStructure' => [ 'shape' => 'messageStructure', ], 'MessageAttributes' => [ 'shape' => 'MessageAttributeMap', ], ], ], 'PublishResponse' => [ 'type' => 'structure', 'members' => [ 'MessageId' => [ 'shape' => 'messageId', ], ], ], 'RemovePermissionInput' => [ 'type' => 'structure', 'required' => [ 'TopicArn', 'Label', ], 'members' => [ 'TopicArn' => [ 'shape' => 'topicARN', ], 'Label' => [ 'shape' => 'label', ], ], ], 'SetEndpointAttributesInput' => [ 'type' => 'structure', 'required' => [ 'EndpointArn', 'Attributes', ], 'members' => [ 'EndpointArn' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'MapStringToString', ], ], ], 'SetPlatformApplicationAttributesInput' => [ 'type' => 'structure', 'required' => [ 'PlatformApplicationArn', 'Attributes', ], 'members' => [ 'PlatformApplicationArn' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'MapStringToString', ], ], ], 'SetSubscriptionAttributesInput' => [ 'type' => 'structure', 'required' => [ 'SubscriptionArn', 'AttributeName', ], 'members' => [ 'SubscriptionArn' => [ 'shape' => 'subscriptionARN', ], 'AttributeName' => [ 'shape' => 'attributeName', ], 'AttributeValue' => [ 'shape' => 'attributeValue', ], ], ], 'SetTopicAttributesInput' => [ 'type' => 'structure', 'required' => [ 'TopicArn', 'AttributeName', ], 'members' => [ 'TopicArn' => [ 'shape' => 'topicARN', ], 'AttributeName' => [ 'shape' => 'attributeName', ], 'AttributeValue' => [ 'shape' => 'attributeValue', ], ], ], 'String' => [ 'type' => 'string', ], 'SubscribeInput' => [ 'type' => 'structure', 'required' => [ 'TopicArn', 'Protocol', ], 'members' => [ 'TopicArn' => [ 'shape' => 'topicARN', ], 'Protocol' => [ 'shape' => 'protocol', ], 'Endpoint' => [ 'shape' => 'endpoint', ], ], ], 'SubscribeResponse' => [ 'type' => 'structure', 'members' => [ 'SubscriptionArn' => [ 'shape' => 'subscriptionARN', ], ], ], 'Subscription' => [ 'type' => 'structure', 'members' => [ 'SubscriptionArn' => [ 'shape' => 'subscriptionARN', ], 'Owner' => [ 'shape' => 'account', ], 'Protocol' => [ 'shape' => 'protocol', ], 'Endpoint' => [ 'shape' => 'endpoint', ], 'TopicArn' => [ 'shape' => 'topicARN', ], ], ], 'SubscriptionAttributesMap' => [ 'type' => 'map', 'key' => [ 'shape' => 'attributeName', ], 'value' => [ 'shape' => 'attributeValue', ], ], 'SubscriptionLimitExceededException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'code' => 'SubscriptionLimitExceeded', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], 'SubscriptionsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Subscription', ], ], 'Topic' => [ 'type' => 'structure', 'members' => [ 'TopicArn' => [ 'shape' => 'topicARN', ], ], ], 'TopicAttributesMap' => [ 'type' => 'map', 'key' => [ 'shape' => 'attributeName', ], 'value' => [ 'shape' => 'attributeValue', ], ], 'TopicLimitExceededException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'code' => 'TopicLimitExceeded', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], 'TopicsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Topic', ], ], 'UnsubscribeInput' => [ 'type' => 'structure', 'required' => [ 'SubscriptionArn', ], 'members' => [ 'SubscriptionArn' => [ 'shape' => 'subscriptionARN', ], ], ], 'account' => [ 'type' => 'string', ], 'action' => [ 'type' => 'string', ], 'attributeName' => [ 'type' => 'string', ], 'attributeValue' => [ 'type' => 'string', ], 'authenticateOnUnsubscribe' => [ 'type' => 'string', ], 'delegate' => [ 'type' => 'string', ], 'endpoint' => [ 'type' => 'string', ], 'label' => [ 'type' => 'string', ], 'message' => [ 'type' => 'string', ], 'messageId' => [ 'type' => 'string', ], 'messageStructure' => [ 'type' => 'string', ], 'nextToken' => [ 'type' => 'string', ], 'protocol' => [ 'type' => 'string', ], 'string' => [ 'type' => 'string', ], 'subject' => [ 'type' => 'string', ], 'subscriptionARN' => [ 'type' => 'string', ], 'token' => [ 'type' => 'string', ], 'topicARN' => [ 'type' => 'string', ], 'topicName' => [ 'type' => 'string', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/inspector/2016-02-16/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2016-02-16', 'endpointPrefix' => 'inspector', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceFullName' => 'Amazon Inspector', 'signatureVersion' => 'v4', 'targetPrefix' => 'InspectorService', ], 'operations' => [ 'AddAttributesToFindings' => [ 'name' => 'AddAttributesToFindings', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddAttributesToFindingsRequest', ], 'output' => [ 'shape' => 'AddAttributesToFindingsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'CreateAssessmentTarget' => [ 'name' => 'CreateAssessmentTarget', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateAssessmentTargetRequest', ], 'output' => [ 'shape' => 'CreateAssessmentTargetResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'CreateAssessmentTemplate' => [ 'name' => 'CreateAssessmentTemplate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateAssessmentTemplateRequest', ], 'output' => [ 'shape' => 'CreateAssessmentTemplateResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'CreateResourceGroup' => [ 'name' => 'CreateResourceGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateResourceGroupRequest', ], 'output' => [ 'shape' => 'CreateResourceGroupResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'AccessDeniedException', ], ], ], 'DeleteAssessmentRun' => [ 'name' => 'DeleteAssessmentRun', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteAssessmentRunRequest', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AssessmentRunInProgressException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'DeleteAssessmentTarget' => [ 'name' => 'DeleteAssessmentTarget', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteAssessmentTargetRequest', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AssessmentRunInProgressException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'DeleteAssessmentTemplate' => [ 'name' => 'DeleteAssessmentTemplate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteAssessmentTemplateRequest', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AssessmentRunInProgressException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'DescribeAssessmentRuns' => [ 'name' => 'DescribeAssessmentRuns', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeAssessmentRunsRequest', ], 'output' => [ 'shape' => 'DescribeAssessmentRunsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], ], ], 'DescribeAssessmentTargets' => [ 'name' => 'DescribeAssessmentTargets', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeAssessmentTargetsRequest', ], 'output' => [ 'shape' => 'DescribeAssessmentTargetsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], ], ], 'DescribeAssessmentTemplates' => [ 'name' => 'DescribeAssessmentTemplates', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeAssessmentTemplatesRequest', ], 'output' => [ 'shape' => 'DescribeAssessmentTemplatesResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], ], ], 'DescribeCrossAccountAccessRole' => [ 'name' => 'DescribeCrossAccountAccessRole', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'output' => [ 'shape' => 'DescribeCrossAccountAccessRoleResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], ], ], 'DescribeFindings' => [ 'name' => 'DescribeFindings', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeFindingsRequest', ], 'output' => [ 'shape' => 'DescribeFindingsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], ], ], 'DescribeResourceGroups' => [ 'name' => 'DescribeResourceGroups', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeResourceGroupsRequest', ], 'output' => [ 'shape' => 'DescribeResourceGroupsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], ], ], 'DescribeRulesPackages' => [ 'name' => 'DescribeRulesPackages', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeRulesPackagesRequest', ], 'output' => [ 'shape' => 'DescribeRulesPackagesResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], ], ], 'GetTelemetryMetadata' => [ 'name' => 'GetTelemetryMetadata', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetTelemetryMetadataRequest', ], 'output' => [ 'shape' => 'GetTelemetryMetadataResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'ListAssessmentRunAgents' => [ 'name' => 'ListAssessmentRunAgents', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAssessmentRunAgentsRequest', ], 'output' => [ 'shape' => 'ListAssessmentRunAgentsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'ListAssessmentRuns' => [ 'name' => 'ListAssessmentRuns', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAssessmentRunsRequest', ], 'output' => [ 'shape' => 'ListAssessmentRunsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'ListAssessmentTargets' => [ 'name' => 'ListAssessmentTargets', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAssessmentTargetsRequest', ], 'output' => [ 'shape' => 'ListAssessmentTargetsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], ], ], 'ListAssessmentTemplates' => [ 'name' => 'ListAssessmentTemplates', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAssessmentTemplatesRequest', ], 'output' => [ 'shape' => 'ListAssessmentTemplatesResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'ListEventSubscriptions' => [ 'name' => 'ListEventSubscriptions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListEventSubscriptionsRequest', ], 'output' => [ 'shape' => 'ListEventSubscriptionsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'ListFindings' => [ 'name' => 'ListFindings', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListFindingsRequest', ], 'output' => [ 'shape' => 'ListFindingsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'ListRulesPackages' => [ 'name' => 'ListRulesPackages', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListRulesPackagesRequest', ], 'output' => [ 'shape' => 'ListRulesPackagesResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], ], ], 'ListTagsForResource' => [ 'name' => 'ListTagsForResource', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListTagsForResourceRequest', ], 'output' => [ 'shape' => 'ListTagsForResourceResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'PreviewAgents' => [ 'name' => 'PreviewAgents', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PreviewAgentsRequest', ], 'output' => [ 'shape' => 'PreviewAgentsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidCrossAccountRoleException', ], ], ], 'RegisterCrossAccountAccessRole' => [ 'name' => 'RegisterCrossAccountAccessRole', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RegisterCrossAccountAccessRoleRequest', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'InvalidCrossAccountRoleException', ], ], ], 'RemoveAttributesFromFindings' => [ 'name' => 'RemoveAttributesFromFindings', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RemoveAttributesFromFindingsRequest', ], 'output' => [ 'shape' => 'RemoveAttributesFromFindingsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'SetTagsForResource' => [ 'name' => 'SetTagsForResource', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetTagsForResourceRequest', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'StartAssessmentRun' => [ 'name' => 'StartAssessmentRun', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StartAssessmentRunRequest', ], 'output' => [ 'shape' => 'StartAssessmentRunResponse', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidCrossAccountRoleException', ], [ 'shape' => 'AgentsAlreadyRunningAssessmentException', ], ], ], 'StopAssessmentRun' => [ 'name' => 'StopAssessmentRun', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StopAssessmentRunRequest', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'SubscribeToEvent' => [ 'name' => 'SubscribeToEvent', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SubscribeToEventRequest', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'UnsubscribeFromEvent' => [ 'name' => 'UnsubscribeFromEvent', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UnsubscribeFromEventRequest', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], 'UpdateAssessmentTarget' => [ 'name' => 'UpdateAssessmentTarget', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateAssessmentTargetRequest', ], 'errors' => [ [ 'shape' => 'InternalException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'AccessDeniedException', ], [ 'shape' => 'NoSuchEntityException', ], ], ], ], 'shapes' => [ 'AccessDeniedErrorCode' => [ 'type' => 'string', 'enum' => [ 'ACCESS_DENIED_TO_ASSESSMENT_TARGET', 'ACCESS_DENIED_TO_ASSESSMENT_TEMPLATE', 'ACCESS_DENIED_TO_ASSESSMENT_RUN', 'ACCESS_DENIED_TO_FINDING', 'ACCESS_DENIED_TO_RESOURCE_GROUP', 'ACCESS_DENIED_TO_RULES_PACKAGE', 'ACCESS_DENIED_TO_SNS_TOPIC', 'ACCESS_DENIED_TO_IAM_ROLE', ], ], 'AccessDeniedException' => [ 'type' => 'structure', 'required' => [ 'message', 'errorCode', 'canRetry', ], 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'errorCode' => [ 'shape' => 'AccessDeniedErrorCode', ], 'canRetry' => [ 'shape' => 'Bool', ], ], 'exception' => true, ], 'AddAttributesToFindingsRequest' => [ 'type' => 'structure', 'required' => [ 'findingArns', 'attributes', ], 'members' => [ 'findingArns' => [ 'shape' => 'AddRemoveAttributesFindingArnList', ], 'attributes' => [ 'shape' => 'UserAttributeList', ], ], ], 'AddAttributesToFindingsResponse' => [ 'type' => 'structure', 'required' => [ 'failedItems', ], 'members' => [ 'failedItems' => [ 'shape' => 'FailedItems', ], ], ], 'AddRemoveAttributesFindingArnList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Arn', ], 'max' => 10, 'min' => 1, ], 'AgentAlreadyRunningAssessment' => [ 'type' => 'structure', 'required' => [ 'agentId', 'assessmentRunArn', ], 'members' => [ 'agentId' => [ 'shape' => 'AgentId', ], 'assessmentRunArn' => [ 'shape' => 'Arn', ], ], ], 'AgentAlreadyRunningAssessmentList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AgentAlreadyRunningAssessment', ], 'max' => 10, 'min' => 1, ], 'AgentFilter' => [ 'type' => 'structure', 'required' => [ 'agentHealths', 'agentHealthCodes', ], 'members' => [ 'agentHealths' => [ 'shape' => 'AgentHealthList', ], 'agentHealthCodes' => [ 'shape' => 'AgentHealthCodeList', ], ], ], 'AgentHealth' => [ 'type' => 'string', 'enum' => [ 'HEALTHY', 'UNHEALTHY', ], ], 'AgentHealthCode' => [ 'type' => 'string', 'enum' => [ 'IDLE', 'RUNNING', 'SHUTDOWN', 'UNHEALTHY', 'THROTTLED', 'UNKNOWN', ], ], 'AgentHealthCodeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AgentHealthCode', ], 'max' => 10, 'min' => 0, ], 'AgentHealthList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AgentHealth', ], 'max' => 10, 'min' => 0, ], 'AgentId' => [ 'type' => 'string', 'max' => 128, 'min' => 1, ], 'AgentIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AgentId', ], 'max' => 500, 'min' => 0, ], 'AgentPreview' => [ 'type' => 'structure', 'required' => [ 'agentId', ], 'members' => [ 'agentId' => [ 'shape' => 'AgentId', ], 'autoScalingGroup' => [ 'shape' => 'AutoScalingGroup', ], ], ], 'AgentPreviewList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AgentPreview', ], 'max' => 100, 'min' => 0, ], 'AgentsAlreadyRunningAssessmentException' => [ 'type' => 'structure', 'required' => [ 'message', 'agents', 'agentsTruncated', 'canRetry', ], 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'agents' => [ 'shape' => 'AgentAlreadyRunningAssessmentList', ], 'agentsTruncated' => [ 'shape' => 'Bool', ], 'canRetry' => [ 'shape' => 'Bool', ], ], 'exception' => true, ], 'AmiId' => [ 'type' => 'string', 'max' => 256, 'min' => 0, ], 'Arn' => [ 'type' => 'string', 'max' => 300, 'min' => 1, ], 'AssessmentRulesPackageArnList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Arn', ], 'max' => 50, 'min' => 1, ], 'AssessmentRun' => [ 'type' => 'structure', 'required' => [ 'arn', 'name', 'assessmentTemplateArn', 'state', 'durationInSeconds', 'rulesPackageArns', 'userAttributesForFindings', 'createdAt', 'stateChangedAt', 'dataCollected', 'stateChanges', 'notifications', ], 'members' => [ 'arn' => [ 'shape' => 'Arn', ], 'name' => [ 'shape' => 'AssessmentRunName', ], 'assessmentTemplateArn' => [ 'shape' => 'Arn', ], 'state' => [ 'shape' => 'AssessmentRunState', ], 'durationInSeconds' => [ 'shape' => 'AssessmentRunDuration', ], 'rulesPackageArns' => [ 'shape' => 'AssessmentRulesPackageArnList', ], 'userAttributesForFindings' => [ 'shape' => 'UserAttributeList', ], 'createdAt' => [ 'shape' => 'Timestamp', ], 'startedAt' => [ 'shape' => 'Timestamp', ], 'completedAt' => [ 'shape' => 'Timestamp', ], 'stateChangedAt' => [ 'shape' => 'Timestamp', ], 'dataCollected' => [ 'shape' => 'Bool', ], 'stateChanges' => [ 'shape' => 'AssessmentRunStateChangeList', ], 'notifications' => [ 'shape' => 'AssessmentRunNotificationList', ], ], ], 'AssessmentRunAgent' => [ 'type' => 'structure', 'required' => [ 'agentId', 'assessmentRunArn', 'agentHealth', 'agentHealthCode', 'telemetryMetadata', ], 'members' => [ 'agentId' => [ 'shape' => 'AgentId', ], 'assessmentRunArn' => [ 'shape' => 'Arn', ], 'agentHealth' => [ 'shape' => 'AgentHealth', ], 'agentHealthCode' => [ 'shape' => 'AgentHealthCode', ], 'agentHealthDetails' => [ 'shape' => 'Message', ], 'autoScalingGroup' => [ 'shape' => 'AutoScalingGroup', ], 'telemetryMetadata' => [ 'shape' => 'TelemetryMetadataList', ], ], ], 'AssessmentRunAgentList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AssessmentRunAgent', ], 'max' => 500, 'min' => 0, ], 'AssessmentRunDuration' => [ 'type' => 'integer', 'max' => 86400, 'min' => 180, ], 'AssessmentRunFilter' => [ 'type' => 'structure', 'members' => [ 'namePattern' => [ 'shape' => 'NamePattern', ], 'states' => [ 'shape' => 'AssessmentRunStateList', ], 'durationRange' => [ 'shape' => 'DurationRange', ], 'rulesPackageArns' => [ 'shape' => 'FilterRulesPackageArnList', ], 'startTimeRange' => [ 'shape' => 'TimestampRange', ], 'completionTimeRange' => [ 'shape' => 'TimestampRange', ], 'stateChangeTimeRange' => [ 'shape' => 'TimestampRange', ], ], ], 'AssessmentRunInProgressArnList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Arn', ], 'max' => 10, 'min' => 1, ], 'AssessmentRunInProgressException' => [ 'type' => 'structure', 'required' => [ 'message', 'assessmentRunArns', 'assessmentRunArnsTruncated', 'canRetry', ], 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'assessmentRunArns' => [ 'shape' => 'AssessmentRunInProgressArnList', ], 'assessmentRunArnsTruncated' => [ 'shape' => 'Bool', ], 'canRetry' => [ 'shape' => 'Bool', ], ], 'exception' => true, ], 'AssessmentRunList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AssessmentRun', ], 'max' => 10, 'min' => 0, ], 'AssessmentRunName' => [ 'type' => 'string', 'max' => 140, 'min' => 1, ], 'AssessmentRunNotification' => [ 'type' => 'structure', 'required' => [ 'date', 'event', 'error', ], 'members' => [ 'date' => [ 'shape' => 'Timestamp', ], 'event' => [ 'shape' => 'InspectorEvent', ], 'message' => [ 'shape' => 'Message', ], 'error' => [ 'shape' => 'Bool', ], 'snsTopicArn' => [ 'shape' => 'Arn', ], 'snsPublishStatusCode' => [ 'shape' => 'AssessmentRunNotificationSnsStatusCode', ], ], ], 'AssessmentRunNotificationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AssessmentRunNotification', ], 'max' => 50, 'min' => 0, ], 'AssessmentRunNotificationSnsStatusCode' => [ 'type' => 'string', 'enum' => [ 'SUCCESS', 'TOPIC_DOES_NOT_EXIST', 'ACCESS_DENIED', 'INTERNAL_ERROR', ], ], 'AssessmentRunState' => [ 'type' => 'string', 'enum' => [ 'CREATED', 'START_DATA_COLLECTION_PENDING', 'START_DATA_COLLECTION_IN_PROGRESS', 'COLLECTING_DATA', 'STOP_DATA_COLLECTION_PENDING', 'DATA_COLLECTED', 'EVALUATING_RULES', 'FAILED', 'COMPLETED', 'COMPLETED_WITH_ERRORS', ], ], 'AssessmentRunStateChange' => [ 'type' => 'structure', 'required' => [ 'stateChangedAt', 'state', ], 'members' => [ 'stateChangedAt' => [ 'shape' => 'Timestamp', ], 'state' => [ 'shape' => 'AssessmentRunState', ], ], ], 'AssessmentRunStateChangeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AssessmentRunStateChange', ], 'max' => 50, 'min' => 0, ], 'AssessmentRunStateList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AssessmentRunState', ], 'max' => 50, 'min' => 0, ], 'AssessmentTarget' => [ 'type' => 'structure', 'required' => [ 'arn', 'name', 'resourceGroupArn', 'createdAt', 'updatedAt', ], 'members' => [ 'arn' => [ 'shape' => 'Arn', ], 'name' => [ 'shape' => 'AssessmentTargetName', ], 'resourceGroupArn' => [ 'shape' => 'Arn', ], 'createdAt' => [ 'shape' => 'Timestamp', ], 'updatedAt' => [ 'shape' => 'Timestamp', ], ], ], 'AssessmentTargetFilter' => [ 'type' => 'structure', 'members' => [ 'assessmentTargetNamePattern' => [ 'shape' => 'NamePattern', ], ], ], 'AssessmentTargetList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AssessmentTarget', ], 'max' => 10, 'min' => 0, ], 'AssessmentTargetName' => [ 'type' => 'string', 'max' => 140, 'min' => 1, ], 'AssessmentTemplate' => [ 'type' => 'structure', 'required' => [ 'arn', 'name', 'assessmentTargetArn', 'durationInSeconds', 'rulesPackageArns', 'userAttributesForFindings', 'createdAt', ], 'members' => [ 'arn' => [ 'shape' => 'Arn', ], 'name' => [ 'shape' => 'AssessmentTemplateName', ], 'assessmentTargetArn' => [ 'shape' => 'Arn', ], 'durationInSeconds' => [ 'shape' => 'AssessmentRunDuration', ], 'rulesPackageArns' => [ 'shape' => 'AssessmentTemplateRulesPackageArnList', ], 'userAttributesForFindings' => [ 'shape' => 'UserAttributeList', ], 'createdAt' => [ 'shape' => 'Timestamp', ], ], ], 'AssessmentTemplateFilter' => [ 'type' => 'structure', 'members' => [ 'namePattern' => [ 'shape' => 'NamePattern', ], 'durationRange' => [ 'shape' => 'DurationRange', ], 'rulesPackageArns' => [ 'shape' => 'FilterRulesPackageArnList', ], ], ], 'AssessmentTemplateList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AssessmentTemplate', ], 'max' => 10, 'min' => 0, ], 'AssessmentTemplateName' => [ 'type' => 'string', 'max' => 140, 'min' => 1, ], 'AssessmentTemplateRulesPackageArnList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Arn', ], 'max' => 50, 'min' => 0, ], 'AssetAttributes' => [ 'type' => 'structure', 'required' => [ 'schemaVersion', ], 'members' => [ 'schemaVersion' => [ 'shape' => 'NumericVersion', ], 'agentId' => [ 'shape' => 'AgentId', ], 'autoScalingGroup' => [ 'shape' => 'AutoScalingGroup', ], 'amiId' => [ 'shape' => 'AmiId', ], 'hostname' => [ 'shape' => 'Hostname', ], 'ipv4Addresses' => [ 'shape' => 'Ipv4AddressList', ], ], ], 'AssetType' => [ 'type' => 'string', 'enum' => [ 'ec2-instance', ], ], 'Attribute' => [ 'type' => 'structure', 'required' => [ 'key', ], 'members' => [ 'key' => [ 'shape' => 'AttributeKey', ], 'value' => [ 'shape' => 'AttributeValue', ], ], ], 'AttributeKey' => [ 'type' => 'string', 'max' => 128, 'min' => 1, ], 'AttributeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Attribute', ], 'max' => 50, 'min' => 0, ], 'AttributeValue' => [ 'type' => 'string', 'max' => 256, 'min' => 1, ], 'AutoScalingGroup' => [ 'type' => 'string', 'max' => 256, 'min' => 1, ], 'AutoScalingGroupList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AutoScalingGroup', ], 'max' => 20, 'min' => 0, ], 'BatchDescribeArnList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Arn', ], 'max' => 10, 'min' => 1, ], 'Bool' => [ 'type' => 'boolean', ], 'CreateAssessmentTargetRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentTargetName', 'resourceGroupArn', ], 'members' => [ 'assessmentTargetName' => [ 'shape' => 'AssessmentTargetName', ], 'resourceGroupArn' => [ 'shape' => 'Arn', ], ], ], 'CreateAssessmentTargetResponse' => [ 'type' => 'structure', 'required' => [ 'assessmentTargetArn', ], 'members' => [ 'assessmentTargetArn' => [ 'shape' => 'Arn', ], ], ], 'CreateAssessmentTemplateRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentTargetArn', 'assessmentTemplateName', 'durationInSeconds', 'rulesPackageArns', ], 'members' => [ 'assessmentTargetArn' => [ 'shape' => 'Arn', ], 'assessmentTemplateName' => [ 'shape' => 'AssessmentTemplateName', ], 'durationInSeconds' => [ 'shape' => 'AssessmentRunDuration', ], 'rulesPackageArns' => [ 'shape' => 'AssessmentTemplateRulesPackageArnList', ], 'userAttributesForFindings' => [ 'shape' => 'UserAttributeList', ], ], ], 'CreateAssessmentTemplateResponse' => [ 'type' => 'structure', 'required' => [ 'assessmentTemplateArn', ], 'members' => [ 'assessmentTemplateArn' => [ 'shape' => 'Arn', ], ], ], 'CreateResourceGroupRequest' => [ 'type' => 'structure', 'required' => [ 'resourceGroupTags', ], 'members' => [ 'resourceGroupTags' => [ 'shape' => 'ResourceGroupTags', ], ], ], 'CreateResourceGroupResponse' => [ 'type' => 'structure', 'required' => [ 'resourceGroupArn', ], 'members' => [ 'resourceGroupArn' => [ 'shape' => 'Arn', ], ], ], 'DeleteAssessmentRunRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentRunArn', ], 'members' => [ 'assessmentRunArn' => [ 'shape' => 'Arn', ], ], ], 'DeleteAssessmentTargetRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentTargetArn', ], 'members' => [ 'assessmentTargetArn' => [ 'shape' => 'Arn', ], ], ], 'DeleteAssessmentTemplateRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentTemplateArn', ], 'members' => [ 'assessmentTemplateArn' => [ 'shape' => 'Arn', ], ], ], 'DescribeAssessmentRunsRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentRunArns', ], 'members' => [ 'assessmentRunArns' => [ 'shape' => 'BatchDescribeArnList', ], ], ], 'DescribeAssessmentRunsResponse' => [ 'type' => 'structure', 'required' => [ 'assessmentRuns', 'failedItems', ], 'members' => [ 'assessmentRuns' => [ 'shape' => 'AssessmentRunList', ], 'failedItems' => [ 'shape' => 'FailedItems', ], ], ], 'DescribeAssessmentTargetsRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentTargetArns', ], 'members' => [ 'assessmentTargetArns' => [ 'shape' => 'BatchDescribeArnList', ], ], ], 'DescribeAssessmentTargetsResponse' => [ 'type' => 'structure', 'required' => [ 'assessmentTargets', 'failedItems', ], 'members' => [ 'assessmentTargets' => [ 'shape' => 'AssessmentTargetList', ], 'failedItems' => [ 'shape' => 'FailedItems', ], ], ], 'DescribeAssessmentTemplatesRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentTemplateArns', ], 'members' => [ 'assessmentTemplateArns' => [ 'shape' => 'BatchDescribeArnList', ], ], ], 'DescribeAssessmentTemplatesResponse' => [ 'type' => 'structure', 'required' => [ 'assessmentTemplates', 'failedItems', ], 'members' => [ 'assessmentTemplates' => [ 'shape' => 'AssessmentTemplateList', ], 'failedItems' => [ 'shape' => 'FailedItems', ], ], ], 'DescribeCrossAccountAccessRoleResponse' => [ 'type' => 'structure', 'required' => [ 'roleArn', 'valid', 'registeredAt', ], 'members' => [ 'roleArn' => [ 'shape' => 'Arn', ], 'valid' => [ 'shape' => 'Bool', ], 'registeredAt' => [ 'shape' => 'Timestamp', ], ], ], 'DescribeFindingsRequest' => [ 'type' => 'structure', 'required' => [ 'findingArns', ], 'members' => [ 'findingArns' => [ 'shape' => 'BatchDescribeArnList', ], 'locale' => [ 'shape' => 'Locale', ], ], ], 'DescribeFindingsResponse' => [ 'type' => 'structure', 'required' => [ 'findings', 'failedItems', ], 'members' => [ 'findings' => [ 'shape' => 'FindingList', ], 'failedItems' => [ 'shape' => 'FailedItems', ], ], ], 'DescribeResourceGroupsRequest' => [ 'type' => 'structure', 'required' => [ 'resourceGroupArns', ], 'members' => [ 'resourceGroupArns' => [ 'shape' => 'BatchDescribeArnList', ], ], ], 'DescribeResourceGroupsResponse' => [ 'type' => 'structure', 'required' => [ 'resourceGroups', 'failedItems', ], 'members' => [ 'resourceGroups' => [ 'shape' => 'ResourceGroupList', ], 'failedItems' => [ 'shape' => 'FailedItems', ], ], ], 'DescribeRulesPackagesRequest' => [ 'type' => 'structure', 'required' => [ 'rulesPackageArns', ], 'members' => [ 'rulesPackageArns' => [ 'shape' => 'BatchDescribeArnList', ], 'locale' => [ 'shape' => 'Locale', ], ], ], 'DescribeRulesPackagesResponse' => [ 'type' => 'structure', 'required' => [ 'rulesPackages', 'failedItems', ], 'members' => [ 'rulesPackages' => [ 'shape' => 'RulesPackageList', ], 'failedItems' => [ 'shape' => 'FailedItems', ], ], ], 'DurationRange' => [ 'type' => 'structure', 'members' => [ 'minSeconds' => [ 'shape' => 'AssessmentRunDuration', ], 'maxSeconds' => [ 'shape' => 'AssessmentRunDuration', ], ], ], 'ErrorMessage' => [ 'type' => 'string', 'max' => 1000, 'min' => 0, ], 'EventSubscription' => [ 'type' => 'structure', 'required' => [ 'event', 'subscribedAt', ], 'members' => [ 'event' => [ 'shape' => 'InspectorEvent', ], 'subscribedAt' => [ 'shape' => 'Timestamp', ], ], ], 'EventSubscriptionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'EventSubscription', ], 'max' => 50, 'min' => 1, ], 'FailedItemDetails' => [ 'type' => 'structure', 'required' => [ 'failureCode', 'retryable', ], 'members' => [ 'failureCode' => [ 'shape' => 'FailedItemErrorCode', ], 'retryable' => [ 'shape' => 'Bool', ], ], ], 'FailedItemErrorCode' => [ 'type' => 'string', 'enum' => [ 'INVALID_ARN', 'DUPLICATE_ARN', 'ITEM_DOES_NOT_EXIST', 'ACCESS_DENIED', 'LIMIT_EXCEEDED', 'INTERNAL_ERROR', ], ], 'FailedItems' => [ 'type' => 'map', 'key' => [ 'shape' => 'Arn', ], 'value' => [ 'shape' => 'FailedItemDetails', ], ], 'FilterRulesPackageArnList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Arn', ], 'max' => 50, 'min' => 0, ], 'Finding' => [ 'type' => 'structure', 'required' => [ 'arn', 'attributes', 'userAttributes', 'createdAt', 'updatedAt', ], 'members' => [ 'arn' => [ 'shape' => 'Arn', ], 'schemaVersion' => [ 'shape' => 'NumericVersion', ], 'service' => [ 'shape' => 'ServiceName', ], 'serviceAttributes' => [ 'shape' => 'InspectorServiceAttributes', ], 'assetType' => [ 'shape' => 'AssetType', ], 'assetAttributes' => [ 'shape' => 'AssetAttributes', ], 'id' => [ 'shape' => 'FindingId', ], 'title' => [ 'shape' => 'Text', ], 'description' => [ 'shape' => 'Text', ], 'recommendation' => [ 'shape' => 'Text', ], 'severity' => [ 'shape' => 'Severity', ], 'numericSeverity' => [ 'shape' => 'NumericSeverity', ], 'confidence' => [ 'shape' => 'IocConfidence', ], 'indicatorOfCompromise' => [ 'shape' => 'Bool', ], 'attributes' => [ 'shape' => 'AttributeList', ], 'userAttributes' => [ 'shape' => 'UserAttributeList', ], 'createdAt' => [ 'shape' => 'Timestamp', ], 'updatedAt' => [ 'shape' => 'Timestamp', ], ], ], 'FindingFilter' => [ 'type' => 'structure', 'members' => [ 'agentIds' => [ 'shape' => 'AgentIdList', ], 'autoScalingGroups' => [ 'shape' => 'AutoScalingGroupList', ], 'ruleNames' => [ 'shape' => 'RuleNameList', ], 'severities' => [ 'shape' => 'SeverityList', ], 'rulesPackageArns' => [ 'shape' => 'FilterRulesPackageArnList', ], 'attributes' => [ 'shape' => 'AttributeList', ], 'userAttributes' => [ 'shape' => 'AttributeList', ], 'creationTimeRange' => [ 'shape' => 'TimestampRange', ], ], ], 'FindingId' => [ 'type' => 'string', 'max' => 128, 'min' => 0, ], 'FindingList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Finding', ], 'max' => 10, 'min' => 0, ], 'GetTelemetryMetadataRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentRunArn', ], 'members' => [ 'assessmentRunArn' => [ 'shape' => 'Arn', ], ], ], 'GetTelemetryMetadataResponse' => [ 'type' => 'structure', 'required' => [ 'telemetryMetadata', ], 'members' => [ 'telemetryMetadata' => [ 'shape' => 'TelemetryMetadataList', ], ], ], 'Hostname' => [ 'type' => 'string', 'max' => 256, 'min' => 0, ], 'InspectorEvent' => [ 'type' => 'string', 'enum' => [ 'ASSESSMENT_RUN_STARTED', 'ASSESSMENT_RUN_COMPLETED', 'ASSESSMENT_RUN_STATE_CHANGED', 'FINDING_REPORTED', 'OTHER', ], ], 'InspectorServiceAttributes' => [ 'type' => 'structure', 'required' => [ 'schemaVersion', ], 'members' => [ 'schemaVersion' => [ 'shape' => 'NumericVersion', ], 'assessmentRunArn' => [ 'shape' => 'Arn', ], 'rulesPackageArn' => [ 'shape' => 'Arn', ], ], ], 'InternalException' => [ 'type' => 'structure', 'required' => [ 'message', 'canRetry', ], 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'canRetry' => [ 'shape' => 'Bool', ], ], 'exception' => true, 'fault' => true, ], 'InvalidCrossAccountRoleErrorCode' => [ 'type' => 'string', 'enum' => [ 'ROLE_DOES_NOT_EXIST_OR_INVALID_TRUST_RELATIONSHIP', 'ROLE_DOES_NOT_HAVE_CORRECT_POLICY', ], ], 'InvalidCrossAccountRoleException' => [ 'type' => 'structure', 'required' => [ 'message', 'errorCode', 'canRetry', ], 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'errorCode' => [ 'shape' => 'InvalidCrossAccountRoleErrorCode', ], 'canRetry' => [ 'shape' => 'Bool', ], ], 'exception' => true, ], 'InvalidInputErrorCode' => [ 'type' => 'string', 'enum' => [ 'INVALID_ASSESSMENT_TARGET_ARN', 'INVALID_ASSESSMENT_TEMPLATE_ARN', 'INVALID_ASSESSMENT_RUN_ARN', 'INVALID_FINDING_ARN', 'INVALID_RESOURCE_GROUP_ARN', 'INVALID_RULES_PACKAGE_ARN', 'INVALID_RESOURCE_ARN', 'INVALID_SNS_TOPIC_ARN', 'INVALID_IAM_ROLE_ARN', 'INVALID_ASSESSMENT_TARGET_NAME', 'INVALID_ASSESSMENT_TARGET_NAME_PATTERN', 'INVALID_ASSESSMENT_TEMPLATE_NAME', 'INVALID_ASSESSMENT_TEMPLATE_NAME_PATTERN', 'INVALID_ASSESSMENT_TEMPLATE_DURATION', 'INVALID_ASSESSMENT_TEMPLATE_DURATION_RANGE', 'INVALID_ASSESSMENT_RUN_DURATION_RANGE', 'INVALID_ASSESSMENT_RUN_START_TIME_RANGE', 'INVALID_ASSESSMENT_RUN_COMPLETION_TIME_RANGE', 'INVALID_ASSESSMENT_RUN_STATE_CHANGE_TIME_RANGE', 'INVALID_ASSESSMENT_RUN_STATE', 'INVALID_TAG', 'INVALID_TAG_KEY', 'INVALID_TAG_VALUE', 'INVALID_RESOURCE_GROUP_TAG_KEY', 'INVALID_RESOURCE_GROUP_TAG_VALUE', 'INVALID_ATTRIBUTE', 'INVALID_USER_ATTRIBUTE', 'INVALID_USER_ATTRIBUTE_KEY', 'INVALID_USER_ATTRIBUTE_VALUE', 'INVALID_PAGINATION_TOKEN', 'INVALID_MAX_RESULTS', 'INVALID_AGENT_ID', 'INVALID_AUTO_SCALING_GROUP', 'INVALID_RULE_NAME', 'INVALID_SEVERITY', 'INVALID_LOCALE', 'INVALID_EVENT', 'ASSESSMENT_TARGET_NAME_ALREADY_TAKEN', 'ASSESSMENT_TEMPLATE_NAME_ALREADY_TAKEN', 'INVALID_NUMBER_OF_ASSESSMENT_TARGET_ARNS', 'INVALID_NUMBER_OF_ASSESSMENT_TEMPLATE_ARNS', 'INVALID_NUMBER_OF_ASSESSMENT_RUN_ARNS', 'INVALID_NUMBER_OF_FINDING_ARNS', 'INVALID_NUMBER_OF_RESOURCE_GROUP_ARNS', 'INVALID_NUMBER_OF_RULES_PACKAGE_ARNS', 'INVALID_NUMBER_OF_ASSESSMENT_RUN_STATES', 'INVALID_NUMBER_OF_TAGS', 'INVALID_NUMBER_OF_RESOURCE_GROUP_TAGS', 'INVALID_NUMBER_OF_ATTRIBUTES', 'INVALID_NUMBER_OF_USER_ATTRIBUTES', 'INVALID_NUMBER_OF_AGENT_IDS', 'INVALID_NUMBER_OF_AUTO_SCALING_GROUPS', 'INVALID_NUMBER_OF_RULE_NAMES', 'INVALID_NUMBER_OF_SEVERITIES', ], ], 'InvalidInputException' => [ 'type' => 'structure', 'required' => [ 'message', 'errorCode', 'canRetry', ], 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'errorCode' => [ 'shape' => 'InvalidInputErrorCode', ], 'canRetry' => [ 'shape' => 'Bool', ], ], 'exception' => true, ], 'IocConfidence' => [ 'type' => 'integer', 'max' => 10, 'min' => 0, ], 'Ipv4Address' => [ 'type' => 'string', 'max' => 15, 'min' => 7, ], 'Ipv4AddressList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Ipv4Address', ], 'max' => 50, 'min' => 0, ], 'LimitExceededErrorCode' => [ 'type' => 'string', 'enum' => [ 'ASSESSMENT_TARGET_LIMIT_EXCEEDED', 'ASSESSMENT_TEMPLATE_LIMIT_EXCEEDED', 'ASSESSMENT_RUN_LIMIT_EXCEEDED', 'RESOURCE_GROUP_LIMIT_EXCEEDED', 'EVENT_SUBSCRIPTION_LIMIT_EXCEEDED', ], ], 'LimitExceededException' => [ 'type' => 'structure', 'required' => [ 'message', 'errorCode', 'canRetry', ], 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'errorCode' => [ 'shape' => 'LimitExceededErrorCode', ], 'canRetry' => [ 'shape' => 'Bool', ], ], 'exception' => true, ], 'ListAssessmentRunAgentsRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentRunArn', ], 'members' => [ 'assessmentRunArn' => [ 'shape' => 'Arn', ], 'filter' => [ 'shape' => 'AgentFilter', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], 'maxResults' => [ 'shape' => 'ListMaxResults', ], ], ], 'ListAssessmentRunAgentsResponse' => [ 'type' => 'structure', 'required' => [ 'assessmentRunAgents', ], 'members' => [ 'assessmentRunAgents' => [ 'shape' => 'AssessmentRunAgentList', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListAssessmentRunsRequest' => [ 'type' => 'structure', 'members' => [ 'assessmentTemplateArns' => [ 'shape' => 'ListParentArnList', ], 'filter' => [ 'shape' => 'AssessmentRunFilter', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], 'maxResults' => [ 'shape' => 'ListMaxResults', ], ], ], 'ListAssessmentRunsResponse' => [ 'type' => 'structure', 'required' => [ 'assessmentRunArns', ], 'members' => [ 'assessmentRunArns' => [ 'shape' => 'ListReturnedArnList', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListAssessmentTargetsRequest' => [ 'type' => 'structure', 'members' => [ 'filter' => [ 'shape' => 'AssessmentTargetFilter', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], 'maxResults' => [ 'shape' => 'ListMaxResults', ], ], ], 'ListAssessmentTargetsResponse' => [ 'type' => 'structure', 'required' => [ 'assessmentTargetArns', ], 'members' => [ 'assessmentTargetArns' => [ 'shape' => 'ListReturnedArnList', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListAssessmentTemplatesRequest' => [ 'type' => 'structure', 'members' => [ 'assessmentTargetArns' => [ 'shape' => 'ListParentArnList', ], 'filter' => [ 'shape' => 'AssessmentTemplateFilter', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], 'maxResults' => [ 'shape' => 'ListMaxResults', ], ], ], 'ListAssessmentTemplatesResponse' => [ 'type' => 'structure', 'required' => [ 'assessmentTemplateArns', ], 'members' => [ 'assessmentTemplateArns' => [ 'shape' => 'ListReturnedArnList', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListEventSubscriptionsMaxResults' => [ 'type' => 'integer', ], 'ListEventSubscriptionsRequest' => [ 'type' => 'structure', 'members' => [ 'resourceArn' => [ 'shape' => 'Arn', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], 'maxResults' => [ 'shape' => 'ListEventSubscriptionsMaxResults', ], ], ], 'ListEventSubscriptionsResponse' => [ 'type' => 'structure', 'required' => [ 'subscriptions', ], 'members' => [ 'subscriptions' => [ 'shape' => 'SubscriptionList', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListFindingsRequest' => [ 'type' => 'structure', 'members' => [ 'assessmentRunArns' => [ 'shape' => 'ListParentArnList', ], 'filter' => [ 'shape' => 'FindingFilter', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], 'maxResults' => [ 'shape' => 'ListMaxResults', ], ], ], 'ListFindingsResponse' => [ 'type' => 'structure', 'required' => [ 'findingArns', ], 'members' => [ 'findingArns' => [ 'shape' => 'ListReturnedArnList', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListMaxResults' => [ 'type' => 'integer', ], 'ListParentArnList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Arn', ], 'max' => 50, 'min' => 0, ], 'ListReturnedArnList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Arn', ], 'max' => 100, 'min' => 0, ], 'ListRulesPackagesRequest' => [ 'type' => 'structure', 'members' => [ 'nextToken' => [ 'shape' => 'PaginationToken', ], 'maxResults' => [ 'shape' => 'ListMaxResults', ], ], ], 'ListRulesPackagesResponse' => [ 'type' => 'structure', 'required' => [ 'rulesPackageArns', ], 'members' => [ 'rulesPackageArns' => [ 'shape' => 'ListReturnedArnList', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListTagsForResourceRequest' => [ 'type' => 'structure', 'required' => [ 'resourceArn', ], 'members' => [ 'resourceArn' => [ 'shape' => 'Arn', ], ], ], 'ListTagsForResourceResponse' => [ 'type' => 'structure', 'required' => [ 'tags', ], 'members' => [ 'tags' => [ 'shape' => 'TagList', ], ], ], 'Locale' => [ 'type' => 'string', 'enum' => [ 'EN_US', ], ], 'Long' => [ 'type' => 'long', ], 'Message' => [ 'type' => 'string', 'max' => 1000, 'min' => 0, ], 'MessageType' => [ 'type' => 'string', 'max' => 300, 'min' => 1, ], 'NamePattern' => [ 'type' => 'string', 'max' => 140, 'min' => 1, ], 'NoSuchEntityErrorCode' => [ 'type' => 'string', 'enum' => [ 'ASSESSMENT_TARGET_DOES_NOT_EXIST', 'ASSESSMENT_TEMPLATE_DOES_NOT_EXIST', 'ASSESSMENT_RUN_DOES_NOT_EXIST', 'FINDING_DOES_NOT_EXIST', 'RESOURCE_GROUP_DOES_NOT_EXIST', 'RULES_PACKAGE_DOES_NOT_EXIST', 'SNS_TOPIC_DOES_NOT_EXIST', 'IAM_ROLE_DOES_NOT_EXIST', ], ], 'NoSuchEntityException' => [ 'type' => 'structure', 'required' => [ 'message', 'errorCode', 'canRetry', ], 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'errorCode' => [ 'shape' => 'NoSuchEntityErrorCode', ], 'canRetry' => [ 'shape' => 'Bool', ], ], 'exception' => true, ], 'NumericSeverity' => [ 'type' => 'double', 'max' => 10.0, 'min' => 0.0, ], 'NumericVersion' => [ 'type' => 'integer', 'min' => 0, ], 'PaginationToken' => [ 'type' => 'string', 'max' => 300, 'min' => 1, ], 'PreviewAgentsMaxResults' => [ 'type' => 'integer', ], 'PreviewAgentsRequest' => [ 'type' => 'structure', 'required' => [ 'previewAgentsArn', ], 'members' => [ 'previewAgentsArn' => [ 'shape' => 'Arn', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], 'maxResults' => [ 'shape' => 'PreviewAgentsMaxResults', ], ], ], 'PreviewAgentsResponse' => [ 'type' => 'structure', 'required' => [ 'agentPreviews', ], 'members' => [ 'agentPreviews' => [ 'shape' => 'AgentPreviewList', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ProviderName' => [ 'type' => 'string', 'max' => 1000, 'min' => 0, ], 'RegisterCrossAccountAccessRoleRequest' => [ 'type' => 'structure', 'required' => [ 'roleArn', ], 'members' => [ 'roleArn' => [ 'shape' => 'Arn', ], ], ], 'RemoveAttributesFromFindingsRequest' => [ 'type' => 'structure', 'required' => [ 'findingArns', 'attributeKeys', ], 'members' => [ 'findingArns' => [ 'shape' => 'AddRemoveAttributesFindingArnList', ], 'attributeKeys' => [ 'shape' => 'UserAttributeKeyList', ], ], ], 'RemoveAttributesFromFindingsResponse' => [ 'type' => 'structure', 'required' => [ 'failedItems', ], 'members' => [ 'failedItems' => [ 'shape' => 'FailedItems', ], ], ], 'ResourceGroup' => [ 'type' => 'structure', 'required' => [ 'arn', 'tags', 'createdAt', ], 'members' => [ 'arn' => [ 'shape' => 'Arn', ], 'tags' => [ 'shape' => 'ResourceGroupTags', ], 'createdAt' => [ 'shape' => 'Timestamp', ], ], ], 'ResourceGroupList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ResourceGroup', ], 'max' => 10, 'min' => 0, ], 'ResourceGroupTag' => [ 'type' => 'structure', 'required' => [ 'key', ], 'members' => [ 'key' => [ 'shape' => 'TagKey', ], 'value' => [ 'shape' => 'TagValue', ], ], ], 'ResourceGroupTags' => [ 'type' => 'list', 'member' => [ 'shape' => 'ResourceGroupTag', ], 'max' => 10, 'min' => 1, ], 'RuleName' => [ 'type' => 'string', 'max' => 1000, ], 'RuleNameList' => [ 'type' => 'list', 'member' => [ 'shape' => 'RuleName', ], 'max' => 50, 'min' => 0, ], 'RulesPackage' => [ 'type' => 'structure', 'required' => [ 'arn', 'name', 'version', 'provider', ], 'members' => [ 'arn' => [ 'shape' => 'Arn', ], 'name' => [ 'shape' => 'RulesPackageName', ], 'version' => [ 'shape' => 'Version', ], 'provider' => [ 'shape' => 'ProviderName', ], 'description' => [ 'shape' => 'Text', ], ], ], 'RulesPackageList' => [ 'type' => 'list', 'member' => [ 'shape' => 'RulesPackage', ], 'max' => 10, 'min' => 0, ], 'RulesPackageName' => [ 'type' => 'string', 'max' => 1000, 'min' => 0, ], 'ServiceName' => [ 'type' => 'string', 'max' => 128, 'min' => 0, ], 'SetTagsForResourceRequest' => [ 'type' => 'structure', 'required' => [ 'resourceArn', ], 'members' => [ 'resourceArn' => [ 'shape' => 'Arn', ], 'tags' => [ 'shape' => 'TagList', ], ], ], 'Severity' => [ 'type' => 'string', 'enum' => [ 'Low', 'Medium', 'High', 'Informational', 'Undefined', ], ], 'SeverityList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Severity', ], 'max' => 50, 'min' => 0, ], 'StartAssessmentRunRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentTemplateArn', ], 'members' => [ 'assessmentTemplateArn' => [ 'shape' => 'Arn', ], 'assessmentRunName' => [ 'shape' => 'AssessmentRunName', ], ], ], 'StartAssessmentRunResponse' => [ 'type' => 'structure', 'required' => [ 'assessmentRunArn', ], 'members' => [ 'assessmentRunArn' => [ 'shape' => 'Arn', ], ], ], 'StopAssessmentRunRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentRunArn', ], 'members' => [ 'assessmentRunArn' => [ 'shape' => 'Arn', ], ], ], 'SubscribeToEventRequest' => [ 'type' => 'structure', 'required' => [ 'resourceArn', 'event', 'topicArn', ], 'members' => [ 'resourceArn' => [ 'shape' => 'Arn', ], 'event' => [ 'shape' => 'InspectorEvent', ], 'topicArn' => [ 'shape' => 'Arn', ], ], ], 'Subscription' => [ 'type' => 'structure', 'required' => [ 'resourceArn', 'topicArn', 'eventSubscriptions', ], 'members' => [ 'resourceArn' => [ 'shape' => 'Arn', ], 'topicArn' => [ 'shape' => 'Arn', ], 'eventSubscriptions' => [ 'shape' => 'EventSubscriptionList', ], ], ], 'SubscriptionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Subscription', ], 'max' => 50, 'min' => 0, ], 'Tag' => [ 'type' => 'structure', 'required' => [ 'key', ], 'members' => [ 'key' => [ 'shape' => 'TagKey', ], 'value' => [ 'shape' => 'TagValue', ], ], ], 'TagKey' => [ 'type' => 'string', 'max' => 128, 'min' => 1, ], 'TagList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Tag', ], 'max' => 10, 'min' => 0, ], 'TagValue' => [ 'type' => 'string', 'max' => 256, 'min' => 1, ], 'TelemetryMetadata' => [ 'type' => 'structure', 'required' => [ 'messageType', 'count', ], 'members' => [ 'messageType' => [ 'shape' => 'MessageType', ], 'count' => [ 'shape' => 'Long', ], 'dataSize' => [ 'shape' => 'Long', ], ], ], 'TelemetryMetadataList' => [ 'type' => 'list', 'member' => [ 'shape' => 'TelemetryMetadata', ], 'max' => 5000, 'min' => 0, ], 'Text' => [ 'type' => 'string', 'max' => 20000, 'min' => 0, ], 'Timestamp' => [ 'type' => 'timestamp', ], 'TimestampRange' => [ 'type' => 'structure', 'members' => [ 'beginDate' => [ 'shape' => 'Timestamp', ], 'endDate' => [ 'shape' => 'Timestamp', ], ], ], 'UnsubscribeFromEventRequest' => [ 'type' => 'structure', 'required' => [ 'resourceArn', 'event', 'topicArn', ], 'members' => [ 'resourceArn' => [ 'shape' => 'Arn', ], 'event' => [ 'shape' => 'InspectorEvent', ], 'topicArn' => [ 'shape' => 'Arn', ], ], ], 'UpdateAssessmentTargetRequest' => [ 'type' => 'structure', 'required' => [ 'assessmentTargetArn', 'assessmentTargetName', 'resourceGroupArn', ], 'members' => [ 'assessmentTargetArn' => [ 'shape' => 'Arn', ], 'assessmentTargetName' => [ 'shape' => 'AssessmentTargetName', ], 'resourceGroupArn' => [ 'shape' => 'Arn', ], ], ], 'UserAttributeKeyList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AttributeKey', ], 'max' => 10, 'min' => 0, ], 'UserAttributeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Attribute', ], 'max' => 10, 'min' => 0, ], 'Version' => [ 'type' => 'string', 'max' => 1000, 'min' => 0, ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/elasticmapreduce/2009-03-31/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2009-03-31', 'endpointPrefix' => 'elasticmapreduce', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceAbbreviation' => 'Amazon EMR', 'serviceFullName' => 'Amazon Elastic MapReduce', 'signatureVersion' => 'v4', 'targetPrefix' => 'ElasticMapReduce', 'timestampFormat' => 'unixTimestamp', ], 'operations' => [ 'AddInstanceGroups' => [ 'name' => 'AddInstanceGroups', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddInstanceGroupsInput', ], 'output' => [ 'shape' => 'AddInstanceGroupsOutput', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], ], ], 'AddJobFlowSteps' => [ 'name' => 'AddJobFlowSteps', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddJobFlowStepsInput', ], 'output' => [ 'shape' => 'AddJobFlowStepsOutput', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], ], ], 'AddTags' => [ 'name' => 'AddTags', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddTagsInput', ], 'output' => [ 'shape' => 'AddTagsOutput', ], 'errors' => [ [ 'shape' => 'InternalServerException', ], [ 'shape' => 'InvalidRequestException', ], ], ], 'DescribeCluster' => [ 'name' => 'DescribeCluster', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeClusterInput', ], 'output' => [ 'shape' => 'DescribeClusterOutput', ], 'errors' => [ [ 'shape' => 'InternalServerException', ], [ 'shape' => 'InvalidRequestException', ], ], ], 'DescribeJobFlows' => [ 'name' => 'DescribeJobFlows', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeJobFlowsInput', ], 'output' => [ 'shape' => 'DescribeJobFlowsOutput', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], ], 'deprecated' => true, ], 'DescribeStep' => [ 'name' => 'DescribeStep', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeStepInput', ], 'output' => [ 'shape' => 'DescribeStepOutput', ], 'errors' => [ [ 'shape' => 'InternalServerException', ], [ 'shape' => 'InvalidRequestException', ], ], ], 'ListBootstrapActions' => [ 'name' => 'ListBootstrapActions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListBootstrapActionsInput', ], 'output' => [ 'shape' => 'ListBootstrapActionsOutput', ], 'errors' => [ [ 'shape' => 'InternalServerException', ], [ 'shape' => 'InvalidRequestException', ], ], ], 'ListClusters' => [ 'name' => 'ListClusters', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListClustersInput', ], 'output' => [ 'shape' => 'ListClustersOutput', ], 'errors' => [ [ 'shape' => 'InternalServerException', ], [ 'shape' => 'InvalidRequestException', ], ], ], 'ListInstanceGroups' => [ 'name' => 'ListInstanceGroups', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListInstanceGroupsInput', ], 'output' => [ 'shape' => 'ListInstanceGroupsOutput', ], 'errors' => [ [ 'shape' => 'InternalServerException', ], [ 'shape' => 'InvalidRequestException', ], ], ], 'ListInstances' => [ 'name' => 'ListInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListInstancesInput', ], 'output' => [ 'shape' => 'ListInstancesOutput', ], 'errors' => [ [ 'shape' => 'InternalServerException', ], [ 'shape' => 'InvalidRequestException', ], ], ], 'ListSteps' => [ 'name' => 'ListSteps', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListStepsInput', ], 'output' => [ 'shape' => 'ListStepsOutput', ], 'errors' => [ [ 'shape' => 'InternalServerException', ], [ 'shape' => 'InvalidRequestException', ], ], ], 'ModifyInstanceGroups' => [ 'name' => 'ModifyInstanceGroups', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyInstanceGroupsInput', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], ], ], 'RemoveTags' => [ 'name' => 'RemoveTags', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RemoveTagsInput', ], 'output' => [ 'shape' => 'RemoveTagsOutput', ], 'errors' => [ [ 'shape' => 'InternalServerException', ], [ 'shape' => 'InvalidRequestException', ], ], ], 'RunJobFlow' => [ 'name' => 'RunJobFlow', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RunJobFlowInput', ], 'output' => [ 'shape' => 'RunJobFlowOutput', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], ], ], 'SetTerminationProtection' => [ 'name' => 'SetTerminationProtection', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetTerminationProtectionInput', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], ], ], 'SetVisibleToAllUsers' => [ 'name' => 'SetVisibleToAllUsers', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetVisibleToAllUsersInput', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], ], ], 'TerminateJobFlows' => [ 'name' => 'TerminateJobFlows', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'TerminateJobFlowsInput', ], 'errors' => [ [ 'shape' => 'InternalServerError', ], ], ], ], 'shapes' => [ 'ActionOnFailure' => [ 'type' => 'string', 'enum' => [ 'TERMINATE_JOB_FLOW', 'TERMINATE_CLUSTER', 'CANCEL_AND_WAIT', 'CONTINUE', ], ], 'AddInstanceGroupsInput' => [ 'type' => 'structure', 'required' => [ 'InstanceGroups', 'JobFlowId', ], 'members' => [ 'InstanceGroups' => [ 'shape' => 'InstanceGroupConfigList', ], 'JobFlowId' => [ 'shape' => 'XmlStringMaxLen256', ], ], ], 'AddInstanceGroupsOutput' => [ 'type' => 'structure', 'members' => [ 'JobFlowId' => [ 'shape' => 'XmlStringMaxLen256', ], 'InstanceGroupIds' => [ 'shape' => 'InstanceGroupIdsList', ], ], ], 'AddJobFlowStepsInput' => [ 'type' => 'structure', 'required' => [ 'JobFlowId', 'Steps', ], 'members' => [ 'JobFlowId' => [ 'shape' => 'XmlStringMaxLen256', ], 'Steps' => [ 'shape' => 'StepConfigList', ], ], ], 'AddJobFlowStepsOutput' => [ 'type' => 'structure', 'members' => [ 'StepIds' => [ 'shape' => 'StepIdsList', ], ], ], 'AddTagsInput' => [ 'type' => 'structure', 'required' => [ 'ResourceId', 'Tags', ], 'members' => [ 'ResourceId' => [ 'shape' => 'ResourceId', ], 'Tags' => [ 'shape' => 'TagList', ], ], ], 'AddTagsOutput' => [ 'type' => 'structure', 'members' => [], ], 'Application' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'String', ], 'Version' => [ 'shape' => 'String', ], 'Args' => [ 'shape' => 'StringList', ], 'AdditionalInfo' => [ 'shape' => 'StringMap', ], ], ], 'ApplicationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Application', ], ], 'Boolean' => [ 'type' => 'boolean', ], 'BooleanObject' => [ 'type' => 'boolean', ], 'BootstrapActionConfig' => [ 'type' => 'structure', 'required' => [ 'Name', 'ScriptBootstrapAction', ], 'members' => [ 'Name' => [ 'shape' => 'XmlStringMaxLen256', ], 'ScriptBootstrapAction' => [ 'shape' => 'ScriptBootstrapActionConfig', ], ], ], 'BootstrapActionConfigList' => [ 'type' => 'list', 'member' => [ 'shape' => 'BootstrapActionConfig', ], ], 'BootstrapActionDetail' => [ 'type' => 'structure', 'members' => [ 'BootstrapActionConfig' => [ 'shape' => 'BootstrapActionConfig', ], ], ], 'BootstrapActionDetailList' => [ 'type' => 'list', 'member' => [ 'shape' => 'BootstrapActionDetail', ], ], 'Cluster' => [ 'type' => 'structure', 'members' => [ 'Id' => [ 'shape' => 'ClusterId', ], 'Name' => [ 'shape' => 'String', ], 'Status' => [ 'shape' => 'ClusterStatus', ], 'Ec2InstanceAttributes' => [ 'shape' => 'Ec2InstanceAttributes', ], 'LogUri' => [ 'shape' => 'String', ], 'RequestedAmiVersion' => [ 'shape' => 'String', ], 'RunningAmiVersion' => [ 'shape' => 'String', ], 'ReleaseLabel' => [ 'shape' => 'String', ], 'AutoTerminate' => [ 'shape' => 'Boolean', ], 'TerminationProtected' => [ 'shape' => 'Boolean', ], 'VisibleToAllUsers' => [ 'shape' => 'Boolean', ], 'Applications' => [ 'shape' => 'ApplicationList', ], 'Tags' => [ 'shape' => 'TagList', ], 'ServiceRole' => [ 'shape' => 'String', ], 'NormalizedInstanceHours' => [ 'shape' => 'Integer', ], 'MasterPublicDnsName' => [ 'shape' => 'String', ], 'Configurations' => [ 'shape' => 'ConfigurationList', ], ], ], 'ClusterId' => [ 'type' => 'string', ], 'ClusterState' => [ 'type' => 'string', 'enum' => [ 'STARTING', 'BOOTSTRAPPING', 'RUNNING', 'WAITING', 'TERMINATING', 'TERMINATED', 'TERMINATED_WITH_ERRORS', ], ], 'ClusterStateChangeReason' => [ 'type' => 'structure', 'members' => [ 'Code' => [ 'shape' => 'ClusterStateChangeReasonCode', ], 'Message' => [ 'shape' => 'String', ], ], ], 'ClusterStateChangeReasonCode' => [ 'type' => 'string', 'enum' => [ 'INTERNAL_ERROR', 'VALIDATION_ERROR', 'INSTANCE_FAILURE', 'BOOTSTRAP_FAILURE', 'USER_REQUEST', 'STEP_FAILURE', 'ALL_STEPS_COMPLETED', ], ], 'ClusterStateList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ClusterState', ], ], 'ClusterStatus' => [ 'type' => 'structure', 'members' => [ 'State' => [ 'shape' => 'ClusterState', ], 'StateChangeReason' => [ 'shape' => 'ClusterStateChangeReason', ], 'Timeline' => [ 'shape' => 'ClusterTimeline', ], ], ], 'ClusterSummary' => [ 'type' => 'structure', 'members' => [ 'Id' => [ 'shape' => 'ClusterId', ], 'Name' => [ 'shape' => 'String', ], 'Status' => [ 'shape' => 'ClusterStatus', ], 'NormalizedInstanceHours' => [ 'shape' => 'Integer', ], ], ], 'ClusterSummaryList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ClusterSummary', ], ], 'ClusterTimeline' => [ 'type' => 'structure', 'members' => [ 'CreationDateTime' => [ 'shape' => 'Date', ], 'ReadyDateTime' => [ 'shape' => 'Date', ], 'EndDateTime' => [ 'shape' => 'Date', ], ], ], 'Command' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'String', ], 'ScriptPath' => [ 'shape' => 'String', ], 'Args' => [ 'shape' => 'StringList', ], ], ], 'CommandList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Command', ], ], 'Configuration' => [ 'type' => 'structure', 'members' => [ 'Classification' => [ 'shape' => 'String', ], 'Configurations' => [ 'shape' => 'ConfigurationList', ], 'Properties' => [ 'shape' => 'StringMap', ], ], ], 'ConfigurationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Configuration', ], ], 'Date' => [ 'type' => 'timestamp', ], 'DescribeClusterInput' => [ 'type' => 'structure', 'required' => [ 'ClusterId', ], 'members' => [ 'ClusterId' => [ 'shape' => 'ClusterId', ], ], ], 'DescribeClusterOutput' => [ 'type' => 'structure', 'members' => [ 'Cluster' => [ 'shape' => 'Cluster', ], ], ], 'DescribeJobFlowsInput' => [ 'type' => 'structure', 'members' => [ 'CreatedAfter' => [ 'shape' => 'Date', ], 'CreatedBefore' => [ 'shape' => 'Date', ], 'JobFlowIds' => [ 'shape' => 'XmlStringList', ], 'JobFlowStates' => [ 'shape' => 'JobFlowExecutionStateList', ], ], ], 'DescribeJobFlowsOutput' => [ 'type' => 'structure', 'members' => [ 'JobFlows' => [ 'shape' => 'JobFlowDetailList', ], ], ], 'DescribeStepInput' => [ 'type' => 'structure', 'required' => [ 'ClusterId', 'StepId', ], 'members' => [ 'ClusterId' => [ 'shape' => 'ClusterId', ], 'StepId' => [ 'shape' => 'StepId', ], ], ], 'DescribeStepOutput' => [ 'type' => 'structure', 'members' => [ 'Step' => [ 'shape' => 'Step', ], ], ], 'EC2InstanceIdsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceId', ], ], 'EC2InstanceIdsToTerminateList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceId', ], ], 'EbsBlockDevice' => [ 'type' => 'structure', 'members' => [ 'VolumeSpecification' => [ 'shape' => 'VolumeSpecification', ], 'Device' => [ 'shape' => 'String', ], ], ], 'EbsBlockDeviceConfig' => [ 'type' => 'structure', 'required' => [ 'VolumeSpecification', ], 'members' => [ 'VolumeSpecification' => [ 'shape' => 'VolumeSpecification', ], 'VolumesPerInstance' => [ 'shape' => 'Integer', ], ], ], 'EbsBlockDeviceConfigList' => [ 'type' => 'list', 'member' => [ 'shape' => 'EbsBlockDeviceConfig', ], ], 'EbsBlockDeviceList' => [ 'type' => 'list', 'member' => [ 'shape' => 'EbsBlockDevice', ], ], 'EbsConfiguration' => [ 'type' => 'structure', 'members' => [ 'EbsBlockDeviceConfigs' => [ 'shape' => 'EbsBlockDeviceConfigList', ], 'EbsOptimized' => [ 'shape' => 'BooleanObject', ], ], ], 'EbsVolume' => [ 'type' => 'structure', 'members' => [ 'Device' => [ 'shape' => 'String', ], 'VolumeId' => [ 'shape' => 'String', ], ], ], 'EbsVolumeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'EbsVolume', ], ], 'Ec2InstanceAttributes' => [ 'type' => 'structure', 'members' => [ 'Ec2KeyName' => [ 'shape' => 'String', ], 'Ec2SubnetId' => [ 'shape' => 'String', ], 'Ec2AvailabilityZone' => [ 'shape' => 'String', ], 'IamInstanceProfile' => [ 'shape' => 'String', ], 'EmrManagedMasterSecurityGroup' => [ 'shape' => 'String', ], 'EmrManagedSlaveSecurityGroup' => [ 'shape' => 'String', ], 'ServiceAccessSecurityGroup' => [ 'shape' => 'String', ], 'AdditionalMasterSecurityGroups' => [ 'shape' => 'StringList', ], 'AdditionalSlaveSecurityGroups' => [ 'shape' => 'StringList', ], ], ], 'ErrorCode' => [ 'type' => 'string', 'max' => 256, 'min' => 1, ], 'ErrorMessage' => [ 'type' => 'string', ], 'HadoopJarStepConfig' => [ 'type' => 'structure', 'required' => [ 'Jar', ], 'members' => [ 'Properties' => [ 'shape' => 'KeyValueList', ], 'Jar' => [ 'shape' => 'XmlString', ], 'MainClass' => [ 'shape' => 'XmlString', ], 'Args' => [ 'shape' => 'XmlStringList', ], ], ], 'HadoopStepConfig' => [ 'type' => 'structure', 'members' => [ 'Jar' => [ 'shape' => 'String', ], 'Properties' => [ 'shape' => 'StringMap', ], 'MainClass' => [ 'shape' => 'String', ], 'Args' => [ 'shape' => 'StringList', ], ], ], 'Instance' => [ 'type' => 'structure', 'members' => [ 'Id' => [ 'shape' => 'InstanceId', ], 'Ec2InstanceId' => [ 'shape' => 'InstanceId', ], 'PublicDnsName' => [ 'shape' => 'String', ], 'PublicIpAddress' => [ 'shape' => 'String', ], 'PrivateDnsName' => [ 'shape' => 'String', ], 'PrivateIpAddress' => [ 'shape' => 'String', ], 'Status' => [ 'shape' => 'InstanceStatus', ], 'InstanceGroupId' => [ 'shape' => 'String', ], 'EbsVolumes' => [ 'shape' => 'EbsVolumeList', ], ], ], 'InstanceGroup' => [ 'type' => 'structure', 'members' => [ 'Id' => [ 'shape' => 'InstanceGroupId', ], 'Name' => [ 'shape' => 'String', ], 'Market' => [ 'shape' => 'MarketType', ], 'InstanceGroupType' => [ 'shape' => 'InstanceGroupType', ], 'BidPrice' => [ 'shape' => 'String', ], 'InstanceType' => [ 'shape' => 'InstanceType', ], 'RequestedInstanceCount' => [ 'shape' => 'Integer', ], 'RunningInstanceCount' => [ 'shape' => 'Integer', ], 'Status' => [ 'shape' => 'InstanceGroupStatus', ], 'Configurations' => [ 'shape' => 'ConfigurationList', ], 'EbsBlockDevices' => [ 'shape' => 'EbsBlockDeviceList', ], 'EbsOptimized' => [ 'shape' => 'BooleanObject', ], 'ShrinkPolicy' => [ 'shape' => 'ShrinkPolicy', ], ], ], 'InstanceGroupConfig' => [ 'type' => 'structure', 'required' => [ 'InstanceRole', 'InstanceType', 'InstanceCount', ], 'members' => [ 'Name' => [ 'shape' => 'XmlStringMaxLen256', ], 'Market' => [ 'shape' => 'MarketType', ], 'InstanceRole' => [ 'shape' => 'InstanceRoleType', ], 'BidPrice' => [ 'shape' => 'XmlStringMaxLen256', ], 'InstanceType' => [ 'shape' => 'InstanceType', ], 'InstanceCount' => [ 'shape' => 'Integer', ], 'Configurations' => [ 'shape' => 'ConfigurationList', ], 'EbsConfiguration' => [ 'shape' => 'EbsConfiguration', ], ], ], 'InstanceGroupConfigList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceGroupConfig', ], ], 'InstanceGroupDetail' => [ 'type' => 'structure', 'required' => [ 'Market', 'InstanceRole', 'InstanceType', 'InstanceRequestCount', 'InstanceRunningCount', 'State', 'CreationDateTime', ], 'members' => [ 'InstanceGroupId' => [ 'shape' => 'XmlStringMaxLen256', ], 'Name' => [ 'shape' => 'XmlStringMaxLen256', ], 'Market' => [ 'shape' => 'MarketType', ], 'InstanceRole' => [ 'shape' => 'InstanceRoleType', ], 'BidPrice' => [ 'shape' => 'XmlStringMaxLen256', ], 'InstanceType' => [ 'shape' => 'InstanceType', ], 'InstanceRequestCount' => [ 'shape' => 'Integer', ], 'InstanceRunningCount' => [ 'shape' => 'Integer', ], 'State' => [ 'shape' => 'InstanceGroupState', ], 'LastStateChangeReason' => [ 'shape' => 'XmlString', ], 'CreationDateTime' => [ 'shape' => 'Date', ], 'StartDateTime' => [ 'shape' => 'Date', ], 'ReadyDateTime' => [ 'shape' => 'Date', ], 'EndDateTime' => [ 'shape' => 'Date', ], ], ], 'InstanceGroupDetailList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceGroupDetail', ], ], 'InstanceGroupId' => [ 'type' => 'string', ], 'InstanceGroupIdsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'XmlStringMaxLen256', ], ], 'InstanceGroupList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceGroup', ], ], 'InstanceGroupModifyConfig' => [ 'type' => 'structure', 'required' => [ 'InstanceGroupId', ], 'members' => [ 'InstanceGroupId' => [ 'shape' => 'XmlStringMaxLen256', ], 'InstanceCount' => [ 'shape' => 'Integer', ], 'EC2InstanceIdsToTerminate' => [ 'shape' => 'EC2InstanceIdsToTerminateList', ], 'ShrinkPolicy' => [ 'shape' => 'ShrinkPolicy', ], ], ], 'InstanceGroupModifyConfigList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceGroupModifyConfig', ], ], 'InstanceGroupState' => [ 'type' => 'string', 'enum' => [ 'PROVISIONING', 'BOOTSTRAPPING', 'RUNNING', 'RESIZING', 'SUSPENDED', 'TERMINATING', 'TERMINATED', 'ARRESTED', 'SHUTTING_DOWN', 'ENDED', ], ], 'InstanceGroupStateChangeReason' => [ 'type' => 'structure', 'members' => [ 'Code' => [ 'shape' => 'InstanceGroupStateChangeReasonCode', ], 'Message' => [ 'shape' => 'String', ], ], ], 'InstanceGroupStateChangeReasonCode' => [ 'type' => 'string', 'enum' => [ 'INTERNAL_ERROR', 'VALIDATION_ERROR', 'INSTANCE_FAILURE', 'CLUSTER_TERMINATED', ], ], 'InstanceGroupStatus' => [ 'type' => 'structure', 'members' => [ 'State' => [ 'shape' => 'InstanceGroupState', ], 'StateChangeReason' => [ 'shape' => 'InstanceGroupStateChangeReason', ], 'Timeline' => [ 'shape' => 'InstanceGroupTimeline', ], ], ], 'InstanceGroupTimeline' => [ 'type' => 'structure', 'members' => [ 'CreationDateTime' => [ 'shape' => 'Date', ], 'ReadyDateTime' => [ 'shape' => 'Date', ], 'EndDateTime' => [ 'shape' => 'Date', ], ], ], 'InstanceGroupType' => [ 'type' => 'string', 'enum' => [ 'MASTER', 'CORE', 'TASK', ], ], 'InstanceGroupTypeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceGroupType', ], ], 'InstanceId' => [ 'type' => 'string', ], 'InstanceList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Instance', ], ], 'InstanceResizePolicy' => [ 'type' => 'structure', 'members' => [ 'InstancesToTerminate' => [ 'shape' => 'EC2InstanceIdsList', ], 'InstancesToProtect' => [ 'shape' => 'EC2InstanceIdsList', ], 'InstanceTerminationTimeout' => [ 'shape' => 'Integer', ], ], ], 'InstanceRoleType' => [ 'type' => 'string', 'enum' => [ 'MASTER', 'CORE', 'TASK', ], ], 'InstanceState' => [ 'type' => 'string', 'enum' => [ 'AWAITING_FULFILLMENT', 'PROVISIONING', 'BOOTSTRAPPING', 'RUNNING', 'TERMINATED', ], ], 'InstanceStateChangeReason' => [ 'type' => 'structure', 'members' => [ 'Code' => [ 'shape' => 'InstanceStateChangeReasonCode', ], 'Message' => [ 'shape' => 'String', ], ], ], 'InstanceStateChangeReasonCode' => [ 'type' => 'string', 'enum' => [ 'INTERNAL_ERROR', 'VALIDATION_ERROR', 'INSTANCE_FAILURE', 'BOOTSTRAP_FAILURE', 'CLUSTER_TERMINATED', ], ], 'InstanceStateList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceState', ], ], 'InstanceStatus' => [ 'type' => 'structure', 'members' => [ 'State' => [ 'shape' => 'InstanceState', ], 'StateChangeReason' => [ 'shape' => 'InstanceStateChangeReason', ], 'Timeline' => [ 'shape' => 'InstanceTimeline', ], ], ], 'InstanceTimeline' => [ 'type' => 'structure', 'members' => [ 'CreationDateTime' => [ 'shape' => 'Date', ], 'ReadyDateTime' => [ 'shape' => 'Date', ], 'EndDateTime' => [ 'shape' => 'Date', ], ], ], 'InstanceType' => [ 'type' => 'string', 'max' => 256, 'min' => 1, 'pattern' => '[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*', ], 'Integer' => [ 'type' => 'integer', ], 'InternalServerError' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InternalServerException' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, 'fault' => true, ], 'InvalidRequestException' => [ 'type' => 'structure', 'members' => [ 'ErrorCode' => [ 'shape' => 'ErrorCode', ], 'Message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'JobFlowDetail' => [ 'type' => 'structure', 'required' => [ 'JobFlowId', 'Name', 'ExecutionStatusDetail', 'Instances', ], 'members' => [ 'JobFlowId' => [ 'shape' => 'XmlStringMaxLen256', ], 'Name' => [ 'shape' => 'XmlStringMaxLen256', ], 'LogUri' => [ 'shape' => 'XmlString', ], 'AmiVersion' => [ 'shape' => 'XmlStringMaxLen256', ], 'ExecutionStatusDetail' => [ 'shape' => 'JobFlowExecutionStatusDetail', ], 'Instances' => [ 'shape' => 'JobFlowInstancesDetail', ], 'Steps' => [ 'shape' => 'StepDetailList', ], 'BootstrapActions' => [ 'shape' => 'BootstrapActionDetailList', ], 'SupportedProducts' => [ 'shape' => 'SupportedProductsList', ], 'VisibleToAllUsers' => [ 'shape' => 'Boolean', ], 'JobFlowRole' => [ 'shape' => 'XmlString', ], 'ServiceRole' => [ 'shape' => 'XmlString', ], ], ], 'JobFlowDetailList' => [ 'type' => 'list', 'member' => [ 'shape' => 'JobFlowDetail', ], ], 'JobFlowExecutionState' => [ 'type' => 'string', 'enum' => [ 'STARTING', 'BOOTSTRAPPING', 'RUNNING', 'WAITING', 'SHUTTING_DOWN', 'TERMINATED', 'COMPLETED', 'FAILED', ], ], 'JobFlowExecutionStateList' => [ 'type' => 'list', 'member' => [ 'shape' => 'JobFlowExecutionState', ], ], 'JobFlowExecutionStatusDetail' => [ 'type' => 'structure', 'required' => [ 'State', 'CreationDateTime', ], 'members' => [ 'State' => [ 'shape' => 'JobFlowExecutionState', ], 'CreationDateTime' => [ 'shape' => 'Date', ], 'StartDateTime' => [ 'shape' => 'Date', ], 'ReadyDateTime' => [ 'shape' => 'Date', ], 'EndDateTime' => [ 'shape' => 'Date', ], 'LastStateChangeReason' => [ 'shape' => 'XmlString', ], ], ], 'JobFlowInstancesConfig' => [ 'type' => 'structure', 'members' => [ 'MasterInstanceType' => [ 'shape' => 'InstanceType', ], 'SlaveInstanceType' => [ 'shape' => 'InstanceType', ], 'InstanceCount' => [ 'shape' => 'Integer', ], 'InstanceGroups' => [ 'shape' => 'InstanceGroupConfigList', ], 'Ec2KeyName' => [ 'shape' => 'XmlStringMaxLen256', ], 'Placement' => [ 'shape' => 'PlacementType', ], 'KeepJobFlowAliveWhenNoSteps' => [ 'shape' => 'Boolean', ], 'TerminationProtected' => [ 'shape' => 'Boolean', ], 'HadoopVersion' => [ 'shape' => 'XmlStringMaxLen256', ], 'Ec2SubnetId' => [ 'shape' => 'XmlStringMaxLen256', ], 'EmrManagedMasterSecurityGroup' => [ 'shape' => 'XmlStringMaxLen256', ], 'EmrManagedSlaveSecurityGroup' => [ 'shape' => 'XmlStringMaxLen256', ], 'ServiceAccessSecurityGroup' => [ 'shape' => 'XmlStringMaxLen256', ], 'AdditionalMasterSecurityGroups' => [ 'shape' => 'SecurityGroupsList', ], 'AdditionalSlaveSecurityGroups' => [ 'shape' => 'SecurityGroupsList', ], ], ], 'JobFlowInstancesDetail' => [ 'type' => 'structure', 'required' => [ 'MasterInstanceType', 'SlaveInstanceType', 'InstanceCount', ], 'members' => [ 'MasterInstanceType' => [ 'shape' => 'InstanceType', ], 'MasterPublicDnsName' => [ 'shape' => 'XmlString', ], 'MasterInstanceId' => [ 'shape' => 'XmlString', ], 'SlaveInstanceType' => [ 'shape' => 'InstanceType', ], 'InstanceCount' => [ 'shape' => 'Integer', ], 'InstanceGroups' => [ 'shape' => 'InstanceGroupDetailList', ], 'NormalizedInstanceHours' => [ 'shape' => 'Integer', ], 'Ec2KeyName' => [ 'shape' => 'XmlStringMaxLen256', ], 'Ec2SubnetId' => [ 'shape' => 'XmlStringMaxLen256', ], 'Placement' => [ 'shape' => 'PlacementType', ], 'KeepJobFlowAliveWhenNoSteps' => [ 'shape' => 'Boolean', ], 'TerminationProtected' => [ 'shape' => 'Boolean', ], 'HadoopVersion' => [ 'shape' => 'XmlStringMaxLen256', ], ], ], 'KeyValue' => [ 'type' => 'structure', 'members' => [ 'Key' => [ 'shape' => 'XmlString', ], 'Value' => [ 'shape' => 'XmlString', ], ], ], 'KeyValueList' => [ 'type' => 'list', 'member' => [ 'shape' => 'KeyValue', ], ], 'ListBootstrapActionsInput' => [ 'type' => 'structure', 'required' => [ 'ClusterId', ], 'members' => [ 'ClusterId' => [ 'shape' => 'ClusterId', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'ListBootstrapActionsOutput' => [ 'type' => 'structure', 'members' => [ 'BootstrapActions' => [ 'shape' => 'CommandList', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'ListClustersInput' => [ 'type' => 'structure', 'members' => [ 'CreatedAfter' => [ 'shape' => 'Date', ], 'CreatedBefore' => [ 'shape' => 'Date', ], 'ClusterStates' => [ 'shape' => 'ClusterStateList', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'ListClustersOutput' => [ 'type' => 'structure', 'members' => [ 'Clusters' => [ 'shape' => 'ClusterSummaryList', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'ListInstanceGroupsInput' => [ 'type' => 'structure', 'required' => [ 'ClusterId', ], 'members' => [ 'ClusterId' => [ 'shape' => 'ClusterId', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'ListInstanceGroupsOutput' => [ 'type' => 'structure', 'members' => [ 'InstanceGroups' => [ 'shape' => 'InstanceGroupList', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'ListInstancesInput' => [ 'type' => 'structure', 'required' => [ 'ClusterId', ], 'members' => [ 'ClusterId' => [ 'shape' => 'ClusterId', ], 'InstanceGroupId' => [ 'shape' => 'InstanceGroupId', ], 'InstanceGroupTypes' => [ 'shape' => 'InstanceGroupTypeList', ], 'InstanceStates' => [ 'shape' => 'InstanceStateList', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'ListInstancesOutput' => [ 'type' => 'structure', 'members' => [ 'Instances' => [ 'shape' => 'InstanceList', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'ListStepsInput' => [ 'type' => 'structure', 'required' => [ 'ClusterId', ], 'members' => [ 'ClusterId' => [ 'shape' => 'ClusterId', ], 'StepStates' => [ 'shape' => 'StepStateList', ], 'StepIds' => [ 'shape' => 'XmlStringList', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'ListStepsOutput' => [ 'type' => 'structure', 'members' => [ 'Steps' => [ 'shape' => 'StepSummaryList', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'Marker' => [ 'type' => 'string', ], 'MarketType' => [ 'type' => 'string', 'enum' => [ 'ON_DEMAND', 'SPOT', ], ], 'ModifyInstanceGroupsInput' => [ 'type' => 'structure', 'members' => [ 'InstanceGroups' => [ 'shape' => 'InstanceGroupModifyConfigList', ], ], ], 'NewSupportedProductsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'SupportedProductConfig', ], ], 'PlacementType' => [ 'type' => 'structure', 'required' => [ 'AvailabilityZone', ], 'members' => [ 'AvailabilityZone' => [ 'shape' => 'XmlString', ], ], ], 'RemoveTagsInput' => [ 'type' => 'structure', 'required' => [ 'ResourceId', 'TagKeys', ], 'members' => [ 'ResourceId' => [ 'shape' => 'ResourceId', ], 'TagKeys' => [ 'shape' => 'StringList', ], ], ], 'RemoveTagsOutput' => [ 'type' => 'structure', 'members' => [], ], 'ResourceId' => [ 'type' => 'string', ], 'RunJobFlowInput' => [ 'type' => 'structure', 'required' => [ 'Name', 'Instances', ], 'members' => [ 'Name' => [ 'shape' => 'XmlStringMaxLen256', ], 'LogUri' => [ 'shape' => 'XmlString', ], 'AdditionalInfo' => [ 'shape' => 'XmlString', ], 'AmiVersion' => [ 'shape' => 'XmlStringMaxLen256', ], 'ReleaseLabel' => [ 'shape' => 'XmlStringMaxLen256', ], 'Instances' => [ 'shape' => 'JobFlowInstancesConfig', ], 'Steps' => [ 'shape' => 'StepConfigList', ], 'BootstrapActions' => [ 'shape' => 'BootstrapActionConfigList', ], 'SupportedProducts' => [ 'shape' => 'SupportedProductsList', ], 'NewSupportedProducts' => [ 'shape' => 'NewSupportedProductsList', ], 'Applications' => [ 'shape' => 'ApplicationList', ], 'Configurations' => [ 'shape' => 'ConfigurationList', ], 'VisibleToAllUsers' => [ 'shape' => 'Boolean', ], 'JobFlowRole' => [ 'shape' => 'XmlString', ], 'ServiceRole' => [ 'shape' => 'XmlString', ], 'Tags' => [ 'shape' => 'TagList', ], ], ], 'RunJobFlowOutput' => [ 'type' => 'structure', 'members' => [ 'JobFlowId' => [ 'shape' => 'XmlStringMaxLen256', ], ], ], 'ScriptBootstrapActionConfig' => [ 'type' => 'structure', 'required' => [ 'Path', ], 'members' => [ 'Path' => [ 'shape' => 'XmlString', ], 'Args' => [ 'shape' => 'XmlStringList', ], ], ], 'SecurityGroupsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'XmlStringMaxLen256', ], ], 'SetTerminationProtectionInput' => [ 'type' => 'structure', 'required' => [ 'JobFlowIds', 'TerminationProtected', ], 'members' => [ 'JobFlowIds' => [ 'shape' => 'XmlStringList', ], 'TerminationProtected' => [ 'shape' => 'Boolean', ], ], ], 'SetVisibleToAllUsersInput' => [ 'type' => 'structure', 'required' => [ 'JobFlowIds', 'VisibleToAllUsers', ], 'members' => [ 'JobFlowIds' => [ 'shape' => 'XmlStringList', ], 'VisibleToAllUsers' => [ 'shape' => 'Boolean', ], ], ], 'ShrinkPolicy' => [ 'type' => 'structure', 'members' => [ 'DecommissionTimeout' => [ 'shape' => 'Integer', ], 'InstanceResizePolicy' => [ 'shape' => 'InstanceResizePolicy', ], ], ], 'Step' => [ 'type' => 'structure', 'members' => [ 'Id' => [ 'shape' => 'StepId', ], 'Name' => [ 'shape' => 'String', ], 'Config' => [ 'shape' => 'HadoopStepConfig', ], 'ActionOnFailure' => [ 'shape' => 'ActionOnFailure', ], 'Status' => [ 'shape' => 'StepStatus', ], ], ], 'StepConfig' => [ 'type' => 'structure', 'required' => [ 'Name', 'HadoopJarStep', ], 'members' => [ 'Name' => [ 'shape' => 'XmlStringMaxLen256', ], 'ActionOnFailure' => [ 'shape' => 'ActionOnFailure', ], 'HadoopJarStep' => [ 'shape' => 'HadoopJarStepConfig', ], ], ], 'StepConfigList' => [ 'type' => 'list', 'member' => [ 'shape' => 'StepConfig', ], ], 'StepDetail' => [ 'type' => 'structure', 'required' => [ 'StepConfig', 'ExecutionStatusDetail', ], 'members' => [ 'StepConfig' => [ 'shape' => 'StepConfig', ], 'ExecutionStatusDetail' => [ 'shape' => 'StepExecutionStatusDetail', ], ], ], 'StepDetailList' => [ 'type' => 'list', 'member' => [ 'shape' => 'StepDetail', ], ], 'StepExecutionState' => [ 'type' => 'string', 'enum' => [ 'PENDING', 'RUNNING', 'CONTINUE', 'COMPLETED', 'CANCELLED', 'FAILED', 'INTERRUPTED', ], ], 'StepExecutionStatusDetail' => [ 'type' => 'structure', 'required' => [ 'State', 'CreationDateTime', ], 'members' => [ 'State' => [ 'shape' => 'StepExecutionState', ], 'CreationDateTime' => [ 'shape' => 'Date', ], 'StartDateTime' => [ 'shape' => 'Date', ], 'EndDateTime' => [ 'shape' => 'Date', ], 'LastStateChangeReason' => [ 'shape' => 'XmlString', ], ], ], 'StepId' => [ 'type' => 'string', ], 'StepIdsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'XmlStringMaxLen256', ], ], 'StepState' => [ 'type' => 'string', 'enum' => [ 'PENDING', 'RUNNING', 'COMPLETED', 'CANCELLED', 'FAILED', 'INTERRUPTED', ], ], 'StepStateChangeReason' => [ 'type' => 'structure', 'members' => [ 'Code' => [ 'shape' => 'StepStateChangeReasonCode', ], 'Message' => [ 'shape' => 'String', ], ], ], 'StepStateChangeReasonCode' => [ 'type' => 'string', 'enum' => [ 'NONE', ], ], 'StepStateList' => [ 'type' => 'list', 'member' => [ 'shape' => 'StepState', ], ], 'StepStatus' => [ 'type' => 'structure', 'members' => [ 'State' => [ 'shape' => 'StepState', ], 'StateChangeReason' => [ 'shape' => 'StepStateChangeReason', ], 'Timeline' => [ 'shape' => 'StepTimeline', ], ], ], 'StepSummary' => [ 'type' => 'structure', 'members' => [ 'Id' => [ 'shape' => 'StepId', ], 'Name' => [ 'shape' => 'String', ], 'Config' => [ 'shape' => 'HadoopStepConfig', ], 'ActionOnFailure' => [ 'shape' => 'ActionOnFailure', ], 'Status' => [ 'shape' => 'StepStatus', ], ], ], 'StepSummaryList' => [ 'type' => 'list', 'member' => [ 'shape' => 'StepSummary', ], ], 'StepTimeline' => [ 'type' => 'structure', 'members' => [ 'CreationDateTime' => [ 'shape' => 'Date', ], 'StartDateTime' => [ 'shape' => 'Date', ], 'EndDateTime' => [ 'shape' => 'Date', ], ], ], 'String' => [ 'type' => 'string', ], 'StringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], 'StringMap' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'String', ], ], 'SupportedProductConfig' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'XmlStringMaxLen256', ], 'Args' => [ 'shape' => 'XmlStringList', ], ], ], 'SupportedProductsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'XmlStringMaxLen256', ], ], 'Tag' => [ 'type' => 'structure', 'members' => [ 'Key' => [ 'shape' => 'String', ], 'Value' => [ 'shape' => 'String', ], ], ], 'TagList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Tag', ], ], 'TerminateJobFlowsInput' => [ 'type' => 'structure', 'required' => [ 'JobFlowIds', ], 'members' => [ 'JobFlowIds' => [ 'shape' => 'XmlStringList', ], ], ], 'VolumeSpecification' => [ 'type' => 'structure', 'required' => [ 'VolumeType', 'SizeInGB', ], 'members' => [ 'VolumeType' => [ 'shape' => 'String', ], 'Iops' => [ 'shape' => 'Integer', ], 'SizeInGB' => [ 'shape' => 'Integer', ], ], ], 'XmlString' => [ 'type' => 'string', 'max' => 10280, 'min' => 0, 'pattern' => '[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*', ], 'XmlStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'XmlString', ], ], 'XmlStringMaxLen256' => [ 'type' => 'string', 'max' => 256, 'min' => 0, 'pattern' => '[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/glacier/2012-06-01/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2012-06-01', 'checksumFormat' => 'sha256', 'endpointPrefix' => 'glacier', 'serviceFullName' => 'Amazon Glacier', 'signatureVersion' => 'v4', 'protocol' => 'rest-json', ], 'operations' => [ 'AbortMultipartUpload' => [ 'name' => 'AbortMultipartUpload', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}', 'responseCode' => 204, ], 'input' => [ 'shape' => 'AbortMultipartUploadInput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'AbortVaultLock' => [ 'name' => 'AbortVaultLock', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/{accountId}/vaults/{vaultName}/lock-policy', 'responseCode' => 204, ], 'input' => [ 'shape' => 'AbortVaultLockInput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'AddTagsToVault' => [ 'name' => 'AddTagsToVault', 'http' => [ 'method' => 'POST', 'requestUri' => '/{accountId}/vaults/{vaultName}/tags?operation=add', 'responseCode' => 204, ], 'input' => [ 'shape' => 'AddTagsToVaultInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'LimitExceededException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'CompleteMultipartUpload' => [ 'name' => 'CompleteMultipartUpload', 'http' => [ 'method' => 'POST', 'requestUri' => '/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}', 'responseCode' => 201, ], 'input' => [ 'shape' => 'CompleteMultipartUploadInput', ], 'output' => [ 'shape' => 'ArchiveCreationOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'CompleteVaultLock' => [ 'name' => 'CompleteVaultLock', 'http' => [ 'method' => 'POST', 'requestUri' => '/{accountId}/vaults/{vaultName}/lock-policy/{lockId}', 'responseCode' => 204, ], 'input' => [ 'shape' => 'CompleteVaultLockInput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'CreateVault' => [ 'name' => 'CreateVault', 'http' => [ 'method' => 'PUT', 'requestUri' => '/{accountId}/vaults/{vaultName}', 'responseCode' => 201, ], 'input' => [ 'shape' => 'CreateVaultInput', ], 'output' => [ 'shape' => 'CreateVaultOutput', ], 'errors' => [ [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], [ 'shape' => 'LimitExceededException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], ], ], 'DeleteArchive' => [ 'name' => 'DeleteArchive', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/{accountId}/vaults/{vaultName}/archives/{archiveId}', 'responseCode' => 204, ], 'input' => [ 'shape' => 'DeleteArchiveInput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'DeleteVault' => [ 'name' => 'DeleteVault', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/{accountId}/vaults/{vaultName}', 'responseCode' => 204, ], 'input' => [ 'shape' => 'DeleteVaultInput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'DeleteVaultAccessPolicy' => [ 'name' => 'DeleteVaultAccessPolicy', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/{accountId}/vaults/{vaultName}/access-policy', 'responseCode' => 204, ], 'input' => [ 'shape' => 'DeleteVaultAccessPolicyInput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'DeleteVaultNotifications' => [ 'name' => 'DeleteVaultNotifications', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/{accountId}/vaults/{vaultName}/notification-configuration', 'responseCode' => 204, ], 'input' => [ 'shape' => 'DeleteVaultNotificationsInput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'DescribeJob' => [ 'name' => 'DescribeJob', 'http' => [ 'method' => 'GET', 'requestUri' => '/{accountId}/vaults/{vaultName}/jobs/{jobId}', ], 'input' => [ 'shape' => 'DescribeJobInput', ], 'output' => [ 'shape' => 'GlacierJobDescription', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'DescribeVault' => [ 'name' => 'DescribeVault', 'http' => [ 'method' => 'GET', 'requestUri' => '/{accountId}/vaults/{vaultName}', ], 'input' => [ 'shape' => 'DescribeVaultInput', ], 'output' => [ 'shape' => 'DescribeVaultOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'GetDataRetrievalPolicy' => [ 'name' => 'GetDataRetrievalPolicy', 'http' => [ 'method' => 'GET', 'requestUri' => '/{accountId}/policies/data-retrieval', ], 'input' => [ 'shape' => 'GetDataRetrievalPolicyInput', ], 'output' => [ 'shape' => 'GetDataRetrievalPolicyOutput', ], 'errors' => [ [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'GetJobOutput' => [ 'name' => 'GetJobOutput', 'http' => [ 'method' => 'GET', 'requestUri' => '/{accountId}/vaults/{vaultName}/jobs/{jobId}/output', ], 'input' => [ 'shape' => 'GetJobOutputInput', ], 'output' => [ 'shape' => 'GetJobOutputOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'GetVaultAccessPolicy' => [ 'name' => 'GetVaultAccessPolicy', 'http' => [ 'method' => 'GET', 'requestUri' => '/{accountId}/vaults/{vaultName}/access-policy', ], 'input' => [ 'shape' => 'GetVaultAccessPolicyInput', ], 'output' => [ 'shape' => 'GetVaultAccessPolicyOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'GetVaultLock' => [ 'name' => 'GetVaultLock', 'http' => [ 'method' => 'GET', 'requestUri' => '/{accountId}/vaults/{vaultName}/lock-policy', ], 'input' => [ 'shape' => 'GetVaultLockInput', ], 'output' => [ 'shape' => 'GetVaultLockOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'GetVaultNotifications' => [ 'name' => 'GetVaultNotifications', 'http' => [ 'method' => 'GET', 'requestUri' => '/{accountId}/vaults/{vaultName}/notification-configuration', ], 'input' => [ 'shape' => 'GetVaultNotificationsInput', ], 'output' => [ 'shape' => 'GetVaultNotificationsOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'InitiateJob' => [ 'name' => 'InitiateJob', 'http' => [ 'method' => 'POST', 'requestUri' => '/{accountId}/vaults/{vaultName}/jobs', 'responseCode' => 202, ], 'input' => [ 'shape' => 'InitiateJobInput', ], 'output' => [ 'shape' => 'InitiateJobOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'PolicyEnforcedException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'InitiateMultipartUpload' => [ 'name' => 'InitiateMultipartUpload', 'http' => [ 'method' => 'POST', 'requestUri' => '/{accountId}/vaults/{vaultName}/multipart-uploads', 'responseCode' => 201, ], 'input' => [ 'shape' => 'InitiateMultipartUploadInput', ], 'output' => [ 'shape' => 'InitiateMultipartUploadOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'InitiateVaultLock' => [ 'name' => 'InitiateVaultLock', 'http' => [ 'method' => 'POST', 'requestUri' => '/{accountId}/vaults/{vaultName}/lock-policy', 'responseCode' => 201, ], 'input' => [ 'shape' => 'InitiateVaultLockInput', ], 'output' => [ 'shape' => 'InitiateVaultLockOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'ListJobs' => [ 'name' => 'ListJobs', 'http' => [ 'method' => 'GET', 'requestUri' => '/{accountId}/vaults/{vaultName}/jobs', ], 'input' => [ 'shape' => 'ListJobsInput', ], 'output' => [ 'shape' => 'ListJobsOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'ListMultipartUploads' => [ 'name' => 'ListMultipartUploads', 'http' => [ 'method' => 'GET', 'requestUri' => '/{accountId}/vaults/{vaultName}/multipart-uploads', ], 'input' => [ 'shape' => 'ListMultipartUploadsInput', ], 'output' => [ 'shape' => 'ListMultipartUploadsOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'ListParts' => [ 'name' => 'ListParts', 'http' => [ 'method' => 'GET', 'requestUri' => '/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}', ], 'input' => [ 'shape' => 'ListPartsInput', ], 'output' => [ 'shape' => 'ListPartsOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'ListTagsForVault' => [ 'name' => 'ListTagsForVault', 'http' => [ 'method' => 'GET', 'requestUri' => '/{accountId}/vaults/{vaultName}/tags', ], 'input' => [ 'shape' => 'ListTagsForVaultInput', ], 'output' => [ 'shape' => 'ListTagsForVaultOutput', ], 'errors' => [ [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'ListVaults' => [ 'name' => 'ListVaults', 'http' => [ 'method' => 'GET', 'requestUri' => '/{accountId}/vaults', ], 'input' => [ 'shape' => 'ListVaultsInput', ], 'output' => [ 'shape' => 'ListVaultsOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'RemoveTagsFromVault' => [ 'name' => 'RemoveTagsFromVault', 'http' => [ 'method' => 'POST', 'requestUri' => '/{accountId}/vaults/{vaultName}/tags?operation=remove', 'responseCode' => 204, ], 'input' => [ 'shape' => 'RemoveTagsFromVaultInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'SetDataRetrievalPolicy' => [ 'name' => 'SetDataRetrievalPolicy', 'http' => [ 'method' => 'PUT', 'requestUri' => '/{accountId}/policies/data-retrieval', 'responseCode' => 204, ], 'input' => [ 'shape' => 'SetDataRetrievalPolicyInput', ], 'errors' => [ [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'SetVaultAccessPolicy' => [ 'name' => 'SetVaultAccessPolicy', 'http' => [ 'method' => 'PUT', 'requestUri' => '/{accountId}/vaults/{vaultName}/access-policy', 'responseCode' => 204, ], 'input' => [ 'shape' => 'SetVaultAccessPolicyInput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'SetVaultNotifications' => [ 'name' => 'SetVaultNotifications', 'http' => [ 'method' => 'PUT', 'requestUri' => '/{accountId}/vaults/{vaultName}/notification-configuration', 'responseCode' => 204, ], 'input' => [ 'shape' => 'SetVaultNotificationsInput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'UploadArchive' => [ 'name' => 'UploadArchive', 'http' => [ 'method' => 'POST', 'requestUri' => '/{accountId}/vaults/{vaultName}/archives', 'responseCode' => 201, ], 'input' => [ 'shape' => 'UploadArchiveInput', ], 'output' => [ 'shape' => 'ArchiveCreationOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'RequestTimeoutException', 'error' => [ 'httpStatusCode' => 408, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], 'UploadMultipartPart' => [ 'name' => 'UploadMultipartPart', 'http' => [ 'method' => 'PUT', 'requestUri' => '/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}', 'responseCode' => 204, ], 'input' => [ 'shape' => 'UploadMultipartPartInput', ], 'output' => [ 'shape' => 'UploadMultipartPartOutput', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'MissingParameterValueException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'RequestTimeoutException', 'error' => [ 'httpStatusCode' => 408, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], ], ], ], 'shapes' => [ 'AbortMultipartUploadInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'uploadId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'uploadId', ], ], 'required' => [ 'accountId', 'vaultName', 'uploadId', ], ], 'AbortVaultLockInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'ActionCode' => [ 'type' => 'string', 'enum' => [ 'ArchiveRetrieval', 'InventoryRetrieval', ], ], 'AddTagsToVaultInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'Tags' => [ 'shape' => 'TagMap', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'ArchiveCreationOutput' => [ 'type' => 'structure', 'members' => [ 'location' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'Location', ], 'checksum' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-sha256-tree-hash', ], 'archiveId' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-archive-id', ], ], ], 'CompleteMultipartUploadInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'uploadId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'uploadId', ], 'archiveSize' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-archive-size', ], 'checksum' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-sha256-tree-hash', ], ], 'required' => [ 'accountId', 'vaultName', 'uploadId', ], ], 'CompleteVaultLockInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'lockId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'lockId', ], ], 'required' => [ 'accountId', 'vaultName', 'lockId', ], ], 'CreateVaultInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'CreateVaultOutput' => [ 'type' => 'structure', 'members' => [ 'location' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'Location', ], ], ], 'DataRetrievalPolicy' => [ 'type' => 'structure', 'members' => [ 'Rules' => [ 'shape' => 'DataRetrievalRulesList', ], ], ], 'DataRetrievalRule' => [ 'type' => 'structure', 'members' => [ 'Strategy' => [ 'shape' => 'string', ], 'BytesPerHour' => [ 'shape' => 'NullableLong', ], ], ], 'DataRetrievalRulesList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DataRetrievalRule', ], ], 'DateTime' => [ 'type' => 'string', ], 'DeleteArchiveInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'archiveId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'archiveId', ], ], 'required' => [ 'accountId', 'vaultName', 'archiveId', ], ], 'DeleteVaultAccessPolicyInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'DeleteVaultInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'DeleteVaultNotificationsInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'DescribeJobInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'jobId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'jobId', ], ], 'required' => [ 'accountId', 'vaultName', 'jobId', ], ], 'DescribeVaultInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'DescribeVaultOutput' => [ 'type' => 'structure', 'members' => [ 'VaultARN' => [ 'shape' => 'string', ], 'VaultName' => [ 'shape' => 'string', ], 'CreationDate' => [ 'shape' => 'string', ], 'LastInventoryDate' => [ 'shape' => 'string', ], 'NumberOfArchives' => [ 'shape' => 'long', ], 'SizeInBytes' => [ 'shape' => 'long', ], ], ], 'GetDataRetrievalPolicyInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], ], 'required' => [ 'accountId', ], ], 'GetDataRetrievalPolicyOutput' => [ 'type' => 'structure', 'members' => [ 'Policy' => [ 'shape' => 'DataRetrievalPolicy', ], ], ], 'GetJobOutputInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'jobId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'jobId', ], 'range' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'Range', ], ], 'required' => [ 'accountId', 'vaultName', 'jobId', ], ], 'GetJobOutputOutput' => [ 'type' => 'structure', 'members' => [ 'body' => [ 'shape' => 'Stream', ], 'checksum' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-sha256-tree-hash', ], 'status' => [ 'shape' => 'httpstatus', 'location' => 'statusCode', ], 'contentRange' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'Content-Range', ], 'acceptRanges' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'Accept-Ranges', ], 'contentType' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'Content-Type', ], 'archiveDescription' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-archive-description', ], ], 'payload' => 'body', ], 'GetVaultAccessPolicyInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'GetVaultAccessPolicyOutput' => [ 'type' => 'structure', 'members' => [ 'policy' => [ 'shape' => 'VaultAccessPolicy', ], ], 'payload' => 'policy', ], 'GetVaultLockInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'GetVaultLockOutput' => [ 'type' => 'structure', 'members' => [ 'Policy' => [ 'shape' => 'string', ], 'State' => [ 'shape' => 'string', ], 'ExpirationDate' => [ 'shape' => 'string', ], 'CreationDate' => [ 'shape' => 'string', ], ], ], 'GetVaultNotificationsInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'GetVaultNotificationsOutput' => [ 'type' => 'structure', 'members' => [ 'vaultNotificationConfig' => [ 'shape' => 'VaultNotificationConfig', ], ], 'payload' => 'vaultNotificationConfig', ], 'GlacierJobDescription' => [ 'type' => 'structure', 'members' => [ 'JobId' => [ 'shape' => 'string', ], 'JobDescription' => [ 'shape' => 'string', ], 'Action' => [ 'shape' => 'ActionCode', ], 'ArchiveId' => [ 'shape' => 'string', ], 'VaultARN' => [ 'shape' => 'string', ], 'CreationDate' => [ 'shape' => 'string', ], 'Completed' => [ 'shape' => 'boolean', ], 'StatusCode' => [ 'shape' => 'StatusCode', ], 'StatusMessage' => [ 'shape' => 'string', ], 'ArchiveSizeInBytes' => [ 'shape' => 'Size', ], 'InventorySizeInBytes' => [ 'shape' => 'Size', ], 'SNSTopic' => [ 'shape' => 'string', ], 'CompletionDate' => [ 'shape' => 'string', ], 'SHA256TreeHash' => [ 'shape' => 'string', ], 'ArchiveSHA256TreeHash' => [ 'shape' => 'string', ], 'RetrievalByteRange' => [ 'shape' => 'string', ], 'InventoryRetrievalParameters' => [ 'shape' => 'InventoryRetrievalJobDescription', ], ], ], 'InitiateJobInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'jobParameters' => [ 'shape' => 'JobParameters', ], ], 'required' => [ 'accountId', 'vaultName', ], 'payload' => 'jobParameters', ], 'InitiateJobOutput' => [ 'type' => 'structure', 'members' => [ 'location' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'Location', ], 'jobId' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-job-id', ], ], ], 'InitiateMultipartUploadInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'archiveDescription' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-archive-description', ], 'partSize' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-part-size', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'InitiateMultipartUploadOutput' => [ 'type' => 'structure', 'members' => [ 'location' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'Location', ], 'uploadId' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-multipart-upload-id', ], ], ], 'InitiateVaultLockInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'policy' => [ 'shape' => 'VaultLockPolicy', ], ], 'required' => [ 'accountId', 'vaultName', ], 'payload' => 'policy', ], 'InitiateVaultLockOutput' => [ 'type' => 'structure', 'members' => [ 'lockId' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-lock-id', ], ], ], 'InvalidParameterValueException' => [ 'type' => 'structure', 'members' => [ 'type' => [ 'shape' => 'string', ], 'code' => [ 'shape' => 'string', ], 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], 'InventoryRetrievalJobDescription' => [ 'type' => 'structure', 'members' => [ 'Format' => [ 'shape' => 'string', ], 'StartDate' => [ 'shape' => 'DateTime', ], 'EndDate' => [ 'shape' => 'DateTime', ], 'Limit' => [ 'shape' => 'string', ], 'Marker' => [ 'shape' => 'string', ], ], ], 'InventoryRetrievalJobInput' => [ 'type' => 'structure', 'members' => [ 'StartDate' => [ 'shape' => 'string', ], 'EndDate' => [ 'shape' => 'string', ], 'Limit' => [ 'shape' => 'string', ], 'Marker' => [ 'shape' => 'string', ], ], ], 'JobList' => [ 'type' => 'list', 'member' => [ 'shape' => 'GlacierJobDescription', ], ], 'JobParameters' => [ 'type' => 'structure', 'members' => [ 'Format' => [ 'shape' => 'string', ], 'Type' => [ 'shape' => 'string', ], 'ArchiveId' => [ 'shape' => 'string', ], 'Description' => [ 'shape' => 'string', ], 'SNSTopic' => [ 'shape' => 'string', ], 'RetrievalByteRange' => [ 'shape' => 'string', ], 'InventoryRetrievalParameters' => [ 'shape' => 'InventoryRetrievalJobInput', ], ], ], 'LimitExceededException' => [ 'type' => 'structure', 'members' => [ 'type' => [ 'shape' => 'string', ], 'code' => [ 'shape' => 'string', ], 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], 'ListJobsInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'limit' => [ 'shape' => 'string', 'location' => 'querystring', 'locationName' => 'limit', ], 'marker' => [ 'shape' => 'string', 'location' => 'querystring', 'locationName' => 'marker', ], 'statuscode' => [ 'shape' => 'string', 'location' => 'querystring', 'locationName' => 'statuscode', ], 'completed' => [ 'shape' => 'string', 'location' => 'querystring', 'locationName' => 'completed', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'ListJobsOutput' => [ 'type' => 'structure', 'members' => [ 'JobList' => [ 'shape' => 'JobList', ], 'Marker' => [ 'shape' => 'string', ], ], ], 'ListMultipartUploadsInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'marker' => [ 'shape' => 'string', 'location' => 'querystring', 'locationName' => 'marker', ], 'limit' => [ 'shape' => 'string', 'location' => 'querystring', 'locationName' => 'limit', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'ListMultipartUploadsOutput' => [ 'type' => 'structure', 'members' => [ 'UploadsList' => [ 'shape' => 'UploadsList', ], 'Marker' => [ 'shape' => 'string', ], ], ], 'ListPartsInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'uploadId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'uploadId', ], 'marker' => [ 'shape' => 'string', 'location' => 'querystring', 'locationName' => 'marker', ], 'limit' => [ 'shape' => 'string', 'location' => 'querystring', 'locationName' => 'limit', ], ], 'required' => [ 'accountId', 'vaultName', 'uploadId', ], ], 'ListPartsOutput' => [ 'type' => 'structure', 'members' => [ 'MultipartUploadId' => [ 'shape' => 'string', ], 'VaultARN' => [ 'shape' => 'string', ], 'ArchiveDescription' => [ 'shape' => 'string', ], 'PartSizeInBytes' => [ 'shape' => 'long', ], 'CreationDate' => [ 'shape' => 'string', ], 'Parts' => [ 'shape' => 'PartList', ], 'Marker' => [ 'shape' => 'string', ], ], ], 'ListTagsForVaultInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'ListTagsForVaultOutput' => [ 'type' => 'structure', 'members' => [ 'Tags' => [ 'shape' => 'TagMap', ], ], ], 'ListVaultsInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'marker' => [ 'shape' => 'string', 'location' => 'querystring', 'locationName' => 'marker', ], 'limit' => [ 'shape' => 'string', 'location' => 'querystring', 'locationName' => 'limit', ], ], 'required' => [ 'accountId', ], ], 'ListVaultsOutput' => [ 'type' => 'structure', 'members' => [ 'VaultList' => [ 'shape' => 'VaultList', ], 'Marker' => [ 'shape' => 'string', ], ], ], 'MissingParameterValueException' => [ 'type' => 'structure', 'members' => [ 'type' => [ 'shape' => 'string', ], 'code' => [ 'shape' => 'string', ], 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], 'NotificationEventList' => [ 'type' => 'list', 'member' => [ 'shape' => 'string', ], ], 'NullableLong' => [ 'type' => 'long', ], 'PartList' => [ 'type' => 'list', 'member' => [ 'shape' => 'PartListElement', ], ], 'PartListElement' => [ 'type' => 'structure', 'members' => [ 'RangeInBytes' => [ 'shape' => 'string', ], 'SHA256TreeHash' => [ 'shape' => 'string', ], ], ], 'PolicyEnforcedException' => [ 'type' => 'structure', 'members' => [ 'type' => [ 'shape' => 'string', ], 'code' => [ 'shape' => 'string', ], 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], 'RemoveTagsFromVaultInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'TagKeys' => [ 'shape' => 'TagKeyList', ], ], 'required' => [ 'accountId', 'vaultName', ], ], 'RequestTimeoutException' => [ 'type' => 'structure', 'members' => [ 'type' => [ 'shape' => 'string', ], 'code' => [ 'shape' => 'string', ], 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'httpStatusCode' => 408, ], 'exception' => true, ], 'ResourceNotFoundException' => [ 'type' => 'structure', 'members' => [ 'type' => [ 'shape' => 'string', ], 'code' => [ 'shape' => 'string', ], 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], 'ServiceUnavailableException' => [ 'type' => 'structure', 'members' => [ 'type' => [ 'shape' => 'string', ], 'code' => [ 'shape' => 'string', ], 'message' => [ 'shape' => 'string', ], ], 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, ], 'SetDataRetrievalPolicyInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'Policy' => [ 'shape' => 'DataRetrievalPolicy', ], ], 'required' => [ 'accountId', ], ], 'SetVaultAccessPolicyInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'policy' => [ 'shape' => 'VaultAccessPolicy', ], ], 'required' => [ 'accountId', 'vaultName', ], 'payload' => 'policy', ], 'SetVaultNotificationsInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'vaultNotificationConfig' => [ 'shape' => 'VaultNotificationConfig', ], ], 'required' => [ 'accountId', 'vaultName', ], 'payload' => 'vaultNotificationConfig', ], 'Size' => [ 'type' => 'long', ], 'StatusCode' => [ 'type' => 'string', 'enum' => [ 'InProgress', 'Succeeded', 'Failed', ], ], 'Stream' => [ 'type' => 'blob', 'streaming' => true, ], 'TagKey' => [ 'type' => 'string', ], 'TagKeyList' => [ 'type' => 'list', 'member' => [ 'shape' => 'string', ], ], 'TagMap' => [ 'type' => 'map', 'key' => [ 'shape' => 'TagKey', ], 'value' => [ 'shape' => 'TagValue', ], ], 'TagValue' => [ 'type' => 'string', ], 'UploadArchiveInput' => [ 'type' => 'structure', 'members' => [ 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'archiveDescription' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-archive-description', ], 'checksum' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-sha256-tree-hash', ], 'body' => [ 'shape' => 'Stream', ], ], 'required' => [ 'vaultName', 'accountId', ], 'payload' => 'body', ], 'UploadListElement' => [ 'type' => 'structure', 'members' => [ 'MultipartUploadId' => [ 'shape' => 'string', ], 'VaultARN' => [ 'shape' => 'string', ], 'ArchiveDescription' => [ 'shape' => 'string', ], 'PartSizeInBytes' => [ 'shape' => 'long', ], 'CreationDate' => [ 'shape' => 'string', ], ], ], 'UploadMultipartPartInput' => [ 'type' => 'structure', 'members' => [ 'accountId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'accountId', ], 'vaultName' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'vaultName', ], 'uploadId' => [ 'shape' => 'string', 'location' => 'uri', 'locationName' => 'uploadId', ], 'checksum' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-sha256-tree-hash', ], 'range' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'Content-Range', ], 'body' => [ 'shape' => 'Stream', ], ], 'required' => [ 'accountId', 'vaultName', 'uploadId', ], 'payload' => 'body', ], 'UploadMultipartPartOutput' => [ 'type' => 'structure', 'members' => [ 'checksum' => [ 'shape' => 'string', 'location' => 'header', 'locationName' => 'x-amz-sha256-tree-hash', ], ], ], 'UploadsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'UploadListElement', ], ], 'VaultAccessPolicy' => [ 'type' => 'structure', 'members' => [ 'Policy' => [ 'shape' => 'string', ], ], ], 'VaultList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DescribeVaultOutput', ], ], 'VaultLockPolicy' => [ 'type' => 'structure', 'members' => [ 'Policy' => [ 'shape' => 'string', ], ], ], 'VaultNotificationConfig' => [ 'type' => 'structure', 'members' => [ 'SNSTopic' => [ 'shape' => 'string', ], 'Events' => [ 'shape' => 'NotificationEventList', ], ], ], 'boolean' => [ 'type' => 'boolean', ], 'httpstatus' => [ 'type' => 'integer', ], 'long' => [ 'type' => 'long', ], 'string' => [ 'type' => 'string', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/elasticbeanstalk/2010-12-01/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2010-12-01', 'endpointPrefix' => 'elasticbeanstalk', 'protocol' => 'query', 'serviceAbbreviation' => 'Elastic Beanstalk', 'serviceFullName' => 'AWS Elastic Beanstalk', 'signatureVersion' => 'v4', 'xmlNamespace' => 'http://elasticbeanstalk.amazonaws.com/docs/2010-12-01/', ], 'operations' => [ 'AbortEnvironmentUpdate' => [ 'name' => 'AbortEnvironmentUpdate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AbortEnvironmentUpdateMessage', ], 'errors' => [ [ 'shape' => 'InsufficientPrivilegesException', ], ], ], 'ApplyEnvironmentManagedAction' => [ 'name' => 'ApplyEnvironmentManagedAction', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ApplyEnvironmentManagedActionRequest', ], 'output' => [ 'shape' => 'ApplyEnvironmentManagedActionResult', 'resultWrapper' => 'ApplyEnvironmentManagedActionResult', ], 'errors' => [ [ 'shape' => 'ElasticBeanstalkServiceException', ], [ 'shape' => 'ManagedActionInvalidStateException', ], ], ], 'CheckDNSAvailability' => [ 'name' => 'CheckDNSAvailability', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CheckDNSAvailabilityMessage', ], 'output' => [ 'shape' => 'CheckDNSAvailabilityResultMessage', 'resultWrapper' => 'CheckDNSAvailabilityResult', ], ], 'ComposeEnvironments' => [ 'name' => 'ComposeEnvironments', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ComposeEnvironmentsMessage', ], 'output' => [ 'shape' => 'EnvironmentDescriptionsMessage', 'resultWrapper' => 'ComposeEnvironmentsResult', ], 'errors' => [ [ 'shape' => 'TooManyEnvironmentsException', ], [ 'shape' => 'InsufficientPrivilegesException', ], ], ], 'CreateApplication' => [ 'name' => 'CreateApplication', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateApplicationMessage', ], 'output' => [ 'shape' => 'ApplicationDescriptionMessage', 'resultWrapper' => 'CreateApplicationResult', ], 'errors' => [ [ 'shape' => 'TooManyApplicationsException', ], ], ], 'CreateApplicationVersion' => [ 'name' => 'CreateApplicationVersion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateApplicationVersionMessage', ], 'output' => [ 'shape' => 'ApplicationVersionDescriptionMessage', 'resultWrapper' => 'CreateApplicationVersionResult', ], 'errors' => [ [ 'shape' => 'TooManyApplicationsException', ], [ 'shape' => 'TooManyApplicationVersionsException', ], [ 'shape' => 'InsufficientPrivilegesException', ], [ 'shape' => 'S3LocationNotInServiceRegionException', ], ], ], 'CreateConfigurationTemplate' => [ 'name' => 'CreateConfigurationTemplate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateConfigurationTemplateMessage', ], 'output' => [ 'shape' => 'ConfigurationSettingsDescription', 'resultWrapper' => 'CreateConfigurationTemplateResult', ], 'errors' => [ [ 'shape' => 'InsufficientPrivilegesException', ], [ 'shape' => 'TooManyBucketsException', ], [ 'shape' => 'TooManyConfigurationTemplatesException', ], ], ], 'CreateEnvironment' => [ 'name' => 'CreateEnvironment', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateEnvironmentMessage', ], 'output' => [ 'shape' => 'EnvironmentDescription', 'resultWrapper' => 'CreateEnvironmentResult', ], 'errors' => [ [ 'shape' => 'TooManyEnvironmentsException', ], [ 'shape' => 'InsufficientPrivilegesException', ], ], ], 'CreateStorageLocation' => [ 'name' => 'CreateStorageLocation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'output' => [ 'shape' => 'CreateStorageLocationResultMessage', 'resultWrapper' => 'CreateStorageLocationResult', ], 'errors' => [ [ 'shape' => 'TooManyBucketsException', ], [ 'shape' => 'S3SubscriptionRequiredException', ], [ 'shape' => 'InsufficientPrivilegesException', ], ], ], 'DeleteApplication' => [ 'name' => 'DeleteApplication', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteApplicationMessage', ], 'errors' => [ [ 'shape' => 'OperationInProgressException', ], ], ], 'DeleteApplicationVersion' => [ 'name' => 'DeleteApplicationVersion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteApplicationVersionMessage', ], 'errors' => [ [ 'shape' => 'SourceBundleDeletionException', ], [ 'shape' => 'InsufficientPrivilegesException', ], [ 'shape' => 'OperationInProgressException', ], [ 'shape' => 'S3LocationNotInServiceRegionException', ], ], ], 'DeleteConfigurationTemplate' => [ 'name' => 'DeleteConfigurationTemplate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteConfigurationTemplateMessage', ], 'errors' => [ [ 'shape' => 'OperationInProgressException', ], ], ], 'DeleteEnvironmentConfiguration' => [ 'name' => 'DeleteEnvironmentConfiguration', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteEnvironmentConfigurationMessage', ], ], 'DescribeApplicationVersions' => [ 'name' => 'DescribeApplicationVersions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeApplicationVersionsMessage', ], 'output' => [ 'shape' => 'ApplicationVersionDescriptionsMessage', 'resultWrapper' => 'DescribeApplicationVersionsResult', ], ], 'DescribeApplications' => [ 'name' => 'DescribeApplications', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeApplicationsMessage', ], 'output' => [ 'shape' => 'ApplicationDescriptionsMessage', 'resultWrapper' => 'DescribeApplicationsResult', ], ], 'DescribeConfigurationOptions' => [ 'name' => 'DescribeConfigurationOptions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeConfigurationOptionsMessage', ], 'output' => [ 'shape' => 'ConfigurationOptionsDescription', 'resultWrapper' => 'DescribeConfigurationOptionsResult', ], 'errors' => [ [ 'shape' => 'TooManyBucketsException', ], ], ], 'DescribeConfigurationSettings' => [ 'name' => 'DescribeConfigurationSettings', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeConfigurationSettingsMessage', ], 'output' => [ 'shape' => 'ConfigurationSettingsDescriptions', 'resultWrapper' => 'DescribeConfigurationSettingsResult', ], 'errors' => [ [ 'shape' => 'TooManyBucketsException', ], ], ], 'DescribeEnvironmentHealth' => [ 'name' => 'DescribeEnvironmentHealth', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeEnvironmentHealthRequest', ], 'output' => [ 'shape' => 'DescribeEnvironmentHealthResult', 'resultWrapper' => 'DescribeEnvironmentHealthResult', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', ], [ 'shape' => 'ElasticBeanstalkServiceException', ], ], ], 'DescribeEnvironmentManagedActionHistory' => [ 'name' => 'DescribeEnvironmentManagedActionHistory', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeEnvironmentManagedActionHistoryRequest', ], 'output' => [ 'shape' => 'DescribeEnvironmentManagedActionHistoryResult', 'resultWrapper' => 'DescribeEnvironmentManagedActionHistoryResult', ], 'errors' => [ [ 'shape' => 'ElasticBeanstalkServiceException', ], ], ], 'DescribeEnvironmentManagedActions' => [ 'name' => 'DescribeEnvironmentManagedActions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeEnvironmentManagedActionsRequest', ], 'output' => [ 'shape' => 'DescribeEnvironmentManagedActionsResult', 'resultWrapper' => 'DescribeEnvironmentManagedActionsResult', ], 'errors' => [ [ 'shape' => 'ElasticBeanstalkServiceException', ], ], ], 'DescribeEnvironmentResources' => [ 'name' => 'DescribeEnvironmentResources', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeEnvironmentResourcesMessage', ], 'output' => [ 'shape' => 'EnvironmentResourceDescriptionsMessage', 'resultWrapper' => 'DescribeEnvironmentResourcesResult', ], 'errors' => [ [ 'shape' => 'InsufficientPrivilegesException', ], ], ], 'DescribeEnvironments' => [ 'name' => 'DescribeEnvironments', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeEnvironmentsMessage', ], 'output' => [ 'shape' => 'EnvironmentDescriptionsMessage', 'resultWrapper' => 'DescribeEnvironmentsResult', ], ], 'DescribeEvents' => [ 'name' => 'DescribeEvents', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeEventsMessage', ], 'output' => [ 'shape' => 'EventDescriptionsMessage', 'resultWrapper' => 'DescribeEventsResult', ], ], 'DescribeInstancesHealth' => [ 'name' => 'DescribeInstancesHealth', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeInstancesHealthRequest', ], 'output' => [ 'shape' => 'DescribeInstancesHealthResult', 'resultWrapper' => 'DescribeInstancesHealthResult', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', ], [ 'shape' => 'ElasticBeanstalkServiceException', ], ], ], 'ListAvailableSolutionStacks' => [ 'name' => 'ListAvailableSolutionStacks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'output' => [ 'shape' => 'ListAvailableSolutionStacksResultMessage', 'resultWrapper' => 'ListAvailableSolutionStacksResult', ], ], 'RebuildEnvironment' => [ 'name' => 'RebuildEnvironment', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RebuildEnvironmentMessage', ], 'errors' => [ [ 'shape' => 'InsufficientPrivilegesException', ], ], ], 'RequestEnvironmentInfo' => [ 'name' => 'RequestEnvironmentInfo', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RequestEnvironmentInfoMessage', ], ], 'RestartAppServer' => [ 'name' => 'RestartAppServer', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RestartAppServerMessage', ], ], 'RetrieveEnvironmentInfo' => [ 'name' => 'RetrieveEnvironmentInfo', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RetrieveEnvironmentInfoMessage', ], 'output' => [ 'shape' => 'RetrieveEnvironmentInfoResultMessage', 'resultWrapper' => 'RetrieveEnvironmentInfoResult', ], ], 'SwapEnvironmentCNAMEs' => [ 'name' => 'SwapEnvironmentCNAMEs', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SwapEnvironmentCNAMEsMessage', ], ], 'TerminateEnvironment' => [ 'name' => 'TerminateEnvironment', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'TerminateEnvironmentMessage', ], 'output' => [ 'shape' => 'EnvironmentDescription', 'resultWrapper' => 'TerminateEnvironmentResult', ], 'errors' => [ [ 'shape' => 'InsufficientPrivilegesException', ], ], ], 'UpdateApplication' => [ 'name' => 'UpdateApplication', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateApplicationMessage', ], 'output' => [ 'shape' => 'ApplicationDescriptionMessage', 'resultWrapper' => 'UpdateApplicationResult', ], ], 'UpdateApplicationVersion' => [ 'name' => 'UpdateApplicationVersion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateApplicationVersionMessage', ], 'output' => [ 'shape' => 'ApplicationVersionDescriptionMessage', 'resultWrapper' => 'UpdateApplicationVersionResult', ], ], 'UpdateConfigurationTemplate' => [ 'name' => 'UpdateConfigurationTemplate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateConfigurationTemplateMessage', ], 'output' => [ 'shape' => 'ConfigurationSettingsDescription', 'resultWrapper' => 'UpdateConfigurationTemplateResult', ], 'errors' => [ [ 'shape' => 'InsufficientPrivilegesException', ], [ 'shape' => 'TooManyBucketsException', ], ], ], 'UpdateEnvironment' => [ 'name' => 'UpdateEnvironment', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateEnvironmentMessage', ], 'output' => [ 'shape' => 'EnvironmentDescription', 'resultWrapper' => 'UpdateEnvironmentResult', ], 'errors' => [ [ 'shape' => 'InsufficientPrivilegesException', ], [ 'shape' => 'TooManyBucketsException', ], ], ], 'ValidateConfigurationSettings' => [ 'name' => 'ValidateConfigurationSettings', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ValidateConfigurationSettingsMessage', ], 'output' => [ 'shape' => 'ConfigurationSettingsValidationMessages', 'resultWrapper' => 'ValidateConfigurationSettingsResult', ], 'errors' => [ [ 'shape' => 'InsufficientPrivilegesException', ], [ 'shape' => 'TooManyBucketsException', ], ], ], ], 'shapes' => [ 'AbortEnvironmentUpdateMessage' => [ 'type' => 'structure', 'members' => [ 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], ], ], 'AbortableOperationInProgress' => [ 'type' => 'boolean', ], 'ActionHistoryStatus' => [ 'type' => 'string', 'enum' => [ 'Completed', 'Failed', 'Unknown', ], ], 'ActionStatus' => [ 'type' => 'string', 'enum' => [ 'Scheduled', 'Pending', 'Running', 'Unknown', ], ], 'ActionType' => [ 'type' => 'string', 'enum' => [ 'InstanceRefresh', 'PlatformUpdate', 'Unknown', ], ], 'ApplicationDescription' => [ 'type' => 'structure', 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'Description' => [ 'shape' => 'Description', ], 'DateCreated' => [ 'shape' => 'CreationDate', ], 'DateUpdated' => [ 'shape' => 'UpdateDate', ], 'Versions' => [ 'shape' => 'VersionLabelsList', ], 'ConfigurationTemplates' => [ 'shape' => 'ConfigurationTemplateNamesList', ], ], ], 'ApplicationDescriptionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ApplicationDescription', ], ], 'ApplicationDescriptionMessage' => [ 'type' => 'structure', 'members' => [ 'Application' => [ 'shape' => 'ApplicationDescription', ], ], ], 'ApplicationDescriptionsMessage' => [ 'type' => 'structure', 'members' => [ 'Applications' => [ 'shape' => 'ApplicationDescriptionList', ], ], ], 'ApplicationMetrics' => [ 'type' => 'structure', 'members' => [ 'Duration' => [ 'shape' => 'NullableInteger', ], 'RequestCount' => [ 'shape' => 'RequestCount', ], 'StatusCodes' => [ 'shape' => 'StatusCodes', ], 'Latency' => [ 'shape' => 'Latency', ], ], ], 'ApplicationName' => [ 'type' => 'string', 'max' => 100, 'min' => 1, ], 'ApplicationNamesList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ApplicationName', ], ], 'ApplicationVersionDescription' => [ 'type' => 'structure', 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'Description' => [ 'shape' => 'Description', ], 'VersionLabel' => [ 'shape' => 'VersionLabel', ], 'SourceBundle' => [ 'shape' => 'S3Location', ], 'DateCreated' => [ 'shape' => 'CreationDate', ], 'DateUpdated' => [ 'shape' => 'UpdateDate', ], 'Status' => [ 'shape' => 'ApplicationVersionStatus', ], ], ], 'ApplicationVersionDescriptionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ApplicationVersionDescription', ], ], 'ApplicationVersionDescriptionMessage' => [ 'type' => 'structure', 'members' => [ 'ApplicationVersion' => [ 'shape' => 'ApplicationVersionDescription', ], ], ], 'ApplicationVersionDescriptionsMessage' => [ 'type' => 'structure', 'members' => [ 'ApplicationVersions' => [ 'shape' => 'ApplicationVersionDescriptionList', ], ], ], 'ApplicationVersionProccess' => [ 'type' => 'boolean', ], 'ApplicationVersionStatus' => [ 'type' => 'string', 'enum' => [ 'Processed', 'Unprocessed', 'Failed', 'Processing', ], ], 'ApplyEnvironmentManagedActionRequest' => [ 'type' => 'structure', 'required' => [ 'ActionId', ], 'members' => [ 'EnvironmentName' => [ 'shape' => 'String', ], 'EnvironmentId' => [ 'shape' => 'String', ], 'ActionId' => [ 'shape' => 'String', ], ], ], 'ApplyEnvironmentManagedActionResult' => [ 'type' => 'structure', 'members' => [ 'ActionId' => [ 'shape' => 'String', ], 'ActionDescription' => [ 'shape' => 'String', ], 'ActionType' => [ 'shape' => 'ActionType', ], 'Status' => [ 'shape' => 'String', ], ], ], 'AutoCreateApplication' => [ 'type' => 'boolean', ], 'AutoScalingGroup' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'ResourceId', ], ], ], 'AutoScalingGroupList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AutoScalingGroup', ], ], 'AvailableSolutionStackDetailsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'SolutionStackDescription', ], ], 'AvailableSolutionStackNamesList' => [ 'type' => 'list', 'member' => [ 'shape' => 'SolutionStackName', ], ], 'CPUUtilization' => [ 'type' => 'structure', 'members' => [ 'User' => [ 'shape' => 'NullableDouble', ], 'Nice' => [ 'shape' => 'NullableDouble', ], 'System' => [ 'shape' => 'NullableDouble', ], 'Idle' => [ 'shape' => 'NullableDouble', ], 'IOWait' => [ 'shape' => 'NullableDouble', ], 'IRQ' => [ 'shape' => 'NullableDouble', ], 'SoftIRQ' => [ 'shape' => 'NullableDouble', ], ], ], 'Cause' => [ 'type' => 'string', 'max' => 255, 'min' => 1, ], 'Causes' => [ 'type' => 'list', 'member' => [ 'shape' => 'Cause', ], ], 'CheckDNSAvailabilityMessage' => [ 'type' => 'structure', 'required' => [ 'CNAMEPrefix', ], 'members' => [ 'CNAMEPrefix' => [ 'shape' => 'DNSCnamePrefix', ], ], ], 'CheckDNSAvailabilityResultMessage' => [ 'type' => 'structure', 'members' => [ 'Available' => [ 'shape' => 'CnameAvailability', ], 'FullyQualifiedCNAME' => [ 'shape' => 'DNSCname', ], ], ], 'CnameAvailability' => [ 'type' => 'boolean', ], 'ComposeEnvironmentsMessage' => [ 'type' => 'structure', 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'GroupName' => [ 'shape' => 'GroupName', ], 'VersionLabels' => [ 'shape' => 'VersionLabels', ], ], ], 'ConfigurationDeploymentStatus' => [ 'type' => 'string', 'enum' => [ 'deployed', 'pending', 'failed', ], ], 'ConfigurationOptionDefaultValue' => [ 'type' => 'string', ], 'ConfigurationOptionDescription' => [ 'type' => 'structure', 'members' => [ 'Namespace' => [ 'shape' => 'OptionNamespace', ], 'Name' => [ 'shape' => 'ConfigurationOptionName', ], 'DefaultValue' => [ 'shape' => 'ConfigurationOptionDefaultValue', ], 'ChangeSeverity' => [ 'shape' => 'ConfigurationOptionSeverity', ], 'UserDefined' => [ 'shape' => 'UserDefinedOption', ], 'ValueType' => [ 'shape' => 'ConfigurationOptionValueType', ], 'ValueOptions' => [ 'shape' => 'ConfigurationOptionPossibleValues', ], 'MinValue' => [ 'shape' => 'OptionRestrictionMinValue', ], 'MaxValue' => [ 'shape' => 'OptionRestrictionMaxValue', ], 'MaxLength' => [ 'shape' => 'OptionRestrictionMaxLength', ], 'Regex' => [ 'shape' => 'OptionRestrictionRegex', ], ], ], 'ConfigurationOptionDescriptionsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ConfigurationOptionDescription', ], ], 'ConfigurationOptionName' => [ 'type' => 'string', ], 'ConfigurationOptionPossibleValue' => [ 'type' => 'string', ], 'ConfigurationOptionPossibleValues' => [ 'type' => 'list', 'member' => [ 'shape' => 'ConfigurationOptionPossibleValue', ], ], 'ConfigurationOptionSetting' => [ 'type' => 'structure', 'members' => [ 'ResourceName' => [ 'shape' => 'ResourceName', ], 'Namespace' => [ 'shape' => 'OptionNamespace', ], 'OptionName' => [ 'shape' => 'ConfigurationOptionName', ], 'Value' => [ 'shape' => 'ConfigurationOptionValue', ], ], ], 'ConfigurationOptionSettingsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ConfigurationOptionSetting', ], ], 'ConfigurationOptionSeverity' => [ 'type' => 'string', ], 'ConfigurationOptionValue' => [ 'type' => 'string', ], 'ConfigurationOptionValueType' => [ 'type' => 'string', 'enum' => [ 'Scalar', 'List', ], ], 'ConfigurationOptionsDescription' => [ 'type' => 'structure', 'members' => [ 'SolutionStackName' => [ 'shape' => 'SolutionStackName', ], 'Options' => [ 'shape' => 'ConfigurationOptionDescriptionsList', ], ], ], 'ConfigurationSettingsDescription' => [ 'type' => 'structure', 'members' => [ 'SolutionStackName' => [ 'shape' => 'SolutionStackName', ], 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], 'Description' => [ 'shape' => 'Description', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'DeploymentStatus' => [ 'shape' => 'ConfigurationDeploymentStatus', ], 'DateCreated' => [ 'shape' => 'CreationDate', ], 'DateUpdated' => [ 'shape' => 'UpdateDate', ], 'OptionSettings' => [ 'shape' => 'ConfigurationOptionSettingsList', ], ], ], 'ConfigurationSettingsDescriptionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ConfigurationSettingsDescription', ], ], 'ConfigurationSettingsDescriptions' => [ 'type' => 'structure', 'members' => [ 'ConfigurationSettings' => [ 'shape' => 'ConfigurationSettingsDescriptionList', ], ], ], 'ConfigurationSettingsValidationMessages' => [ 'type' => 'structure', 'members' => [ 'Messages' => [ 'shape' => 'ValidationMessagesList', ], ], ], 'ConfigurationTemplateName' => [ 'type' => 'string', 'max' => 100, 'min' => 1, ], 'ConfigurationTemplateNamesList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ConfigurationTemplateName', ], ], 'CreateApplicationMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'Description' => [ 'shape' => 'Description', ], ], ], 'CreateApplicationVersionMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', 'VersionLabel', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'VersionLabel' => [ 'shape' => 'VersionLabel', ], 'Description' => [ 'shape' => 'Description', ], 'SourceBundle' => [ 'shape' => 'S3Location', ], 'AutoCreateApplication' => [ 'shape' => 'AutoCreateApplication', ], 'Process' => [ 'shape' => 'ApplicationVersionProccess', ], ], ], 'CreateConfigurationTemplateMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', 'TemplateName', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], 'SolutionStackName' => [ 'shape' => 'SolutionStackName', ], 'SourceConfiguration' => [ 'shape' => 'SourceConfiguration', ], 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'Description' => [ 'shape' => 'Description', ], 'OptionSettings' => [ 'shape' => 'ConfigurationOptionSettingsList', ], ], ], 'CreateEnvironmentMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'GroupName' => [ 'shape' => 'GroupName', ], 'Description' => [ 'shape' => 'Description', ], 'CNAMEPrefix' => [ 'shape' => 'DNSCnamePrefix', ], 'Tier' => [ 'shape' => 'EnvironmentTier', ], 'Tags' => [ 'shape' => 'Tags', ], 'VersionLabel' => [ 'shape' => 'VersionLabel', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], 'SolutionStackName' => [ 'shape' => 'SolutionStackName', ], 'OptionSettings' => [ 'shape' => 'ConfigurationOptionSettingsList', ], 'OptionsToRemove' => [ 'shape' => 'OptionsSpecifierList', ], ], ], 'CreateStorageLocationResultMessage' => [ 'type' => 'structure', 'members' => [ 'S3Bucket' => [ 'shape' => 'S3Bucket', ], ], ], 'CreationDate' => [ 'type' => 'timestamp', ], 'DNSCname' => [ 'type' => 'string', 'max' => 255, 'min' => 1, ], 'DNSCnamePrefix' => [ 'type' => 'string', 'max' => 63, 'min' => 4, ], 'DeleteApplicationMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'TerminateEnvByForce' => [ 'shape' => 'TerminateEnvForce', ], ], ], 'DeleteApplicationVersionMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', 'VersionLabel', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'VersionLabel' => [ 'shape' => 'VersionLabel', ], 'DeleteSourceBundle' => [ 'shape' => 'DeleteSourceBundle', ], ], ], 'DeleteConfigurationTemplateMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', 'TemplateName', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], ], ], 'DeleteEnvironmentConfigurationMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', 'EnvironmentName', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], ], ], 'DeleteSourceBundle' => [ 'type' => 'boolean', ], 'Deployment' => [ 'type' => 'structure', 'members' => [ 'VersionLabel' => [ 'shape' => 'String', ], 'DeploymentId' => [ 'shape' => 'NullableLong', ], 'Status' => [ 'shape' => 'String', ], 'DeploymentTime' => [ 'shape' => 'DeploymentTimestamp', ], ], ], 'DeploymentTimestamp' => [ 'type' => 'timestamp', ], 'DescribeApplicationVersionsMessage' => [ 'type' => 'structure', 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'VersionLabels' => [ 'shape' => 'VersionLabelsList', ], ], ], 'DescribeApplicationsMessage' => [ 'type' => 'structure', 'members' => [ 'ApplicationNames' => [ 'shape' => 'ApplicationNamesList', ], ], ], 'DescribeConfigurationOptionsMessage' => [ 'type' => 'structure', 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'SolutionStackName' => [ 'shape' => 'SolutionStackName', ], 'Options' => [ 'shape' => 'OptionsSpecifierList', ], ], ], 'DescribeConfigurationSettingsMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], ], ], 'DescribeEnvironmentHealthRequest' => [ 'type' => 'structure', 'members' => [ 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'AttributeNames' => [ 'shape' => 'EnvironmentHealthAttributes', ], ], ], 'DescribeEnvironmentHealthResult' => [ 'type' => 'structure', 'members' => [ 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'HealthStatus' => [ 'shape' => 'String', ], 'Status' => [ 'shape' => 'EnvironmentHealth', ], 'Color' => [ 'shape' => 'String', ], 'Causes' => [ 'shape' => 'Causes', ], 'ApplicationMetrics' => [ 'shape' => 'ApplicationMetrics', ], 'InstancesHealth' => [ 'shape' => 'InstanceHealthSummary', ], 'RefreshedAt' => [ 'shape' => 'RefreshedAt', ], ], ], 'DescribeEnvironmentManagedActionHistoryRequest' => [ 'type' => 'structure', 'members' => [ 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'NextToken' => [ 'shape' => 'String', ], 'MaxItems' => [ 'shape' => 'Integer', ], ], ], 'DescribeEnvironmentManagedActionHistoryResult' => [ 'type' => 'structure', 'members' => [ 'ManagedActionHistoryItems' => [ 'shape' => 'ManagedActionHistoryItems', ], 'NextToken' => [ 'shape' => 'String', ], ], ], 'DescribeEnvironmentManagedActionsRequest' => [ 'type' => 'structure', 'members' => [ 'EnvironmentName' => [ 'shape' => 'String', ], 'EnvironmentId' => [ 'shape' => 'String', ], 'Status' => [ 'shape' => 'ActionStatus', ], ], ], 'DescribeEnvironmentManagedActionsResult' => [ 'type' => 'structure', 'members' => [ 'ManagedActions' => [ 'shape' => 'ManagedActions', ], ], ], 'DescribeEnvironmentResourcesMessage' => [ 'type' => 'structure', 'members' => [ 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], ], ], 'DescribeEnvironmentsMessage' => [ 'type' => 'structure', 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'VersionLabel' => [ 'shape' => 'VersionLabel', ], 'EnvironmentIds' => [ 'shape' => 'EnvironmentIdList', ], 'EnvironmentNames' => [ 'shape' => 'EnvironmentNamesList', ], 'IncludeDeleted' => [ 'shape' => 'IncludeDeleted', ], 'IncludedDeletedBackTo' => [ 'shape' => 'IncludeDeletedBackTo', ], ], ], 'DescribeEventsMessage' => [ 'type' => 'structure', 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'VersionLabel' => [ 'shape' => 'VersionLabel', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'RequestId' => [ 'shape' => 'RequestId', ], 'Severity' => [ 'shape' => 'EventSeverity', ], 'StartTime' => [ 'shape' => 'TimeFilterStart', ], 'EndTime' => [ 'shape' => 'TimeFilterEnd', ], 'MaxRecords' => [ 'shape' => 'MaxRecords', ], 'NextToken' => [ 'shape' => 'Token', ], ], ], 'DescribeInstancesHealthRequest' => [ 'type' => 'structure', 'members' => [ 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'AttributeNames' => [ 'shape' => 'InstancesHealthAttributes', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeInstancesHealthResult' => [ 'type' => 'structure', 'members' => [ 'InstanceHealthList' => [ 'shape' => 'InstanceHealthList', ], 'RefreshedAt' => [ 'shape' => 'RefreshedAt', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'Description' => [ 'type' => 'string', 'max' => 200, ], 'Ec2InstanceId' => [ 'type' => 'string', ], 'ElasticBeanstalkServiceException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'EndpointURL' => [ 'type' => 'string', ], 'EnvironmentDescription' => [ 'type' => 'structure', 'members' => [ 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'VersionLabel' => [ 'shape' => 'VersionLabel', ], 'SolutionStackName' => [ 'shape' => 'SolutionStackName', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], 'Description' => [ 'shape' => 'Description', ], 'EndpointURL' => [ 'shape' => 'EndpointURL', ], 'CNAME' => [ 'shape' => 'DNSCname', ], 'DateCreated' => [ 'shape' => 'CreationDate', ], 'DateUpdated' => [ 'shape' => 'UpdateDate', ], 'Status' => [ 'shape' => 'EnvironmentStatus', ], 'AbortableOperationInProgress' => [ 'shape' => 'AbortableOperationInProgress', ], 'Health' => [ 'shape' => 'EnvironmentHealth', ], 'HealthStatus' => [ 'shape' => 'EnvironmentHealthStatus', ], 'Resources' => [ 'shape' => 'EnvironmentResourcesDescription', ], 'Tier' => [ 'shape' => 'EnvironmentTier', ], 'EnvironmentLinks' => [ 'shape' => 'EnvironmentLinks', ], ], ], 'EnvironmentDescriptionsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'EnvironmentDescription', ], ], 'EnvironmentDescriptionsMessage' => [ 'type' => 'structure', 'members' => [ 'Environments' => [ 'shape' => 'EnvironmentDescriptionsList', ], ], ], 'EnvironmentHealth' => [ 'type' => 'string', 'enum' => [ 'Green', 'Yellow', 'Red', 'Grey', ], ], 'EnvironmentHealthAttribute' => [ 'type' => 'string', 'enum' => [ 'Status', 'Color', 'Causes', 'ApplicationMetrics', 'InstancesHealth', 'All', 'HealthStatus', 'RefreshedAt', ], ], 'EnvironmentHealthAttributes' => [ 'type' => 'list', 'member' => [ 'shape' => 'EnvironmentHealthAttribute', ], ], 'EnvironmentHealthStatus' => [ 'type' => 'string', 'enum' => [ 'NoData', 'Unknown', 'Pending', 'Ok', 'Info', 'Warning', 'Degraded', 'Severe', ], ], 'EnvironmentId' => [ 'type' => 'string', ], 'EnvironmentIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'EnvironmentId', ], ], 'EnvironmentInfoDescription' => [ 'type' => 'structure', 'members' => [ 'InfoType' => [ 'shape' => 'EnvironmentInfoType', ], 'Ec2InstanceId' => [ 'shape' => 'Ec2InstanceId', ], 'SampleTimestamp' => [ 'shape' => 'SampleTimestamp', ], 'Message' => [ 'shape' => 'Message', ], ], ], 'EnvironmentInfoDescriptionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'EnvironmentInfoDescription', ], ], 'EnvironmentInfoType' => [ 'type' => 'string', 'enum' => [ 'tail', 'bundle', ], ], 'EnvironmentLink' => [ 'type' => 'structure', 'members' => [ 'LinkName' => [ 'shape' => 'String', ], 'EnvironmentName' => [ 'shape' => 'String', ], ], ], 'EnvironmentLinks' => [ 'type' => 'list', 'member' => [ 'shape' => 'EnvironmentLink', ], ], 'EnvironmentName' => [ 'type' => 'string', 'max' => 40, 'min' => 4, ], 'EnvironmentNamesList' => [ 'type' => 'list', 'member' => [ 'shape' => 'EnvironmentName', ], ], 'EnvironmentResourceDescription' => [ 'type' => 'structure', 'members' => [ 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'AutoScalingGroups' => [ 'shape' => 'AutoScalingGroupList', ], 'Instances' => [ 'shape' => 'InstanceList', ], 'LaunchConfigurations' => [ 'shape' => 'LaunchConfigurationList', ], 'LoadBalancers' => [ 'shape' => 'LoadBalancerList', ], 'Triggers' => [ 'shape' => 'TriggerList', ], 'Queues' => [ 'shape' => 'QueueList', ], ], ], 'EnvironmentResourceDescriptionsMessage' => [ 'type' => 'structure', 'members' => [ 'EnvironmentResources' => [ 'shape' => 'EnvironmentResourceDescription', ], ], ], 'EnvironmentResourcesDescription' => [ 'type' => 'structure', 'members' => [ 'LoadBalancer' => [ 'shape' => 'LoadBalancerDescription', ], ], ], 'EnvironmentStatus' => [ 'type' => 'string', 'enum' => [ 'Launching', 'Updating', 'Ready', 'Terminating', 'Terminated', ], ], 'EnvironmentTier' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'String', ], 'Type' => [ 'shape' => 'String', ], 'Version' => [ 'shape' => 'String', ], ], ], 'EventDate' => [ 'type' => 'timestamp', ], 'EventDescription' => [ 'type' => 'structure', 'members' => [ 'EventDate' => [ 'shape' => 'EventDate', ], 'Message' => [ 'shape' => 'EventMessage', ], 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'VersionLabel' => [ 'shape' => 'VersionLabel', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'RequestId' => [ 'shape' => 'RequestId', ], 'Severity' => [ 'shape' => 'EventSeverity', ], ], ], 'EventDescriptionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'EventDescription', ], ], 'EventDescriptionsMessage' => [ 'type' => 'structure', 'members' => [ 'Events' => [ 'shape' => 'EventDescriptionList', ], 'NextToken' => [ 'shape' => 'Token', ], ], ], 'EventMessage' => [ 'type' => 'string', ], 'EventSeverity' => [ 'type' => 'string', 'enum' => [ 'TRACE', 'DEBUG', 'INFO', 'WARN', 'ERROR', 'FATAL', ], ], 'ExceptionMessage' => [ 'type' => 'string', ], 'FailureType' => [ 'type' => 'string', 'enum' => [ 'UpdateCancelled', 'CancellationFailed', 'RollbackFailed', 'RollbackSuccessful', 'InternalFailure', 'InvalidEnvironmentState', 'PermissionsError', ], ], 'FileTypeExtension' => [ 'type' => 'string', 'max' => 100, 'min' => 1, ], 'ForceTerminate' => [ 'type' => 'boolean', ], 'GroupName' => [ 'type' => 'string', 'max' => 19, 'min' => 1, ], 'IncludeDeleted' => [ 'type' => 'boolean', ], 'IncludeDeletedBackTo' => [ 'type' => 'timestamp', ], 'Instance' => [ 'type' => 'structure', 'members' => [ 'Id' => [ 'shape' => 'ResourceId', ], ], ], 'InstanceHealthList' => [ 'type' => 'list', 'member' => [ 'shape' => 'SingleInstanceHealth', ], ], 'InstanceHealthSummary' => [ 'type' => 'structure', 'members' => [ 'NoData' => [ 'shape' => 'NullableInteger', ], 'Unknown' => [ 'shape' => 'NullableInteger', ], 'Pending' => [ 'shape' => 'NullableInteger', ], 'Ok' => [ 'shape' => 'NullableInteger', ], 'Info' => [ 'shape' => 'NullableInteger', ], 'Warning' => [ 'shape' => 'NullableInteger', ], 'Degraded' => [ 'shape' => 'NullableInteger', ], 'Severe' => [ 'shape' => 'NullableInteger', ], ], ], 'InstanceId' => [ 'type' => 'string', 'max' => 255, 'min' => 1, ], 'InstanceList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Instance', ], ], 'InstancesHealthAttribute' => [ 'type' => 'string', 'enum' => [ 'HealthStatus', 'Color', 'Causes', 'ApplicationMetrics', 'RefreshedAt', 'LaunchedAt', 'System', 'Deployment', 'AvailabilityZone', 'InstanceType', 'All', ], ], 'InstancesHealthAttributes' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstancesHealthAttribute', ], ], 'InsufficientPrivilegesException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'InsufficientPrivilegesException', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], 'Integer' => [ 'type' => 'integer', ], 'InvalidRequestException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'InvalidRequestException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'Latency' => [ 'type' => 'structure', 'members' => [ 'P999' => [ 'shape' => 'NullableDouble', ], 'P99' => [ 'shape' => 'NullableDouble', ], 'P95' => [ 'shape' => 'NullableDouble', ], 'P90' => [ 'shape' => 'NullableDouble', ], 'P85' => [ 'shape' => 'NullableDouble', ], 'P75' => [ 'shape' => 'NullableDouble', ], 'P50' => [ 'shape' => 'NullableDouble', ], 'P10' => [ 'shape' => 'NullableDouble', ], ], ], 'LaunchConfiguration' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'ResourceId', ], ], ], 'LaunchConfigurationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'LaunchConfiguration', ], ], 'LaunchedAt' => [ 'type' => 'timestamp', ], 'ListAvailableSolutionStacksResultMessage' => [ 'type' => 'structure', 'members' => [ 'SolutionStacks' => [ 'shape' => 'AvailableSolutionStackNamesList', ], 'SolutionStackDetails' => [ 'shape' => 'AvailableSolutionStackDetailsList', ], ], ], 'Listener' => [ 'type' => 'structure', 'members' => [ 'Protocol' => [ 'shape' => 'String', ], 'Port' => [ 'shape' => 'Integer', ], ], ], 'LoadAverage' => [ 'type' => 'list', 'member' => [ 'shape' => 'LoadAverageValue', ], ], 'LoadAverageValue' => [ 'type' => 'double', ], 'LoadBalancer' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'ResourceId', ], ], ], 'LoadBalancerDescription' => [ 'type' => 'structure', 'members' => [ 'LoadBalancerName' => [ 'shape' => 'String', ], 'Domain' => [ 'shape' => 'String', ], 'Listeners' => [ 'shape' => 'LoadBalancerListenersDescription', ], ], ], 'LoadBalancerList' => [ 'type' => 'list', 'member' => [ 'shape' => 'LoadBalancer', ], ], 'LoadBalancerListenersDescription' => [ 'type' => 'list', 'member' => [ 'shape' => 'Listener', ], ], 'ManagedAction' => [ 'type' => 'structure', 'members' => [ 'ActionId' => [ 'shape' => 'String', ], 'ActionDescription' => [ 'shape' => 'String', ], 'ActionType' => [ 'shape' => 'ActionType', ], 'Status' => [ 'shape' => 'ActionStatus', ], 'WindowStartTime' => [ 'shape' => 'Timestamp', ], ], ], 'ManagedActionHistoryItem' => [ 'type' => 'structure', 'members' => [ 'ActionId' => [ 'shape' => 'String', ], 'ActionType' => [ 'shape' => 'ActionType', ], 'ActionDescription' => [ 'shape' => 'String', ], 'FailureType' => [ 'shape' => 'FailureType', ], 'Status' => [ 'shape' => 'ActionHistoryStatus', ], 'FailureDescription' => [ 'shape' => 'String', ], 'ExecutedTime' => [ 'shape' => 'Timestamp', ], 'FinishedTime' => [ 'shape' => 'Timestamp', ], ], ], 'ManagedActionHistoryItems' => [ 'type' => 'list', 'member' => [ 'shape' => 'ManagedActionHistoryItem', ], 'max' => 100, 'min' => 1, ], 'ManagedActionInvalidStateException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'ManagedActionInvalidStateException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'ManagedActions' => [ 'type' => 'list', 'member' => [ 'shape' => 'ManagedAction', ], 'max' => 100, 'min' => 1, ], 'MaxRecords' => [ 'type' => 'integer', 'max' => 1000, 'min' => 1, ], 'Message' => [ 'type' => 'string', ], 'NextToken' => [ 'type' => 'string', 'max' => 100, 'min' => 1, ], 'NullableDouble' => [ 'type' => 'double', ], 'NullableInteger' => [ 'type' => 'integer', ], 'NullableLong' => [ 'type' => 'long', ], 'OperationInProgressException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'OperationInProgressFailure', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'OptionNamespace' => [ 'type' => 'string', ], 'OptionRestrictionMaxLength' => [ 'type' => 'integer', ], 'OptionRestrictionMaxValue' => [ 'type' => 'integer', ], 'OptionRestrictionMinValue' => [ 'type' => 'integer', ], 'OptionRestrictionRegex' => [ 'type' => 'structure', 'members' => [ 'Pattern' => [ 'shape' => 'RegexPattern', ], 'Label' => [ 'shape' => 'RegexLabel', ], ], ], 'OptionSpecification' => [ 'type' => 'structure', 'members' => [ 'ResourceName' => [ 'shape' => 'ResourceName', ], 'Namespace' => [ 'shape' => 'OptionNamespace', ], 'OptionName' => [ 'shape' => 'ConfigurationOptionName', ], ], ], 'OptionsSpecifierList' => [ 'type' => 'list', 'member' => [ 'shape' => 'OptionSpecification', ], ], 'Queue' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'String', ], 'URL' => [ 'shape' => 'String', ], ], ], 'QueueList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Queue', ], ], 'RebuildEnvironmentMessage' => [ 'type' => 'structure', 'members' => [ 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], ], ], 'RefreshedAt' => [ 'type' => 'timestamp', ], 'RegexLabel' => [ 'type' => 'string', ], 'RegexPattern' => [ 'type' => 'string', ], 'RequestCount' => [ 'type' => 'integer', ], 'RequestEnvironmentInfoMessage' => [ 'type' => 'structure', 'required' => [ 'InfoType', ], 'members' => [ 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'InfoType' => [ 'shape' => 'EnvironmentInfoType', ], ], ], 'RequestId' => [ 'type' => 'string', ], 'ResourceId' => [ 'type' => 'string', ], 'ResourceName' => [ 'type' => 'string', 'max' => 256, 'min' => 1, ], 'RestartAppServerMessage' => [ 'type' => 'structure', 'members' => [ 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], ], ], 'RetrieveEnvironmentInfoMessage' => [ 'type' => 'structure', 'required' => [ 'InfoType', ], 'members' => [ 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'InfoType' => [ 'shape' => 'EnvironmentInfoType', ], ], ], 'RetrieveEnvironmentInfoResultMessage' => [ 'type' => 'structure', 'members' => [ 'EnvironmentInfo' => [ 'shape' => 'EnvironmentInfoDescriptionList', ], ], ], 'S3Bucket' => [ 'type' => 'string', 'max' => 255, ], 'S3Key' => [ 'type' => 'string', 'max' => 1024, ], 'S3Location' => [ 'type' => 'structure', 'members' => [ 'S3Bucket' => [ 'shape' => 'S3Bucket', ], 'S3Key' => [ 'shape' => 'S3Key', ], ], ], 'S3LocationNotInServiceRegionException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'S3LocationNotInServiceRegionException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'S3SubscriptionRequiredException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'S3SubscriptionRequiredException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'SampleTimestamp' => [ 'type' => 'timestamp', ], 'SingleInstanceHealth' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'InstanceId', ], 'HealthStatus' => [ 'shape' => 'String', ], 'Color' => [ 'shape' => 'String', ], 'Causes' => [ 'shape' => 'Causes', ], 'LaunchedAt' => [ 'shape' => 'LaunchedAt', ], 'ApplicationMetrics' => [ 'shape' => 'ApplicationMetrics', ], 'System' => [ 'shape' => 'SystemStatus', ], 'Deployment' => [ 'shape' => 'Deployment', ], 'AvailabilityZone' => [ 'shape' => 'String', ], 'InstanceType' => [ 'shape' => 'String', ], ], ], 'SolutionStackDescription' => [ 'type' => 'structure', 'members' => [ 'SolutionStackName' => [ 'shape' => 'SolutionStackName', ], 'PermittedFileTypes' => [ 'shape' => 'SolutionStackFileTypeList', ], ], ], 'SolutionStackFileTypeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'FileTypeExtension', ], ], 'SolutionStackName' => [ 'type' => 'string', 'max' => 100, ], 'SourceBundleDeletionException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'SourceBundleDeletionFailure', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'SourceConfiguration' => [ 'type' => 'structure', 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], ], ], 'StatusCodes' => [ 'type' => 'structure', 'members' => [ 'Status2xx' => [ 'shape' => 'NullableInteger', ], 'Status3xx' => [ 'shape' => 'NullableInteger', ], 'Status4xx' => [ 'shape' => 'NullableInteger', ], 'Status5xx' => [ 'shape' => 'NullableInteger', ], ], ], 'String' => [ 'type' => 'string', ], 'SwapEnvironmentCNAMEsMessage' => [ 'type' => 'structure', 'members' => [ 'SourceEnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'SourceEnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'DestinationEnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'DestinationEnvironmentName' => [ 'shape' => 'EnvironmentName', ], ], ], 'SystemStatus' => [ 'type' => 'structure', 'members' => [ 'CPUUtilization' => [ 'shape' => 'CPUUtilization', ], 'LoadAverage' => [ 'shape' => 'LoadAverage', ], ], ], 'Tag' => [ 'type' => 'structure', 'members' => [ 'Key' => [ 'shape' => 'TagKey', ], 'Value' => [ 'shape' => 'TagValue', ], ], ], 'TagKey' => [ 'type' => 'string', 'max' => 128, 'min' => 1, ], 'TagValue' => [ 'type' => 'string', 'max' => 256, 'min' => 1, ], 'Tags' => [ 'type' => 'list', 'member' => [ 'shape' => 'Tag', ], ], 'TerminateEnvForce' => [ 'type' => 'boolean', ], 'TerminateEnvironmentMessage' => [ 'type' => 'structure', 'members' => [ 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'TerminateResources' => [ 'shape' => 'TerminateEnvironmentResources', ], 'ForceTerminate' => [ 'shape' => 'ForceTerminate', ], ], ], 'TerminateEnvironmentResources' => [ 'type' => 'boolean', ], 'TimeFilterEnd' => [ 'type' => 'timestamp', ], 'TimeFilterStart' => [ 'type' => 'timestamp', ], 'Timestamp' => [ 'type' => 'timestamp', ], 'Token' => [ 'type' => 'string', ], 'TooManyApplicationVersionsException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'TooManyApplicationsException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'TooManyApplicationsException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'TooManyBucketsException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'TooManyBucketsException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'TooManyConfigurationTemplatesException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'TooManyConfigurationTemplatesException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'TooManyEnvironmentsException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'TooManyEnvironmentsException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'Trigger' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'ResourceId', ], ], ], 'TriggerList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Trigger', ], ], 'UpdateApplicationMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'Description' => [ 'shape' => 'Description', ], ], ], 'UpdateApplicationVersionMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', 'VersionLabel', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'VersionLabel' => [ 'shape' => 'VersionLabel', ], 'Description' => [ 'shape' => 'Description', ], ], ], 'UpdateConfigurationTemplateMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', 'TemplateName', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], 'Description' => [ 'shape' => 'Description', ], 'OptionSettings' => [ 'shape' => 'ConfigurationOptionSettingsList', ], 'OptionsToRemove' => [ 'shape' => 'OptionsSpecifierList', ], ], ], 'UpdateDate' => [ 'type' => 'timestamp', ], 'UpdateEnvironmentMessage' => [ 'type' => 'structure', 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'EnvironmentId' => [ 'shape' => 'EnvironmentId', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'GroupName' => [ 'shape' => 'GroupName', ], 'Description' => [ 'shape' => 'Description', ], 'Tier' => [ 'shape' => 'EnvironmentTier', ], 'VersionLabel' => [ 'shape' => 'VersionLabel', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], 'SolutionStackName' => [ 'shape' => 'SolutionStackName', ], 'OptionSettings' => [ 'shape' => 'ConfigurationOptionSettingsList', ], 'OptionsToRemove' => [ 'shape' => 'OptionsSpecifierList', ], ], ], 'UserDefinedOption' => [ 'type' => 'boolean', ], 'ValidateConfigurationSettingsMessage' => [ 'type' => 'structure', 'required' => [ 'ApplicationName', 'OptionSettings', ], 'members' => [ 'ApplicationName' => [ 'shape' => 'ApplicationName', ], 'TemplateName' => [ 'shape' => 'ConfigurationTemplateName', ], 'EnvironmentName' => [ 'shape' => 'EnvironmentName', ], 'OptionSettings' => [ 'shape' => 'ConfigurationOptionSettingsList', ], ], ], 'ValidationMessage' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'ValidationMessageString', ], 'Severity' => [ 'shape' => 'ValidationSeverity', ], 'Namespace' => [ 'shape' => 'OptionNamespace', ], 'OptionName' => [ 'shape' => 'ConfigurationOptionName', ], ], ], 'ValidationMessageString' => [ 'type' => 'string', ], 'ValidationMessagesList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ValidationMessage', ], ], 'ValidationSeverity' => [ 'type' => 'string', 'enum' => [ 'error', 'warning', ], ], 'VersionLabel' => [ 'type' => 'string', 'max' => 100, 'min' => 1, ], 'VersionLabels' => [ 'type' => 'list', 'member' => [ 'shape' => 'VersionLabel', ], ], 'VersionLabelsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VersionLabel', ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/cloudsearchdomain/2013-01-01/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2013-01-01', 'endpointPrefix' => 'cloudsearchdomain', 'jsonVersion' => '1.1', 'protocol' => 'rest-json', 'serviceFullName' => 'Amazon CloudSearch Domain', 'signatureVersion' => 'v4', 'signingName' => 'cloudsearch', ], 'operations' => [ 'Search' => [ 'name' => 'Search', 'http' => [ 'method' => 'GET', 'requestUri' => '/2013-01-01/search?format=sdk&pretty=true', ], 'input' => [ 'shape' => 'SearchRequest', ], 'output' => [ 'shape' => 'SearchResponse', ], 'errors' => [ [ 'shape' => 'SearchException', ], ], ], 'Suggest' => [ 'name' => 'Suggest', 'http' => [ 'method' => 'GET', 'requestUri' => '/2013-01-01/suggest?format=sdk&pretty=true', ], 'input' => [ 'shape' => 'SuggestRequest', ], 'output' => [ 'shape' => 'SuggestResponse', ], 'errors' => [ [ 'shape' => 'SearchException', ], ], ], 'UploadDocuments' => [ 'name' => 'UploadDocuments', 'http' => [ 'method' => 'POST', 'requestUri' => '/2013-01-01/documents/batch?format=sdk', ], 'input' => [ 'shape' => 'UploadDocumentsRequest', ], 'output' => [ 'shape' => 'UploadDocumentsResponse', ], 'errors' => [ [ 'shape' => 'DocumentServiceException', ], ], ], ], 'shapes' => [ 'Adds' => [ 'type' => 'long', ], 'Blob' => [ 'type' => 'blob', 'streaming' => true, ], 'Bucket' => [ 'type' => 'structure', 'members' => [ 'value' => [ 'shape' => 'String', ], 'count' => [ 'shape' => 'Long', ], ], ], 'BucketInfo' => [ 'type' => 'structure', 'members' => [ 'buckets' => [ 'shape' => 'BucketList', ], ], ], 'BucketList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Bucket', ], ], 'ContentType' => [ 'type' => 'string', 'enum' => [ 'application/json', 'application/xml', ], ], 'Cursor' => [ 'type' => 'string', ], 'Deletes' => [ 'type' => 'long', ], 'DocumentServiceException' => [ 'type' => 'structure', 'members' => [ 'status' => [ 'shape' => 'String', ], 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'DocumentServiceWarning' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], ], 'DocumentServiceWarnings' => [ 'type' => 'list', 'member' => [ 'shape' => 'DocumentServiceWarning', ], ], 'Double' => [ 'type' => 'double', ], 'Expr' => [ 'type' => 'string', ], 'Exprs' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'String', ], ], 'Facet' => [ 'type' => 'string', ], 'Facets' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'BucketInfo', ], ], 'FieldStats' => [ 'type' => 'structure', 'members' => [ 'min' => [ 'shape' => 'String', ], 'max' => [ 'shape' => 'String', ], 'count' => [ 'shape' => 'Long', ], 'missing' => [ 'shape' => 'Long', ], 'sum' => [ 'shape' => 'Double', ], 'sumOfSquares' => [ 'shape' => 'Double', ], 'mean' => [ 'shape' => 'String', ], 'stddev' => [ 'shape' => 'Double', ], ], ], 'FieldValue' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], 'Fields' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'FieldValue', ], ], 'FilterQuery' => [ 'type' => 'string', ], 'Highlight' => [ 'type' => 'string', ], 'Highlights' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'String', ], ], 'Hit' => [ 'type' => 'structure', 'members' => [ 'id' => [ 'shape' => 'String', ], 'fields' => [ 'shape' => 'Fields', ], 'exprs' => [ 'shape' => 'Exprs', ], 'highlights' => [ 'shape' => 'Highlights', ], ], ], 'HitList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Hit', ], ], 'Hits' => [ 'type' => 'structure', 'members' => [ 'found' => [ 'shape' => 'Long', ], 'start' => [ 'shape' => 'Long', ], 'cursor' => [ 'shape' => 'String', ], 'hit' => [ 'shape' => 'HitList', ], ], ], 'Long' => [ 'type' => 'long', ], 'Partial' => [ 'type' => 'boolean', ], 'Query' => [ 'type' => 'string', ], 'QueryOptions' => [ 'type' => 'string', ], 'QueryParser' => [ 'type' => 'string', 'enum' => [ 'simple', 'structured', 'lucene', 'dismax', ], ], 'Return' => [ 'type' => 'string', ], 'SearchException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'SearchRequest' => [ 'type' => 'structure', 'required' => [ 'query', ], 'members' => [ 'cursor' => [ 'shape' => 'Cursor', 'location' => 'querystring', 'locationName' => 'cursor', ], 'expr' => [ 'shape' => 'Expr', 'location' => 'querystring', 'locationName' => 'expr', ], 'facet' => [ 'shape' => 'Facet', 'location' => 'querystring', 'locationName' => 'facet', ], 'filterQuery' => [ 'shape' => 'FilterQuery', 'location' => 'querystring', 'locationName' => 'fq', ], 'highlight' => [ 'shape' => 'Highlight', 'location' => 'querystring', 'locationName' => 'highlight', ], 'partial' => [ 'shape' => 'Partial', 'location' => 'querystring', 'locationName' => 'partial', ], 'query' => [ 'shape' => 'Query', 'location' => 'querystring', 'locationName' => 'q', ], 'queryOptions' => [ 'shape' => 'QueryOptions', 'location' => 'querystring', 'locationName' => 'q.options', ], 'queryParser' => [ 'shape' => 'QueryParser', 'location' => 'querystring', 'locationName' => 'q.parser', ], 'return' => [ 'shape' => 'Return', 'location' => 'querystring', 'locationName' => 'return', ], 'size' => [ 'shape' => 'Size', 'location' => 'querystring', 'locationName' => 'size', ], 'sort' => [ 'shape' => 'Sort', 'location' => 'querystring', 'locationName' => 'sort', ], 'start' => [ 'shape' => 'Start', 'location' => 'querystring', 'locationName' => 'start', ], 'stats' => [ 'shape' => 'Stat', 'location' => 'querystring', 'locationName' => 'stats', ], ], ], 'SearchResponse' => [ 'type' => 'structure', 'members' => [ 'status' => [ 'shape' => 'SearchStatus', ], 'hits' => [ 'shape' => 'Hits', ], 'facets' => [ 'shape' => 'Facets', ], 'stats' => [ 'shape' => 'Stats', ], ], ], 'SearchStatus' => [ 'type' => 'structure', 'members' => [ 'timems' => [ 'shape' => 'Long', ], 'rid' => [ 'shape' => 'String', ], ], ], 'Size' => [ 'type' => 'long', ], 'Sort' => [ 'type' => 'string', ], 'Start' => [ 'type' => 'long', ], 'Stat' => [ 'type' => 'string', ], 'Stats' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'FieldStats', ], ], 'String' => [ 'type' => 'string', ], 'SuggestModel' => [ 'type' => 'structure', 'members' => [ 'query' => [ 'shape' => 'String', ], 'found' => [ 'shape' => 'Long', ], 'suggestions' => [ 'shape' => 'Suggestions', ], ], ], 'SuggestRequest' => [ 'type' => 'structure', 'required' => [ 'query', 'suggester', ], 'members' => [ 'query' => [ 'shape' => 'Query', 'location' => 'querystring', 'locationName' => 'q', ], 'suggester' => [ 'shape' => 'Suggester', 'location' => 'querystring', 'locationName' => 'suggester', ], 'size' => [ 'shape' => 'SuggestionsSize', 'location' => 'querystring', 'locationName' => 'size', ], ], ], 'SuggestResponse' => [ 'type' => 'structure', 'members' => [ 'status' => [ 'shape' => 'SuggestStatus', ], 'suggest' => [ 'shape' => 'SuggestModel', ], ], ], 'SuggestStatus' => [ 'type' => 'structure', 'members' => [ 'timems' => [ 'shape' => 'Long', ], 'rid' => [ 'shape' => 'String', ], ], ], 'Suggester' => [ 'type' => 'string', ], 'SuggestionMatch' => [ 'type' => 'structure', 'members' => [ 'suggestion' => [ 'shape' => 'String', ], 'score' => [ 'shape' => 'Long', ], 'id' => [ 'shape' => 'String', ], ], ], 'Suggestions' => [ 'type' => 'list', 'member' => [ 'shape' => 'SuggestionMatch', ], ], 'SuggestionsSize' => [ 'type' => 'long', ], 'UploadDocumentsRequest' => [ 'type' => 'structure', 'required' => [ 'documents', 'contentType', ], 'members' => [ 'documents' => [ 'shape' => 'Blob', ], 'contentType' => [ 'shape' => 'ContentType', 'location' => 'header', 'locationName' => 'Content-Type', ], ], 'payload' => 'documents', ], 'UploadDocumentsResponse' => [ 'type' => 'structure', 'members' => [ 'status' => [ 'shape' => 'String', ], 'adds' => [ 'shape' => 'Adds', ], 'deletes' => [ 'shape' => 'Deletes', ], 'warnings' => [ 'shape' => 'DocumentServiceWarnings', ], ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/ecr/2015-09-21/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2015-09-21', 'endpointPrefix' => 'ecr', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceAbbreviation' => 'Amazon ECR', 'serviceFullName' => 'Amazon EC2 Container Registry', 'signatureVersion' => 'v4', 'targetPrefix' => 'AmazonEC2ContainerRegistry_V20150921', ], 'operations' => [ 'BatchCheckLayerAvailability' => [ 'name' => 'BatchCheckLayerAvailability', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'BatchCheckLayerAvailabilityRequest', ], 'output' => [ 'shape' => 'BatchCheckLayerAvailabilityResponse', ], 'errors' => [ [ 'shape' => 'RepositoryNotFoundException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ServerException', ], ], ], 'BatchDeleteImage' => [ 'name' => 'BatchDeleteImage', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'BatchDeleteImageRequest', ], 'output' => [ 'shape' => 'BatchDeleteImageResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'RepositoryNotFoundException', ], ], ], 'BatchGetImage' => [ 'name' => 'BatchGetImage', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'BatchGetImageRequest', ], 'output' => [ 'shape' => 'BatchGetImageResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'RepositoryNotFoundException', ], ], ], 'CompleteLayerUpload' => [ 'name' => 'CompleteLayerUpload', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CompleteLayerUploadRequest', ], 'output' => [ 'shape' => 'CompleteLayerUploadResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'RepositoryNotFoundException', ], [ 'shape' => 'UploadNotFoundException', ], [ 'shape' => 'InvalidLayerException', ], [ 'shape' => 'LayerPartTooSmallException', ], [ 'shape' => 'LayerAlreadyExistsException', ], [ 'shape' => 'EmptyUploadException', ], ], ], 'CreateRepository' => [ 'name' => 'CreateRepository', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateRepositoryRequest', ], 'output' => [ 'shape' => 'CreateRepositoryResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'RepositoryAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], ], ], 'DeleteRepository' => [ 'name' => 'DeleteRepository', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteRepositoryRequest', ], 'output' => [ 'shape' => 'DeleteRepositoryResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'RepositoryNotFoundException', ], [ 'shape' => 'RepositoryNotEmptyException', ], ], ], 'DeleteRepositoryPolicy' => [ 'name' => 'DeleteRepositoryPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteRepositoryPolicyRequest', ], 'output' => [ 'shape' => 'DeleteRepositoryPolicyResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'RepositoryNotFoundException', ], [ 'shape' => 'RepositoryPolicyNotFoundException', ], ], ], 'DescribeRepositories' => [ 'name' => 'DescribeRepositories', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeRepositoriesRequest', ], 'output' => [ 'shape' => 'DescribeRepositoriesResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'RepositoryNotFoundException', ], ], ], 'GetAuthorizationToken' => [ 'name' => 'GetAuthorizationToken', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetAuthorizationTokenRequest', ], 'output' => [ 'shape' => 'GetAuthorizationTokenResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], ], ], 'GetDownloadUrlForLayer' => [ 'name' => 'GetDownloadUrlForLayer', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetDownloadUrlForLayerRequest', ], 'output' => [ 'shape' => 'GetDownloadUrlForLayerResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'LayersNotFoundException', ], [ 'shape' => 'LayerInaccessibleException', ], [ 'shape' => 'RepositoryNotFoundException', ], ], ], 'GetRepositoryPolicy' => [ 'name' => 'GetRepositoryPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetRepositoryPolicyRequest', ], 'output' => [ 'shape' => 'GetRepositoryPolicyResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'RepositoryNotFoundException', ], [ 'shape' => 'RepositoryPolicyNotFoundException', ], ], ], 'InitiateLayerUpload' => [ 'name' => 'InitiateLayerUpload', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'InitiateLayerUploadRequest', ], 'output' => [ 'shape' => 'InitiateLayerUploadResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'RepositoryNotFoundException', ], ], ], 'ListImages' => [ 'name' => 'ListImages', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListImagesRequest', ], 'output' => [ 'shape' => 'ListImagesResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'RepositoryNotFoundException', ], ], ], 'PutImage' => [ 'name' => 'PutImage', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutImageRequest', ], 'output' => [ 'shape' => 'PutImageResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'RepositoryNotFoundException', ], [ 'shape' => 'ImageAlreadyExistsException', ], [ 'shape' => 'LayersNotFoundException', ], [ 'shape' => 'LimitExceededException', ], ], ], 'SetRepositoryPolicy' => [ 'name' => 'SetRepositoryPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetRepositoryPolicyRequest', ], 'output' => [ 'shape' => 'SetRepositoryPolicyResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'RepositoryNotFoundException', ], ], ], 'UploadLayerPart' => [ 'name' => 'UploadLayerPart', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UploadLayerPartRequest', ], 'output' => [ 'shape' => 'UploadLayerPartResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'InvalidLayerPartException', ], [ 'shape' => 'RepositoryNotFoundException', ], [ 'shape' => 'UploadNotFoundException', ], [ 'shape' => 'LimitExceededException', ], ], ], ], 'shapes' => [ 'Arn' => [ 'type' => 'string', ], 'AuthorizationData' => [ 'type' => 'structure', 'members' => [ 'authorizationToken' => [ 'shape' => 'Base64', ], 'expiresAt' => [ 'shape' => 'ExpirationTimestamp', ], 'proxyEndpoint' => [ 'shape' => 'ProxyEndpoint', ], ], ], 'AuthorizationDataList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AuthorizationData', ], ], 'Base64' => [ 'type' => 'string', 'pattern' => '^\\S+$', ], 'BatchCheckLayerAvailabilityRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', 'layerDigests', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'layerDigests' => [ 'shape' => 'BatchedOperationLayerDigestList', ], ], ], 'BatchCheckLayerAvailabilityResponse' => [ 'type' => 'structure', 'members' => [ 'layers' => [ 'shape' => 'LayerList', ], 'failures' => [ 'shape' => 'LayerFailureList', ], ], ], 'BatchDeleteImageRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', 'imageIds', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'imageIds' => [ 'shape' => 'ImageIdentifierList', ], ], ], 'BatchDeleteImageResponse' => [ 'type' => 'structure', 'members' => [ 'imageIds' => [ 'shape' => 'ImageIdentifierList', ], 'failures' => [ 'shape' => 'ImageFailureList', ], ], ], 'BatchGetImageRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', 'imageIds', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'imageIds' => [ 'shape' => 'ImageIdentifierList', ], ], ], 'BatchGetImageResponse' => [ 'type' => 'structure', 'members' => [ 'images' => [ 'shape' => 'ImageList', ], 'failures' => [ 'shape' => 'ImageFailureList', ], ], ], 'BatchedOperationLayerDigest' => [ 'type' => 'string', 'max' => 1000, 'min' => 0, ], 'BatchedOperationLayerDigestList' => [ 'type' => 'list', 'member' => [ 'shape' => 'BatchedOperationLayerDigest', ], 'max' => 100, 'min' => 1, ], 'CompleteLayerUploadRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', 'uploadId', 'layerDigests', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'uploadId' => [ 'shape' => 'UploadId', ], 'layerDigests' => [ 'shape' => 'LayerDigestList', ], ], ], 'CompleteLayerUploadResponse' => [ 'type' => 'structure', 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'uploadId' => [ 'shape' => 'UploadId', ], 'layerDigest' => [ 'shape' => 'LayerDigest', ], ], ], 'CreateRepositoryRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', ], 'members' => [ 'repositoryName' => [ 'shape' => 'RepositoryName', ], ], ], 'CreateRepositoryResponse' => [ 'type' => 'structure', 'members' => [ 'repository' => [ 'shape' => 'Repository', ], ], ], 'DeleteRepositoryPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], ], ], 'DeleteRepositoryPolicyResponse' => [ 'type' => 'structure', 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'policyText' => [ 'shape' => 'RepositoryPolicyText', ], ], ], 'DeleteRepositoryRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'force' => [ 'shape' => 'ForceFlag', ], ], ], 'DeleteRepositoryResponse' => [ 'type' => 'structure', 'members' => [ 'repository' => [ 'shape' => 'Repository', ], ], ], 'DescribeRepositoriesRequest' => [ 'type' => 'structure', 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryNames' => [ 'shape' => 'RepositoryNameList', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'maxResults' => [ 'shape' => 'MaxResults', ], ], ], 'DescribeRepositoriesResponse' => [ 'type' => 'structure', 'members' => [ 'repositories' => [ 'shape' => 'RepositoryList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'EmptyUploadException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'ExceptionMessage' => [ 'type' => 'string', ], 'ExpirationTimestamp' => [ 'type' => 'timestamp', ], 'ForceFlag' => [ 'type' => 'boolean', ], 'GetAuthorizationTokenRegistryIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'RegistryId', ], 'max' => 10, 'min' => 1, ], 'GetAuthorizationTokenRequest' => [ 'type' => 'structure', 'members' => [ 'registryIds' => [ 'shape' => 'GetAuthorizationTokenRegistryIdList', ], ], ], 'GetAuthorizationTokenResponse' => [ 'type' => 'structure', 'members' => [ 'authorizationData' => [ 'shape' => 'AuthorizationDataList', ], ], ], 'GetDownloadUrlForLayerRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', 'layerDigest', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'layerDigest' => [ 'shape' => 'LayerDigest', ], ], ], 'GetDownloadUrlForLayerResponse' => [ 'type' => 'structure', 'members' => [ 'downloadUrl' => [ 'shape' => 'Url', ], 'layerDigest' => [ 'shape' => 'LayerDigest', ], ], ], 'GetRepositoryPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], ], ], 'GetRepositoryPolicyResponse' => [ 'type' => 'structure', 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'policyText' => [ 'shape' => 'RepositoryPolicyText', ], ], ], 'Image' => [ 'type' => 'structure', 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'imageId' => [ 'shape' => 'ImageIdentifier', ], 'imageManifest' => [ 'shape' => 'ImageManifest', ], ], ], 'ImageAlreadyExistsException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'ImageDigest' => [ 'type' => 'string', ], 'ImageFailure' => [ 'type' => 'structure', 'members' => [ 'imageId' => [ 'shape' => 'ImageIdentifier', ], 'failureCode' => [ 'shape' => 'ImageFailureCode', ], 'failureReason' => [ 'shape' => 'ImageFailureReason', ], ], ], 'ImageFailureCode' => [ 'type' => 'string', 'enum' => [ 'InvalidImageDigest', 'InvalidImageTag', 'ImageTagDoesNotMatchDigest', 'ImageNotFound', 'MissingDigestAndTag', ], ], 'ImageFailureList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ImageFailure', ], ], 'ImageFailureReason' => [ 'type' => 'string', ], 'ImageIdentifier' => [ 'type' => 'structure', 'members' => [ 'imageDigest' => [ 'shape' => 'ImageDigest', ], 'imageTag' => [ 'shape' => 'ImageTag', ], ], ], 'ImageIdentifierList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ImageIdentifier', ], 'max' => 100, 'min' => 1, ], 'ImageList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Image', ], ], 'ImageManifest' => [ 'type' => 'string', ], 'ImageTag' => [ 'type' => 'string', ], 'InitiateLayerUploadRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], ], ], 'InitiateLayerUploadResponse' => [ 'type' => 'structure', 'members' => [ 'uploadId' => [ 'shape' => 'UploadId', ], 'partSize' => [ 'shape' => 'PartSize', ], ], ], 'InvalidLayerException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'InvalidLayerPartException' => [ 'type' => 'structure', 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'uploadId' => [ 'shape' => 'UploadId', ], 'lastValidByteReceived' => [ 'shape' => 'PartSize', ], 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'InvalidParameterException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'Layer' => [ 'type' => 'structure', 'members' => [ 'layerDigest' => [ 'shape' => 'LayerDigest', ], 'layerAvailability' => [ 'shape' => 'LayerAvailability', ], 'layerSize' => [ 'shape' => 'LayerSizeInBytes', ], ], ], 'LayerAlreadyExistsException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'LayerAvailability' => [ 'type' => 'string', 'enum' => [ 'AVAILABLE', 'UNAVAILABLE', ], ], 'LayerDigest' => [ 'type' => 'string', 'pattern' => '[a-zA-Z0-9-_+.]+:[a-fA-F0-9]+', ], 'LayerDigestList' => [ 'type' => 'list', 'member' => [ 'shape' => 'LayerDigest', ], 'max' => 100, 'min' => 1, ], 'LayerFailure' => [ 'type' => 'structure', 'members' => [ 'layerDigest' => [ 'shape' => 'BatchedOperationLayerDigest', ], 'failureCode' => [ 'shape' => 'LayerFailureCode', ], 'failureReason' => [ 'shape' => 'LayerFailureReason', ], ], ], 'LayerFailureCode' => [ 'type' => 'string', 'enum' => [ 'InvalidLayerDigest', 'MissingLayerDigest', ], ], 'LayerFailureList' => [ 'type' => 'list', 'member' => [ 'shape' => 'LayerFailure', ], ], 'LayerFailureReason' => [ 'type' => 'string', ], 'LayerInaccessibleException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'LayerList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Layer', ], ], 'LayerPartBlob' => [ 'type' => 'blob', ], 'LayerPartTooSmallException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'LayerSizeInBytes' => [ 'type' => 'long', ], 'LayersNotFoundException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'LimitExceededException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'ListImagesRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'maxResults' => [ 'shape' => 'MaxResults', ], ], ], 'ListImagesResponse' => [ 'type' => 'structure', 'members' => [ 'imageIds' => [ 'shape' => 'ImageIdentifierList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'MaxResults' => [ 'type' => 'integer', 'max' => 100, 'min' => 1, ], 'NextToken' => [ 'type' => 'string', ], 'PartSize' => [ 'type' => 'long', 'min' => 0, ], 'ProxyEndpoint' => [ 'type' => 'string', ], 'PutImageRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', 'imageManifest', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'imageManifest' => [ 'shape' => 'ImageManifest', ], ], ], 'PutImageResponse' => [ 'type' => 'structure', 'members' => [ 'image' => [ 'shape' => 'Image', ], ], ], 'RegistryId' => [ 'type' => 'string', 'pattern' => '[0-9]{12}', ], 'Repository' => [ 'type' => 'structure', 'members' => [ 'repositoryArn' => [ 'shape' => 'Arn', ], 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'repositoryUri' => [ 'shape' => 'Url', ], ], ], 'RepositoryAlreadyExistsException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'RepositoryList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Repository', ], ], 'RepositoryName' => [ 'type' => 'string', 'max' => 256, 'min' => 2, 'pattern' => '(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*', ], 'RepositoryNameList' => [ 'type' => 'list', 'member' => [ 'shape' => 'RepositoryName', ], 'max' => 100, 'min' => 1, ], 'RepositoryNotEmptyException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'RepositoryNotFoundException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'RepositoryPolicyNotFoundException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'RepositoryPolicyText' => [ 'type' => 'string', 'max' => 10240, 'min' => 0, ], 'ServerException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, 'fault' => true, ], 'SetRepositoryPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', 'policyText', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'policyText' => [ 'shape' => 'RepositoryPolicyText', ], 'force' => [ 'shape' => 'ForceFlag', ], ], ], 'SetRepositoryPolicyResponse' => [ 'type' => 'structure', 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'policyText' => [ 'shape' => 'RepositoryPolicyText', ], ], ], 'UploadId' => [ 'type' => 'string', 'pattern' => '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}', ], 'UploadLayerPartRequest' => [ 'type' => 'structure', 'required' => [ 'repositoryName', 'uploadId', 'partFirstByte', 'partLastByte', 'layerPartBlob', ], 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'uploadId' => [ 'shape' => 'UploadId', ], 'partFirstByte' => [ 'shape' => 'PartSize', ], 'partLastByte' => [ 'shape' => 'PartSize', ], 'layerPartBlob' => [ 'shape' => 'LayerPartBlob', ], ], ], 'UploadLayerPartResponse' => [ 'type' => 'structure', 'members' => [ 'registryId' => [ 'shape' => 'RegistryId', ], 'repositoryName' => [ 'shape' => 'RepositoryName', ], 'uploadId' => [ 'shape' => 'UploadId', ], 'lastByteReceived' => [ 'shape' => 'PartSize', ], ], ], 'UploadNotFoundException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'exception' => true, ], 'Url' => [ 'type' => 'string', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/storagegateway/2013-06-30/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2013-06-30', 'endpointPrefix' => 'storagegateway', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceFullName' => 'AWS Storage Gateway', 'signatureVersion' => 'v4', 'targetPrefix' => 'StorageGateway_20130630', ], 'operations' => [ 'ActivateGateway' => [ 'name' => 'ActivateGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ActivateGatewayInput', ], 'output' => [ 'shape' => 'ActivateGatewayOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'AddCache' => [ 'name' => 'AddCache', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddCacheInput', ], 'output' => [ 'shape' => 'AddCacheOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'AddTagsToResource' => [ 'name' => 'AddTagsToResource', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddTagsToResourceInput', ], 'output' => [ 'shape' => 'AddTagsToResourceOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'AddUploadBuffer' => [ 'name' => 'AddUploadBuffer', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddUploadBufferInput', ], 'output' => [ 'shape' => 'AddUploadBufferOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'AddWorkingStorage' => [ 'name' => 'AddWorkingStorage', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddWorkingStorageInput', ], 'output' => [ 'shape' => 'AddWorkingStorageOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'CancelArchival' => [ 'name' => 'CancelArchival', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelArchivalInput', ], 'output' => [ 'shape' => 'CancelArchivalOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'CancelRetrieval' => [ 'name' => 'CancelRetrieval', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelRetrievalInput', ], 'output' => [ 'shape' => 'CancelRetrievalOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'CreateCachediSCSIVolume' => [ 'name' => 'CreateCachediSCSIVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateCachediSCSIVolumeInput', ], 'output' => [ 'shape' => 'CreateCachediSCSIVolumeOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'CreateSnapshot' => [ 'name' => 'CreateSnapshot', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateSnapshotInput', ], 'output' => [ 'shape' => 'CreateSnapshotOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'CreateSnapshotFromVolumeRecoveryPoint' => [ 'name' => 'CreateSnapshotFromVolumeRecoveryPoint', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateSnapshotFromVolumeRecoveryPointInput', ], 'output' => [ 'shape' => 'CreateSnapshotFromVolumeRecoveryPointOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'CreateStorediSCSIVolume' => [ 'name' => 'CreateStorediSCSIVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateStorediSCSIVolumeInput', ], 'output' => [ 'shape' => 'CreateStorediSCSIVolumeOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'CreateTapeWithBarcode' => [ 'name' => 'CreateTapeWithBarcode', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateTapeWithBarcodeInput', ], 'output' => [ 'shape' => 'CreateTapeWithBarcodeOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'CreateTapes' => [ 'name' => 'CreateTapes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateTapesInput', ], 'output' => [ 'shape' => 'CreateTapesOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DeleteBandwidthRateLimit' => [ 'name' => 'DeleteBandwidthRateLimit', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteBandwidthRateLimitInput', ], 'output' => [ 'shape' => 'DeleteBandwidthRateLimitOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DeleteChapCredentials' => [ 'name' => 'DeleteChapCredentials', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteChapCredentialsInput', ], 'output' => [ 'shape' => 'DeleteChapCredentialsOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DeleteGateway' => [ 'name' => 'DeleteGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteGatewayInput', ], 'output' => [ 'shape' => 'DeleteGatewayOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DeleteSnapshotSchedule' => [ 'name' => 'DeleteSnapshotSchedule', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSnapshotScheduleInput', ], 'output' => [ 'shape' => 'DeleteSnapshotScheduleOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DeleteTape' => [ 'name' => 'DeleteTape', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteTapeInput', ], 'output' => [ 'shape' => 'DeleteTapeOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DeleteTapeArchive' => [ 'name' => 'DeleteTapeArchive', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteTapeArchiveInput', ], 'output' => [ 'shape' => 'DeleteTapeArchiveOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DeleteVolume' => [ 'name' => 'DeleteVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteVolumeInput', ], 'output' => [ 'shape' => 'DeleteVolumeOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeBandwidthRateLimit' => [ 'name' => 'DescribeBandwidthRateLimit', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeBandwidthRateLimitInput', ], 'output' => [ 'shape' => 'DescribeBandwidthRateLimitOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeCache' => [ 'name' => 'DescribeCache', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeCacheInput', ], 'output' => [ 'shape' => 'DescribeCacheOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeCachediSCSIVolumes' => [ 'name' => 'DescribeCachediSCSIVolumes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeCachediSCSIVolumesInput', ], 'output' => [ 'shape' => 'DescribeCachediSCSIVolumesOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeChapCredentials' => [ 'name' => 'DescribeChapCredentials', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeChapCredentialsInput', ], 'output' => [ 'shape' => 'DescribeChapCredentialsOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeGatewayInformation' => [ 'name' => 'DescribeGatewayInformation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeGatewayInformationInput', ], 'output' => [ 'shape' => 'DescribeGatewayInformationOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeMaintenanceStartTime' => [ 'name' => 'DescribeMaintenanceStartTime', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeMaintenanceStartTimeInput', ], 'output' => [ 'shape' => 'DescribeMaintenanceStartTimeOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeSnapshotSchedule' => [ 'name' => 'DescribeSnapshotSchedule', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSnapshotScheduleInput', ], 'output' => [ 'shape' => 'DescribeSnapshotScheduleOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeStorediSCSIVolumes' => [ 'name' => 'DescribeStorediSCSIVolumes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeStorediSCSIVolumesInput', ], 'output' => [ 'shape' => 'DescribeStorediSCSIVolumesOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeTapeArchives' => [ 'name' => 'DescribeTapeArchives', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeTapeArchivesInput', ], 'output' => [ 'shape' => 'DescribeTapeArchivesOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeTapeRecoveryPoints' => [ 'name' => 'DescribeTapeRecoveryPoints', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeTapeRecoveryPointsInput', ], 'output' => [ 'shape' => 'DescribeTapeRecoveryPointsOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeTapes' => [ 'name' => 'DescribeTapes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeTapesInput', ], 'output' => [ 'shape' => 'DescribeTapesOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeUploadBuffer' => [ 'name' => 'DescribeUploadBuffer', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeUploadBufferInput', ], 'output' => [ 'shape' => 'DescribeUploadBufferOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeVTLDevices' => [ 'name' => 'DescribeVTLDevices', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVTLDevicesInput', ], 'output' => [ 'shape' => 'DescribeVTLDevicesOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DescribeWorkingStorage' => [ 'name' => 'DescribeWorkingStorage', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeWorkingStorageInput', ], 'output' => [ 'shape' => 'DescribeWorkingStorageOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'DisableGateway' => [ 'name' => 'DisableGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DisableGatewayInput', ], 'output' => [ 'shape' => 'DisableGatewayOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'ListGateways' => [ 'name' => 'ListGateways', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListGatewaysInput', ], 'output' => [ 'shape' => 'ListGatewaysOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'ListLocalDisks' => [ 'name' => 'ListLocalDisks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListLocalDisksInput', ], 'output' => [ 'shape' => 'ListLocalDisksOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'ListTagsForResource' => [ 'name' => 'ListTagsForResource', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListTagsForResourceInput', ], 'output' => [ 'shape' => 'ListTagsForResourceOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'ListTapes' => [ 'name' => 'ListTapes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListTapesInput', ], 'output' => [ 'shape' => 'ListTapesOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'ListVolumeInitiators' => [ 'name' => 'ListVolumeInitiators', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListVolumeInitiatorsInput', ], 'output' => [ 'shape' => 'ListVolumeInitiatorsOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'ListVolumeRecoveryPoints' => [ 'name' => 'ListVolumeRecoveryPoints', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListVolumeRecoveryPointsInput', ], 'output' => [ 'shape' => 'ListVolumeRecoveryPointsOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'ListVolumes' => [ 'name' => 'ListVolumes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListVolumesInput', ], 'output' => [ 'shape' => 'ListVolumesOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'RemoveTagsFromResource' => [ 'name' => 'RemoveTagsFromResource', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RemoveTagsFromResourceInput', ], 'output' => [ 'shape' => 'RemoveTagsFromResourceOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'ResetCache' => [ 'name' => 'ResetCache', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ResetCacheInput', ], 'output' => [ 'shape' => 'ResetCacheOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'RetrieveTapeArchive' => [ 'name' => 'RetrieveTapeArchive', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RetrieveTapeArchiveInput', ], 'output' => [ 'shape' => 'RetrieveTapeArchiveOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'RetrieveTapeRecoveryPoint' => [ 'name' => 'RetrieveTapeRecoveryPoint', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RetrieveTapeRecoveryPointInput', ], 'output' => [ 'shape' => 'RetrieveTapeRecoveryPointOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'SetLocalConsolePassword' => [ 'name' => 'SetLocalConsolePassword', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetLocalConsolePasswordInput', ], 'output' => [ 'shape' => 'SetLocalConsolePasswordOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'ShutdownGateway' => [ 'name' => 'ShutdownGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ShutdownGatewayInput', ], 'output' => [ 'shape' => 'ShutdownGatewayOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'StartGateway' => [ 'name' => 'StartGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StartGatewayInput', ], 'output' => [ 'shape' => 'StartGatewayOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'UpdateBandwidthRateLimit' => [ 'name' => 'UpdateBandwidthRateLimit', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateBandwidthRateLimitInput', ], 'output' => [ 'shape' => 'UpdateBandwidthRateLimitOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'UpdateChapCredentials' => [ 'name' => 'UpdateChapCredentials', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateChapCredentialsInput', ], 'output' => [ 'shape' => 'UpdateChapCredentialsOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'UpdateGatewayInformation' => [ 'name' => 'UpdateGatewayInformation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateGatewayInformationInput', ], 'output' => [ 'shape' => 'UpdateGatewayInformationOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'UpdateGatewaySoftwareNow' => [ 'name' => 'UpdateGatewaySoftwareNow', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateGatewaySoftwareNowInput', ], 'output' => [ 'shape' => 'UpdateGatewaySoftwareNowOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'UpdateMaintenanceStartTime' => [ 'name' => 'UpdateMaintenanceStartTime', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateMaintenanceStartTimeInput', ], 'output' => [ 'shape' => 'UpdateMaintenanceStartTimeOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'UpdateSnapshotSchedule' => [ 'name' => 'UpdateSnapshotSchedule', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateSnapshotScheduleInput', ], 'output' => [ 'shape' => 'UpdateSnapshotScheduleOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], 'UpdateVTLDeviceType' => [ 'name' => 'UpdateVTLDeviceType', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateVTLDeviceTypeInput', ], 'output' => [ 'shape' => 'UpdateVTLDeviceTypeOutput', ], 'errors' => [ [ 'shape' => 'InvalidGatewayRequestException', ], [ 'shape' => 'InternalServerError', ], ], ], ], 'shapes' => [ 'ActivateGatewayInput' => [ 'type' => 'structure', 'required' => [ 'ActivationKey', 'GatewayName', 'GatewayTimezone', 'GatewayRegion', ], 'members' => [ 'ActivationKey' => [ 'shape' => 'ActivationKey', ], 'GatewayName' => [ 'shape' => 'GatewayName', ], 'GatewayTimezone' => [ 'shape' => 'GatewayTimezone', ], 'GatewayRegion' => [ 'shape' => 'RegionId', ], 'GatewayType' => [ 'shape' => 'GatewayType', ], 'TapeDriveType' => [ 'shape' => 'TapeDriveType', ], 'MediumChangerType' => [ 'shape' => 'MediumChangerType', ], ], ], 'ActivateGatewayOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'ActivationKey' => [ 'type' => 'string', 'max' => 50, 'min' => 1, ], 'AddCacheInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'DiskIds', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'DiskIds' => [ 'shape' => 'DiskIds', ], ], ], 'AddCacheOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'AddTagsToResourceInput' => [ 'type' => 'structure', 'required' => [ 'ResourceARN', 'Tags', ], 'members' => [ 'ResourceARN' => [ 'shape' => 'ResourceARN', ], 'Tags' => [ 'shape' => 'Tags', ], ], ], 'AddTagsToResourceOutput' => [ 'type' => 'structure', 'members' => [ 'ResourceARN' => [ 'shape' => 'ResourceARN', ], ], ], 'AddUploadBufferInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'DiskIds', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'DiskIds' => [ 'shape' => 'DiskIds', ], ], ], 'AddUploadBufferOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'AddWorkingStorageInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'DiskIds', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'DiskIds' => [ 'shape' => 'DiskIds', ], ], ], 'AddWorkingStorageOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'BandwidthDownloadRateLimit' => [ 'type' => 'long', 'min' => 102400, ], 'BandwidthType' => [ 'type' => 'string', 'max' => 25, 'min' => 3, ], 'BandwidthUploadRateLimit' => [ 'type' => 'long', 'min' => 51200, ], 'CachediSCSIVolume' => [ 'type' => 'structure', 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], 'VolumeId' => [ 'shape' => 'VolumeId', ], 'VolumeType' => [ 'shape' => 'VolumeType', ], 'VolumeStatus' => [ 'shape' => 'VolumeStatus', ], 'VolumeSizeInBytes' => [ 'shape' => 'long', ], 'VolumeProgress' => [ 'shape' => 'DoubleObject', ], 'SourceSnapshotId' => [ 'shape' => 'SnapshotId', ], 'VolumeiSCSIAttributes' => [ 'shape' => 'VolumeiSCSIAttributes', ], ], ], 'CachediSCSIVolumes' => [ 'type' => 'list', 'member' => [ 'shape' => 'CachediSCSIVolume', ], ], 'CancelArchivalInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'TapeARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'TapeARN' => [ 'shape' => 'TapeARN', ], ], ], 'CancelArchivalOutput' => [ 'type' => 'structure', 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], ], ], 'CancelRetrievalInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'TapeARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'TapeARN' => [ 'shape' => 'TapeARN', ], ], ], 'CancelRetrievalOutput' => [ 'type' => 'structure', 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], ], ], 'ChapCredentials' => [ 'type' => 'list', 'member' => [ 'shape' => 'ChapInfo', ], ], 'ChapInfo' => [ 'type' => 'structure', 'members' => [ 'TargetARN' => [ 'shape' => 'TargetARN', ], 'SecretToAuthenticateInitiator' => [ 'shape' => 'ChapSecret', ], 'InitiatorName' => [ 'shape' => 'IqnName', ], 'SecretToAuthenticateTarget' => [ 'shape' => 'ChapSecret', ], ], ], 'ChapSecret' => [ 'type' => 'string', 'max' => 100, 'min' => 1, ], 'ClientToken' => [ 'type' => 'string', 'max' => 100, 'min' => 5, ], 'CreateCachediSCSIVolumeInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'VolumeSizeInBytes', 'TargetName', 'NetworkInterfaceId', 'ClientToken', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'VolumeSizeInBytes' => [ 'shape' => 'long', ], 'SnapshotId' => [ 'shape' => 'SnapshotId', ], 'TargetName' => [ 'shape' => 'TargetName', ], 'NetworkInterfaceId' => [ 'shape' => 'NetworkInterfaceId', ], 'ClientToken' => [ 'shape' => 'ClientToken', ], ], ], 'CreateCachediSCSIVolumeOutput' => [ 'type' => 'structure', 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], 'TargetARN' => [ 'shape' => 'TargetARN', ], ], ], 'CreateSnapshotFromVolumeRecoveryPointInput' => [ 'type' => 'structure', 'required' => [ 'VolumeARN', 'SnapshotDescription', ], 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], 'SnapshotDescription' => [ 'shape' => 'SnapshotDescription', ], ], ], 'CreateSnapshotFromVolumeRecoveryPointOutput' => [ 'type' => 'structure', 'members' => [ 'SnapshotId' => [ 'shape' => 'SnapshotId', ], 'VolumeARN' => [ 'shape' => 'VolumeARN', ], 'VolumeRecoveryPointTime' => [ 'shape' => 'string', ], ], ], 'CreateSnapshotInput' => [ 'type' => 'structure', 'required' => [ 'VolumeARN', 'SnapshotDescription', ], 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], 'SnapshotDescription' => [ 'shape' => 'SnapshotDescription', ], ], ], 'CreateSnapshotOutput' => [ 'type' => 'structure', 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], 'SnapshotId' => [ 'shape' => 'SnapshotId', ], ], ], 'CreateStorediSCSIVolumeInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'DiskId', 'PreserveExistingData', 'TargetName', 'NetworkInterfaceId', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'DiskId' => [ 'shape' => 'DiskId', ], 'SnapshotId' => [ 'shape' => 'SnapshotId', ], 'PreserveExistingData' => [ 'shape' => 'boolean', ], 'TargetName' => [ 'shape' => 'TargetName', ], 'NetworkInterfaceId' => [ 'shape' => 'NetworkInterfaceId', ], ], ], 'CreateStorediSCSIVolumeOutput' => [ 'type' => 'structure', 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], 'VolumeSizeInBytes' => [ 'shape' => 'long', ], 'TargetARN' => [ 'shape' => 'TargetARN', ], ], ], 'CreateTapeWithBarcodeInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'TapeSizeInBytes', 'TapeBarcode', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'TapeSizeInBytes' => [ 'shape' => 'TapeSize', ], 'TapeBarcode' => [ 'shape' => 'TapeBarcode', ], ], ], 'CreateTapeWithBarcodeOutput' => [ 'type' => 'structure', 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], ], ], 'CreateTapesInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'TapeSizeInBytes', 'ClientToken', 'NumTapesToCreate', 'TapeBarcodePrefix', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'TapeSizeInBytes' => [ 'shape' => 'TapeSize', ], 'ClientToken' => [ 'shape' => 'ClientToken', ], 'NumTapesToCreate' => [ 'shape' => 'NumTapesToCreate', ], 'TapeBarcodePrefix' => [ 'shape' => 'TapeBarcodePrefix', ], ], ], 'CreateTapesOutput' => [ 'type' => 'structure', 'members' => [ 'TapeARNs' => [ 'shape' => 'TapeARNs', ], ], ], 'DayOfWeek' => [ 'type' => 'integer', 'max' => 6, 'min' => 0, ], 'DeleteBandwidthRateLimitInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'BandwidthType', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'BandwidthType' => [ 'shape' => 'BandwidthType', ], ], ], 'DeleteBandwidthRateLimitOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'DeleteChapCredentialsInput' => [ 'type' => 'structure', 'required' => [ 'TargetARN', 'InitiatorName', ], 'members' => [ 'TargetARN' => [ 'shape' => 'TargetARN', ], 'InitiatorName' => [ 'shape' => 'IqnName', ], ], ], 'DeleteChapCredentialsOutput' => [ 'type' => 'structure', 'members' => [ 'TargetARN' => [ 'shape' => 'TargetARN', ], 'InitiatorName' => [ 'shape' => 'IqnName', ], ], ], 'DeleteGatewayInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'DeleteGatewayOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'DeleteSnapshotScheduleInput' => [ 'type' => 'structure', 'required' => [ 'VolumeARN', ], 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], ], ], 'DeleteSnapshotScheduleOutput' => [ 'type' => 'structure', 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], ], ], 'DeleteTapeArchiveInput' => [ 'type' => 'structure', 'required' => [ 'TapeARN', ], 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], ], ], 'DeleteTapeArchiveOutput' => [ 'type' => 'structure', 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], ], ], 'DeleteTapeInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'TapeARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'TapeARN' => [ 'shape' => 'TapeARN', ], ], ], 'DeleteTapeOutput' => [ 'type' => 'structure', 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], ], ], 'DeleteVolumeInput' => [ 'type' => 'structure', 'required' => [ 'VolumeARN', ], 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], ], ], 'DeleteVolumeOutput' => [ 'type' => 'structure', 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], ], ], 'DescribeBandwidthRateLimitInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'DescribeBandwidthRateLimitOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'AverageUploadRateLimitInBitsPerSec' => [ 'shape' => 'BandwidthUploadRateLimit', ], 'AverageDownloadRateLimitInBitsPerSec' => [ 'shape' => 'BandwidthDownloadRateLimit', ], ], ], 'DescribeCacheInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'DescribeCacheOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'DiskIds' => [ 'shape' => 'DiskIds', ], 'CacheAllocatedInBytes' => [ 'shape' => 'long', ], 'CacheUsedPercentage' => [ 'shape' => 'double', ], 'CacheDirtyPercentage' => [ 'shape' => 'double', ], 'CacheHitPercentage' => [ 'shape' => 'double', ], 'CacheMissPercentage' => [ 'shape' => 'double', ], ], ], 'DescribeCachediSCSIVolumesInput' => [ 'type' => 'structure', 'required' => [ 'VolumeARNs', ], 'members' => [ 'VolumeARNs' => [ 'shape' => 'VolumeARNs', ], ], ], 'DescribeCachediSCSIVolumesOutput' => [ 'type' => 'structure', 'members' => [ 'CachediSCSIVolumes' => [ 'shape' => 'CachediSCSIVolumes', ], ], ], 'DescribeChapCredentialsInput' => [ 'type' => 'structure', 'required' => [ 'TargetARN', ], 'members' => [ 'TargetARN' => [ 'shape' => 'TargetARN', ], ], ], 'DescribeChapCredentialsOutput' => [ 'type' => 'structure', 'members' => [ 'ChapCredentials' => [ 'shape' => 'ChapCredentials', ], ], ], 'DescribeGatewayInformationInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'DescribeGatewayInformationOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'GatewayId' => [ 'shape' => 'GatewayId', ], 'GatewayName' => [ 'shape' => 'string', ], 'GatewayTimezone' => [ 'shape' => 'GatewayTimezone', ], 'GatewayState' => [ 'shape' => 'GatewayState', ], 'GatewayNetworkInterfaces' => [ 'shape' => 'GatewayNetworkInterfaces', ], 'GatewayType' => [ 'shape' => 'GatewayType', ], 'NextUpdateAvailabilityDate' => [ 'shape' => 'NextUpdateAvailabilityDate', ], 'LastSoftwareUpdate' => [ 'shape' => 'LastSoftwareUpdate', ], ], ], 'DescribeMaintenanceStartTimeInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'DescribeMaintenanceStartTimeOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'HourOfDay' => [ 'shape' => 'HourOfDay', ], 'MinuteOfHour' => [ 'shape' => 'MinuteOfHour', ], 'DayOfWeek' => [ 'shape' => 'DayOfWeek', ], 'Timezone' => [ 'shape' => 'GatewayTimezone', ], ], ], 'DescribeSnapshotScheduleInput' => [ 'type' => 'structure', 'required' => [ 'VolumeARN', ], 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], ], ], 'DescribeSnapshotScheduleOutput' => [ 'type' => 'structure', 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], 'StartAt' => [ 'shape' => 'HourOfDay', ], 'RecurrenceInHours' => [ 'shape' => 'RecurrenceInHours', ], 'Description' => [ 'shape' => 'Description', ], 'Timezone' => [ 'shape' => 'GatewayTimezone', ], ], ], 'DescribeStorediSCSIVolumesInput' => [ 'type' => 'structure', 'required' => [ 'VolumeARNs', ], 'members' => [ 'VolumeARNs' => [ 'shape' => 'VolumeARNs', ], ], ], 'DescribeStorediSCSIVolumesOutput' => [ 'type' => 'structure', 'members' => [ 'StorediSCSIVolumes' => [ 'shape' => 'StorediSCSIVolumes', ], ], ], 'DescribeTapeArchivesInput' => [ 'type' => 'structure', 'members' => [ 'TapeARNs' => [ 'shape' => 'TapeARNs', ], 'Marker' => [ 'shape' => 'Marker', ], 'Limit' => [ 'shape' => 'PositiveIntObject', ], ], ], 'DescribeTapeArchivesOutput' => [ 'type' => 'structure', 'members' => [ 'TapeArchives' => [ 'shape' => 'TapeArchives', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'DescribeTapeRecoveryPointsInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'Marker' => [ 'shape' => 'Marker', ], 'Limit' => [ 'shape' => 'PositiveIntObject', ], ], ], 'DescribeTapeRecoveryPointsOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'TapeRecoveryPointInfos' => [ 'shape' => 'TapeRecoveryPointInfos', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'DescribeTapesInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'TapeARNs' => [ 'shape' => 'TapeARNs', ], 'Marker' => [ 'shape' => 'Marker', ], 'Limit' => [ 'shape' => 'PositiveIntObject', ], ], ], 'DescribeTapesOutput' => [ 'type' => 'structure', 'members' => [ 'Tapes' => [ 'shape' => 'Tapes', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'DescribeUploadBufferInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'DescribeUploadBufferOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'DiskIds' => [ 'shape' => 'DiskIds', ], 'UploadBufferUsedInBytes' => [ 'shape' => 'long', ], 'UploadBufferAllocatedInBytes' => [ 'shape' => 'long', ], ], ], 'DescribeVTLDevicesInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'VTLDeviceARNs' => [ 'shape' => 'VTLDeviceARNs', ], 'Marker' => [ 'shape' => 'Marker', ], 'Limit' => [ 'shape' => 'PositiveIntObject', ], ], ], 'DescribeVTLDevicesOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'VTLDevices' => [ 'shape' => 'VTLDevices', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'DescribeWorkingStorageInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'DescribeWorkingStorageOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'DiskIds' => [ 'shape' => 'DiskIds', ], 'WorkingStorageUsedInBytes' => [ 'shape' => 'long', ], 'WorkingStorageAllocatedInBytes' => [ 'shape' => 'long', ], ], ], 'Description' => [ 'type' => 'string', 'max' => 255, 'min' => 1, ], 'DeviceType' => [ 'type' => 'string', 'max' => 50, 'min' => 2, ], 'DeviceiSCSIAttributes' => [ 'type' => 'structure', 'members' => [ 'TargetARN' => [ 'shape' => 'TargetARN', ], 'NetworkInterfaceId' => [ 'shape' => 'NetworkInterfaceId', ], 'NetworkInterfacePort' => [ 'shape' => 'integer', ], 'ChapEnabled' => [ 'shape' => 'boolean', ], ], ], 'DisableGatewayInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'DisableGatewayOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'Disk' => [ 'type' => 'structure', 'members' => [ 'DiskId' => [ 'shape' => 'DiskId', ], 'DiskPath' => [ 'shape' => 'string', ], 'DiskNode' => [ 'shape' => 'string', ], 'DiskStatus' => [ 'shape' => 'string', ], 'DiskSizeInBytes' => [ 'shape' => 'long', ], 'DiskAllocationType' => [ 'shape' => 'DiskAllocationType', ], 'DiskAllocationResource' => [ 'shape' => 'string', ], ], ], 'DiskAllocationType' => [ 'type' => 'string', 'max' => 100, 'min' => 3, ], 'DiskId' => [ 'type' => 'string', 'max' => 300, 'min' => 1, ], 'DiskIds' => [ 'type' => 'list', 'member' => [ 'shape' => 'DiskId', ], ], 'Disks' => [ 'type' => 'list', 'member' => [ 'shape' => 'Disk', ], ], 'DoubleObject' => [ 'type' => 'double', ], 'ErrorCode' => [ 'type' => 'string', 'enum' => [ 'ActivationKeyExpired', 'ActivationKeyInvalid', 'ActivationKeyNotFound', 'GatewayInternalError', 'GatewayNotConnected', 'GatewayNotFound', 'GatewayProxyNetworkConnectionBusy', 'AuthenticationFailure', 'BandwidthThrottleScheduleNotFound', 'Blocked', 'CannotExportSnapshot', 'ChapCredentialNotFound', 'DiskAlreadyAllocated', 'DiskDoesNotExist', 'DiskSizeGreaterThanVolumeMaxSize', 'DiskSizeLessThanVolumeSize', 'DiskSizeNotGigAligned', 'DuplicateCertificateInfo', 'DuplicateSchedule', 'EndpointNotFound', 'IAMNotSupported', 'InitiatorInvalid', 'InitiatorNotFound', 'InternalError', 'InvalidGateway', 'InvalidEndpoint', 'InvalidParameters', 'InvalidSchedule', 'LocalStorageLimitExceeded', 'LunAlreadyAllocated ', 'LunInvalid', 'MaximumContentLengthExceeded', 'MaximumTapeCartridgeCountExceeded', 'MaximumVolumeCountExceeded', 'NetworkConfigurationChanged', 'NoDisksAvailable', 'NotImplemented', 'NotSupported', 'OperationAborted', 'OutdatedGateway', 'ParametersNotImplemented', 'RegionInvalid', 'RequestTimeout', 'ServiceUnavailable', 'SnapshotDeleted', 'SnapshotIdInvalid', 'SnapshotInProgress', 'SnapshotNotFound', 'SnapshotScheduleNotFound', 'StagingAreaFull', 'StorageFailure', 'TapeCartridgeNotFound', 'TargetAlreadyExists', 'TargetInvalid', 'TargetNotFound', 'UnauthorizedOperation', 'VolumeAlreadyExists', 'VolumeIdInvalid', 'VolumeInUse', 'VolumeNotFound', 'VolumeNotReady', ], ], 'GatewayARN' => [ 'type' => 'string', 'max' => 500, 'min' => 50, ], 'GatewayId' => [ 'type' => 'string', 'max' => 30, 'min' => 12, ], 'GatewayInfo' => [ 'type' => 'structure', 'members' => [ 'GatewayId' => [ 'shape' => 'GatewayId', ], 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'GatewayType' => [ 'shape' => 'GatewayType', ], 'GatewayOperationalState' => [ 'shape' => 'GatewayOperationalState', ], 'GatewayName' => [ 'shape' => 'string', ], ], ], 'GatewayName' => [ 'type' => 'string', 'max' => 255, 'min' => 2, 'pattern' => '^[ -\\.0-\\[\\]-~]*[!-\\.0-\\[\\]-~][ -\\.0-\\[\\]-~]*$', ], 'GatewayNetworkInterfaces' => [ 'type' => 'list', 'member' => [ 'shape' => 'NetworkInterface', ], ], 'GatewayOperationalState' => [ 'type' => 'string', 'max' => 25, 'min' => 2, ], 'GatewayState' => [ 'type' => 'string', 'max' => 25, 'min' => 2, ], 'GatewayTimezone' => [ 'type' => 'string', 'max' => 10, 'min' => 3, ], 'GatewayType' => [ 'type' => 'string', 'max' => 20, 'min' => 2, ], 'Gateways' => [ 'type' => 'list', 'member' => [ 'shape' => 'GatewayInfo', ], ], 'HourOfDay' => [ 'type' => 'integer', 'max' => 23, 'min' => 0, ], 'Initiator' => [ 'type' => 'string', 'max' => 50, 'min' => 1, ], 'Initiators' => [ 'type' => 'list', 'member' => [ 'shape' => 'Initiator', ], ], 'InternalServerError' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'string', ], 'error' => [ 'shape' => 'StorageGatewayError', ], ], 'exception' => true, ], 'InvalidGatewayRequestException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'string', ], 'error' => [ 'shape' => 'StorageGatewayError', ], ], 'exception' => true, ], 'IqnName' => [ 'type' => 'string', 'max' => 255, 'min' => 1, 'pattern' => '[0-9a-z:.-]+', ], 'LastSoftwareUpdate' => [ 'type' => 'string', 'max' => 25, 'min' => 1, ], 'ListGatewaysInput' => [ 'type' => 'structure', 'members' => [ 'Marker' => [ 'shape' => 'Marker', ], 'Limit' => [ 'shape' => 'PositiveIntObject', ], ], ], 'ListGatewaysOutput' => [ 'type' => 'structure', 'members' => [ 'Gateways' => [ 'shape' => 'Gateways', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'ListLocalDisksInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'ListLocalDisksOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'Disks' => [ 'shape' => 'Disks', ], ], ], 'ListTagsForResourceInput' => [ 'type' => 'structure', 'required' => [ 'ResourceARN', ], 'members' => [ 'ResourceARN' => [ 'shape' => 'ResourceARN', ], 'Marker' => [ 'shape' => 'Marker', ], 'Limit' => [ 'shape' => 'PositiveIntObject', ], ], ], 'ListTagsForResourceOutput' => [ 'type' => 'structure', 'members' => [ 'ResourceARN' => [ 'shape' => 'ResourceARN', ], 'Marker' => [ 'shape' => 'Marker', ], 'Tags' => [ 'shape' => 'Tags', ], ], ], 'ListTapesInput' => [ 'type' => 'structure', 'members' => [ 'TapeARNs' => [ 'shape' => 'TapeARNs', ], 'Marker' => [ 'shape' => 'Marker', ], 'Limit' => [ 'shape' => 'PositiveIntObject', ], ], ], 'ListTapesOutput' => [ 'type' => 'structure', 'members' => [ 'TapeInfos' => [ 'shape' => 'TapeInfos', ], 'Marker' => [ 'shape' => 'Marker', ], ], ], 'ListVolumeInitiatorsInput' => [ 'type' => 'structure', 'required' => [ 'VolumeARN', ], 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], ], ], 'ListVolumeInitiatorsOutput' => [ 'type' => 'structure', 'members' => [ 'Initiators' => [ 'shape' => 'Initiators', ], ], ], 'ListVolumeRecoveryPointsInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'ListVolumeRecoveryPointsOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'VolumeRecoveryPointInfos' => [ 'shape' => 'VolumeRecoveryPointInfos', ], ], ], 'ListVolumesInput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'Marker' => [ 'shape' => 'Marker', ], 'Limit' => [ 'shape' => 'PositiveIntObject', ], ], ], 'ListVolumesOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'Marker' => [ 'shape' => 'Marker', ], 'VolumeInfos' => [ 'shape' => 'VolumeInfos', ], ], ], 'LocalConsolePassword' => [ 'type' => 'string', 'max' => 512, 'min' => 6, 'pattern' => '^[ -~]+$', 'sensitive' => true, ], 'Marker' => [ 'type' => 'string', 'max' => 1000, 'min' => 1, ], 'MediumChangerType' => [ 'type' => 'string', 'max' => 50, 'min' => 2, ], 'MinuteOfHour' => [ 'type' => 'integer', 'max' => 59, 'min' => 0, ], 'NetworkInterface' => [ 'type' => 'structure', 'members' => [ 'Ipv4Address' => [ 'shape' => 'string', ], 'MacAddress' => [ 'shape' => 'string', ], 'Ipv6Address' => [ 'shape' => 'string', ], ], ], 'NetworkInterfaceId' => [ 'type' => 'string', 'pattern' => '\\A(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}\\z', ], 'NextUpdateAvailabilityDate' => [ 'type' => 'string', 'max' => 25, 'min' => 1, ], 'NumTapesToCreate' => [ 'type' => 'integer', 'max' => 10, 'min' => 1, ], 'PositiveIntObject' => [ 'type' => 'integer', 'min' => 1, ], 'RecurrenceInHours' => [ 'type' => 'integer', 'max' => 24, 'min' => 1, ], 'RegionId' => [ 'type' => 'string', 'max' => 25, 'min' => 1, ], 'RemoveTagsFromResourceInput' => [ 'type' => 'structure', 'required' => [ 'ResourceARN', 'TagKeys', ], 'members' => [ 'ResourceARN' => [ 'shape' => 'ResourceARN', ], 'TagKeys' => [ 'shape' => 'TagKeys', ], ], ], 'RemoveTagsFromResourceOutput' => [ 'type' => 'structure', 'members' => [ 'ResourceARN' => [ 'shape' => 'ResourceARN', ], ], ], 'ResetCacheInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'ResetCacheOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'ResourceARN' => [ 'type' => 'string', 'max' => 500, 'min' => 50, ], 'RetrieveTapeArchiveInput' => [ 'type' => 'structure', 'required' => [ 'TapeARN', 'GatewayARN', ], 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'RetrieveTapeArchiveOutput' => [ 'type' => 'structure', 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], ], ], 'RetrieveTapeRecoveryPointInput' => [ 'type' => 'structure', 'required' => [ 'TapeARN', 'GatewayARN', ], 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'RetrieveTapeRecoveryPointOutput' => [ 'type' => 'structure', 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], ], ], 'SetLocalConsolePasswordInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'LocalConsolePassword', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'LocalConsolePassword' => [ 'shape' => 'LocalConsolePassword', ], ], ], 'SetLocalConsolePasswordOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'ShutdownGatewayInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'ShutdownGatewayOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'SnapshotDescription' => [ 'type' => 'string', 'max' => 255, 'min' => 1, ], 'SnapshotId' => [ 'type' => 'string', 'pattern' => '\\Asnap-([0-9A-Fa-f]{8}|[0-9A-Fa-f]{17})\\z', ], 'StartGatewayInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'StartGatewayOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'StorageGatewayError' => [ 'type' => 'structure', 'members' => [ 'errorCode' => [ 'shape' => 'ErrorCode', ], 'errorDetails' => [ 'shape' => 'errorDetails', ], ], ], 'StorediSCSIVolume' => [ 'type' => 'structure', 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], 'VolumeId' => [ 'shape' => 'VolumeId', ], 'VolumeType' => [ 'shape' => 'VolumeType', ], 'VolumeStatus' => [ 'shape' => 'VolumeStatus', ], 'VolumeSizeInBytes' => [ 'shape' => 'long', ], 'VolumeProgress' => [ 'shape' => 'DoubleObject', ], 'VolumeDiskId' => [ 'shape' => 'DiskId', ], 'SourceSnapshotId' => [ 'shape' => 'SnapshotId', ], 'PreservedExistingData' => [ 'shape' => 'boolean', ], 'VolumeiSCSIAttributes' => [ 'shape' => 'VolumeiSCSIAttributes', ], ], ], 'StorediSCSIVolumes' => [ 'type' => 'list', 'member' => [ 'shape' => 'StorediSCSIVolume', ], ], 'Tag' => [ 'type' => 'structure', 'required' => [ 'Key', 'Value', ], 'members' => [ 'Key' => [ 'shape' => 'TagKey', ], 'Value' => [ 'shape' => 'TagValue', ], ], ], 'TagKey' => [ 'type' => 'string', 'max' => 128, 'min' => 1, 'pattern' => '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$', ], 'TagKeys' => [ 'type' => 'list', 'member' => [ 'shape' => 'TagKey', ], ], 'TagValue' => [ 'type' => 'string', 'max' => 256, ], 'Tags' => [ 'type' => 'list', 'member' => [ 'shape' => 'Tag', ], ], 'Tape' => [ 'type' => 'structure', 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], 'TapeBarcode' => [ 'shape' => 'TapeBarcode', ], 'TapeSizeInBytes' => [ 'shape' => 'TapeSize', ], 'TapeStatus' => [ 'shape' => 'TapeStatus', ], 'VTLDevice' => [ 'shape' => 'VTLDeviceARN', ], 'Progress' => [ 'shape' => 'DoubleObject', ], ], ], 'TapeARN' => [ 'type' => 'string', 'max' => 500, 'min' => 50, ], 'TapeARNs' => [ 'type' => 'list', 'member' => [ 'shape' => 'TapeARN', ], ], 'TapeArchive' => [ 'type' => 'structure', 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], 'TapeBarcode' => [ 'shape' => 'TapeBarcode', ], 'TapeSizeInBytes' => [ 'shape' => 'TapeSize', ], 'CompletionTime' => [ 'shape' => 'Time', ], 'RetrievedTo' => [ 'shape' => 'GatewayARN', ], 'TapeStatus' => [ 'shape' => 'TapeArchiveStatus', ], ], ], 'TapeArchiveStatus' => [ 'type' => 'string', ], 'TapeArchives' => [ 'type' => 'list', 'member' => [ 'shape' => 'TapeArchive', ], ], 'TapeBarcode' => [ 'type' => 'string', 'max' => 16, 'min' => 7, 'pattern' => '^[A-Z0-9]*$', ], 'TapeBarcodePrefix' => [ 'type' => 'string', 'max' => 4, 'min' => 1, 'pattern' => '^[A-Z]*$', ], 'TapeDriveType' => [ 'type' => 'string', 'max' => 50, 'min' => 2, ], 'TapeInfo' => [ 'type' => 'structure', 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], 'TapeBarcode' => [ 'shape' => 'TapeBarcode', ], 'TapeSizeInBytes' => [ 'shape' => 'TapeSize', ], 'TapeStatus' => [ 'shape' => 'TapeStatus', ], 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'TapeInfos' => [ 'type' => 'list', 'member' => [ 'shape' => 'TapeInfo', ], ], 'TapeRecoveryPointInfo' => [ 'type' => 'structure', 'members' => [ 'TapeARN' => [ 'shape' => 'TapeARN', ], 'TapeRecoveryPointTime' => [ 'shape' => 'Time', ], 'TapeSizeInBytes' => [ 'shape' => 'TapeSize', ], 'TapeStatus' => [ 'shape' => 'TapeRecoveryPointStatus', ], ], ], 'TapeRecoveryPointInfos' => [ 'type' => 'list', 'member' => [ 'shape' => 'TapeRecoveryPointInfo', ], ], 'TapeRecoveryPointStatus' => [ 'type' => 'string', ], 'TapeSize' => [ 'type' => 'long', ], 'TapeStatus' => [ 'type' => 'string', ], 'Tapes' => [ 'type' => 'list', 'member' => [ 'shape' => 'Tape', ], ], 'TargetARN' => [ 'type' => 'string', 'max' => 800, 'min' => 50, ], 'TargetName' => [ 'type' => 'string', 'max' => 200, 'min' => 1, 'pattern' => '^[-\\.;a-z0-9]+$', ], 'Time' => [ 'type' => 'timestamp', ], 'UpdateBandwidthRateLimitInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'AverageUploadRateLimitInBitsPerSec' => [ 'shape' => 'BandwidthUploadRateLimit', ], 'AverageDownloadRateLimitInBitsPerSec' => [ 'shape' => 'BandwidthDownloadRateLimit', ], ], ], 'UpdateBandwidthRateLimitOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'UpdateChapCredentialsInput' => [ 'type' => 'structure', 'required' => [ 'TargetARN', 'SecretToAuthenticateInitiator', 'InitiatorName', ], 'members' => [ 'TargetARN' => [ 'shape' => 'TargetARN', ], 'SecretToAuthenticateInitiator' => [ 'shape' => 'ChapSecret', ], 'InitiatorName' => [ 'shape' => 'IqnName', ], 'SecretToAuthenticateTarget' => [ 'shape' => 'ChapSecret', ], ], ], 'UpdateChapCredentialsOutput' => [ 'type' => 'structure', 'members' => [ 'TargetARN' => [ 'shape' => 'TargetARN', ], 'InitiatorName' => [ 'shape' => 'IqnName', ], ], ], 'UpdateGatewayInformationInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'GatewayName' => [ 'shape' => 'GatewayName', ], 'GatewayTimezone' => [ 'shape' => 'GatewayTimezone', ], ], ], 'UpdateGatewayInformationOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'GatewayName' => [ 'shape' => 'string', ], ], ], 'UpdateGatewaySoftwareNowInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'UpdateGatewaySoftwareNowOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'UpdateMaintenanceStartTimeInput' => [ 'type' => 'structure', 'required' => [ 'GatewayARN', 'HourOfDay', 'MinuteOfHour', 'DayOfWeek', ], 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'HourOfDay' => [ 'shape' => 'HourOfDay', ], 'MinuteOfHour' => [ 'shape' => 'MinuteOfHour', ], 'DayOfWeek' => [ 'shape' => 'DayOfWeek', ], ], ], 'UpdateMaintenanceStartTimeOutput' => [ 'type' => 'structure', 'members' => [ 'GatewayARN' => [ 'shape' => 'GatewayARN', ], ], ], 'UpdateSnapshotScheduleInput' => [ 'type' => 'structure', 'required' => [ 'VolumeARN', 'StartAt', 'RecurrenceInHours', ], 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], 'StartAt' => [ 'shape' => 'HourOfDay', ], 'RecurrenceInHours' => [ 'shape' => 'RecurrenceInHours', ], 'Description' => [ 'shape' => 'Description', ], ], ], 'UpdateSnapshotScheduleOutput' => [ 'type' => 'structure', 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], ], ], 'UpdateVTLDeviceTypeInput' => [ 'type' => 'structure', 'required' => [ 'VTLDeviceARN', 'DeviceType', ], 'members' => [ 'VTLDeviceARN' => [ 'shape' => 'VTLDeviceARN', ], 'DeviceType' => [ 'shape' => 'DeviceType', ], ], ], 'UpdateVTLDeviceTypeOutput' => [ 'type' => 'structure', 'members' => [ 'VTLDeviceARN' => [ 'shape' => 'VTLDeviceARN', ], ], ], 'VTLDevice' => [ 'type' => 'structure', 'members' => [ 'VTLDeviceARN' => [ 'shape' => 'VTLDeviceARN', ], 'VTLDeviceType' => [ 'shape' => 'VTLDeviceType', ], 'VTLDeviceVendor' => [ 'shape' => 'VTLDeviceVendor', ], 'VTLDeviceProductIdentifier' => [ 'shape' => 'VTLDeviceProductIdentifier', ], 'DeviceiSCSIAttributes' => [ 'shape' => 'DeviceiSCSIAttributes', ], ], ], 'VTLDeviceARN' => [ 'type' => 'string', 'max' => 500, 'min' => 50, ], 'VTLDeviceARNs' => [ 'type' => 'list', 'member' => [ 'shape' => 'VTLDeviceARN', ], ], 'VTLDeviceProductIdentifier' => [ 'type' => 'string', ], 'VTLDeviceType' => [ 'type' => 'string', ], 'VTLDeviceVendor' => [ 'type' => 'string', ], 'VTLDevices' => [ 'type' => 'list', 'member' => [ 'shape' => 'VTLDevice', ], ], 'VolumeARN' => [ 'type' => 'string', 'max' => 500, 'min' => 50, ], 'VolumeARNs' => [ 'type' => 'list', 'member' => [ 'shape' => 'VolumeARN', ], ], 'VolumeId' => [ 'type' => 'string', 'max' => 30, 'min' => 12, ], 'VolumeInfo' => [ 'type' => 'structure', 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], 'VolumeId' => [ 'shape' => 'VolumeId', ], 'GatewayARN' => [ 'shape' => 'GatewayARN', ], 'GatewayId' => [ 'shape' => 'GatewayId', ], 'VolumeType' => [ 'shape' => 'VolumeType', ], 'VolumeSizeInBytes' => [ 'shape' => 'long', ], ], ], 'VolumeInfos' => [ 'type' => 'list', 'member' => [ 'shape' => 'VolumeInfo', ], ], 'VolumeRecoveryPointInfo' => [ 'type' => 'structure', 'members' => [ 'VolumeARN' => [ 'shape' => 'VolumeARN', ], 'VolumeSizeInBytes' => [ 'shape' => 'long', ], 'VolumeUsageInBytes' => [ 'shape' => 'long', ], 'VolumeRecoveryPointTime' => [ 'shape' => 'string', ], ], ], 'VolumeRecoveryPointInfos' => [ 'type' => 'list', 'member' => [ 'shape' => 'VolumeRecoveryPointInfo', ], ], 'VolumeStatus' => [ 'type' => 'string', 'max' => 50, 'min' => 3, ], 'VolumeType' => [ 'type' => 'string', 'max' => 100, 'min' => 3, ], 'VolumeiSCSIAttributes' => [ 'type' => 'structure', 'members' => [ 'TargetARN' => [ 'shape' => 'TargetARN', ], 'NetworkInterfaceId' => [ 'shape' => 'NetworkInterfaceId', ], 'NetworkInterfacePort' => [ 'shape' => 'integer', ], 'LunNumber' => [ 'shape' => 'PositiveIntObject', ], 'ChapEnabled' => [ 'shape' => 'boolean', ], ], ], 'boolean' => [ 'type' => 'boolean', ], 'double' => [ 'type' => 'double', ], 'errorDetails' => [ 'type' => 'map', 'key' => [ 'shape' => 'string', ], 'value' => [ 'shape' => 'string', ], ], 'integer' => [ 'type' => 'integer', ], 'long' => [ 'type' => 'long', ], 'string' => [ 'type' => 'string', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/importexport/2010-06-01/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2010-06-01', 'endpointPrefix' => 'importexport', 'globalEndpoint' => 'importexport.amazonaws.com', 'serviceFullName' => 'AWS Import/Export', 'signatureVersion' => 'v2', 'xmlNamespace' => 'http://importexport.amazonaws.com/doc/2010-06-01/', 'protocol' => 'query', ], 'operations' => [ 'CancelJob' => [ 'name' => 'CancelJob', 'http' => [ 'method' => 'POST', 'requestUri' => '/?Operation=CancelJob', ], 'input' => [ 'shape' => 'CancelJobInput', ], 'output' => [ 'shape' => 'CancelJobOutput', 'resultWrapper' => 'CancelJobResult', ], 'errors' => [ [ 'shape' => 'InvalidJobIdException', 'exception' => true, ], [ 'shape' => 'ExpiredJobIdException', 'exception' => true, ], [ 'shape' => 'CanceledJobIdException', 'exception' => true, ], [ 'shape' => 'UnableToCancelJobIdException', 'exception' => true, ], [ 'shape' => 'InvalidAccessKeyIdException', 'exception' => true, ], [ 'shape' => 'InvalidVersionException', 'exception' => true, ], ], ], 'CreateJob' => [ 'name' => 'CreateJob', 'http' => [ 'method' => 'POST', 'requestUri' => '/?Operation=CreateJob', ], 'input' => [ 'shape' => 'CreateJobInput', ], 'output' => [ 'shape' => 'CreateJobOutput', 'resultWrapper' => 'CreateJobResult', ], 'errors' => [ [ 'shape' => 'MissingParameterException', 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'exception' => true, ], [ 'shape' => 'InvalidAccessKeyIdException', 'exception' => true, ], [ 'shape' => 'InvalidAddressException', 'exception' => true, ], [ 'shape' => 'InvalidManifestFieldException', 'exception' => true, ], [ 'shape' => 'MissingManifestFieldException', 'exception' => true, ], [ 'shape' => 'NoSuchBucketException', 'exception' => true, ], [ 'shape' => 'MissingCustomsException', 'exception' => true, ], [ 'shape' => 'InvalidCustomsException', 'exception' => true, ], [ 'shape' => 'InvalidFileSystemException', 'exception' => true, ], [ 'shape' => 'MultipleRegionsException', 'exception' => true, ], [ 'shape' => 'BucketPermissionException', 'exception' => true, ], [ 'shape' => 'MalformedManifestException', 'exception' => true, ], [ 'shape' => 'CreateJobQuotaExceededException', 'exception' => true, ], [ 'shape' => 'InvalidJobIdException', 'exception' => true, ], [ 'shape' => 'InvalidVersionException', 'exception' => true, ], ], ], 'GetShippingLabel' => [ 'name' => 'GetShippingLabel', 'http' => [ 'method' => 'POST', 'requestUri' => '/?Operation=GetShippingLabel', ], 'input' => [ 'shape' => 'GetShippingLabelInput', ], 'output' => [ 'shape' => 'GetShippingLabelOutput', 'resultWrapper' => 'GetShippingLabelResult', ], 'errors' => [ [ 'shape' => 'InvalidJobIdException', 'exception' => true, ], [ 'shape' => 'ExpiredJobIdException', 'exception' => true, ], [ 'shape' => 'CanceledJobIdException', 'exception' => true, ], [ 'shape' => 'InvalidAccessKeyIdException', 'exception' => true, ], [ 'shape' => 'InvalidAddressException', 'exception' => true, ], [ 'shape' => 'InvalidVersionException', 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'exception' => true, ], ], ], 'GetStatus' => [ 'name' => 'GetStatus', 'http' => [ 'method' => 'POST', 'requestUri' => '/?Operation=GetStatus', ], 'input' => [ 'shape' => 'GetStatusInput', ], 'output' => [ 'shape' => 'GetStatusOutput', 'resultWrapper' => 'GetStatusResult', ], 'errors' => [ [ 'shape' => 'InvalidJobIdException', 'exception' => true, ], [ 'shape' => 'ExpiredJobIdException', 'exception' => true, ], [ 'shape' => 'CanceledJobIdException', 'exception' => true, ], [ 'shape' => 'InvalidAccessKeyIdException', 'exception' => true, ], [ 'shape' => 'InvalidVersionException', 'exception' => true, ], ], ], 'ListJobs' => [ 'name' => 'ListJobs', 'http' => [ 'method' => 'POST', 'requestUri' => '/?Operation=ListJobs', ], 'input' => [ 'shape' => 'ListJobsInput', ], 'output' => [ 'shape' => 'ListJobsOutput', 'resultWrapper' => 'ListJobsResult', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'exception' => true, ], [ 'shape' => 'InvalidAccessKeyIdException', 'exception' => true, ], [ 'shape' => 'InvalidVersionException', 'exception' => true, ], ], ], 'UpdateJob' => [ 'name' => 'UpdateJob', 'http' => [ 'method' => 'POST', 'requestUri' => '/?Operation=UpdateJob', ], 'input' => [ 'shape' => 'UpdateJobInput', ], 'output' => [ 'shape' => 'UpdateJobOutput', 'resultWrapper' => 'UpdateJobResult', ], 'errors' => [ [ 'shape' => 'MissingParameterException', 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'exception' => true, ], [ 'shape' => 'InvalidAccessKeyIdException', 'exception' => true, ], [ 'shape' => 'InvalidAddressException', 'exception' => true, ], [ 'shape' => 'InvalidManifestFieldException', 'exception' => true, ], [ 'shape' => 'InvalidJobIdException', 'exception' => true, ], [ 'shape' => 'MissingManifestFieldException', 'exception' => true, ], [ 'shape' => 'NoSuchBucketException', 'exception' => true, ], [ 'shape' => 'ExpiredJobIdException', 'exception' => true, ], [ 'shape' => 'CanceledJobIdException', 'exception' => true, ], [ 'shape' => 'MissingCustomsException', 'exception' => true, ], [ 'shape' => 'InvalidCustomsException', 'exception' => true, ], [ 'shape' => 'InvalidFileSystemException', 'exception' => true, ], [ 'shape' => 'MultipleRegionsException', 'exception' => true, ], [ 'shape' => 'BucketPermissionException', 'exception' => true, ], [ 'shape' => 'MalformedManifestException', 'exception' => true, ], [ 'shape' => 'UnableToUpdateJobIdException', 'exception' => true, ], [ 'shape' => 'InvalidVersionException', 'exception' => true, ], ], ], ], 'shapes' => [ 'APIVersion' => [ 'type' => 'string', ], 'Artifact' => [ 'type' => 'structure', 'members' => [ 'Description' => [ 'shape' => 'Description', ], 'URL' => [ 'shape' => 'URL', ], ], ], 'ArtifactList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Artifact', ], ], 'BucketPermissionException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'CancelJobInput' => [ 'type' => 'structure', 'required' => [ 'JobId', ], 'members' => [ 'JobId' => [ 'shape' => 'JobId', ], 'APIVersion' => [ 'shape' => 'APIVersion', ], ], ], 'CancelJobOutput' => [ 'type' => 'structure', 'members' => [ 'Success' => [ 'shape' => 'Success', ], ], ], 'CanceledJobIdException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'Carrier' => [ 'type' => 'string', ], 'CreateJobInput' => [ 'type' => 'structure', 'required' => [ 'JobType', 'Manifest', 'ValidateOnly', ], 'members' => [ 'JobType' => [ 'shape' => 'JobType', ], 'Manifest' => [ 'shape' => 'Manifest', ], 'ManifestAddendum' => [ 'shape' => 'ManifestAddendum', ], 'ValidateOnly' => [ 'shape' => 'ValidateOnly', ], 'APIVersion' => [ 'shape' => 'APIVersion', ], ], ], 'CreateJobOutput' => [ 'type' => 'structure', 'members' => [ 'JobId' => [ 'shape' => 'JobId', ], 'JobType' => [ 'shape' => 'JobType', ], 'Signature' => [ 'shape' => 'Signature', ], 'SignatureFileContents' => [ 'shape' => 'SignatureFileContents', ], 'WarningMessage' => [ 'shape' => 'WarningMessage', ], 'ArtifactList' => [ 'shape' => 'ArtifactList', ], ], ], 'CreateJobQuotaExceededException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'CreationDate' => [ 'type' => 'timestamp', ], 'CurrentManifest' => [ 'type' => 'string', ], 'Description' => [ 'type' => 'string', ], 'ErrorCount' => [ 'type' => 'integer', ], 'ErrorMessage' => [ 'type' => 'string', ], 'ExpiredJobIdException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'GenericString' => [ 'type' => 'string', ], 'GetShippingLabelInput' => [ 'type' => 'structure', 'required' => [ 'jobIds', ], 'members' => [ 'jobIds' => [ 'shape' => 'JobIdList', ], 'name' => [ 'shape' => 'name', ], 'company' => [ 'shape' => 'company', ], 'phoneNumber' => [ 'shape' => 'phoneNumber', ], 'country' => [ 'shape' => 'country', ], 'stateOrProvince' => [ 'shape' => 'stateOrProvince', ], 'city' => [ 'shape' => 'city', ], 'postalCode' => [ 'shape' => 'postalCode', ], 'street1' => [ 'shape' => 'street1', ], 'street2' => [ 'shape' => 'street2', ], 'street3' => [ 'shape' => 'street3', ], 'APIVersion' => [ 'shape' => 'APIVersion', ], ], ], 'GetShippingLabelOutput' => [ 'type' => 'structure', 'members' => [ 'ShippingLabelURL' => [ 'shape' => 'GenericString', ], 'Warning' => [ 'shape' => 'GenericString', ], ], ], 'GetStatusInput' => [ 'type' => 'structure', 'required' => [ 'JobId', ], 'members' => [ 'JobId' => [ 'shape' => 'JobId', ], 'APIVersion' => [ 'shape' => 'APIVersion', ], ], ], 'GetStatusOutput' => [ 'type' => 'structure', 'members' => [ 'JobId' => [ 'shape' => 'JobId', ], 'JobType' => [ 'shape' => 'JobType', ], 'LocationCode' => [ 'shape' => 'LocationCode', ], 'LocationMessage' => [ 'shape' => 'LocationMessage', ], 'ProgressCode' => [ 'shape' => 'ProgressCode', ], 'ProgressMessage' => [ 'shape' => 'ProgressMessage', ], 'Carrier' => [ 'shape' => 'Carrier', ], 'TrackingNumber' => [ 'shape' => 'TrackingNumber', ], 'LogBucket' => [ 'shape' => 'LogBucket', ], 'LogKey' => [ 'shape' => 'LogKey', ], 'ErrorCount' => [ 'shape' => 'ErrorCount', ], 'Signature' => [ 'shape' => 'Signature', ], 'SignatureFileContents' => [ 'shape' => 'Signature', ], 'CurrentManifest' => [ 'shape' => 'CurrentManifest', ], 'CreationDate' => [ 'shape' => 'CreationDate', ], 'ArtifactList' => [ 'shape' => 'ArtifactList', ], ], ], 'InvalidAccessKeyIdException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'InvalidAddressException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'InvalidCustomsException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'InvalidFileSystemException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'InvalidJobIdException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'InvalidManifestFieldException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'InvalidParameterException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'InvalidVersionException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'IsCanceled' => [ 'type' => 'boolean', ], 'IsTruncated' => [ 'type' => 'boolean', ], 'Job' => [ 'type' => 'structure', 'members' => [ 'JobId' => [ 'shape' => 'JobId', ], 'CreationDate' => [ 'shape' => 'CreationDate', ], 'IsCanceled' => [ 'shape' => 'IsCanceled', ], 'JobType' => [ 'shape' => 'JobType', ], ], ], 'JobId' => [ 'type' => 'string', ], 'JobIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'GenericString', ], ], 'JobType' => [ 'type' => 'string', 'enum' => [ 'Import', 'Export', ], ], 'JobsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Job', ], ], 'ListJobsInput' => [ 'type' => 'structure', 'members' => [ 'MaxJobs' => [ 'shape' => 'MaxJobs', ], 'Marker' => [ 'shape' => 'Marker', ], 'APIVersion' => [ 'shape' => 'APIVersion', ], ], ], 'ListJobsOutput' => [ 'type' => 'structure', 'members' => [ 'Jobs' => [ 'shape' => 'JobsList', ], 'IsTruncated' => [ 'shape' => 'IsTruncated', ], ], ], 'LocationCode' => [ 'type' => 'string', ], 'LocationMessage' => [ 'type' => 'string', ], 'LogBucket' => [ 'type' => 'string', ], 'LogKey' => [ 'type' => 'string', ], 'MalformedManifestException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'Manifest' => [ 'type' => 'string', ], 'ManifestAddendum' => [ 'type' => 'string', ], 'Marker' => [ 'type' => 'string', ], 'MaxJobs' => [ 'type' => 'integer', ], 'MissingCustomsException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'MissingManifestFieldException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'MissingParameterException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'MultipleRegionsException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'NoSuchBucketException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'ProgressCode' => [ 'type' => 'string', ], 'ProgressMessage' => [ 'type' => 'string', ], 'Signature' => [ 'type' => 'string', ], 'SignatureFileContents' => [ 'type' => 'string', ], 'Success' => [ 'type' => 'boolean', ], 'TrackingNumber' => [ 'type' => 'string', ], 'URL' => [ 'type' => 'string', ], 'UnableToCancelJobIdException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'UnableToUpdateJobIdException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'UpdateJobInput' => [ 'type' => 'structure', 'required' => [ 'JobId', 'Manifest', 'JobType', 'ValidateOnly', ], 'members' => [ 'JobId' => [ 'shape' => 'JobId', ], 'Manifest' => [ 'shape' => 'Manifest', ], 'JobType' => [ 'shape' => 'JobType', ], 'ValidateOnly' => [ 'shape' => 'ValidateOnly', ], 'APIVersion' => [ 'shape' => 'APIVersion', ], ], ], 'UpdateJobOutput' => [ 'type' => 'structure', 'members' => [ 'Success' => [ 'shape' => 'Success', ], 'WarningMessage' => [ 'shape' => 'WarningMessage', ], 'ArtifactList' => [ 'shape' => 'ArtifactList', ], ], ], 'ValidateOnly' => [ 'type' => 'boolean', ], 'WarningMessage' => [ 'type' => 'string', ], 'city' => [ 'type' => 'string', ], 'company' => [ 'type' => 'string', ], 'country' => [ 'type' => 'string', ], 'name' => [ 'type' => 'string', ], 'phoneNumber' => [ 'type' => 'string', ], 'postalCode' => [ 'type' => 'string', ], 'stateOrProvince' => [ 'type' => 'string', ], 'street1' => [ 'type' => 'string', ], 'street2' => [ 'type' => 'string', ], 'street3' => [ 'type' => 'string', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/ecs/2014-11-13/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2014-11-13', 'endpointPrefix' => 'ecs', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceAbbreviation' => 'Amazon ECS', 'serviceFullName' => 'Amazon EC2 Container Service', 'signatureVersion' => 'v4', 'targetPrefix' => 'AmazonEC2ContainerServiceV20141113', ], 'operations' => [ 'CreateCluster' => [ 'name' => 'CreateCluster', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateClusterRequest', ], 'output' => [ 'shape' => 'CreateClusterResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], ], ], 'CreateService' => [ 'name' => 'CreateService', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateServiceRequest', ], 'output' => [ 'shape' => 'CreateServiceResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], ], ], 'DeleteCluster' => [ 'name' => 'DeleteCluster', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteClusterRequest', ], 'output' => [ 'shape' => 'DeleteClusterResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], [ 'shape' => 'ClusterContainsContainerInstancesException', ], [ 'shape' => 'ClusterContainsServicesException', ], ], ], 'DeleteService' => [ 'name' => 'DeleteService', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteServiceRequest', ], 'output' => [ 'shape' => 'DeleteServiceResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], [ 'shape' => 'ServiceNotFoundException', ], ], ], 'DeregisterContainerInstance' => [ 'name' => 'DeregisterContainerInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeregisterContainerInstanceRequest', ], 'output' => [ 'shape' => 'DeregisterContainerInstanceResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], ], ], 'DeregisterTaskDefinition' => [ 'name' => 'DeregisterTaskDefinition', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeregisterTaskDefinitionRequest', ], 'output' => [ 'shape' => 'DeregisterTaskDefinitionResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], ], ], 'DescribeClusters' => [ 'name' => 'DescribeClusters', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeClustersRequest', ], 'output' => [ 'shape' => 'DescribeClustersResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], ], ], 'DescribeContainerInstances' => [ 'name' => 'DescribeContainerInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeContainerInstancesRequest', ], 'output' => [ 'shape' => 'DescribeContainerInstancesResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], ], ], 'DescribeServices' => [ 'name' => 'DescribeServices', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeServicesRequest', ], 'output' => [ 'shape' => 'DescribeServicesResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], ], ], 'DescribeTaskDefinition' => [ 'name' => 'DescribeTaskDefinition', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeTaskDefinitionRequest', ], 'output' => [ 'shape' => 'DescribeTaskDefinitionResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], ], ], 'DescribeTasks' => [ 'name' => 'DescribeTasks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeTasksRequest', ], 'output' => [ 'shape' => 'DescribeTasksResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], ], ], 'DiscoverPollEndpoint' => [ 'name' => 'DiscoverPollEndpoint', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DiscoverPollEndpointRequest', ], 'output' => [ 'shape' => 'DiscoverPollEndpointResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], ], ], 'ListClusters' => [ 'name' => 'ListClusters', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListClustersRequest', ], 'output' => [ 'shape' => 'ListClustersResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], ], ], 'ListContainerInstances' => [ 'name' => 'ListContainerInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListContainerInstancesRequest', ], 'output' => [ 'shape' => 'ListContainerInstancesResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], ], ], 'ListServices' => [ 'name' => 'ListServices', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListServicesRequest', ], 'output' => [ 'shape' => 'ListServicesResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], ], ], 'ListTaskDefinitionFamilies' => [ 'name' => 'ListTaskDefinitionFamilies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListTaskDefinitionFamiliesRequest', ], 'output' => [ 'shape' => 'ListTaskDefinitionFamiliesResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], ], ], 'ListTaskDefinitions' => [ 'name' => 'ListTaskDefinitions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListTaskDefinitionsRequest', ], 'output' => [ 'shape' => 'ListTaskDefinitionsResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], ], ], 'ListTasks' => [ 'name' => 'ListTasks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListTasksRequest', ], 'output' => [ 'shape' => 'ListTasksResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], [ 'shape' => 'ServiceNotFoundException', ], ], ], 'RegisterContainerInstance' => [ 'name' => 'RegisterContainerInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RegisterContainerInstanceRequest', ], 'output' => [ 'shape' => 'RegisterContainerInstanceResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], ], ], 'RegisterTaskDefinition' => [ 'name' => 'RegisterTaskDefinition', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RegisterTaskDefinitionRequest', ], 'output' => [ 'shape' => 'RegisterTaskDefinitionResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], ], ], 'RunTask' => [ 'name' => 'RunTask', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RunTaskRequest', ], 'output' => [ 'shape' => 'RunTaskResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], ], ], 'StartTask' => [ 'name' => 'StartTask', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StartTaskRequest', ], 'output' => [ 'shape' => 'StartTaskResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], ], ], 'StopTask' => [ 'name' => 'StopTask', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StopTaskRequest', ], 'output' => [ 'shape' => 'StopTaskResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], ], ], 'SubmitContainerStateChange' => [ 'name' => 'SubmitContainerStateChange', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SubmitContainerStateChangeRequest', ], 'output' => [ 'shape' => 'SubmitContainerStateChangeResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], ], ], 'SubmitTaskStateChange' => [ 'name' => 'SubmitTaskStateChange', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SubmitTaskStateChangeRequest', ], 'output' => [ 'shape' => 'SubmitTaskStateChangeResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], ], ], 'UpdateContainerAgent' => [ 'name' => 'UpdateContainerAgent', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateContainerAgentRequest', ], 'output' => [ 'shape' => 'UpdateContainerAgentResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], [ 'shape' => 'UpdateInProgressException', ], [ 'shape' => 'NoUpdateAvailableException', ], [ 'shape' => 'MissingVersionException', ], ], ], 'UpdateService' => [ 'name' => 'UpdateService', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateServiceRequest', ], 'output' => [ 'shape' => 'UpdateServiceResponse', ], 'errors' => [ [ 'shape' => 'ServerException', ], [ 'shape' => 'ClientException', ], [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ClusterNotFoundException', ], [ 'shape' => 'ServiceNotFoundException', ], [ 'shape' => 'ServiceNotActiveException', ], ], ], ], 'shapes' => [ 'AgentUpdateStatus' => [ 'type' => 'string', 'enum' => [ 'PENDING', 'STAGING', 'STAGED', 'UPDATING', 'UPDATED', 'FAILED', ], ], 'Attribute' => [ 'type' => 'structure', 'required' => [ 'name', ], 'members' => [ 'name' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'String', ], ], ], 'Attributes' => [ 'type' => 'list', 'member' => [ 'shape' => 'Attribute', ], ], 'Boolean' => [ 'type' => 'boolean', ], 'BoxedBoolean' => [ 'type' => 'boolean', 'box' => true, ], 'BoxedInteger' => [ 'type' => 'integer', 'box' => true, ], 'ClientException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'Cluster' => [ 'type' => 'structure', 'members' => [ 'clusterArn' => [ 'shape' => 'String', ], 'clusterName' => [ 'shape' => 'String', ], 'status' => [ 'shape' => 'String', ], 'registeredContainerInstancesCount' => [ 'shape' => 'Integer', ], 'runningTasksCount' => [ 'shape' => 'Integer', ], 'pendingTasksCount' => [ 'shape' => 'Integer', ], 'activeServicesCount' => [ 'shape' => 'Integer', ], ], ], 'ClusterContainsContainerInstancesException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'ClusterContainsServicesException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'ClusterNotFoundException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'Clusters' => [ 'type' => 'list', 'member' => [ 'shape' => 'Cluster', ], ], 'Container' => [ 'type' => 'structure', 'members' => [ 'containerArn' => [ 'shape' => 'String', ], 'taskArn' => [ 'shape' => 'String', ], 'name' => [ 'shape' => 'String', ], 'lastStatus' => [ 'shape' => 'String', ], 'exitCode' => [ 'shape' => 'BoxedInteger', ], 'reason' => [ 'shape' => 'String', ], 'networkBindings' => [ 'shape' => 'NetworkBindings', ], ], ], 'ContainerDefinition' => [ 'type' => 'structure', 'members' => [ 'name' => [ 'shape' => 'String', ], 'image' => [ 'shape' => 'String', ], 'cpu' => [ 'shape' => 'Integer', ], 'memory' => [ 'shape' => 'Integer', ], 'links' => [ 'shape' => 'StringList', ], 'portMappings' => [ 'shape' => 'PortMappingList', ], 'essential' => [ 'shape' => 'BoxedBoolean', ], 'entryPoint' => [ 'shape' => 'StringList', ], 'command' => [ 'shape' => 'StringList', ], 'environment' => [ 'shape' => 'EnvironmentVariables', ], 'mountPoints' => [ 'shape' => 'MountPointList', ], 'volumesFrom' => [ 'shape' => 'VolumeFromList', ], 'hostname' => [ 'shape' => 'String', ], 'user' => [ 'shape' => 'String', ], 'workingDirectory' => [ 'shape' => 'String', ], 'disableNetworking' => [ 'shape' => 'BoxedBoolean', ], 'privileged' => [ 'shape' => 'BoxedBoolean', ], 'readonlyRootFilesystem' => [ 'shape' => 'BoxedBoolean', ], 'dnsServers' => [ 'shape' => 'StringList', ], 'dnsSearchDomains' => [ 'shape' => 'StringList', ], 'extraHosts' => [ 'shape' => 'HostEntryList', ], 'dockerSecurityOptions' => [ 'shape' => 'StringList', ], 'dockerLabels' => [ 'shape' => 'DockerLabelsMap', ], 'ulimits' => [ 'shape' => 'UlimitList', ], 'logConfiguration' => [ 'shape' => 'LogConfiguration', ], ], ], 'ContainerDefinitions' => [ 'type' => 'list', 'member' => [ 'shape' => 'ContainerDefinition', ], ], 'ContainerInstance' => [ 'type' => 'structure', 'members' => [ 'containerInstanceArn' => [ 'shape' => 'String', ], 'ec2InstanceId' => [ 'shape' => 'String', ], 'versionInfo' => [ 'shape' => 'VersionInfo', ], 'remainingResources' => [ 'shape' => 'Resources', ], 'registeredResources' => [ 'shape' => 'Resources', ], 'status' => [ 'shape' => 'String', ], 'agentConnected' => [ 'shape' => 'Boolean', ], 'runningTasksCount' => [ 'shape' => 'Integer', ], 'pendingTasksCount' => [ 'shape' => 'Integer', ], 'agentUpdateStatus' => [ 'shape' => 'AgentUpdateStatus', ], 'attributes' => [ 'shape' => 'Attributes', ], ], ], 'ContainerInstances' => [ 'type' => 'list', 'member' => [ 'shape' => 'ContainerInstance', ], ], 'ContainerOverride' => [ 'type' => 'structure', 'members' => [ 'name' => [ 'shape' => 'String', ], 'command' => [ 'shape' => 'StringList', ], 'environment' => [ 'shape' => 'EnvironmentVariables', ], ], ], 'ContainerOverrides' => [ 'type' => 'list', 'member' => [ 'shape' => 'ContainerOverride', ], ], 'Containers' => [ 'type' => 'list', 'member' => [ 'shape' => 'Container', ], ], 'CreateClusterRequest' => [ 'type' => 'structure', 'members' => [ 'clusterName' => [ 'shape' => 'String', ], ], ], 'CreateClusterResponse' => [ 'type' => 'structure', 'members' => [ 'cluster' => [ 'shape' => 'Cluster', ], ], ], 'CreateServiceRequest' => [ 'type' => 'structure', 'required' => [ 'serviceName', 'taskDefinition', 'desiredCount', ], 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'serviceName' => [ 'shape' => 'String', ], 'taskDefinition' => [ 'shape' => 'String', ], 'loadBalancers' => [ 'shape' => 'LoadBalancers', ], 'desiredCount' => [ 'shape' => 'BoxedInteger', ], 'clientToken' => [ 'shape' => 'String', ], 'role' => [ 'shape' => 'String', ], 'deploymentConfiguration' => [ 'shape' => 'DeploymentConfiguration', ], ], ], 'CreateServiceResponse' => [ 'type' => 'structure', 'members' => [ 'service' => [ 'shape' => 'Service', ], ], ], 'DeleteClusterRequest' => [ 'type' => 'structure', 'required' => [ 'cluster', ], 'members' => [ 'cluster' => [ 'shape' => 'String', ], ], ], 'DeleteClusterResponse' => [ 'type' => 'structure', 'members' => [ 'cluster' => [ 'shape' => 'Cluster', ], ], ], 'DeleteServiceRequest' => [ 'type' => 'structure', 'required' => [ 'service', ], 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'service' => [ 'shape' => 'String', ], ], ], 'DeleteServiceResponse' => [ 'type' => 'structure', 'members' => [ 'service' => [ 'shape' => 'Service', ], ], ], 'Deployment' => [ 'type' => 'structure', 'members' => [ 'id' => [ 'shape' => 'String', ], 'status' => [ 'shape' => 'String', ], 'taskDefinition' => [ 'shape' => 'String', ], 'desiredCount' => [ 'shape' => 'Integer', ], 'pendingCount' => [ 'shape' => 'Integer', ], 'runningCount' => [ 'shape' => 'Integer', ], 'createdAt' => [ 'shape' => 'Timestamp', ], 'updatedAt' => [ 'shape' => 'Timestamp', ], ], ], 'DeploymentConfiguration' => [ 'type' => 'structure', 'members' => [ 'maximumPercent' => [ 'shape' => 'BoxedInteger', ], 'minimumHealthyPercent' => [ 'shape' => 'BoxedInteger', ], ], ], 'Deployments' => [ 'type' => 'list', 'member' => [ 'shape' => 'Deployment', ], ], 'DeregisterContainerInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'containerInstance', ], 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'containerInstance' => [ 'shape' => 'String', ], 'force' => [ 'shape' => 'BoxedBoolean', ], ], ], 'DeregisterContainerInstanceResponse' => [ 'type' => 'structure', 'members' => [ 'containerInstance' => [ 'shape' => 'ContainerInstance', ], ], ], 'DeregisterTaskDefinitionRequest' => [ 'type' => 'structure', 'required' => [ 'taskDefinition', ], 'members' => [ 'taskDefinition' => [ 'shape' => 'String', ], ], ], 'DeregisterTaskDefinitionResponse' => [ 'type' => 'structure', 'members' => [ 'taskDefinition' => [ 'shape' => 'TaskDefinition', ], ], ], 'DescribeClustersRequest' => [ 'type' => 'structure', 'members' => [ 'clusters' => [ 'shape' => 'StringList', ], ], ], 'DescribeClustersResponse' => [ 'type' => 'structure', 'members' => [ 'clusters' => [ 'shape' => 'Clusters', ], 'failures' => [ 'shape' => 'Failures', ], ], ], 'DescribeContainerInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'containerInstances', ], 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'containerInstances' => [ 'shape' => 'StringList', ], ], ], 'DescribeContainerInstancesResponse' => [ 'type' => 'structure', 'members' => [ 'containerInstances' => [ 'shape' => 'ContainerInstances', ], 'failures' => [ 'shape' => 'Failures', ], ], ], 'DescribeServicesRequest' => [ 'type' => 'structure', 'required' => [ 'services', ], 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'services' => [ 'shape' => 'StringList', ], ], ], 'DescribeServicesResponse' => [ 'type' => 'structure', 'members' => [ 'services' => [ 'shape' => 'Services', ], 'failures' => [ 'shape' => 'Failures', ], ], ], 'DescribeTaskDefinitionRequest' => [ 'type' => 'structure', 'required' => [ 'taskDefinition', ], 'members' => [ 'taskDefinition' => [ 'shape' => 'String', ], ], ], 'DescribeTaskDefinitionResponse' => [ 'type' => 'structure', 'members' => [ 'taskDefinition' => [ 'shape' => 'TaskDefinition', ], ], ], 'DescribeTasksRequest' => [ 'type' => 'structure', 'required' => [ 'tasks', ], 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'tasks' => [ 'shape' => 'StringList', ], ], ], 'DescribeTasksResponse' => [ 'type' => 'structure', 'members' => [ 'tasks' => [ 'shape' => 'Tasks', ], 'failures' => [ 'shape' => 'Failures', ], ], ], 'DesiredStatus' => [ 'type' => 'string', 'enum' => [ 'RUNNING', 'PENDING', 'STOPPED', ], ], 'DiscoverPollEndpointRequest' => [ 'type' => 'structure', 'members' => [ 'containerInstance' => [ 'shape' => 'String', ], 'cluster' => [ 'shape' => 'String', ], ], ], 'DiscoverPollEndpointResponse' => [ 'type' => 'structure', 'members' => [ 'endpoint' => [ 'shape' => 'String', ], 'telemetryEndpoint' => [ 'shape' => 'String', ], ], ], 'DockerLabelsMap' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'String', ], ], 'Double' => [ 'type' => 'double', ], 'EnvironmentVariables' => [ 'type' => 'list', 'member' => [ 'shape' => 'KeyValuePair', ], ], 'Failure' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'String', ], 'reason' => [ 'shape' => 'String', ], ], ], 'Failures' => [ 'type' => 'list', 'member' => [ 'shape' => 'Failure', ], ], 'HostEntry' => [ 'type' => 'structure', 'required' => [ 'hostname', 'ipAddress', ], 'members' => [ 'hostname' => [ 'shape' => 'String', ], 'ipAddress' => [ 'shape' => 'String', ], ], ], 'HostEntryList' => [ 'type' => 'list', 'member' => [ 'shape' => 'HostEntry', ], ], 'HostVolumeProperties' => [ 'type' => 'structure', 'members' => [ 'sourcePath' => [ 'shape' => 'String', ], ], ], 'Integer' => [ 'type' => 'integer', ], 'InvalidParameterException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'KeyValuePair' => [ 'type' => 'structure', 'members' => [ 'name' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'String', ], ], ], 'ListClustersRequest' => [ 'type' => 'structure', 'members' => [ 'nextToken' => [ 'shape' => 'String', ], 'maxResults' => [ 'shape' => 'BoxedInteger', ], ], ], 'ListClustersResponse' => [ 'type' => 'structure', 'members' => [ 'clusterArns' => [ 'shape' => 'StringList', ], 'nextToken' => [ 'shape' => 'String', ], ], ], 'ListContainerInstancesRequest' => [ 'type' => 'structure', 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'nextToken' => [ 'shape' => 'String', ], 'maxResults' => [ 'shape' => 'BoxedInteger', ], ], ], 'ListContainerInstancesResponse' => [ 'type' => 'structure', 'members' => [ 'containerInstanceArns' => [ 'shape' => 'StringList', ], 'nextToken' => [ 'shape' => 'String', ], ], ], 'ListServicesRequest' => [ 'type' => 'structure', 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'nextToken' => [ 'shape' => 'String', ], 'maxResults' => [ 'shape' => 'BoxedInteger', ], ], ], 'ListServicesResponse' => [ 'type' => 'structure', 'members' => [ 'serviceArns' => [ 'shape' => 'StringList', ], 'nextToken' => [ 'shape' => 'String', ], ], ], 'ListTaskDefinitionFamiliesRequest' => [ 'type' => 'structure', 'members' => [ 'familyPrefix' => [ 'shape' => 'String', ], 'status' => [ 'shape' => 'TaskDefinitionFamilyStatus', ], 'nextToken' => [ 'shape' => 'String', ], 'maxResults' => [ 'shape' => 'BoxedInteger', ], ], ], 'ListTaskDefinitionFamiliesResponse' => [ 'type' => 'structure', 'members' => [ 'families' => [ 'shape' => 'StringList', ], 'nextToken' => [ 'shape' => 'String', ], ], ], 'ListTaskDefinitionsRequest' => [ 'type' => 'structure', 'members' => [ 'familyPrefix' => [ 'shape' => 'String', ], 'status' => [ 'shape' => 'TaskDefinitionStatus', ], 'sort' => [ 'shape' => 'SortOrder', ], 'nextToken' => [ 'shape' => 'String', ], 'maxResults' => [ 'shape' => 'BoxedInteger', ], ], ], 'ListTaskDefinitionsResponse' => [ 'type' => 'structure', 'members' => [ 'taskDefinitionArns' => [ 'shape' => 'StringList', ], 'nextToken' => [ 'shape' => 'String', ], ], ], 'ListTasksRequest' => [ 'type' => 'structure', 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'containerInstance' => [ 'shape' => 'String', ], 'family' => [ 'shape' => 'String', ], 'nextToken' => [ 'shape' => 'String', ], 'maxResults' => [ 'shape' => 'BoxedInteger', ], 'startedBy' => [ 'shape' => 'String', ], 'serviceName' => [ 'shape' => 'String', ], 'desiredStatus' => [ 'shape' => 'DesiredStatus', ], ], ], 'ListTasksResponse' => [ 'type' => 'structure', 'members' => [ 'taskArns' => [ 'shape' => 'StringList', ], 'nextToken' => [ 'shape' => 'String', ], ], ], 'LoadBalancer' => [ 'type' => 'structure', 'members' => [ 'loadBalancerName' => [ 'shape' => 'String', ], 'containerName' => [ 'shape' => 'String', ], 'containerPort' => [ 'shape' => 'BoxedInteger', ], ], ], 'LoadBalancers' => [ 'type' => 'list', 'member' => [ 'shape' => 'LoadBalancer', ], ], 'LogConfiguration' => [ 'type' => 'structure', 'required' => [ 'logDriver', ], 'members' => [ 'logDriver' => [ 'shape' => 'LogDriver', ], 'options' => [ 'shape' => 'LogConfigurationOptionsMap', ], ], ], 'LogConfigurationOptionsMap' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'String', ], ], 'LogDriver' => [ 'type' => 'string', 'enum' => [ 'json-file', 'syslog', 'journald', 'gelf', 'fluentd', 'awslogs', ], ], 'Long' => [ 'type' => 'long', ], 'MissingVersionException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'MountPoint' => [ 'type' => 'structure', 'members' => [ 'sourceVolume' => [ 'shape' => 'String', ], 'containerPath' => [ 'shape' => 'String', ], 'readOnly' => [ 'shape' => 'BoxedBoolean', ], ], ], 'MountPointList' => [ 'type' => 'list', 'member' => [ 'shape' => 'MountPoint', ], ], 'NetworkBinding' => [ 'type' => 'structure', 'members' => [ 'bindIP' => [ 'shape' => 'String', ], 'containerPort' => [ 'shape' => 'BoxedInteger', ], 'hostPort' => [ 'shape' => 'BoxedInteger', ], 'protocol' => [ 'shape' => 'TransportProtocol', ], ], ], 'NetworkBindings' => [ 'type' => 'list', 'member' => [ 'shape' => 'NetworkBinding', ], ], 'NoUpdateAvailableException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'PortMapping' => [ 'type' => 'structure', 'members' => [ 'containerPort' => [ 'shape' => 'Integer', ], 'hostPort' => [ 'shape' => 'Integer', ], 'protocol' => [ 'shape' => 'TransportProtocol', ], ], ], 'PortMappingList' => [ 'type' => 'list', 'member' => [ 'shape' => 'PortMapping', ], ], 'RegisterContainerInstanceRequest' => [ 'type' => 'structure', 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'instanceIdentityDocument' => [ 'shape' => 'String', ], 'instanceIdentityDocumentSignature' => [ 'shape' => 'String', ], 'totalResources' => [ 'shape' => 'Resources', ], 'versionInfo' => [ 'shape' => 'VersionInfo', ], 'containerInstanceArn' => [ 'shape' => 'String', ], 'attributes' => [ 'shape' => 'Attributes', ], ], ], 'RegisterContainerInstanceResponse' => [ 'type' => 'structure', 'members' => [ 'containerInstance' => [ 'shape' => 'ContainerInstance', ], ], ], 'RegisterTaskDefinitionRequest' => [ 'type' => 'structure', 'required' => [ 'family', 'containerDefinitions', ], 'members' => [ 'family' => [ 'shape' => 'String', ], 'containerDefinitions' => [ 'shape' => 'ContainerDefinitions', ], 'volumes' => [ 'shape' => 'VolumeList', ], ], ], 'RegisterTaskDefinitionResponse' => [ 'type' => 'structure', 'members' => [ 'taskDefinition' => [ 'shape' => 'TaskDefinition', ], ], ], 'RequiresAttributes' => [ 'type' => 'list', 'member' => [ 'shape' => 'Attribute', ], ], 'Resource' => [ 'type' => 'structure', 'members' => [ 'name' => [ 'shape' => 'String', ], 'type' => [ 'shape' => 'String', ], 'doubleValue' => [ 'shape' => 'Double', ], 'longValue' => [ 'shape' => 'Long', ], 'integerValue' => [ 'shape' => 'Integer', ], 'stringSetValue' => [ 'shape' => 'StringList', ], ], ], 'Resources' => [ 'type' => 'list', 'member' => [ 'shape' => 'Resource', ], ], 'RunTaskRequest' => [ 'type' => 'structure', 'required' => [ 'taskDefinition', ], 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'taskDefinition' => [ 'shape' => 'String', ], 'overrides' => [ 'shape' => 'TaskOverride', ], 'count' => [ 'shape' => 'BoxedInteger', ], 'startedBy' => [ 'shape' => 'String', ], ], ], 'RunTaskResponse' => [ 'type' => 'structure', 'members' => [ 'tasks' => [ 'shape' => 'Tasks', ], 'failures' => [ 'shape' => 'Failures', ], ], ], 'ServerException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, 'fault' => true, ], 'Service' => [ 'type' => 'structure', 'members' => [ 'serviceArn' => [ 'shape' => 'String', ], 'serviceName' => [ 'shape' => 'String', ], 'clusterArn' => [ 'shape' => 'String', ], 'loadBalancers' => [ 'shape' => 'LoadBalancers', ], 'status' => [ 'shape' => 'String', ], 'desiredCount' => [ 'shape' => 'Integer', ], 'runningCount' => [ 'shape' => 'Integer', ], 'pendingCount' => [ 'shape' => 'Integer', ], 'taskDefinition' => [ 'shape' => 'String', ], 'deploymentConfiguration' => [ 'shape' => 'DeploymentConfiguration', ], 'deployments' => [ 'shape' => 'Deployments', ], 'roleArn' => [ 'shape' => 'String', ], 'events' => [ 'shape' => 'ServiceEvents', ], 'createdAt' => [ 'shape' => 'Timestamp', ], ], ], 'ServiceEvent' => [ 'type' => 'structure', 'members' => [ 'id' => [ 'shape' => 'String', ], 'createdAt' => [ 'shape' => 'Timestamp', ], 'message' => [ 'shape' => 'String', ], ], ], 'ServiceEvents' => [ 'type' => 'list', 'member' => [ 'shape' => 'ServiceEvent', ], ], 'ServiceNotActiveException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'ServiceNotFoundException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'Services' => [ 'type' => 'list', 'member' => [ 'shape' => 'Service', ], ], 'SortOrder' => [ 'type' => 'string', 'enum' => [ 'ASC', 'DESC', ], ], 'StartTaskRequest' => [ 'type' => 'structure', 'required' => [ 'taskDefinition', 'containerInstances', ], 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'taskDefinition' => [ 'shape' => 'String', ], 'overrides' => [ 'shape' => 'TaskOverride', ], 'containerInstances' => [ 'shape' => 'StringList', ], 'startedBy' => [ 'shape' => 'String', ], ], ], 'StartTaskResponse' => [ 'type' => 'structure', 'members' => [ 'tasks' => [ 'shape' => 'Tasks', ], 'failures' => [ 'shape' => 'Failures', ], ], ], 'StopTaskRequest' => [ 'type' => 'structure', 'required' => [ 'task', ], 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'task' => [ 'shape' => 'String', ], 'reason' => [ 'shape' => 'String', ], ], ], 'StopTaskResponse' => [ 'type' => 'structure', 'members' => [ 'task' => [ 'shape' => 'Task', ], ], ], 'String' => [ 'type' => 'string', ], 'StringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], 'SubmitContainerStateChangeRequest' => [ 'type' => 'structure', 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'task' => [ 'shape' => 'String', ], 'containerName' => [ 'shape' => 'String', ], 'status' => [ 'shape' => 'String', ], 'exitCode' => [ 'shape' => 'BoxedInteger', ], 'reason' => [ 'shape' => 'String', ], 'networkBindings' => [ 'shape' => 'NetworkBindings', ], ], ], 'SubmitContainerStateChangeResponse' => [ 'type' => 'structure', 'members' => [ 'acknowledgment' => [ 'shape' => 'String', ], ], ], 'SubmitTaskStateChangeRequest' => [ 'type' => 'structure', 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'task' => [ 'shape' => 'String', ], 'status' => [ 'shape' => 'String', ], 'reason' => [ 'shape' => 'String', ], ], ], 'SubmitTaskStateChangeResponse' => [ 'type' => 'structure', 'members' => [ 'acknowledgment' => [ 'shape' => 'String', ], ], ], 'Task' => [ 'type' => 'structure', 'members' => [ 'taskArn' => [ 'shape' => 'String', ], 'clusterArn' => [ 'shape' => 'String', ], 'taskDefinitionArn' => [ 'shape' => 'String', ], 'containerInstanceArn' => [ 'shape' => 'String', ], 'overrides' => [ 'shape' => 'TaskOverride', ], 'lastStatus' => [ 'shape' => 'String', ], 'desiredStatus' => [ 'shape' => 'String', ], 'containers' => [ 'shape' => 'Containers', ], 'startedBy' => [ 'shape' => 'String', ], 'stoppedReason' => [ 'shape' => 'String', ], 'createdAt' => [ 'shape' => 'Timestamp', ], 'startedAt' => [ 'shape' => 'Timestamp', ], 'stoppedAt' => [ 'shape' => 'Timestamp', ], ], ], 'TaskDefinition' => [ 'type' => 'structure', 'members' => [ 'taskDefinitionArn' => [ 'shape' => 'String', ], 'containerDefinitions' => [ 'shape' => 'ContainerDefinitions', ], 'family' => [ 'shape' => 'String', ], 'revision' => [ 'shape' => 'Integer', ], 'volumes' => [ 'shape' => 'VolumeList', ], 'status' => [ 'shape' => 'TaskDefinitionStatus', ], 'requiresAttributes' => [ 'shape' => 'RequiresAttributes', ], ], ], 'TaskDefinitionFamilyStatus' => [ 'type' => 'string', 'enum' => [ 'ACTIVE', 'INACTIVE', 'ALL', ], ], 'TaskDefinitionStatus' => [ 'type' => 'string', 'enum' => [ 'ACTIVE', 'INACTIVE', ], ], 'TaskOverride' => [ 'type' => 'structure', 'members' => [ 'containerOverrides' => [ 'shape' => 'ContainerOverrides', ], ], ], 'Tasks' => [ 'type' => 'list', 'member' => [ 'shape' => 'Task', ], ], 'Timestamp' => [ 'type' => 'timestamp', ], 'TransportProtocol' => [ 'type' => 'string', 'enum' => [ 'tcp', 'udp', ], ], 'Ulimit' => [ 'type' => 'structure', 'required' => [ 'name', 'softLimit', 'hardLimit', ], 'members' => [ 'name' => [ 'shape' => 'UlimitName', ], 'softLimit' => [ 'shape' => 'Integer', ], 'hardLimit' => [ 'shape' => 'Integer', ], ], ], 'UlimitList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Ulimit', ], ], 'UlimitName' => [ 'type' => 'string', 'enum' => [ 'core', 'cpu', 'data', 'fsize', 'locks', 'memlock', 'msgqueue', 'nice', 'nofile', 'nproc', 'rss', 'rtprio', 'rttime', 'sigpending', 'stack', ], ], 'UpdateContainerAgentRequest' => [ 'type' => 'structure', 'required' => [ 'containerInstance', ], 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'containerInstance' => [ 'shape' => 'String', ], ], ], 'UpdateContainerAgentResponse' => [ 'type' => 'structure', 'members' => [ 'containerInstance' => [ 'shape' => 'ContainerInstance', ], ], ], 'UpdateInProgressException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'UpdateServiceRequest' => [ 'type' => 'structure', 'required' => [ 'service', ], 'members' => [ 'cluster' => [ 'shape' => 'String', ], 'service' => [ 'shape' => 'String', ], 'desiredCount' => [ 'shape' => 'BoxedInteger', ], 'taskDefinition' => [ 'shape' => 'String', ], 'deploymentConfiguration' => [ 'shape' => 'DeploymentConfiguration', ], ], ], 'UpdateServiceResponse' => [ 'type' => 'structure', 'members' => [ 'service' => [ 'shape' => 'Service', ], ], ], 'VersionInfo' => [ 'type' => 'structure', 'members' => [ 'agentVersion' => [ 'shape' => 'String', ], 'agentHash' => [ 'shape' => 'String', ], 'dockerVersion' => [ 'shape' => 'String', ], ], ], 'Volume' => [ 'type' => 'structure', 'members' => [ 'name' => [ 'shape' => 'String', ], 'host' => [ 'shape' => 'HostVolumeProperties', ], ], ], 'VolumeFrom' => [ 'type' => 'structure', 'members' => [ 'sourceContainer' => [ 'shape' => 'String', ], 'readOnly' => [ 'shape' => 'BoxedBoolean', ], ], ], 'VolumeFromList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VolumeFrom', ], ], 'VolumeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Volume', ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/machinelearning/2014-12-12/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2014-12-12', 'endpointPrefix' => 'machinelearning', 'jsonVersion' => '1.1', 'serviceFullName' => 'Amazon Machine Learning', 'signatureVersion' => 'v4', 'targetPrefix' => 'AmazonML_20141212', 'protocol' => 'json', ], 'operations' => [ 'CreateBatchPrediction' => [ 'name' => 'CreateBatchPrediction', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateBatchPredictionInput', ], 'output' => [ 'shape' => 'CreateBatchPredictionOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'IdempotentParameterMismatchException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], ], ], 'CreateDataSourceFromRDS' => [ 'name' => 'CreateDataSourceFromRDS', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateDataSourceFromRDSInput', ], 'output' => [ 'shape' => 'CreateDataSourceFromRDSOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'IdempotentParameterMismatchException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], ], ], 'CreateDataSourceFromRedshift' => [ 'name' => 'CreateDataSourceFromRedshift', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateDataSourceFromRedshiftInput', ], 'output' => [ 'shape' => 'CreateDataSourceFromRedshiftOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'IdempotentParameterMismatchException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], ], ], 'CreateDataSourceFromS3' => [ 'name' => 'CreateDataSourceFromS3', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateDataSourceFromS3Input', ], 'output' => [ 'shape' => 'CreateDataSourceFromS3Output', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'IdempotentParameterMismatchException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], ], ], 'CreateEvaluation' => [ 'name' => 'CreateEvaluation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateEvaluationInput', ], 'output' => [ 'shape' => 'CreateEvaluationOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'IdempotentParameterMismatchException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], ], ], 'CreateMLModel' => [ 'name' => 'CreateMLModel', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateMLModelInput', ], 'output' => [ 'shape' => 'CreateMLModelOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'IdempotentParameterMismatchException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], ], ], 'CreateRealtimeEndpoint' => [ 'name' => 'CreateRealtimeEndpoint', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateRealtimeEndpointInput', ], 'output' => [ 'shape' => 'CreateRealtimeEndpointOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DeleteBatchPrediction' => [ 'name' => 'DeleteBatchPrediction', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteBatchPredictionInput', ], 'output' => [ 'shape' => 'DeleteBatchPredictionOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DeleteDataSource' => [ 'name' => 'DeleteDataSource', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteDataSourceInput', ], 'output' => [ 'shape' => 'DeleteDataSourceOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DeleteEvaluation' => [ 'name' => 'DeleteEvaluation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteEvaluationInput', ], 'output' => [ 'shape' => 'DeleteEvaluationOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DeleteMLModel' => [ 'name' => 'DeleteMLModel', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteMLModelInput', ], 'output' => [ 'shape' => 'DeleteMLModelOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DeleteRealtimeEndpoint' => [ 'name' => 'DeleteRealtimeEndpoint', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteRealtimeEndpointInput', ], 'output' => [ 'shape' => 'DeleteRealtimeEndpointOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DescribeBatchPredictions' => [ 'name' => 'DescribeBatchPredictions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeBatchPredictionsInput', ], 'output' => [ 'shape' => 'DescribeBatchPredictionsOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DescribeDataSources' => [ 'name' => 'DescribeDataSources', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeDataSourcesInput', ], 'output' => [ 'shape' => 'DescribeDataSourcesOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DescribeEvaluations' => [ 'name' => 'DescribeEvaluations', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeEvaluationsInput', ], 'output' => [ 'shape' => 'DescribeEvaluationsOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DescribeMLModels' => [ 'name' => 'DescribeMLModels', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeMLModelsInput', ], 'output' => [ 'shape' => 'DescribeMLModelsOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'GetBatchPrediction' => [ 'name' => 'GetBatchPrediction', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetBatchPredictionInput', ], 'output' => [ 'shape' => 'GetBatchPredictionOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'GetDataSource' => [ 'name' => 'GetDataSource', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetDataSourceInput', ], 'output' => [ 'shape' => 'GetDataSourceOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'GetEvaluation' => [ 'name' => 'GetEvaluation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetEvaluationInput', ], 'output' => [ 'shape' => 'GetEvaluationOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'GetMLModel' => [ 'name' => 'GetMLModel', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetMLModelInput', ], 'output' => [ 'shape' => 'GetMLModelOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'Predict' => [ 'name' => 'Predict', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PredictInput', ], 'output' => [ 'shape' => 'PredictOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'LimitExceededException', 'error' => [ 'httpStatusCode' => 417, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'PredictorNotMountedException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], ], ], 'UpdateBatchPrediction' => [ 'name' => 'UpdateBatchPrediction', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateBatchPredictionInput', ], 'output' => [ 'shape' => 'UpdateBatchPredictionOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'UpdateDataSource' => [ 'name' => 'UpdateDataSource', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateDataSourceInput', ], 'output' => [ 'shape' => 'UpdateDataSourceOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'UpdateEvaluation' => [ 'name' => 'UpdateEvaluation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateEvaluationInput', ], 'output' => [ 'shape' => 'UpdateEvaluationOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'UpdateMLModel' => [ 'name' => 'UpdateMLModel', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateMLModelInput', ], 'output' => [ 'shape' => 'UpdateMLModelOutput', ], 'errors' => [ [ 'shape' => 'InvalidInputException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InternalServerException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], ], 'shapes' => [ 'Algorithm' => [ 'type' => 'string', 'enum' => [ 'sgd', ], ], 'AwsUserArn' => [ 'type' => 'string', 'pattern' => 'arn:aws:iam::[0-9]+:((user/.+)|(root))', ], 'BatchPrediction' => [ 'type' => 'structure', 'members' => [ 'BatchPredictionId' => [ 'shape' => 'EntityId', ], 'MLModelId' => [ 'shape' => 'EntityId', ], 'BatchPredictionDataSourceId' => [ 'shape' => 'EntityId', ], 'InputDataLocationS3' => [ 'shape' => 'S3Url', ], 'CreatedByIamUser' => [ 'shape' => 'AwsUserArn', ], 'CreatedAt' => [ 'shape' => 'EpochTime', ], 'LastUpdatedAt' => [ 'shape' => 'EpochTime', ], 'Name' => [ 'shape' => 'EntityName', ], 'Status' => [ 'shape' => 'EntityStatus', ], 'OutputUri' => [ 'shape' => 'S3Url', ], 'Message' => [ 'shape' => 'Message', ], ], ], 'BatchPredictionFilterVariable' => [ 'type' => 'string', 'enum' => [ 'CreatedAt', 'LastUpdatedAt', 'Status', 'Name', 'IAMUser', 'MLModelId', 'DataSourceId', 'DataURI', ], ], 'BatchPredictions' => [ 'type' => 'list', 'member' => [ 'shape' => 'BatchPrediction', ], ], 'ComparatorValue' => [ 'type' => 'string', 'max' => 1024, 'pattern' => '.*\\S.*|^$', ], 'ComputeStatistics' => [ 'type' => 'boolean', ], 'CreateBatchPredictionInput' => [ 'type' => 'structure', 'required' => [ 'BatchPredictionId', 'MLModelId', 'BatchPredictionDataSourceId', 'OutputUri', ], 'members' => [ 'BatchPredictionId' => [ 'shape' => 'EntityId', ], 'BatchPredictionName' => [ 'shape' => 'EntityName', ], 'MLModelId' => [ 'shape' => 'EntityId', ], 'BatchPredictionDataSourceId' => [ 'shape' => 'EntityId', ], 'OutputUri' => [ 'shape' => 'S3Url', ], ], ], 'CreateBatchPredictionOutput' => [ 'type' => 'structure', 'members' => [ 'BatchPredictionId' => [ 'shape' => 'EntityId', ], ], ], 'CreateDataSourceFromRDSInput' => [ 'type' => 'structure', 'required' => [ 'DataSourceId', 'RDSData', 'RoleARN', ], 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], 'DataSourceName' => [ 'shape' => 'EntityName', ], 'RDSData' => [ 'shape' => 'RDSDataSpec', ], 'RoleARN' => [ 'shape' => 'RoleARN', ], 'ComputeStatistics' => [ 'shape' => 'ComputeStatistics', ], ], ], 'CreateDataSourceFromRDSOutput' => [ 'type' => 'structure', 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], ], ], 'CreateDataSourceFromRedshiftInput' => [ 'type' => 'structure', 'required' => [ 'DataSourceId', 'DataSpec', 'RoleARN', ], 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], 'DataSourceName' => [ 'shape' => 'EntityName', ], 'DataSpec' => [ 'shape' => 'RedshiftDataSpec', ], 'RoleARN' => [ 'shape' => 'RoleARN', ], 'ComputeStatistics' => [ 'shape' => 'ComputeStatistics', ], ], ], 'CreateDataSourceFromRedshiftOutput' => [ 'type' => 'structure', 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], ], ], 'CreateDataSourceFromS3Input' => [ 'type' => 'structure', 'required' => [ 'DataSourceId', 'DataSpec', ], 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], 'DataSourceName' => [ 'shape' => 'EntityName', ], 'DataSpec' => [ 'shape' => 'S3DataSpec', ], 'ComputeStatistics' => [ 'shape' => 'ComputeStatistics', ], ], ], 'CreateDataSourceFromS3Output' => [ 'type' => 'structure', 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], ], ], 'CreateEvaluationInput' => [ 'type' => 'structure', 'required' => [ 'EvaluationId', 'MLModelId', 'EvaluationDataSourceId', ], 'members' => [ 'EvaluationId' => [ 'shape' => 'EntityId', ], 'EvaluationName' => [ 'shape' => 'EntityName', ], 'MLModelId' => [ 'shape' => 'EntityId', ], 'EvaluationDataSourceId' => [ 'shape' => 'EntityId', ], ], ], 'CreateEvaluationOutput' => [ 'type' => 'structure', 'members' => [ 'EvaluationId' => [ 'shape' => 'EntityId', ], ], ], 'CreateMLModelInput' => [ 'type' => 'structure', 'required' => [ 'MLModelId', 'MLModelType', 'TrainingDataSourceId', ], 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], 'MLModelName' => [ 'shape' => 'EntityName', ], 'MLModelType' => [ 'shape' => 'MLModelType', ], 'Parameters' => [ 'shape' => 'TrainingParameters', ], 'TrainingDataSourceId' => [ 'shape' => 'EntityId', ], 'Recipe' => [ 'shape' => 'Recipe', ], 'RecipeUri' => [ 'shape' => 'S3Url', ], ], ], 'CreateMLModelOutput' => [ 'type' => 'structure', 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], ], ], 'CreateRealtimeEndpointInput' => [ 'type' => 'structure', 'required' => [ 'MLModelId', ], 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], ], ], 'CreateRealtimeEndpointOutput' => [ 'type' => 'structure', 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], 'RealtimeEndpointInfo' => [ 'shape' => 'RealtimeEndpointInfo', ], ], ], 'DataRearrangement' => [ 'type' => 'string', ], 'DataSchema' => [ 'type' => 'string', 'max' => 131071, ], 'DataSource' => [ 'type' => 'structure', 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], 'DataLocationS3' => [ 'shape' => 'S3Url', ], 'DataRearrangement' => [ 'shape' => 'DataRearrangement', ], 'CreatedByIamUser' => [ 'shape' => 'AwsUserArn', ], 'CreatedAt' => [ 'shape' => 'EpochTime', ], 'LastUpdatedAt' => [ 'shape' => 'EpochTime', ], 'DataSizeInBytes' => [ 'shape' => 'LongType', ], 'NumberOfFiles' => [ 'shape' => 'LongType', ], 'Name' => [ 'shape' => 'EntityName', ], 'Status' => [ 'shape' => 'EntityStatus', ], 'Message' => [ 'shape' => 'Message', ], 'RedshiftMetadata' => [ 'shape' => 'RedshiftMetadata', ], 'RDSMetadata' => [ 'shape' => 'RDSMetadata', ], 'RoleARN' => [ 'shape' => 'RoleARN', ], 'ComputeStatistics' => [ 'shape' => 'ComputeStatistics', ], ], ], 'DataSourceFilterVariable' => [ 'type' => 'string', 'enum' => [ 'CreatedAt', 'LastUpdatedAt', 'Status', 'Name', 'DataLocationS3', 'IAMUser', ], ], 'DataSources' => [ 'type' => 'list', 'member' => [ 'shape' => 'DataSource', ], ], 'DeleteBatchPredictionInput' => [ 'type' => 'structure', 'required' => [ 'BatchPredictionId', ], 'members' => [ 'BatchPredictionId' => [ 'shape' => 'EntityId', ], ], ], 'DeleteBatchPredictionOutput' => [ 'type' => 'structure', 'members' => [ 'BatchPredictionId' => [ 'shape' => 'EntityId', ], ], ], 'DeleteDataSourceInput' => [ 'type' => 'structure', 'required' => [ 'DataSourceId', ], 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], ], ], 'DeleteDataSourceOutput' => [ 'type' => 'structure', 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], ], ], 'DeleteEvaluationInput' => [ 'type' => 'structure', 'required' => [ 'EvaluationId', ], 'members' => [ 'EvaluationId' => [ 'shape' => 'EntityId', ], ], ], 'DeleteEvaluationOutput' => [ 'type' => 'structure', 'members' => [ 'EvaluationId' => [ 'shape' => 'EntityId', ], ], ], 'DeleteMLModelInput' => [ 'type' => 'structure', 'required' => [ 'MLModelId', ], 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], ], ], 'DeleteMLModelOutput' => [ 'type' => 'structure', 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], ], ], 'DeleteRealtimeEndpointInput' => [ 'type' => 'structure', 'required' => [ 'MLModelId', ], 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], ], ], 'DeleteRealtimeEndpointOutput' => [ 'type' => 'structure', 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], 'RealtimeEndpointInfo' => [ 'shape' => 'RealtimeEndpointInfo', ], ], ], 'DescribeBatchPredictionsInput' => [ 'type' => 'structure', 'members' => [ 'FilterVariable' => [ 'shape' => 'BatchPredictionFilterVariable', ], 'EQ' => [ 'shape' => 'ComparatorValue', ], 'GT' => [ 'shape' => 'ComparatorValue', ], 'LT' => [ 'shape' => 'ComparatorValue', ], 'GE' => [ 'shape' => 'ComparatorValue', ], 'LE' => [ 'shape' => 'ComparatorValue', ], 'NE' => [ 'shape' => 'ComparatorValue', ], 'Prefix' => [ 'shape' => 'ComparatorValue', ], 'SortOrder' => [ 'shape' => 'SortOrder', ], 'NextToken' => [ 'shape' => 'StringType', ], 'Limit' => [ 'shape' => 'PageLimit', ], ], ], 'DescribeBatchPredictionsOutput' => [ 'type' => 'structure', 'members' => [ 'Results' => [ 'shape' => 'BatchPredictions', ], 'NextToken' => [ 'shape' => 'StringType', ], ], ], 'DescribeDataSourcesInput' => [ 'type' => 'structure', 'members' => [ 'FilterVariable' => [ 'shape' => 'DataSourceFilterVariable', ], 'EQ' => [ 'shape' => 'ComparatorValue', ], 'GT' => [ 'shape' => 'ComparatorValue', ], 'LT' => [ 'shape' => 'ComparatorValue', ], 'GE' => [ 'shape' => 'ComparatorValue', ], 'LE' => [ 'shape' => 'ComparatorValue', ], 'NE' => [ 'shape' => 'ComparatorValue', ], 'Prefix' => [ 'shape' => 'ComparatorValue', ], 'SortOrder' => [ 'shape' => 'SortOrder', ], 'NextToken' => [ 'shape' => 'StringType', ], 'Limit' => [ 'shape' => 'PageLimit', ], ], ], 'DescribeDataSourcesOutput' => [ 'type' => 'structure', 'members' => [ 'Results' => [ 'shape' => 'DataSources', ], 'NextToken' => [ 'shape' => 'StringType', ], ], ], 'DescribeEvaluationsInput' => [ 'type' => 'structure', 'members' => [ 'FilterVariable' => [ 'shape' => 'EvaluationFilterVariable', ], 'EQ' => [ 'shape' => 'ComparatorValue', ], 'GT' => [ 'shape' => 'ComparatorValue', ], 'LT' => [ 'shape' => 'ComparatorValue', ], 'GE' => [ 'shape' => 'ComparatorValue', ], 'LE' => [ 'shape' => 'ComparatorValue', ], 'NE' => [ 'shape' => 'ComparatorValue', ], 'Prefix' => [ 'shape' => 'ComparatorValue', ], 'SortOrder' => [ 'shape' => 'SortOrder', ], 'NextToken' => [ 'shape' => 'StringType', ], 'Limit' => [ 'shape' => 'PageLimit', ], ], ], 'DescribeEvaluationsOutput' => [ 'type' => 'structure', 'members' => [ 'Results' => [ 'shape' => 'Evaluations', ], 'NextToken' => [ 'shape' => 'StringType', ], ], ], 'DescribeMLModelsInput' => [ 'type' => 'structure', 'members' => [ 'FilterVariable' => [ 'shape' => 'MLModelFilterVariable', ], 'EQ' => [ 'shape' => 'ComparatorValue', ], 'GT' => [ 'shape' => 'ComparatorValue', ], 'LT' => [ 'shape' => 'ComparatorValue', ], 'GE' => [ 'shape' => 'ComparatorValue', ], 'LE' => [ 'shape' => 'ComparatorValue', ], 'NE' => [ 'shape' => 'ComparatorValue', ], 'Prefix' => [ 'shape' => 'ComparatorValue', ], 'SortOrder' => [ 'shape' => 'SortOrder', ], 'NextToken' => [ 'shape' => 'StringType', ], 'Limit' => [ 'shape' => 'PageLimit', ], ], ], 'DescribeMLModelsOutput' => [ 'type' => 'structure', 'members' => [ 'Results' => [ 'shape' => 'MLModels', ], 'NextToken' => [ 'shape' => 'StringType', ], ], ], 'DetailsAttributes' => [ 'type' => 'string', 'enum' => [ 'PredictiveModelType', 'Algorithm', ], ], 'DetailsMap' => [ 'type' => 'map', 'key' => [ 'shape' => 'DetailsAttributes', ], 'value' => [ 'shape' => 'DetailsValue', ], ], 'DetailsValue' => [ 'type' => 'string', 'min' => 1, ], 'EDPPipelineId' => [ 'type' => 'string', 'min' => 1, 'max' => 1024, ], 'EDPResourceRole' => [ 'type' => 'string', 'min' => 1, 'max' => 64, ], 'EDPSecurityGroupId' => [ 'type' => 'string', 'min' => 1, 'max' => 255, ], 'EDPSecurityGroupIds' => [ 'type' => 'list', 'member' => [ 'shape' => 'EDPSecurityGroupId', ], ], 'EDPServiceRole' => [ 'type' => 'string', 'min' => 1, 'max' => 64, ], 'EDPSubnetId' => [ 'type' => 'string', 'min' => 1, 'max' => 255, ], 'EntityId' => [ 'type' => 'string', 'min' => 1, 'max' => 64, 'pattern' => '[a-zA-Z0-9_.-]+', ], 'EntityName' => [ 'type' => 'string', 'max' => 1024, 'pattern' => '.*\\S.*|^$', ], 'EntityStatus' => [ 'type' => 'string', 'enum' => [ 'PENDING', 'INPROGRESS', 'FAILED', 'COMPLETED', 'DELETED', ], ], 'EpochTime' => [ 'type' => 'timestamp', ], 'ErrorCode' => [ 'type' => 'integer', ], 'ErrorMessage' => [ 'type' => 'string', 'max' => 2048, ], 'Evaluation' => [ 'type' => 'structure', 'members' => [ 'EvaluationId' => [ 'shape' => 'EntityId', ], 'MLModelId' => [ 'shape' => 'EntityId', ], 'EvaluationDataSourceId' => [ 'shape' => 'EntityId', ], 'InputDataLocationS3' => [ 'shape' => 'S3Url', ], 'CreatedByIamUser' => [ 'shape' => 'AwsUserArn', ], 'CreatedAt' => [ 'shape' => 'EpochTime', ], 'LastUpdatedAt' => [ 'shape' => 'EpochTime', ], 'Name' => [ 'shape' => 'EntityName', ], 'Status' => [ 'shape' => 'EntityStatus', ], 'PerformanceMetrics' => [ 'shape' => 'PerformanceMetrics', ], 'Message' => [ 'shape' => 'Message', ], ], ], 'EvaluationFilterVariable' => [ 'type' => 'string', 'enum' => [ 'CreatedAt', 'LastUpdatedAt', 'Status', 'Name', 'IAMUser', 'MLModelId', 'DataSourceId', 'DataURI', ], ], 'Evaluations' => [ 'type' => 'list', 'member' => [ 'shape' => 'Evaluation', ], ], 'GetBatchPredictionInput' => [ 'type' => 'structure', 'required' => [ 'BatchPredictionId', ], 'members' => [ 'BatchPredictionId' => [ 'shape' => 'EntityId', ], ], ], 'GetBatchPredictionOutput' => [ 'type' => 'structure', 'members' => [ 'BatchPredictionId' => [ 'shape' => 'EntityId', ], 'MLModelId' => [ 'shape' => 'EntityId', ], 'BatchPredictionDataSourceId' => [ 'shape' => 'EntityId', ], 'InputDataLocationS3' => [ 'shape' => 'S3Url', ], 'CreatedByIamUser' => [ 'shape' => 'AwsUserArn', ], 'CreatedAt' => [ 'shape' => 'EpochTime', ], 'LastUpdatedAt' => [ 'shape' => 'EpochTime', ], 'Name' => [ 'shape' => 'EntityName', ], 'Status' => [ 'shape' => 'EntityStatus', ], 'OutputUri' => [ 'shape' => 'S3Url', ], 'LogUri' => [ 'shape' => 'PresignedS3Url', ], 'Message' => [ 'shape' => 'Message', ], ], ], 'GetDataSourceInput' => [ 'type' => 'structure', 'required' => [ 'DataSourceId', ], 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], 'Verbose' => [ 'shape' => 'Verbose', ], ], ], 'GetDataSourceOutput' => [ 'type' => 'structure', 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], 'DataLocationS3' => [ 'shape' => 'S3Url', ], 'DataRearrangement' => [ 'shape' => 'DataRearrangement', ], 'CreatedByIamUser' => [ 'shape' => 'AwsUserArn', ], 'CreatedAt' => [ 'shape' => 'EpochTime', ], 'LastUpdatedAt' => [ 'shape' => 'EpochTime', ], 'DataSizeInBytes' => [ 'shape' => 'LongType', ], 'NumberOfFiles' => [ 'shape' => 'LongType', ], 'Name' => [ 'shape' => 'EntityName', ], 'Status' => [ 'shape' => 'EntityStatus', ], 'LogUri' => [ 'shape' => 'PresignedS3Url', ], 'Message' => [ 'shape' => 'Message', ], 'RedshiftMetadata' => [ 'shape' => 'RedshiftMetadata', ], 'RDSMetadata' => [ 'shape' => 'RDSMetadata', ], 'RoleARN' => [ 'shape' => 'RoleARN', ], 'ComputeStatistics' => [ 'shape' => 'ComputeStatistics', ], 'DataSourceSchema' => [ 'shape' => 'DataSchema', ], ], ], 'GetEvaluationInput' => [ 'type' => 'structure', 'required' => [ 'EvaluationId', ], 'members' => [ 'EvaluationId' => [ 'shape' => 'EntityId', ], ], ], 'GetEvaluationOutput' => [ 'type' => 'structure', 'members' => [ 'EvaluationId' => [ 'shape' => 'EntityId', ], 'MLModelId' => [ 'shape' => 'EntityId', ], 'EvaluationDataSourceId' => [ 'shape' => 'EntityId', ], 'InputDataLocationS3' => [ 'shape' => 'S3Url', ], 'CreatedByIamUser' => [ 'shape' => 'AwsUserArn', ], 'CreatedAt' => [ 'shape' => 'EpochTime', ], 'LastUpdatedAt' => [ 'shape' => 'EpochTime', ], 'Name' => [ 'shape' => 'EntityName', ], 'Status' => [ 'shape' => 'EntityStatus', ], 'PerformanceMetrics' => [ 'shape' => 'PerformanceMetrics', ], 'LogUri' => [ 'shape' => 'PresignedS3Url', ], 'Message' => [ 'shape' => 'Message', ], ], ], 'GetMLModelInput' => [ 'type' => 'structure', 'required' => [ 'MLModelId', ], 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], 'Verbose' => [ 'shape' => 'Verbose', ], ], ], 'GetMLModelOutput' => [ 'type' => 'structure', 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], 'TrainingDataSourceId' => [ 'shape' => 'EntityId', ], 'CreatedByIamUser' => [ 'shape' => 'AwsUserArn', ], 'CreatedAt' => [ 'shape' => 'EpochTime', ], 'LastUpdatedAt' => [ 'shape' => 'EpochTime', ], 'Name' => [ 'shape' => 'MLModelName', ], 'Status' => [ 'shape' => 'EntityStatus', ], 'SizeInBytes' => [ 'shape' => 'LongType', ], 'EndpointInfo' => [ 'shape' => 'RealtimeEndpointInfo', ], 'TrainingParameters' => [ 'shape' => 'TrainingParameters', ], 'InputDataLocationS3' => [ 'shape' => 'S3Url', ], 'MLModelType' => [ 'shape' => 'MLModelType', ], 'ScoreThreshold' => [ 'shape' => 'ScoreThreshold', ], 'ScoreThresholdLastUpdatedAt' => [ 'shape' => 'EpochTime', ], 'LogUri' => [ 'shape' => 'PresignedS3Url', ], 'Message' => [ 'shape' => 'Message', ], 'Recipe' => [ 'shape' => 'Recipe', ], 'Schema' => [ 'shape' => 'DataSchema', ], ], ], 'IdempotentParameterMismatchException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'code' => [ 'shape' => 'ErrorCode', ], ], 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], 'IntegerType' => [ 'type' => 'integer', ], 'InternalServerException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'code' => [ 'shape' => 'ErrorCode', ], ], 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], 'InvalidInputException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'code' => [ 'shape' => 'ErrorCode', ], ], 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], 'Label' => [ 'type' => 'string', 'min' => 1, ], 'LimitExceededException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'code' => [ 'shape' => 'ErrorCode', ], ], 'error' => [ 'httpStatusCode' => 417, ], 'exception' => true, ], 'LongType' => [ 'type' => 'long', ], 'MLModel' => [ 'type' => 'structure', 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], 'TrainingDataSourceId' => [ 'shape' => 'EntityId', ], 'CreatedByIamUser' => [ 'shape' => 'AwsUserArn', ], 'CreatedAt' => [ 'shape' => 'EpochTime', ], 'LastUpdatedAt' => [ 'shape' => 'EpochTime', ], 'Name' => [ 'shape' => 'MLModelName', ], 'Status' => [ 'shape' => 'EntityStatus', ], 'SizeInBytes' => [ 'shape' => 'LongType', ], 'EndpointInfo' => [ 'shape' => 'RealtimeEndpointInfo', ], 'TrainingParameters' => [ 'shape' => 'TrainingParameters', ], 'InputDataLocationS3' => [ 'shape' => 'S3Url', ], 'Algorithm' => [ 'shape' => 'Algorithm', ], 'MLModelType' => [ 'shape' => 'MLModelType', ], 'ScoreThreshold' => [ 'shape' => 'ScoreThreshold', ], 'ScoreThresholdLastUpdatedAt' => [ 'shape' => 'EpochTime', ], 'Message' => [ 'shape' => 'Message', ], ], ], 'MLModelFilterVariable' => [ 'type' => 'string', 'enum' => [ 'CreatedAt', 'LastUpdatedAt', 'Status', 'Name', 'IAMUser', 'TrainingDataSourceId', 'RealtimeEndpointStatus', 'MLModelType', 'Algorithm', 'TrainingDataURI', ], ], 'MLModelName' => [ 'type' => 'string', 'max' => 1024, ], 'MLModelType' => [ 'type' => 'string', 'enum' => [ 'REGRESSION', 'BINARY', 'MULTICLASS', ], ], 'MLModels' => [ 'type' => 'list', 'member' => [ 'shape' => 'MLModel', ], ], 'Message' => [ 'type' => 'string', 'max' => 10240, ], 'PageLimit' => [ 'type' => 'integer', 'min' => 1, 'max' => 100, ], 'PerformanceMetrics' => [ 'type' => 'structure', 'members' => [ 'Properties' => [ 'shape' => 'PerformanceMetricsProperties', ], ], ], 'PerformanceMetricsProperties' => [ 'type' => 'map', 'key' => [ 'shape' => 'PerformanceMetricsPropertyKey', ], 'value' => [ 'shape' => 'PerformanceMetricsPropertyValue', ], ], 'PerformanceMetricsPropertyKey' => [ 'type' => 'string', ], 'PerformanceMetricsPropertyValue' => [ 'type' => 'string', ], 'PredictInput' => [ 'type' => 'structure', 'required' => [ 'MLModelId', 'Record', 'PredictEndpoint', ], 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], 'Record' => [ 'shape' => 'Record', ], 'PredictEndpoint' => [ 'shape' => 'VipURL', ], ], ], 'PredictOutput' => [ 'type' => 'structure', 'members' => [ 'Prediction' => [ 'shape' => 'Prediction', ], ], ], 'Prediction' => [ 'type' => 'structure', 'members' => [ 'predictedLabel' => [ 'shape' => 'Label', ], 'predictedValue' => [ 'shape' => 'floatLabel', ], 'predictedScores' => [ 'shape' => 'ScoreValuePerLabelMap', ], 'details' => [ 'shape' => 'DetailsMap', ], ], ], 'PredictorNotMountedException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], 'PresignedS3Url' => [ 'type' => 'string', ], 'RDSDataSpec' => [ 'type' => 'structure', 'required' => [ 'DatabaseInformation', 'SelectSqlQuery', 'DatabaseCredentials', 'S3StagingLocation', 'ResourceRole', 'ServiceRole', 'SubnetId', 'SecurityGroupIds', ], 'members' => [ 'DatabaseInformation' => [ 'shape' => 'RDSDatabase', ], 'SelectSqlQuery' => [ 'shape' => 'RDSSelectSqlQuery', ], 'DatabaseCredentials' => [ 'shape' => 'RDSDatabaseCredentials', ], 'S3StagingLocation' => [ 'shape' => 'S3Url', ], 'DataRearrangement' => [ 'shape' => 'DataRearrangement', ], 'DataSchema' => [ 'shape' => 'DataSchema', ], 'DataSchemaUri' => [ 'shape' => 'S3Url', ], 'ResourceRole' => [ 'shape' => 'EDPResourceRole', ], 'ServiceRole' => [ 'shape' => 'EDPServiceRole', ], 'SubnetId' => [ 'shape' => 'EDPSubnetId', ], 'SecurityGroupIds' => [ 'shape' => 'EDPSecurityGroupIds', ], ], ], 'RDSDatabase' => [ 'type' => 'structure', 'required' => [ 'InstanceIdentifier', 'DatabaseName', ], 'members' => [ 'InstanceIdentifier' => [ 'shape' => 'RDSInstanceIdentifier', ], 'DatabaseName' => [ 'shape' => 'RDSDatabaseName', ], ], ], 'RDSDatabaseCredentials' => [ 'type' => 'structure', 'required' => [ 'Username', 'Password', ], 'members' => [ 'Username' => [ 'shape' => 'RDSDatabaseUsername', ], 'Password' => [ 'shape' => 'RDSDatabasePassword', ], ], ], 'RDSDatabaseName' => [ 'type' => 'string', 'min' => 1, 'max' => 64, ], 'RDSDatabasePassword' => [ 'type' => 'string', 'min' => 8, 'max' => 128, ], 'RDSDatabaseUsername' => [ 'type' => 'string', 'min' => 1, 'max' => 128, ], 'RDSInstanceIdentifier' => [ 'type' => 'string', 'min' => 1, 'max' => 63, 'pattern' => '[a-z0-9-]+', ], 'RDSMetadata' => [ 'type' => 'structure', 'members' => [ 'Database' => [ 'shape' => 'RDSDatabase', ], 'DatabaseUserName' => [ 'shape' => 'RDSDatabaseUsername', ], 'SelectSqlQuery' => [ 'shape' => 'RDSSelectSqlQuery', ], 'ResourceRole' => [ 'shape' => 'EDPResourceRole', ], 'ServiceRole' => [ 'shape' => 'EDPServiceRole', ], 'DataPipelineId' => [ 'shape' => 'EDPPipelineId', ], ], ], 'RDSSelectSqlQuery' => [ 'type' => 'string', 'min' => 1, 'max' => 16777216, ], 'RealtimeEndpointInfo' => [ 'type' => 'structure', 'members' => [ 'PeakRequestsPerSecond' => [ 'shape' => 'IntegerType', ], 'CreatedAt' => [ 'shape' => 'EpochTime', ], 'EndpointUrl' => [ 'shape' => 'VipURL', ], 'EndpointStatus' => [ 'shape' => 'RealtimeEndpointStatus', ], ], ], 'RealtimeEndpointStatus' => [ 'type' => 'string', 'enum' => [ 'NONE', 'READY', 'UPDATING', 'FAILED', ], ], 'Recipe' => [ 'type' => 'string', 'max' => 131071, ], 'Record' => [ 'type' => 'map', 'key' => [ 'shape' => 'VariableName', ], 'value' => [ 'shape' => 'VariableValue', ], ], 'RedshiftClusterIdentifier' => [ 'type' => 'string', 'min' => 1, 'max' => 63, 'pattern' => '[a-z0-9-]+', ], 'RedshiftDataSpec' => [ 'type' => 'structure', 'required' => [ 'DatabaseInformation', 'SelectSqlQuery', 'DatabaseCredentials', 'S3StagingLocation', ], 'members' => [ 'DatabaseInformation' => [ 'shape' => 'RedshiftDatabase', ], 'SelectSqlQuery' => [ 'shape' => 'RedshiftSelectSqlQuery', ], 'DatabaseCredentials' => [ 'shape' => 'RedshiftDatabaseCredentials', ], 'S3StagingLocation' => [ 'shape' => 'S3Url', ], 'DataRearrangement' => [ 'shape' => 'DataRearrangement', ], 'DataSchema' => [ 'shape' => 'DataSchema', ], 'DataSchemaUri' => [ 'shape' => 'S3Url', ], ], ], 'RedshiftDatabase' => [ 'type' => 'structure', 'required' => [ 'DatabaseName', 'ClusterIdentifier', ], 'members' => [ 'DatabaseName' => [ 'shape' => 'RedshiftDatabaseName', ], 'ClusterIdentifier' => [ 'shape' => 'RedshiftClusterIdentifier', ], ], ], 'RedshiftDatabaseCredentials' => [ 'type' => 'structure', 'required' => [ 'Username', 'Password', ], 'members' => [ 'Username' => [ 'shape' => 'RedshiftDatabaseUsername', ], 'Password' => [ 'shape' => 'RedshiftDatabasePassword', ], ], ], 'RedshiftDatabaseName' => [ 'type' => 'string', 'min' => 1, 'max' => 64, 'pattern' => '[a-z0-9]+', ], 'RedshiftDatabasePassword' => [ 'type' => 'string', 'min' => 8, 'max' => 64, ], 'RedshiftDatabaseUsername' => [ 'type' => 'string', 'min' => 1, 'max' => 128, ], 'RedshiftMetadata' => [ 'type' => 'structure', 'members' => [ 'RedshiftDatabase' => [ 'shape' => 'RedshiftDatabase', ], 'DatabaseUserName' => [ 'shape' => 'RedshiftDatabaseUsername', ], 'SelectSqlQuery' => [ 'shape' => 'RedshiftSelectSqlQuery', ], ], ], 'RedshiftSelectSqlQuery' => [ 'type' => 'string', 'min' => 1, 'max' => 16777216, ], 'ResourceNotFoundException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], 'code' => [ 'shape' => 'ErrorCode', ], ], 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], 'RoleARN' => [ 'type' => 'string', 'min' => 1, 'max' => 100, ], 'S3DataSpec' => [ 'type' => 'structure', 'required' => [ 'DataLocationS3', ], 'members' => [ 'DataLocationS3' => [ 'shape' => 'S3Url', ], 'DataRearrangement' => [ 'shape' => 'DataRearrangement', ], 'DataSchema' => [ 'shape' => 'DataSchema', ], 'DataSchemaLocationS3' => [ 'shape' => 'S3Url', ], ], ], 'S3Url' => [ 'type' => 'string', 'max' => 2048, 'pattern' => 's3://([^/]+)(/.*)?', ], 'ScoreThreshold' => [ 'type' => 'float', ], 'ScoreValue' => [ 'type' => 'float', ], 'ScoreValuePerLabelMap' => [ 'type' => 'map', 'key' => [ 'shape' => 'Label', ], 'value' => [ 'shape' => 'ScoreValue', ], ], 'SortOrder' => [ 'type' => 'string', 'enum' => [ 'asc', 'dsc', ], ], 'StringType' => [ 'type' => 'string', ], 'TrainingParameters' => [ 'type' => 'map', 'key' => [ 'shape' => 'StringType', ], 'value' => [ 'shape' => 'StringType', ], ], 'UpdateBatchPredictionInput' => [ 'type' => 'structure', 'required' => [ 'BatchPredictionId', 'BatchPredictionName', ], 'members' => [ 'BatchPredictionId' => [ 'shape' => 'EntityId', ], 'BatchPredictionName' => [ 'shape' => 'EntityName', ], ], ], 'UpdateBatchPredictionOutput' => [ 'type' => 'structure', 'members' => [ 'BatchPredictionId' => [ 'shape' => 'EntityId', ], ], ], 'UpdateDataSourceInput' => [ 'type' => 'structure', 'required' => [ 'DataSourceId', 'DataSourceName', ], 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], 'DataSourceName' => [ 'shape' => 'EntityName', ], ], ], 'UpdateDataSourceOutput' => [ 'type' => 'structure', 'members' => [ 'DataSourceId' => [ 'shape' => 'EntityId', ], ], ], 'UpdateEvaluationInput' => [ 'type' => 'structure', 'required' => [ 'EvaluationId', 'EvaluationName', ], 'members' => [ 'EvaluationId' => [ 'shape' => 'EntityId', ], 'EvaluationName' => [ 'shape' => 'EntityName', ], ], ], 'UpdateEvaluationOutput' => [ 'type' => 'structure', 'members' => [ 'EvaluationId' => [ 'shape' => 'EntityId', ], ], ], 'UpdateMLModelInput' => [ 'type' => 'structure', 'required' => [ 'MLModelId', ], 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], 'MLModelName' => [ 'shape' => 'EntityName', ], 'ScoreThreshold' => [ 'shape' => 'ScoreThreshold', ], ], ], 'UpdateMLModelOutput' => [ 'type' => 'structure', 'members' => [ 'MLModelId' => [ 'shape' => 'EntityId', ], ], ], 'VariableName' => [ 'type' => 'string', ], 'VariableValue' => [ 'type' => 'string', ], 'Verbose' => [ 'type' => 'boolean', ], 'VipURL' => [ 'type' => 'string', 'max' => 2048, 'pattern' => 'https://[a-zA-Z0-9-.]*\\.amazon(aws)?\\.com[/]?', ], 'floatLabel' => [ 'type' => 'float', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/iot/2015-05-28/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2015-05-28', 'endpointPrefix' => 'iot', 'serviceFullName' => 'AWS IoT', 'signatureVersion' => 'v4', 'signingName' => 'execute-api', 'protocol' => 'rest-json', ], 'operations' => [ 'AcceptCertificateTransfer' => [ 'name' => 'AcceptCertificateTransfer', 'http' => [ 'method' => 'PATCH', 'requestUri' => '/accept-certificate-transfer/{certificateId}', ], 'input' => [ 'shape' => 'AcceptCertificateTransferRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'TransferAlreadyCompletedException', 'error' => [ 'httpStatusCode' => 410, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'AttachPrincipalPolicy' => [ 'name' => 'AttachPrincipalPolicy', 'http' => [ 'method' => 'PUT', 'requestUri' => '/principal-policies/{policyName}', ], 'input' => [ 'shape' => 'AttachPrincipalPolicyRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'LimitExceededException', 'error' => [ 'httpStatusCode' => 410, ], 'exception' => true, ], ], ], 'AttachThingPrincipal' => [ 'name' => 'AttachThingPrincipal', 'http' => [ 'method' => 'PUT', 'requestUri' => '/things/{thingName}/principals', ], 'input' => [ 'shape' => 'AttachThingPrincipalRequest', ], 'output' => [ 'shape' => 'AttachThingPrincipalResponse', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'CancelCertificateTransfer' => [ 'name' => 'CancelCertificateTransfer', 'http' => [ 'method' => 'PATCH', 'requestUri' => '/cancel-certificate-transfer/{certificateId}', ], 'input' => [ 'shape' => 'CancelCertificateTransferRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'TransferAlreadyCompletedException', 'error' => [ 'httpStatusCode' => 410, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'CreateCertificateFromCsr' => [ 'name' => 'CreateCertificateFromCsr', 'http' => [ 'method' => 'POST', 'requestUri' => '/certificates', ], 'input' => [ 'shape' => 'CreateCertificateFromCsrRequest', ], 'output' => [ 'shape' => 'CreateCertificateFromCsrResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'CreateKeysAndCertificate' => [ 'name' => 'CreateKeysAndCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/keys-and-certificate', ], 'input' => [ 'shape' => 'CreateKeysAndCertificateRequest', ], 'output' => [ 'shape' => 'CreateKeysAndCertificateResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'CreatePolicy' => [ 'name' => 'CreatePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/policies/{policyName}', ], 'input' => [ 'shape' => 'CreatePolicyRequest', ], 'output' => [ 'shape' => 'CreatePolicyResponse', ], 'errors' => [ [ 'shape' => 'ResourceAlreadyExistsException', 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], [ 'shape' => 'MalformedPolicyException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'CreatePolicyVersion' => [ 'name' => 'CreatePolicyVersion', 'http' => [ 'method' => 'POST', 'requestUri' => '/policies/{policyName}/version', ], 'input' => [ 'shape' => 'CreatePolicyVersionRequest', ], 'output' => [ 'shape' => 'CreatePolicyVersionResponse', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'MalformedPolicyException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'VersionsLimitExceededException', 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'CreateThing' => [ 'name' => 'CreateThing', 'http' => [ 'method' => 'POST', 'requestUri' => '/things/{thingName}', ], 'input' => [ 'shape' => 'CreateThingRequest', ], 'output' => [ 'shape' => 'CreateThingResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'ResourceAlreadyExistsException', 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], ], ], 'CreateTopicRule' => [ 'name' => 'CreateTopicRule', 'http' => [ 'method' => 'POST', 'requestUri' => '/rules/{ruleName}', ], 'input' => [ 'shape' => 'CreateTopicRuleRequest', ], 'errors' => [ [ 'shape' => 'SqlParseException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InternalException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceAlreadyExistsException', 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], ], ], 'DeleteCACertificate' => [ 'name' => 'DeleteCACertificate', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/cacertificate/{certificateId}', ], 'input' => [ 'shape' => 'DeleteCACertificateRequest', ], 'output' => [ 'shape' => 'DeleteCACertificateResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'CertificateStateException', 'error' => [ 'httpStatusCode' => 406, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], ], ], 'DeleteCertificate' => [ 'name' => 'DeleteCertificate', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/certificates/{certificateId}', ], 'input' => [ 'shape' => 'DeleteCertificateRequest', ], 'errors' => [ [ 'shape' => 'CertificateStateException', 'error' => [ 'httpStatusCode' => 406, ], 'exception' => true, ], [ 'shape' => 'DeleteConflictException', 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], ], ], 'DeletePolicy' => [ 'name' => 'DeletePolicy', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/policies/{policyName}', ], 'input' => [ 'shape' => 'DeletePolicyRequest', ], 'errors' => [ [ 'shape' => 'DeleteConflictException', 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DeletePolicyVersion' => [ 'name' => 'DeletePolicyVersion', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/policies/{policyName}/version/{policyVersionId}', ], 'input' => [ 'shape' => 'DeletePolicyVersionRequest', ], 'errors' => [ [ 'shape' => 'DeleteConflictException', 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DeleteRegistrationCode' => [ 'name' => 'DeleteRegistrationCode', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/registrationcode', ], 'input' => [ 'shape' => 'DeleteRegistrationCodeRequest', ], 'output' => [ 'shape' => 'DeleteRegistrationCodeResponse', ], 'errors' => [ [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DeleteThing' => [ 'name' => 'DeleteThing', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/things/{thingName}', ], 'input' => [ 'shape' => 'DeleteThingRequest', ], 'output' => [ 'shape' => 'DeleteThingResponse', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DeleteTopicRule' => [ 'name' => 'DeleteTopicRule', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/rules/{ruleName}', ], 'input' => [ 'shape' => 'DeleteTopicRuleRequest', ], 'errors' => [ [ 'shape' => 'InternalException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], ], ], 'DescribeCACertificate' => [ 'name' => 'DescribeCACertificate', 'http' => [ 'method' => 'GET', 'requestUri' => '/cacertificate/{certificateId}', ], 'input' => [ 'shape' => 'DescribeCACertificateRequest', ], 'output' => [ 'shape' => 'DescribeCACertificateResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], ], ], 'DescribeCertificate' => [ 'name' => 'DescribeCertificate', 'http' => [ 'method' => 'GET', 'requestUri' => '/certificates/{certificateId}', ], 'input' => [ 'shape' => 'DescribeCertificateRequest', ], 'output' => [ 'shape' => 'DescribeCertificateResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], ], ], 'DescribeEndpoint' => [ 'name' => 'DescribeEndpoint', 'http' => [ 'method' => 'GET', 'requestUri' => '/endpoint', ], 'input' => [ 'shape' => 'DescribeEndpointRequest', ], 'output' => [ 'shape' => 'DescribeEndpointResponse', ], 'errors' => [ [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], ], ], 'DescribeThing' => [ 'name' => 'DescribeThing', 'http' => [ 'method' => 'GET', 'requestUri' => '/things/{thingName}', ], 'input' => [ 'shape' => 'DescribeThingRequest', ], 'output' => [ 'shape' => 'DescribeThingResponse', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DetachPrincipalPolicy' => [ 'name' => 'DetachPrincipalPolicy', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/principal-policies/{policyName}', ], 'input' => [ 'shape' => 'DetachPrincipalPolicyRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DetachThingPrincipal' => [ 'name' => 'DetachThingPrincipal', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/things/{thingName}/principals', ], 'input' => [ 'shape' => 'DetachThingPrincipalRequest', ], 'output' => [ 'shape' => 'DetachThingPrincipalResponse', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'DisableTopicRule' => [ 'name' => 'DisableTopicRule', 'http' => [ 'method' => 'POST', 'requestUri' => '/rules/{ruleName}/disable', ], 'input' => [ 'shape' => 'DisableTopicRuleRequest', ], 'errors' => [ [ 'shape' => 'InternalException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], ], ], 'EnableTopicRule' => [ 'name' => 'EnableTopicRule', 'http' => [ 'method' => 'POST', 'requestUri' => '/rules/{ruleName}/enable', ], 'input' => [ 'shape' => 'EnableTopicRuleRequest', ], 'errors' => [ [ 'shape' => 'InternalException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], ], ], 'GetLoggingOptions' => [ 'name' => 'GetLoggingOptions', 'http' => [ 'method' => 'GET', 'requestUri' => '/loggingOptions', ], 'input' => [ 'shape' => 'GetLoggingOptionsRequest', ], 'output' => [ 'shape' => 'GetLoggingOptionsResponse', ], 'errors' => [ [ 'shape' => 'InternalException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], ], ], 'GetPolicy' => [ 'name' => 'GetPolicy', 'http' => [ 'method' => 'GET', 'requestUri' => '/policies/{policyName}', ], 'input' => [ 'shape' => 'GetPolicyRequest', ], 'output' => [ 'shape' => 'GetPolicyResponse', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'GetPolicyVersion' => [ 'name' => 'GetPolicyVersion', 'http' => [ 'method' => 'GET', 'requestUri' => '/policies/{policyName}/version/{policyVersionId}', ], 'input' => [ 'shape' => 'GetPolicyVersionRequest', ], 'output' => [ 'shape' => 'GetPolicyVersionResponse', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'GetRegistrationCode' => [ 'name' => 'GetRegistrationCode', 'http' => [ 'method' => 'GET', 'requestUri' => '/registrationcode', ], 'input' => [ 'shape' => 'GetRegistrationCodeRequest', ], 'output' => [ 'shape' => 'GetRegistrationCodeResponse', ], 'errors' => [ [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'GetTopicRule' => [ 'name' => 'GetTopicRule', 'http' => [ 'method' => 'GET', 'requestUri' => '/rules/{ruleName}', ], 'input' => [ 'shape' => 'GetTopicRuleRequest', ], 'output' => [ 'shape' => 'GetTopicRuleResponse', ], 'errors' => [ [ 'shape' => 'InternalException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], ], ], 'ListCACertificates' => [ 'name' => 'ListCACertificates', 'http' => [ 'method' => 'GET', 'requestUri' => '/cacertificates', ], 'input' => [ 'shape' => 'ListCACertificatesRequest', ], 'output' => [ 'shape' => 'ListCACertificatesResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'ListCertificates' => [ 'name' => 'ListCertificates', 'http' => [ 'method' => 'GET', 'requestUri' => '/certificates', ], 'input' => [ 'shape' => 'ListCertificatesRequest', ], 'output' => [ 'shape' => 'ListCertificatesResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'ListCertificatesByCA' => [ 'name' => 'ListCertificatesByCA', 'http' => [ 'method' => 'GET', 'requestUri' => '/certificates-by-ca/{caCertificateId}', ], 'input' => [ 'shape' => 'ListCertificatesByCARequest', ], 'output' => [ 'shape' => 'ListCertificatesByCAResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'ListPolicies' => [ 'name' => 'ListPolicies', 'http' => [ 'method' => 'GET', 'requestUri' => '/policies', ], 'input' => [ 'shape' => 'ListPoliciesRequest', ], 'output' => [ 'shape' => 'ListPoliciesResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'ListPolicyVersions' => [ 'name' => 'ListPolicyVersions', 'http' => [ 'method' => 'GET', 'requestUri' => '/policies/{policyName}/version', ], 'input' => [ 'shape' => 'ListPolicyVersionsRequest', ], 'output' => [ 'shape' => 'ListPolicyVersionsResponse', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'ListPrincipalPolicies' => [ 'name' => 'ListPrincipalPolicies', 'http' => [ 'method' => 'GET', 'requestUri' => '/principal-policies', ], 'input' => [ 'shape' => 'ListPrincipalPoliciesRequest', ], 'output' => [ 'shape' => 'ListPrincipalPoliciesResponse', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'ListPrincipalThings' => [ 'name' => 'ListPrincipalThings', 'http' => [ 'method' => 'GET', 'requestUri' => '/principals/things', ], 'input' => [ 'shape' => 'ListPrincipalThingsRequest', ], 'output' => [ 'shape' => 'ListPrincipalThingsResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'ListThingPrincipals' => [ 'name' => 'ListThingPrincipals', 'http' => [ 'method' => 'GET', 'requestUri' => '/things/{thingName}/principals', ], 'input' => [ 'shape' => 'ListThingPrincipalsRequest', ], 'output' => [ 'shape' => 'ListThingPrincipalsResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'ListThings' => [ 'name' => 'ListThings', 'http' => [ 'method' => 'GET', 'requestUri' => '/things', ], 'input' => [ 'shape' => 'ListThingsRequest', ], 'output' => [ 'shape' => 'ListThingsResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'ListTopicRules' => [ 'name' => 'ListTopicRules', 'http' => [ 'method' => 'GET', 'requestUri' => '/rules', ], 'input' => [ 'shape' => 'ListTopicRulesRequest', ], 'output' => [ 'shape' => 'ListTopicRulesResponse', ], 'errors' => [ [ 'shape' => 'InternalException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], ], ], 'RegisterCACertificate' => [ 'name' => 'RegisterCACertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/cacertificate', ], 'input' => [ 'shape' => 'RegisterCACertificateRequest', ], 'output' => [ 'shape' => 'RegisterCACertificateResponse', ], 'errors' => [ [ 'shape' => 'ResourceAlreadyExistsException', 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], [ 'shape' => 'RegistrationCodeValidationException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'CertificateValidationException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'LimitExceededException', 'error' => [ 'httpStatusCode' => 410, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'RegisterCertificate' => [ 'name' => 'RegisterCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/certificate/register', ], 'input' => [ 'shape' => 'RegisterCertificateRequest', ], 'output' => [ 'shape' => 'RegisterCertificateResponse', ], 'errors' => [ [ 'shape' => 'ResourceAlreadyExistsException', 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'CertificateValidationException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'CertificateStateException', 'error' => [ 'httpStatusCode' => 406, ], 'exception' => true, ], [ 'shape' => 'CertificateConflictException', 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'RejectCertificateTransfer' => [ 'name' => 'RejectCertificateTransfer', 'http' => [ 'method' => 'PATCH', 'requestUri' => '/reject-certificate-transfer/{certificateId}', ], 'input' => [ 'shape' => 'RejectCertificateTransferRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'TransferAlreadyCompletedException', 'error' => [ 'httpStatusCode' => 410, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'ReplaceTopicRule' => [ 'name' => 'ReplaceTopicRule', 'http' => [ 'method' => 'PATCH', 'requestUri' => '/rules/{ruleName}', ], 'input' => [ 'shape' => 'ReplaceTopicRuleRequest', ], 'errors' => [ [ 'shape' => 'SqlParseException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'InternalException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], ], ], 'SetDefaultPolicyVersion' => [ 'name' => 'SetDefaultPolicyVersion', 'http' => [ 'method' => 'PATCH', 'requestUri' => '/policies/{policyName}/version/{policyVersionId}', ], 'input' => [ 'shape' => 'SetDefaultPolicyVersionRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'SetLoggingOptions' => [ 'name' => 'SetLoggingOptions', 'http' => [ 'method' => 'POST', 'requestUri' => '/loggingOptions', ], 'input' => [ 'shape' => 'SetLoggingOptionsRequest', ], 'errors' => [ [ 'shape' => 'InternalException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], ], ], 'TransferCertificate' => [ 'name' => 'TransferCertificate', 'http' => [ 'method' => 'PATCH', 'requestUri' => '/transfer-certificate/{certificateId}', ], 'input' => [ 'shape' => 'TransferCertificateRequest', ], 'output' => [ 'shape' => 'TransferCertificateResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'CertificateStateException', 'error' => [ 'httpStatusCode' => 406, ], 'exception' => true, ], [ 'shape' => 'TransferConflictException', 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'UpdateCACertificate' => [ 'name' => 'UpdateCACertificate', 'http' => [ 'method' => 'PUT', 'requestUri' => '/cacertificate/{certificateId}', ], 'input' => [ 'shape' => 'UpdateCACertificateRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'UpdateCertificate' => [ 'name' => 'UpdateCertificate', 'http' => [ 'method' => 'PUT', 'requestUri' => '/certificates/{certificateId}', ], 'input' => [ 'shape' => 'UpdateCertificateRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], [ 'shape' => 'CertificateStateException', 'error' => [ 'httpStatusCode' => 406, ], 'exception' => true, ], [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'UpdateThing' => [ 'name' => 'UpdateThing', 'http' => [ 'method' => 'PATCH', 'requestUri' => '/things/{thingName}', ], 'input' => [ 'shape' => 'UpdateThingRequest', ], 'output' => [ 'shape' => 'UpdateThingResponse', ], 'errors' => [ [ 'shape' => 'InvalidRequestException', 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], [ 'shape' => 'ThrottlingException', 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], [ 'shape' => 'UnauthorizedException', 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], [ 'shape' => 'ServiceUnavailableException', 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InternalFailureException', 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], ], ], ], 'shapes' => [ 'AcceptCertificateTransferRequest' => [ 'type' => 'structure', 'required' => [ 'certificateId', ], 'members' => [ 'certificateId' => [ 'shape' => 'CertificateId', 'location' => 'uri', 'locationName' => 'certificateId', ], 'setAsActive' => [ 'shape' => 'SetAsActive', 'location' => 'querystring', 'locationName' => 'setAsActive', ], ], ], 'Action' => [ 'type' => 'structure', 'members' => [ 'dynamoDB' => [ 'shape' => 'DynamoDBAction', ], 'lambda' => [ 'shape' => 'LambdaAction', ], 'sns' => [ 'shape' => 'SnsAction', ], 'sqs' => [ 'shape' => 'SqsAction', ], 'kinesis' => [ 'shape' => 'KinesisAction', ], 'republish' => [ 'shape' => 'RepublishAction', ], 's3' => [ 'shape' => 'S3Action', ], 'firehose' => [ 'shape' => 'FirehoseAction', ], 'cloudwatchMetric' => [ 'shape' => 'CloudwatchMetricAction', ], 'cloudwatchAlarm' => [ 'shape' => 'CloudwatchAlarmAction', ], 'elasticsearch' => [ 'shape' => 'ElasticsearchAction', ], ], ], 'ActionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Action', ], 'min' => 0, 'max' => 10, ], 'AlarmName' => [ 'type' => 'string', ], 'AscendingOrder' => [ 'type' => 'boolean', ], 'AttachPrincipalPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'policyName', 'principal', ], 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', 'location' => 'uri', 'locationName' => 'policyName', ], 'principal' => [ 'shape' => 'Principal', 'location' => 'header', 'locationName' => 'x-amzn-iot-principal', ], ], ], 'AttachThingPrincipalRequest' => [ 'type' => 'structure', 'required' => [ 'thingName', 'principal', ], 'members' => [ 'thingName' => [ 'shape' => 'ThingName', 'location' => 'uri', 'locationName' => 'thingName', ], 'principal' => [ 'shape' => 'Principal', 'location' => 'header', 'locationName' => 'x-amzn-principal', ], ], ], 'AttachThingPrincipalResponse' => [ 'type' => 'structure', 'members' => [], ], 'AttributeName' => [ 'type' => 'string', 'max' => 128, 'pattern' => '[a-zA-Z0-9_.,@/:#-]+', ], 'AttributePayload' => [ 'type' => 'structure', 'members' => [ 'attributes' => [ 'shape' => 'Attributes', ], ], ], 'AttributeValue' => [ 'type' => 'string', 'max' => 1024, 'pattern' => '[a-zA-Z0-9_.,@/:#-]+', ], 'Attributes' => [ 'type' => 'map', 'key' => [ 'shape' => 'AttributeName', ], 'value' => [ 'shape' => 'AttributeValue', ], ], 'AwsAccountId' => [ 'type' => 'string', 'pattern' => '[0-9]{12}', ], 'AwsArn' => [ 'type' => 'string', ], 'AwsIotSqlVersion' => [ 'type' => 'string', ], 'BucketName' => [ 'type' => 'string', ], 'CACertificate' => [ 'type' => 'structure', 'members' => [ 'certificateArn' => [ 'shape' => 'CertificateArn', ], 'certificateId' => [ 'shape' => 'CertificateId', ], 'status' => [ 'shape' => 'CACertificateStatus', ], 'creationDate' => [ 'shape' => 'DateType', ], ], ], 'CACertificateDescription' => [ 'type' => 'structure', 'members' => [ 'certificateArn' => [ 'shape' => 'CertificateArn', ], 'certificateId' => [ 'shape' => 'CertificateId', ], 'status' => [ 'shape' => 'CACertificateStatus', ], 'certificatePem' => [ 'shape' => 'CertificatePem', ], 'ownedBy' => [ 'shape' => 'AwsAccountId', ], 'creationDate' => [ 'shape' => 'DateType', ], ], ], 'CACertificateStatus' => [ 'type' => 'string', 'enum' => [ 'ACTIVE', 'INACTIVE', ], ], 'CACertificates' => [ 'type' => 'list', 'member' => [ 'shape' => 'CACertificate', ], ], 'CancelCertificateTransferRequest' => [ 'type' => 'structure', 'required' => [ 'certificateId', ], 'members' => [ 'certificateId' => [ 'shape' => 'CertificateId', 'location' => 'uri', 'locationName' => 'certificateId', ], ], ], 'Certificate' => [ 'type' => 'structure', 'members' => [ 'certificateArn' => [ 'shape' => 'CertificateArn', ], 'certificateId' => [ 'shape' => 'CertificateId', ], 'status' => [ 'shape' => 'CertificateStatus', ], 'creationDate' => [ 'shape' => 'DateType', ], ], ], 'CertificateArn' => [ 'type' => 'string', ], 'CertificateConflictException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], 'CertificateDescription' => [ 'type' => 'structure', 'members' => [ 'certificateArn' => [ 'shape' => 'CertificateArn', ], 'certificateId' => [ 'shape' => 'CertificateId', ], 'caCertificateId' => [ 'shape' => 'CertificateId', ], 'status' => [ 'shape' => 'CertificateStatus', ], 'certificatePem' => [ 'shape' => 'CertificatePem', ], 'ownedBy' => [ 'shape' => 'AwsAccountId', ], 'previousOwnedBy' => [ 'shape' => 'AwsAccountId', ], 'creationDate' => [ 'shape' => 'DateType', ], 'lastModifiedDate' => [ 'shape' => 'DateType', ], 'transferData' => [ 'shape' => 'TransferData', ], ], ], 'CertificateId' => [ 'type' => 'string', 'min' => 64, 'max' => 64, 'pattern' => '(0x)?[a-fA-F0-9]+', ], 'CertificatePem' => [ 'type' => 'string', 'min' => 1, 'max' => 65536, ], 'CertificateSigningRequest' => [ 'type' => 'string', 'min' => 1, ], 'CertificateStateException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 406, ], 'exception' => true, ], 'CertificateStatus' => [ 'type' => 'string', 'enum' => [ 'ACTIVE', 'INACTIVE', 'REVOKED', 'PENDING_TRANSFER', 'REGISTER_INACTIVE', ], ], 'CertificateValidationException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], 'Certificates' => [ 'type' => 'list', 'member' => [ 'shape' => 'Certificate', ], ], 'ClientId' => [ 'type' => 'string', ], 'CloudwatchAlarmAction' => [ 'type' => 'structure', 'required' => [ 'roleArn', 'alarmName', 'stateReason', 'stateValue', ], 'members' => [ 'roleArn' => [ 'shape' => 'AwsArn', ], 'alarmName' => [ 'shape' => 'AlarmName', ], 'stateReason' => [ 'shape' => 'StateReason', ], 'stateValue' => [ 'shape' => 'StateValue', ], ], ], 'CloudwatchMetricAction' => [ 'type' => 'structure', 'required' => [ 'roleArn', 'metricNamespace', 'metricName', 'metricValue', 'metricUnit', ], 'members' => [ 'roleArn' => [ 'shape' => 'AwsArn', ], 'metricNamespace' => [ 'shape' => 'MetricNamespace', ], 'metricName' => [ 'shape' => 'MetricName', ], 'metricValue' => [ 'shape' => 'MetricValue', ], 'metricUnit' => [ 'shape' => 'MetricUnit', ], 'metricTimestamp' => [ 'shape' => 'MetricTimestamp', ], ], ], 'CreateCertificateFromCsrRequest' => [ 'type' => 'structure', 'required' => [ 'certificateSigningRequest', ], 'members' => [ 'certificateSigningRequest' => [ 'shape' => 'CertificateSigningRequest', ], 'setAsActive' => [ 'shape' => 'SetAsActive', 'location' => 'querystring', 'locationName' => 'setAsActive', ], ], ], 'CreateCertificateFromCsrResponse' => [ 'type' => 'structure', 'members' => [ 'certificateArn' => [ 'shape' => 'CertificateArn', ], 'certificateId' => [ 'shape' => 'CertificateId', ], 'certificatePem' => [ 'shape' => 'CertificatePem', ], ], ], 'CreateKeysAndCertificateRequest' => [ 'type' => 'structure', 'members' => [ 'setAsActive' => [ 'shape' => 'SetAsActive', 'location' => 'querystring', 'locationName' => 'setAsActive', ], ], ], 'CreateKeysAndCertificateResponse' => [ 'type' => 'structure', 'members' => [ 'certificateArn' => [ 'shape' => 'CertificateArn', ], 'certificateId' => [ 'shape' => 'CertificateId', ], 'certificatePem' => [ 'shape' => 'CertificatePem', ], 'keyPair' => [ 'shape' => 'KeyPair', ], ], ], 'CreatePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'policyName', 'policyDocument', ], 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', 'location' => 'uri', 'locationName' => 'policyName', ], 'policyDocument' => [ 'shape' => 'PolicyDocument', ], ], ], 'CreatePolicyResponse' => [ 'type' => 'structure', 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', ], 'policyArn' => [ 'shape' => 'PolicyArn', ], 'policyDocument' => [ 'shape' => 'PolicyDocument', ], 'policyVersionId' => [ 'shape' => 'PolicyVersionId', ], ], ], 'CreatePolicyVersionRequest' => [ 'type' => 'structure', 'required' => [ 'policyName', 'policyDocument', ], 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', 'location' => 'uri', 'locationName' => 'policyName', ], 'policyDocument' => [ 'shape' => 'PolicyDocument', ], 'setAsDefault' => [ 'shape' => 'SetAsDefault', 'location' => 'querystring', 'locationName' => 'setAsDefault', ], ], ], 'CreatePolicyVersionResponse' => [ 'type' => 'structure', 'members' => [ 'policyArn' => [ 'shape' => 'PolicyArn', ], 'policyDocument' => [ 'shape' => 'PolicyDocument', ], 'policyVersionId' => [ 'shape' => 'PolicyVersionId', ], 'isDefaultVersion' => [ 'shape' => 'IsDefaultVersion', ], ], ], 'CreateThingRequest' => [ 'type' => 'structure', 'required' => [ 'thingName', ], 'members' => [ 'thingName' => [ 'shape' => 'ThingName', 'location' => 'uri', 'locationName' => 'thingName', ], 'attributePayload' => [ 'shape' => 'AttributePayload', ], ], ], 'CreateThingResponse' => [ 'type' => 'structure', 'members' => [ 'thingName' => [ 'shape' => 'ThingName', ], 'thingArn' => [ 'shape' => 'ThingArn', ], ], ], 'CreateTopicRuleRequest' => [ 'type' => 'structure', 'required' => [ 'ruleName', 'topicRulePayload', ], 'members' => [ 'ruleName' => [ 'shape' => 'RuleName', 'location' => 'uri', 'locationName' => 'ruleName', ], 'topicRulePayload' => [ 'shape' => 'TopicRulePayload', ], ], 'payload' => 'topicRulePayload', ], 'CreatedAtDate' => [ 'type' => 'timestamp', ], 'DateType' => [ 'type' => 'timestamp', ], 'DeleteCACertificateRequest' => [ 'type' => 'structure', 'required' => [ 'certificateId', ], 'members' => [ 'certificateId' => [ 'shape' => 'CertificateId', 'location' => 'uri', 'locationName' => 'certificateId', ], ], ], 'DeleteCACertificateResponse' => [ 'type' => 'structure', 'members' => [], ], 'DeleteCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'certificateId', ], 'members' => [ 'certificateId' => [ 'shape' => 'CertificateId', 'location' => 'uri', 'locationName' => 'certificateId', ], ], ], 'DeleteConflictException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], 'DeletePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'policyName', ], 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', 'location' => 'uri', 'locationName' => 'policyName', ], ], ], 'DeletePolicyVersionRequest' => [ 'type' => 'structure', 'required' => [ 'policyName', 'policyVersionId', ], 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', 'location' => 'uri', 'locationName' => 'policyName', ], 'policyVersionId' => [ 'shape' => 'PolicyVersionId', 'location' => 'uri', 'locationName' => 'policyVersionId', ], ], ], 'DeleteRegistrationCodeRequest' => [ 'type' => 'structure', 'members' => [], ], 'DeleteRegistrationCodeResponse' => [ 'type' => 'structure', 'members' => [], ], 'DeleteThingRequest' => [ 'type' => 'structure', 'required' => [ 'thingName', ], 'members' => [ 'thingName' => [ 'shape' => 'ThingName', 'location' => 'uri', 'locationName' => 'thingName', ], ], ], 'DeleteThingResponse' => [ 'type' => 'structure', 'members' => [], ], 'DeleteTopicRuleRequest' => [ 'type' => 'structure', 'members' => [ 'ruleName' => [ 'shape' => 'RuleName', 'location' => 'uri', 'locationName' => 'ruleName', ], ], 'required' => [ 'ruleName', ], ], 'DeliveryStreamName' => [ 'type' => 'string', ], 'DescribeCACertificateRequest' => [ 'type' => 'structure', 'required' => [ 'certificateId', ], 'members' => [ 'certificateId' => [ 'shape' => 'CertificateId', 'location' => 'uri', 'locationName' => 'certificateId', ], ], ], 'DescribeCACertificateResponse' => [ 'type' => 'structure', 'members' => [ 'certificateDescription' => [ 'shape' => 'CACertificateDescription', ], ], ], 'DescribeCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'certificateId', ], 'members' => [ 'certificateId' => [ 'shape' => 'CertificateId', 'location' => 'uri', 'locationName' => 'certificateId', ], ], ], 'DescribeCertificateResponse' => [ 'type' => 'structure', 'members' => [ 'certificateDescription' => [ 'shape' => 'CertificateDescription', ], ], ], 'DescribeEndpointRequest' => [ 'type' => 'structure', 'members' => [], ], 'DescribeEndpointResponse' => [ 'type' => 'structure', 'members' => [ 'endpointAddress' => [ 'shape' => 'EndpointAddress', ], ], ], 'DescribeThingRequest' => [ 'type' => 'structure', 'required' => [ 'thingName', ], 'members' => [ 'thingName' => [ 'shape' => 'ThingName', 'location' => 'uri', 'locationName' => 'thingName', ], ], ], 'DescribeThingResponse' => [ 'type' => 'structure', 'members' => [ 'defaultClientId' => [ 'shape' => 'ClientId', ], 'thingName' => [ 'shape' => 'ThingName', ], 'attributes' => [ 'shape' => 'Attributes', ], ], ], 'Description' => [ 'type' => 'string', ], 'DetachPrincipalPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'policyName', 'principal', ], 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', 'location' => 'uri', 'locationName' => 'policyName', ], 'principal' => [ 'shape' => 'Principal', 'location' => 'header', 'locationName' => 'x-amzn-iot-principal', ], ], ], 'DetachThingPrincipalRequest' => [ 'type' => 'structure', 'required' => [ 'thingName', 'principal', ], 'members' => [ 'thingName' => [ 'shape' => 'ThingName', 'location' => 'uri', 'locationName' => 'thingName', ], 'principal' => [ 'shape' => 'Principal', 'location' => 'header', 'locationName' => 'x-amzn-principal', ], ], ], 'DetachThingPrincipalResponse' => [ 'type' => 'structure', 'members' => [], ], 'DisableTopicRuleRequest' => [ 'type' => 'structure', 'required' => [ 'ruleName', ], 'members' => [ 'ruleName' => [ 'shape' => 'RuleName', 'location' => 'uri', 'locationName' => 'ruleName', ], ], ], 'DynamoDBAction' => [ 'type' => 'structure', 'required' => [ 'tableName', 'roleArn', 'hashKeyField', 'hashKeyValue', 'rangeKeyField', 'rangeKeyValue', ], 'members' => [ 'tableName' => [ 'shape' => 'TableName', ], 'roleArn' => [ 'shape' => 'AwsArn', ], 'hashKeyField' => [ 'shape' => 'HashKeyField', ], 'hashKeyValue' => [ 'shape' => 'HashKeyValue', ], 'rangeKeyField' => [ 'shape' => 'RangeKeyField', ], 'rangeKeyValue' => [ 'shape' => 'RangeKeyValue', ], 'payloadField' => [ 'shape' => 'PayloadField', ], ], ], 'ElasticsearchAction' => [ 'type' => 'structure', 'required' => [ 'roleArn', 'endpoint', 'index', 'type', 'id', ], 'members' => [ 'roleArn' => [ 'shape' => 'AwsArn', ], 'endpoint' => [ 'shape' => 'ElasticsearchEndpoint', ], 'index' => [ 'shape' => 'ElasticsearchIndex', ], 'type' => [ 'shape' => 'ElasticsearchType', ], 'id' => [ 'shape' => 'ElasticsearchId', ], ], ], 'ElasticsearchEndpoint' => [ 'type' => 'string', 'pattern' => 'https?://.*', ], 'ElasticsearchId' => [ 'type' => 'string', ], 'ElasticsearchIndex' => [ 'type' => 'string', ], 'ElasticsearchType' => [ 'type' => 'string', ], 'EnableTopicRuleRequest' => [ 'type' => 'structure', 'required' => [ 'ruleName', ], 'members' => [ 'ruleName' => [ 'shape' => 'RuleName', 'location' => 'uri', 'locationName' => 'ruleName', ], ], ], 'EndpointAddress' => [ 'type' => 'string', ], 'FirehoseAction' => [ 'type' => 'structure', 'required' => [ 'roleArn', 'deliveryStreamName', ], 'members' => [ 'roleArn' => [ 'shape' => 'AwsArn', ], 'deliveryStreamName' => [ 'shape' => 'DeliveryStreamName', ], ], ], 'FunctionArn' => [ 'type' => 'string', ], 'GetLoggingOptionsRequest' => [ 'type' => 'structure', 'members' => [], ], 'GetLoggingOptionsResponse' => [ 'type' => 'structure', 'members' => [ 'roleArn' => [ 'shape' => 'AwsArn', ], 'logLevel' => [ 'shape' => 'LogLevel', ], ], ], 'GetPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'policyName', ], 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', 'location' => 'uri', 'locationName' => 'policyName', ], ], ], 'GetPolicyResponse' => [ 'type' => 'structure', 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', ], 'policyArn' => [ 'shape' => 'PolicyArn', ], 'policyDocument' => [ 'shape' => 'PolicyDocument', ], 'defaultVersionId' => [ 'shape' => 'PolicyVersionId', ], ], ], 'GetPolicyVersionRequest' => [ 'type' => 'structure', 'required' => [ 'policyName', 'policyVersionId', ], 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', 'location' => 'uri', 'locationName' => 'policyName', ], 'policyVersionId' => [ 'shape' => 'PolicyVersionId', 'location' => 'uri', 'locationName' => 'policyVersionId', ], ], ], 'GetPolicyVersionResponse' => [ 'type' => 'structure', 'members' => [ 'policyArn' => [ 'shape' => 'PolicyArn', ], 'policyName' => [ 'shape' => 'PolicyName', ], 'policyDocument' => [ 'shape' => 'PolicyDocument', ], 'policyVersionId' => [ 'shape' => 'PolicyVersionId', ], 'isDefaultVersion' => [ 'shape' => 'IsDefaultVersion', ], ], ], 'GetRegistrationCodeRequest' => [ 'type' => 'structure', 'members' => [], ], 'GetRegistrationCodeResponse' => [ 'type' => 'structure', 'members' => [ 'registrationCode' => [ 'shape' => 'RegistrationCode', ], ], ], 'GetTopicRuleRequest' => [ 'type' => 'structure', 'required' => [ 'ruleName', ], 'members' => [ 'ruleName' => [ 'shape' => 'RuleName', 'location' => 'uri', 'locationName' => 'ruleName', ], ], ], 'GetTopicRuleResponse' => [ 'type' => 'structure', 'members' => [ 'ruleArn' => [ 'shape' => 'RuleArn', ], 'rule' => [ 'shape' => 'TopicRule', ], ], ], 'HashKeyField' => [ 'type' => 'string', ], 'HashKeyValue' => [ 'type' => 'string', ], 'InternalException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], 'InternalFailureException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], 'InvalidRequestException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], 'IsDefaultVersion' => [ 'type' => 'boolean', ], 'IsDisabled' => [ 'type' => 'boolean', ], 'Key' => [ 'type' => 'string', ], 'KeyPair' => [ 'type' => 'structure', 'members' => [ 'PublicKey' => [ 'shape' => 'PublicKey', ], 'PrivateKey' => [ 'shape' => 'PrivateKey', ], ], ], 'KinesisAction' => [ 'type' => 'structure', 'required' => [ 'roleArn', 'streamName', ], 'members' => [ 'roleArn' => [ 'shape' => 'AwsArn', ], 'streamName' => [ 'shape' => 'StreamName', ], 'partitionKey' => [ 'shape' => 'PartitionKey', ], ], ], 'LambdaAction' => [ 'type' => 'structure', 'required' => [ 'functionArn', ], 'members' => [ 'functionArn' => [ 'shape' => 'FunctionArn', ], ], ], 'LimitExceededException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 410, ], 'exception' => true, ], 'ListCACertificatesRequest' => [ 'type' => 'structure', 'members' => [ 'pageSize' => [ 'shape' => 'PageSize', 'location' => 'querystring', 'locationName' => 'pageSize', ], 'marker' => [ 'shape' => 'Marker', 'location' => 'querystring', 'locationName' => 'marker', ], 'ascendingOrder' => [ 'shape' => 'AscendingOrder', 'location' => 'querystring', 'locationName' => 'isAscendingOrder', ], ], ], 'ListCACertificatesResponse' => [ 'type' => 'structure', 'members' => [ 'certificates' => [ 'shape' => 'CACertificates', ], 'nextMarker' => [ 'shape' => 'Marker', ], ], ], 'ListCertificatesByCARequest' => [ 'type' => 'structure', 'required' => [ 'caCertificateId', ], 'members' => [ 'caCertificateId' => [ 'shape' => 'CertificateId', 'location' => 'uri', 'locationName' => 'caCertificateId', ], 'pageSize' => [ 'shape' => 'PageSize', 'location' => 'querystring', 'locationName' => 'pageSize', ], 'marker' => [ 'shape' => 'Marker', 'location' => 'querystring', 'locationName' => 'marker', ], 'ascendingOrder' => [ 'shape' => 'AscendingOrder', 'location' => 'querystring', 'locationName' => 'isAscendingOrder', ], ], ], 'ListCertificatesByCAResponse' => [ 'type' => 'structure', 'members' => [ 'certificates' => [ 'shape' => 'Certificates', ], 'nextMarker' => [ 'shape' => 'Marker', ], ], ], 'ListCertificatesRequest' => [ 'type' => 'structure', 'members' => [ 'pageSize' => [ 'shape' => 'PageSize', 'location' => 'querystring', 'locationName' => 'pageSize', ], 'marker' => [ 'shape' => 'Marker', 'location' => 'querystring', 'locationName' => 'marker', ], 'ascendingOrder' => [ 'shape' => 'AscendingOrder', 'location' => 'querystring', 'locationName' => 'isAscendingOrder', ], ], ], 'ListCertificatesResponse' => [ 'type' => 'structure', 'members' => [ 'certificates' => [ 'shape' => 'Certificates', ], 'nextMarker' => [ 'shape' => 'Marker', ], ], ], 'ListPoliciesRequest' => [ 'type' => 'structure', 'members' => [ 'marker' => [ 'shape' => 'Marker', 'location' => 'querystring', 'locationName' => 'marker', ], 'pageSize' => [ 'shape' => 'PageSize', 'location' => 'querystring', 'locationName' => 'pageSize', ], 'ascendingOrder' => [ 'shape' => 'AscendingOrder', 'location' => 'querystring', 'locationName' => 'isAscendingOrder', ], ], ], 'ListPoliciesResponse' => [ 'type' => 'structure', 'members' => [ 'policies' => [ 'shape' => 'Policies', ], 'nextMarker' => [ 'shape' => 'Marker', ], ], ], 'ListPolicyVersionsRequest' => [ 'type' => 'structure', 'required' => [ 'policyName', ], 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', 'location' => 'uri', 'locationName' => 'policyName', ], ], ], 'ListPolicyVersionsResponse' => [ 'type' => 'structure', 'members' => [ 'policyVersions' => [ 'shape' => 'PolicyVersions', ], ], ], 'ListPrincipalPoliciesRequest' => [ 'type' => 'structure', 'required' => [ 'principal', ], 'members' => [ 'principal' => [ 'shape' => 'Principal', 'location' => 'header', 'locationName' => 'x-amzn-iot-principal', ], 'marker' => [ 'shape' => 'Marker', 'location' => 'querystring', 'locationName' => 'marker', ], 'pageSize' => [ 'shape' => 'PageSize', 'location' => 'querystring', 'locationName' => 'pageSize', ], 'ascendingOrder' => [ 'shape' => 'AscendingOrder', 'location' => 'querystring', 'locationName' => 'isAscendingOrder', ], ], ], 'ListPrincipalPoliciesResponse' => [ 'type' => 'structure', 'members' => [ 'policies' => [ 'shape' => 'Policies', ], 'nextMarker' => [ 'shape' => 'Marker', ], ], ], 'ListPrincipalThingsRequest' => [ 'type' => 'structure', 'required' => [ 'principal', ], 'members' => [ 'nextToken' => [ 'shape' => 'NextToken', 'location' => 'querystring', 'locationName' => 'nextToken', ], 'maxResults' => [ 'shape' => 'MaxResults', 'location' => 'querystring', 'locationName' => 'maxResults', ], 'principal' => [ 'shape' => 'Principal', 'location' => 'header', 'locationName' => 'x-amzn-principal', ], ], ], 'ListPrincipalThingsResponse' => [ 'type' => 'structure', 'members' => [ 'things' => [ 'shape' => 'ThingNameList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListThingPrincipalsRequest' => [ 'type' => 'structure', 'required' => [ 'thingName', ], 'members' => [ 'thingName' => [ 'shape' => 'ThingName', 'location' => 'uri', 'locationName' => 'thingName', ], ], ], 'ListThingPrincipalsResponse' => [ 'type' => 'structure', 'members' => [ 'principals' => [ 'shape' => 'Principals', ], ], ], 'ListThingsRequest' => [ 'type' => 'structure', 'members' => [ 'nextToken' => [ 'shape' => 'NextToken', 'location' => 'querystring', 'locationName' => 'nextToken', ], 'maxResults' => [ 'shape' => 'MaxResults', 'location' => 'querystring', 'locationName' => 'maxResults', ], 'attributeName' => [ 'shape' => 'AttributeName', 'location' => 'querystring', 'locationName' => 'attributeName', ], 'attributeValue' => [ 'shape' => 'AttributeValue', 'location' => 'querystring', 'locationName' => 'attributeValue', ], ], ], 'ListThingsResponse' => [ 'type' => 'structure', 'members' => [ 'things' => [ 'shape' => 'ThingAttributeList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListTopicRulesRequest' => [ 'type' => 'structure', 'members' => [ 'topic' => [ 'shape' => 'Topic', 'location' => 'querystring', 'locationName' => 'topic', ], 'maxResults' => [ 'shape' => 'MaxResults', 'location' => 'querystring', 'locationName' => 'maxResults', ], 'nextToken' => [ 'shape' => 'NextToken', 'location' => 'querystring', 'locationName' => 'nextToken', ], 'ruleDisabled' => [ 'shape' => 'IsDisabled', 'location' => 'querystring', 'locationName' => 'ruleDisabled', ], ], ], 'ListTopicRulesResponse' => [ 'type' => 'structure', 'members' => [ 'rules' => [ 'shape' => 'TopicRuleList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'LogLevel' => [ 'type' => 'string', 'enum' => [ 'DEBUG', 'INFO', 'ERROR', 'WARN', 'DISABLED', ], ], 'LoggingOptionsPayload' => [ 'type' => 'structure', 'required' => [ 'roleArn', ], 'members' => [ 'roleArn' => [ 'shape' => 'AwsArn', ], 'logLevel' => [ 'shape' => 'LogLevel', ], ], ], 'MalformedPolicyException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], 'Marker' => [ 'type' => 'string', ], 'MaxResults' => [ 'type' => 'integer', 'min' => 1, 'max' => 10000, ], 'Message' => [ 'type' => 'string', 'max' => 128, ], 'MessageFormat' => [ 'type' => 'string', 'enum' => [ 'RAW', 'JSON', ], ], 'MetricName' => [ 'type' => 'string', ], 'MetricNamespace' => [ 'type' => 'string', ], 'MetricTimestamp' => [ 'type' => 'string', ], 'MetricUnit' => [ 'type' => 'string', ], 'MetricValue' => [ 'type' => 'string', ], 'NextToken' => [ 'type' => 'string', ], 'PageSize' => [ 'type' => 'integer', 'min' => 1, 'max' => 250, ], 'PartitionKey' => [ 'type' => 'string', ], 'PayloadField' => [ 'type' => 'string', ], 'Policies' => [ 'type' => 'list', 'member' => [ 'shape' => 'Policy', ], ], 'Policy' => [ 'type' => 'structure', 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', ], 'policyArn' => [ 'shape' => 'PolicyArn', ], ], ], 'PolicyArn' => [ 'type' => 'string', ], 'PolicyDocument' => [ 'type' => 'string', ], 'PolicyName' => [ 'type' => 'string', 'min' => 1, 'max' => 128, 'pattern' => '[\\w+=,.@-]+', ], 'PolicyVersion' => [ 'type' => 'structure', 'members' => [ 'versionId' => [ 'shape' => 'PolicyVersionId', ], 'isDefaultVersion' => [ 'shape' => 'IsDefaultVersion', ], 'createDate' => [ 'shape' => 'DateType', ], ], ], 'PolicyVersionId' => [ 'type' => 'string', 'pattern' => '[0-9]+', ], 'PolicyVersions' => [ 'type' => 'list', 'member' => [ 'shape' => 'PolicyVersion', ], ], 'Principal' => [ 'type' => 'string', ], 'PrincipalArn' => [ 'type' => 'string', ], 'Principals' => [ 'type' => 'list', 'member' => [ 'shape' => 'PrincipalArn', ], ], 'PrivateKey' => [ 'type' => 'string', 'min' => 1, 'sensitive' => true, ], 'PublicKey' => [ 'type' => 'string', 'min' => 1, ], 'QueueUrl' => [ 'type' => 'string', ], 'RangeKeyField' => [ 'type' => 'string', ], 'RangeKeyValue' => [ 'type' => 'string', ], 'RegisterCACertificateRequest' => [ 'type' => 'structure', 'required' => [ 'caCertificate', 'verificationCertificate', ], 'members' => [ 'caCertificate' => [ 'shape' => 'CertificatePem', ], 'verificationCertificate' => [ 'shape' => 'CertificatePem', ], 'setAsActive' => [ 'shape' => 'SetAsActive', 'location' => 'querystring', 'locationName' => 'setAsActive', ], ], ], 'RegisterCACertificateResponse' => [ 'type' => 'structure', 'members' => [ 'certificateArn' => [ 'shape' => 'CertificateArn', ], 'certificateId' => [ 'shape' => 'CertificateId', ], ], ], 'RegisterCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'certificatePem', ], 'members' => [ 'certificatePem' => [ 'shape' => 'CertificatePem', ], 'caCertificatePem' => [ 'shape' => 'CertificatePem', ], 'setAsActive' => [ 'shape' => 'SetAsActive', 'location' => 'querystring', 'locationName' => 'setAsActive', ], ], ], 'RegisterCertificateResponse' => [ 'type' => 'structure', 'members' => [ 'certificateArn' => [ 'shape' => 'CertificateArn', ], 'certificateId' => [ 'shape' => 'CertificateId', ], ], ], 'RegistrationCode' => [ 'type' => 'string', 'min' => 64, 'max' => 64, 'pattern' => '(0x)?[a-fA-F0-9]+', ], 'RegistrationCodeValidationException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], 'RejectCertificateTransferRequest' => [ 'type' => 'structure', 'required' => [ 'certificateId', ], 'members' => [ 'certificateId' => [ 'shape' => 'CertificateId', 'location' => 'uri', 'locationName' => 'certificateId', ], 'rejectReason' => [ 'shape' => 'Message', ], ], ], 'ReplaceTopicRuleRequest' => [ 'type' => 'structure', 'required' => [ 'ruleName', 'topicRulePayload', ], 'members' => [ 'ruleName' => [ 'shape' => 'RuleName', 'location' => 'uri', 'locationName' => 'ruleName', ], 'topicRulePayload' => [ 'shape' => 'TopicRulePayload', ], ], 'payload' => 'topicRulePayload', ], 'RepublishAction' => [ 'type' => 'structure', 'required' => [ 'roleArn', 'topic', ], 'members' => [ 'roleArn' => [ 'shape' => 'AwsArn', ], 'topic' => [ 'shape' => 'TopicPattern', ], ], ], 'ResourceAlreadyExistsException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], 'ResourceNotFoundException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 404, ], 'exception' => true, ], 'RuleArn' => [ 'type' => 'string', ], 'RuleName' => [ 'type' => 'string', 'min' => 1, 'max' => 128, 'pattern' => '^[a-zA-Z0-9_]+$', ], 'S3Action' => [ 'type' => 'structure', 'required' => [ 'roleArn', 'bucketName', 'key', ], 'members' => [ 'roleArn' => [ 'shape' => 'AwsArn', ], 'bucketName' => [ 'shape' => 'BucketName', ], 'key' => [ 'shape' => 'Key', ], ], ], 'SQL' => [ 'type' => 'string', ], 'ServiceUnavailableException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 503, ], 'exception' => true, 'fault' => true, ], 'SetAsActive' => [ 'type' => 'boolean', ], 'SetAsDefault' => [ 'type' => 'boolean', ], 'SetDefaultPolicyVersionRequest' => [ 'type' => 'structure', 'required' => [ 'policyName', 'policyVersionId', ], 'members' => [ 'policyName' => [ 'shape' => 'PolicyName', 'location' => 'uri', 'locationName' => 'policyName', ], 'policyVersionId' => [ 'shape' => 'PolicyVersionId', 'location' => 'uri', 'locationName' => 'policyVersionId', ], ], ], 'SetLoggingOptionsRequest' => [ 'type' => 'structure', 'required' => [ 'loggingOptionsPayload', ], 'members' => [ 'loggingOptionsPayload' => [ 'shape' => 'LoggingOptionsPayload', ], ], 'payload' => 'loggingOptionsPayload', ], 'SnsAction' => [ 'type' => 'structure', 'required' => [ 'targetArn', 'roleArn', ], 'members' => [ 'targetArn' => [ 'shape' => 'AwsArn', ], 'roleArn' => [ 'shape' => 'AwsArn', ], 'messageFormat' => [ 'shape' => 'MessageFormat', ], ], ], 'SqlParseException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 400, ], 'exception' => true, ], 'SqsAction' => [ 'type' => 'structure', 'required' => [ 'roleArn', 'queueUrl', ], 'members' => [ 'roleArn' => [ 'shape' => 'AwsArn', ], 'queueUrl' => [ 'shape' => 'QueueUrl', ], 'useBase64' => [ 'shape' => 'UseBase64', ], ], ], 'StateReason' => [ 'type' => 'string', ], 'StateValue' => [ 'type' => 'string', ], 'StreamName' => [ 'type' => 'string', ], 'TableName' => [ 'type' => 'string', ], 'ThingArn' => [ 'type' => 'string', ], 'ThingAttribute' => [ 'type' => 'structure', 'members' => [ 'thingName' => [ 'shape' => 'ThingName', ], 'attributes' => [ 'shape' => 'Attributes', ], ], ], 'ThingAttributeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ThingAttribute', ], ], 'ThingName' => [ 'type' => 'string', 'min' => 1, 'max' => 128, 'pattern' => '[a-zA-Z0-9_-]+', ], 'ThingNameList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ThingName', ], ], 'ThrottlingException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 429, ], 'exception' => true, ], 'Topic' => [ 'type' => 'string', ], 'TopicPattern' => [ 'type' => 'string', ], 'TopicRule' => [ 'type' => 'structure', 'members' => [ 'ruleName' => [ 'shape' => 'RuleName', ], 'sql' => [ 'shape' => 'SQL', ], 'description' => [ 'shape' => 'Description', ], 'createdAt' => [ 'shape' => 'CreatedAtDate', ], 'actions' => [ 'shape' => 'ActionList', ], 'ruleDisabled' => [ 'shape' => 'IsDisabled', ], 'awsIotSqlVersion' => [ 'shape' => 'AwsIotSqlVersion', ], ], ], 'TopicRuleList' => [ 'type' => 'list', 'member' => [ 'shape' => 'TopicRuleListItem', ], ], 'TopicRuleListItem' => [ 'type' => 'structure', 'members' => [ 'ruleArn' => [ 'shape' => 'RuleArn', ], 'ruleName' => [ 'shape' => 'RuleName', ], 'topicPattern' => [ 'shape' => 'TopicPattern', ], 'createdAt' => [ 'shape' => 'CreatedAtDate', ], 'ruleDisabled' => [ 'shape' => 'IsDisabled', ], ], ], 'TopicRulePayload' => [ 'type' => 'structure', 'required' => [ 'sql', 'actions', ], 'members' => [ 'sql' => [ 'shape' => 'SQL', ], 'description' => [ 'shape' => 'Description', ], 'actions' => [ 'shape' => 'ActionList', ], 'ruleDisabled' => [ 'shape' => 'IsDisabled', ], 'awsIotSqlVersion' => [ 'shape' => 'AwsIotSqlVersion', ], ], ], 'TransferAlreadyCompletedException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 410, ], 'exception' => true, ], 'TransferCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'certificateId', 'targetAwsAccount', ], 'members' => [ 'certificateId' => [ 'shape' => 'CertificateId', 'location' => 'uri', 'locationName' => 'certificateId', ], 'targetAwsAccount' => [ 'shape' => 'AwsAccountId', 'location' => 'querystring', 'locationName' => 'targetAwsAccount', ], 'transferMessage' => [ 'shape' => 'Message', ], ], ], 'TransferCertificateResponse' => [ 'type' => 'structure', 'members' => [ 'transferredCertificateArn' => [ 'shape' => 'CertificateArn', ], ], ], 'TransferConflictException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], 'TransferData' => [ 'type' => 'structure', 'members' => [ 'transferMessage' => [ 'shape' => 'Message', ], 'rejectReason' => [ 'shape' => 'Message', ], 'transferDate' => [ 'shape' => 'DateType', ], 'acceptDate' => [ 'shape' => 'DateType', ], 'rejectDate' => [ 'shape' => 'DateType', ], ], ], 'UnauthorizedException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 401, ], 'exception' => true, ], 'UpdateCACertificateRequest' => [ 'type' => 'structure', 'required' => [ 'certificateId', 'newStatus', ], 'members' => [ 'certificateId' => [ 'shape' => 'CertificateId', 'location' => 'uri', 'locationName' => 'certificateId', ], 'newStatus' => [ 'shape' => 'CACertificateStatus', 'location' => 'querystring', 'locationName' => 'newStatus', ], ], ], 'UpdateCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'certificateId', 'newStatus', ], 'members' => [ 'certificateId' => [ 'shape' => 'CertificateId', 'location' => 'uri', 'locationName' => 'certificateId', ], 'newStatus' => [ 'shape' => 'CertificateStatus', 'location' => 'querystring', 'locationName' => 'newStatus', ], ], ], 'UpdateThingRequest' => [ 'type' => 'structure', 'required' => [ 'thingName', 'attributePayload', ], 'members' => [ 'thingName' => [ 'shape' => 'ThingName', 'location' => 'uri', 'locationName' => 'thingName', ], 'attributePayload' => [ 'shape' => 'AttributePayload', ], ], ], 'UpdateThingResponse' => [ 'type' => 'structure', 'members' => [], ], 'UseBase64' => [ 'type' => 'boolean', ], 'VersionsLimitExceededException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'error' => [ 'httpStatusCode' => 409, ], 'exception' => true, ], 'errorMessage' => [ 'type' => 'string', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/iam/2010-05-08/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2010-05-08', 'endpointPrefix' => 'iam', 'globalEndpoint' => 'iam.amazonaws.com', 'protocol' => 'query', 'serviceAbbreviation' => 'IAM', 'serviceFullName' => 'AWS Identity and Access Management', 'signatureVersion' => 'v4', 'xmlNamespace' => 'https://iam.amazonaws.com/doc/2010-05-08/', ], 'operations' => [ 'AddClientIDToOpenIDConnectProvider' => [ 'name' => 'AddClientIDToOpenIDConnectProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddClientIDToOpenIDConnectProviderRequest', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'AddRoleToInstanceProfile' => [ 'name' => 'AddRoleToInstanceProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddRoleToInstanceProfileRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'AddUserToGroup' => [ 'name' => 'AddUserToGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddUserToGroupRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'AttachGroupPolicy' => [ 'name' => 'AttachGroupPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AttachGroupPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'AttachRolePolicy' => [ 'name' => 'AttachRolePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AttachRolePolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'AttachUserPolicy' => [ 'name' => 'AttachUserPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AttachUserPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ChangePassword' => [ 'name' => 'ChangePassword', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ChangePasswordRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidUserTypeException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityTemporarilyUnmodifiableException', ], [ 'shape' => 'PasswordPolicyViolationException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateAccessKey' => [ 'name' => 'CreateAccessKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateAccessKeyRequest', ], 'output' => [ 'shape' => 'CreateAccessKeyResponse', 'resultWrapper' => 'CreateAccessKeyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateAccountAlias' => [ 'name' => 'CreateAccountAlias', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateAccountAliasRequest', ], 'errors' => [ [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateGroup' => [ 'name' => 'CreateGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateGroupRequest', ], 'output' => [ 'shape' => 'CreateGroupResponse', 'resultWrapper' => 'CreateGroupResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateInstanceProfile' => [ 'name' => 'CreateInstanceProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateInstanceProfileRequest', ], 'output' => [ 'shape' => 'CreateInstanceProfileResponse', 'resultWrapper' => 'CreateInstanceProfileResult', ], 'errors' => [ [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateLoginProfile' => [ 'name' => 'CreateLoginProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateLoginProfileRequest', ], 'output' => [ 'shape' => 'CreateLoginProfileResponse', 'resultWrapper' => 'CreateLoginProfileResult', ], 'errors' => [ [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'PasswordPolicyViolationException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateOpenIDConnectProvider' => [ 'name' => 'CreateOpenIDConnectProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateOpenIDConnectProviderRequest', ], 'output' => [ 'shape' => 'CreateOpenIDConnectProviderResponse', 'resultWrapper' => 'CreateOpenIDConnectProviderResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreatePolicy' => [ 'name' => 'CreatePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreatePolicyRequest', ], 'output' => [ 'shape' => 'CreatePolicyResponse', 'resultWrapper' => 'CreatePolicyResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreatePolicyVersion' => [ 'name' => 'CreatePolicyVersion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreatePolicyVersionRequest', ], 'output' => [ 'shape' => 'CreatePolicyVersionResponse', 'resultWrapper' => 'CreatePolicyVersionResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateRole' => [ 'name' => 'CreateRole', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateRoleRequest', ], 'output' => [ 'shape' => 'CreateRoleResponse', 'resultWrapper' => 'CreateRoleResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateSAMLProvider' => [ 'name' => 'CreateSAMLProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateSAMLProviderRequest', ], 'output' => [ 'shape' => 'CreateSAMLProviderResponse', 'resultWrapper' => 'CreateSAMLProviderResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateUser' => [ 'name' => 'CreateUser', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateUserRequest', ], 'output' => [ 'shape' => 'CreateUserResponse', 'resultWrapper' => 'CreateUserResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateVirtualMFADevice' => [ 'name' => 'CreateVirtualMFADevice', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateVirtualMFADeviceRequest', ], 'output' => [ 'shape' => 'CreateVirtualMFADeviceResponse', 'resultWrapper' => 'CreateVirtualMFADeviceResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeactivateMFADevice' => [ 'name' => 'DeactivateMFADevice', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeactivateMFADeviceRequest', ], 'errors' => [ [ 'shape' => 'EntityTemporarilyUnmodifiableException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteAccessKey' => [ 'name' => 'DeleteAccessKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteAccessKeyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteAccountAlias' => [ 'name' => 'DeleteAccountAlias', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteAccountAliasRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteAccountPasswordPolicy' => [ 'name' => 'DeleteAccountPasswordPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteGroup' => [ 'name' => 'DeleteGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteGroupRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteGroupPolicy' => [ 'name' => 'DeleteGroupPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteGroupPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteInstanceProfile' => [ 'name' => 'DeleteInstanceProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteInstanceProfileRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteLoginProfile' => [ 'name' => 'DeleteLoginProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteLoginProfileRequest', ], 'errors' => [ [ 'shape' => 'EntityTemporarilyUnmodifiableException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteOpenIDConnectProvider' => [ 'name' => 'DeleteOpenIDConnectProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteOpenIDConnectProviderRequest', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeletePolicy' => [ 'name' => 'DeletePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeletePolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeletePolicyVersion' => [ 'name' => 'DeletePolicyVersion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeletePolicyVersionRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteRole' => [ 'name' => 'DeleteRole', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteRoleRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteRolePolicy' => [ 'name' => 'DeleteRolePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteRolePolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteSAMLProvider' => [ 'name' => 'DeleteSAMLProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSAMLProviderRequest', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteSSHPublicKey' => [ 'name' => 'DeleteSSHPublicKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSSHPublicKeyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], ], ], 'DeleteServerCertificate' => [ 'name' => 'DeleteServerCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteServerCertificateRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteSigningCertificate' => [ 'name' => 'DeleteSigningCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSigningCertificateRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteUser' => [ 'name' => 'DeleteUser', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteUserRequest', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteUserPolicy' => [ 'name' => 'DeleteUserPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteUserPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteVirtualMFADevice' => [ 'name' => 'DeleteVirtualMFADevice', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteVirtualMFADeviceRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DetachGroupPolicy' => [ 'name' => 'DetachGroupPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DetachGroupPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DetachRolePolicy' => [ 'name' => 'DetachRolePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DetachRolePolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DetachUserPolicy' => [ 'name' => 'DetachUserPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DetachUserPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'EnableMFADevice' => [ 'name' => 'EnableMFADevice', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'EnableMFADeviceRequest', ], 'errors' => [ [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'EntityTemporarilyUnmodifiableException', ], [ 'shape' => 'InvalidAuthenticationCodeException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GenerateCredentialReport' => [ 'name' => 'GenerateCredentialReport', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'output' => [ 'shape' => 'GenerateCredentialReportResponse', 'resultWrapper' => 'GenerateCredentialReportResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetAccessKeyLastUsed' => [ 'name' => 'GetAccessKeyLastUsed', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetAccessKeyLastUsedRequest', ], 'output' => [ 'shape' => 'GetAccessKeyLastUsedResponse', 'resultWrapper' => 'GetAccessKeyLastUsedResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], ], ], 'GetAccountAuthorizationDetails' => [ 'name' => 'GetAccountAuthorizationDetails', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetAccountAuthorizationDetailsRequest', ], 'output' => [ 'shape' => 'GetAccountAuthorizationDetailsResponse', 'resultWrapper' => 'GetAccountAuthorizationDetailsResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'GetAccountPasswordPolicy' => [ 'name' => 'GetAccountPasswordPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'output' => [ 'shape' => 'GetAccountPasswordPolicyResponse', 'resultWrapper' => 'GetAccountPasswordPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetAccountSummary' => [ 'name' => 'GetAccountSummary', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'output' => [ 'shape' => 'GetAccountSummaryResponse', 'resultWrapper' => 'GetAccountSummaryResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'GetContextKeysForCustomPolicy' => [ 'name' => 'GetContextKeysForCustomPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetContextKeysForCustomPolicyRequest', ], 'output' => [ 'shape' => 'GetContextKeysForPolicyResponse', 'resultWrapper' => 'GetContextKeysForCustomPolicyResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], ], ], 'GetContextKeysForPrincipalPolicy' => [ 'name' => 'GetContextKeysForPrincipalPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetContextKeysForPrincipalPolicyRequest', ], 'output' => [ 'shape' => 'GetContextKeysForPolicyResponse', 'resultWrapper' => 'GetContextKeysForPrincipalPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], ], ], 'GetCredentialReport' => [ 'name' => 'GetCredentialReport', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'output' => [ 'shape' => 'GetCredentialReportResponse', 'resultWrapper' => 'GetCredentialReportResult', ], 'errors' => [ [ 'shape' => 'CredentialReportNotPresentException', ], [ 'shape' => 'CredentialReportExpiredException', ], [ 'shape' => 'CredentialReportNotReadyException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetGroup' => [ 'name' => 'GetGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetGroupRequest', ], 'output' => [ 'shape' => 'GetGroupResponse', 'resultWrapper' => 'GetGroupResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetGroupPolicy' => [ 'name' => 'GetGroupPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetGroupPolicyRequest', ], 'output' => [ 'shape' => 'GetGroupPolicyResponse', 'resultWrapper' => 'GetGroupPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetInstanceProfile' => [ 'name' => 'GetInstanceProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetInstanceProfileRequest', ], 'output' => [ 'shape' => 'GetInstanceProfileResponse', 'resultWrapper' => 'GetInstanceProfileResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetLoginProfile' => [ 'name' => 'GetLoginProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetLoginProfileRequest', ], 'output' => [ 'shape' => 'GetLoginProfileResponse', 'resultWrapper' => 'GetLoginProfileResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetOpenIDConnectProvider' => [ 'name' => 'GetOpenIDConnectProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetOpenIDConnectProviderRequest', ], 'output' => [ 'shape' => 'GetOpenIDConnectProviderResponse', 'resultWrapper' => 'GetOpenIDConnectProviderResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetPolicy' => [ 'name' => 'GetPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetPolicyRequest', ], 'output' => [ 'shape' => 'GetPolicyResponse', 'resultWrapper' => 'GetPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetPolicyVersion' => [ 'name' => 'GetPolicyVersion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetPolicyVersionRequest', ], 'output' => [ 'shape' => 'GetPolicyVersionResponse', 'resultWrapper' => 'GetPolicyVersionResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetRole' => [ 'name' => 'GetRole', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetRoleRequest', ], 'output' => [ 'shape' => 'GetRoleResponse', 'resultWrapper' => 'GetRoleResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetRolePolicy' => [ 'name' => 'GetRolePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetRolePolicyRequest', ], 'output' => [ 'shape' => 'GetRolePolicyResponse', 'resultWrapper' => 'GetRolePolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetSAMLProvider' => [ 'name' => 'GetSAMLProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetSAMLProviderRequest', ], 'output' => [ 'shape' => 'GetSAMLProviderResponse', 'resultWrapper' => 'GetSAMLProviderResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetSSHPublicKey' => [ 'name' => 'GetSSHPublicKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetSSHPublicKeyRequest', ], 'output' => [ 'shape' => 'GetSSHPublicKeyResponse', 'resultWrapper' => 'GetSSHPublicKeyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'UnrecognizedPublicKeyEncodingException', ], ], ], 'GetServerCertificate' => [ 'name' => 'GetServerCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetServerCertificateRequest', ], 'output' => [ 'shape' => 'GetServerCertificateResponse', 'resultWrapper' => 'GetServerCertificateResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetUser' => [ 'name' => 'GetUser', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetUserRequest', ], 'output' => [ 'shape' => 'GetUserResponse', 'resultWrapper' => 'GetUserResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetUserPolicy' => [ 'name' => 'GetUserPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetUserPolicyRequest', ], 'output' => [ 'shape' => 'GetUserPolicyResponse', 'resultWrapper' => 'GetUserPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListAccessKeys' => [ 'name' => 'ListAccessKeys', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAccessKeysRequest', ], 'output' => [ 'shape' => 'ListAccessKeysResponse', 'resultWrapper' => 'ListAccessKeysResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListAccountAliases' => [ 'name' => 'ListAccountAliases', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAccountAliasesRequest', ], 'output' => [ 'shape' => 'ListAccountAliasesResponse', 'resultWrapper' => 'ListAccountAliasesResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListAttachedGroupPolicies' => [ 'name' => 'ListAttachedGroupPolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAttachedGroupPoliciesRequest', ], 'output' => [ 'shape' => 'ListAttachedGroupPoliciesResponse', 'resultWrapper' => 'ListAttachedGroupPoliciesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListAttachedRolePolicies' => [ 'name' => 'ListAttachedRolePolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAttachedRolePoliciesRequest', ], 'output' => [ 'shape' => 'ListAttachedRolePoliciesResponse', 'resultWrapper' => 'ListAttachedRolePoliciesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListAttachedUserPolicies' => [ 'name' => 'ListAttachedUserPolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAttachedUserPoliciesRequest', ], 'output' => [ 'shape' => 'ListAttachedUserPoliciesResponse', 'resultWrapper' => 'ListAttachedUserPoliciesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListEntitiesForPolicy' => [ 'name' => 'ListEntitiesForPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListEntitiesForPolicyRequest', ], 'output' => [ 'shape' => 'ListEntitiesForPolicyResponse', 'resultWrapper' => 'ListEntitiesForPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListGroupPolicies' => [ 'name' => 'ListGroupPolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListGroupPoliciesRequest', ], 'output' => [ 'shape' => 'ListGroupPoliciesResponse', 'resultWrapper' => 'ListGroupPoliciesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListGroups' => [ 'name' => 'ListGroups', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListGroupsRequest', ], 'output' => [ 'shape' => 'ListGroupsResponse', 'resultWrapper' => 'ListGroupsResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListGroupsForUser' => [ 'name' => 'ListGroupsForUser', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListGroupsForUserRequest', ], 'output' => [ 'shape' => 'ListGroupsForUserResponse', 'resultWrapper' => 'ListGroupsForUserResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListInstanceProfiles' => [ 'name' => 'ListInstanceProfiles', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListInstanceProfilesRequest', ], 'output' => [ 'shape' => 'ListInstanceProfilesResponse', 'resultWrapper' => 'ListInstanceProfilesResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListInstanceProfilesForRole' => [ 'name' => 'ListInstanceProfilesForRole', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListInstanceProfilesForRoleRequest', ], 'output' => [ 'shape' => 'ListInstanceProfilesForRoleResponse', 'resultWrapper' => 'ListInstanceProfilesForRoleResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListMFADevices' => [ 'name' => 'ListMFADevices', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListMFADevicesRequest', ], 'output' => [ 'shape' => 'ListMFADevicesResponse', 'resultWrapper' => 'ListMFADevicesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListOpenIDConnectProviders' => [ 'name' => 'ListOpenIDConnectProviders', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListOpenIDConnectProvidersRequest', ], 'output' => [ 'shape' => 'ListOpenIDConnectProvidersResponse', 'resultWrapper' => 'ListOpenIDConnectProvidersResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListPolicies' => [ 'name' => 'ListPolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListPoliciesRequest', ], 'output' => [ 'shape' => 'ListPoliciesResponse', 'resultWrapper' => 'ListPoliciesResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListPolicyVersions' => [ 'name' => 'ListPolicyVersions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListPolicyVersionsRequest', ], 'output' => [ 'shape' => 'ListPolicyVersionsResponse', 'resultWrapper' => 'ListPolicyVersionsResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListRolePolicies' => [ 'name' => 'ListRolePolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListRolePoliciesRequest', ], 'output' => [ 'shape' => 'ListRolePoliciesResponse', 'resultWrapper' => 'ListRolePoliciesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListRoles' => [ 'name' => 'ListRoles', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListRolesRequest', ], 'output' => [ 'shape' => 'ListRolesResponse', 'resultWrapper' => 'ListRolesResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListSAMLProviders' => [ 'name' => 'ListSAMLProviders', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListSAMLProvidersRequest', ], 'output' => [ 'shape' => 'ListSAMLProvidersResponse', 'resultWrapper' => 'ListSAMLProvidersResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListSSHPublicKeys' => [ 'name' => 'ListSSHPublicKeys', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListSSHPublicKeysRequest', ], 'output' => [ 'shape' => 'ListSSHPublicKeysResponse', 'resultWrapper' => 'ListSSHPublicKeysResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], ], ], 'ListServerCertificates' => [ 'name' => 'ListServerCertificates', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListServerCertificatesRequest', ], 'output' => [ 'shape' => 'ListServerCertificatesResponse', 'resultWrapper' => 'ListServerCertificatesResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListSigningCertificates' => [ 'name' => 'ListSigningCertificates', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListSigningCertificatesRequest', ], 'output' => [ 'shape' => 'ListSigningCertificatesResponse', 'resultWrapper' => 'ListSigningCertificatesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListUserPolicies' => [ 'name' => 'ListUserPolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListUserPoliciesRequest', ], 'output' => [ 'shape' => 'ListUserPoliciesResponse', 'resultWrapper' => 'ListUserPoliciesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListUsers' => [ 'name' => 'ListUsers', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListUsersRequest', ], 'output' => [ 'shape' => 'ListUsersResponse', 'resultWrapper' => 'ListUsersResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListVirtualMFADevices' => [ 'name' => 'ListVirtualMFADevices', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListVirtualMFADevicesRequest', ], 'output' => [ 'shape' => 'ListVirtualMFADevicesResponse', 'resultWrapper' => 'ListVirtualMFADevicesResult', ], ], 'PutGroupPolicy' => [ 'name' => 'PutGroupPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutGroupPolicyRequest', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'PutRolePolicy' => [ 'name' => 'PutRolePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutRolePolicyRequest', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'PutUserPolicy' => [ 'name' => 'PutUserPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutUserPolicyRequest', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'RemoveClientIDFromOpenIDConnectProvider' => [ 'name' => 'RemoveClientIDFromOpenIDConnectProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RemoveClientIDFromOpenIDConnectProviderRequest', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'RemoveRoleFromInstanceProfile' => [ 'name' => 'RemoveRoleFromInstanceProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RemoveRoleFromInstanceProfileRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'RemoveUserFromGroup' => [ 'name' => 'RemoveUserFromGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RemoveUserFromGroupRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ResyncMFADevice' => [ 'name' => 'ResyncMFADevice', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ResyncMFADeviceRequest', ], 'errors' => [ [ 'shape' => 'InvalidAuthenticationCodeException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'SetDefaultPolicyVersion' => [ 'name' => 'SetDefaultPolicyVersion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetDefaultPolicyVersionRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'SimulateCustomPolicy' => [ 'name' => 'SimulateCustomPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SimulateCustomPolicyRequest', ], 'output' => [ 'shape' => 'SimulatePolicyResponse', 'resultWrapper' => 'SimulateCustomPolicyResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'PolicyEvaluationException', ], ], ], 'SimulatePrincipalPolicy' => [ 'name' => 'SimulatePrincipalPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SimulatePrincipalPolicyRequest', ], 'output' => [ 'shape' => 'SimulatePolicyResponse', 'resultWrapper' => 'SimulatePrincipalPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'PolicyEvaluationException', ], ], ], 'UpdateAccessKey' => [ 'name' => 'UpdateAccessKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateAccessKeyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateAccountPasswordPolicy' => [ 'name' => 'UpdateAccountPasswordPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateAccountPasswordPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateAssumeRolePolicy' => [ 'name' => 'UpdateAssumeRolePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateAssumeRolePolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateGroup' => [ 'name' => 'UpdateGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateGroupRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateLoginProfile' => [ 'name' => 'UpdateLoginProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateLoginProfileRequest', ], 'errors' => [ [ 'shape' => 'EntityTemporarilyUnmodifiableException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'PasswordPolicyViolationException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateOpenIDConnectProviderThumbprint' => [ 'name' => 'UpdateOpenIDConnectProviderThumbprint', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateOpenIDConnectProviderThumbprintRequest', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateSAMLProvider' => [ 'name' => 'UpdateSAMLProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateSAMLProviderRequest', ], 'output' => [ 'shape' => 'UpdateSAMLProviderResponse', 'resultWrapper' => 'UpdateSAMLProviderResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateSSHPublicKey' => [ 'name' => 'UpdateSSHPublicKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateSSHPublicKeyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], ], ], 'UpdateServerCertificate' => [ 'name' => 'UpdateServerCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateServerCertificateRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateSigningCertificate' => [ 'name' => 'UpdateSigningCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateSigningCertificateRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateUser' => [ 'name' => 'UpdateUser', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateUserRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'EntityTemporarilyUnmodifiableException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UploadSSHPublicKey' => [ 'name' => 'UploadSSHPublicKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UploadSSHPublicKeyRequest', ], 'output' => [ 'shape' => 'UploadSSHPublicKeyResponse', 'resultWrapper' => 'UploadSSHPublicKeyResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidPublicKeyException', ], [ 'shape' => 'DuplicateSSHPublicKeyException', ], [ 'shape' => 'UnrecognizedPublicKeyEncodingException', ], ], ], 'UploadServerCertificate' => [ 'name' => 'UploadServerCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UploadServerCertificateRequest', ], 'output' => [ 'shape' => 'UploadServerCertificateResponse', 'resultWrapper' => 'UploadServerCertificateResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'MalformedCertificateException', ], [ 'shape' => 'KeyPairMismatchException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UploadSigningCertificate' => [ 'name' => 'UploadSigningCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UploadSigningCertificateRequest', ], 'output' => [ 'shape' => 'UploadSigningCertificateResponse', 'resultWrapper' => 'UploadSigningCertificateResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'MalformedCertificateException', ], [ 'shape' => 'InvalidCertificateException', ], [ 'shape' => 'DuplicateCertificateException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], ], 'shapes' => [ 'AccessKey' => [ 'type' => 'structure', 'required' => [ 'UserName', 'AccessKeyId', 'Status', 'SecretAccessKey', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'AccessKeyId' => [ 'shape' => 'accessKeyIdType', ], 'Status' => [ 'shape' => 'statusType', ], 'SecretAccessKey' => [ 'shape' => 'accessKeySecretType', ], 'CreateDate' => [ 'shape' => 'dateType', ], ], ], 'AccessKeyLastUsed' => [ 'type' => 'structure', 'required' => [ 'LastUsedDate', 'ServiceName', 'Region', ], 'members' => [ 'LastUsedDate' => [ 'shape' => 'dateType', ], 'ServiceName' => [ 'shape' => 'stringType', ], 'Region' => [ 'shape' => 'stringType', ], ], ], 'AccessKeyMetadata' => [ 'type' => 'structure', 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'AccessKeyId' => [ 'shape' => 'accessKeyIdType', ], 'Status' => [ 'shape' => 'statusType', ], 'CreateDate' => [ 'shape' => 'dateType', ], ], ], 'ActionNameListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'ActionNameType', ], ], 'ActionNameType' => [ 'type' => 'string', 'max' => 128, 'min' => 3, ], 'AddClientIDToOpenIDConnectProviderRequest' => [ 'type' => 'structure', 'required' => [ 'OpenIDConnectProviderArn', 'ClientID', ], 'members' => [ 'OpenIDConnectProviderArn' => [ 'shape' => 'arnType', ], 'ClientID' => [ 'shape' => 'clientIDType', ], ], ], 'AddRoleToInstanceProfileRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceProfileName', 'RoleName', ], 'members' => [ 'InstanceProfileName' => [ 'shape' => 'instanceProfileNameType', ], 'RoleName' => [ 'shape' => 'roleNameType', ], ], ], 'AddUserToGroupRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'UserName', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'UserName' => [ 'shape' => 'existingUserNameType', ], ], ], 'AttachGroupPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'PolicyArn', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'AttachRolePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', 'PolicyArn', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'AttachUserPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'PolicyArn', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'AttachedPolicy' => [ 'type' => 'structure', 'members' => [ 'PolicyName' => [ 'shape' => 'policyNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'BootstrapDatum' => [ 'type' => 'blob', 'sensitive' => true, ], 'ChangePasswordRequest' => [ 'type' => 'structure', 'required' => [ 'OldPassword', 'NewPassword', ], 'members' => [ 'OldPassword' => [ 'shape' => 'passwordType', ], 'NewPassword' => [ 'shape' => 'passwordType', ], ], ], 'ColumnNumber' => [ 'type' => 'integer', ], 'ContextEntry' => [ 'type' => 'structure', 'members' => [ 'ContextKeyName' => [ 'shape' => 'ContextKeyNameType', ], 'ContextKeyValues' => [ 'shape' => 'ContextKeyValueListType', ], 'ContextKeyType' => [ 'shape' => 'ContextKeyTypeEnum', ], ], ], 'ContextEntryListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'ContextEntry', ], ], 'ContextKeyNameType' => [ 'type' => 'string', 'max' => 256, 'min' => 5, ], 'ContextKeyNamesResultListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'ContextKeyNameType', ], ], 'ContextKeyTypeEnum' => [ 'type' => 'string', 'enum' => [ 'string', 'stringList', 'numeric', 'numericList', 'boolean', 'booleanList', 'ip', 'ipList', 'binary', 'binaryList', 'date', 'dateList', ], ], 'ContextKeyValueListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'ContextKeyValueType', ], ], 'ContextKeyValueType' => [ 'type' => 'string', ], 'CreateAccessKeyRequest' => [ 'type' => 'structure', 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], ], ], 'CreateAccessKeyResponse' => [ 'type' => 'structure', 'required' => [ 'AccessKey', ], 'members' => [ 'AccessKey' => [ 'shape' => 'AccessKey', ], ], ], 'CreateAccountAliasRequest' => [ 'type' => 'structure', 'required' => [ 'AccountAlias', ], 'members' => [ 'AccountAlias' => [ 'shape' => 'accountAliasType', ], ], ], 'CreateGroupRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'GroupName' => [ 'shape' => 'groupNameType', ], ], ], 'CreateGroupResponse' => [ 'type' => 'structure', 'required' => [ 'Group', ], 'members' => [ 'Group' => [ 'shape' => 'Group', ], ], ], 'CreateInstanceProfileRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceProfileName', ], 'members' => [ 'InstanceProfileName' => [ 'shape' => 'instanceProfileNameType', ], 'Path' => [ 'shape' => 'pathType', ], ], ], 'CreateInstanceProfileResponse' => [ 'type' => 'structure', 'required' => [ 'InstanceProfile', ], 'members' => [ 'InstanceProfile' => [ 'shape' => 'InstanceProfile', ], ], ], 'CreateLoginProfileRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'Password', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'Password' => [ 'shape' => 'passwordType', ], 'PasswordResetRequired' => [ 'shape' => 'booleanType', ], ], ], 'CreateLoginProfileResponse' => [ 'type' => 'structure', 'required' => [ 'LoginProfile', ], 'members' => [ 'LoginProfile' => [ 'shape' => 'LoginProfile', ], ], ], 'CreateOpenIDConnectProviderRequest' => [ 'type' => 'structure', 'required' => [ 'Url', 'ThumbprintList', ], 'members' => [ 'Url' => [ 'shape' => 'OpenIDConnectProviderUrlType', ], 'ClientIDList' => [ 'shape' => 'clientIDListType', ], 'ThumbprintList' => [ 'shape' => 'thumbprintListType', ], ], ], 'CreateOpenIDConnectProviderResponse' => [ 'type' => 'structure', 'members' => [ 'OpenIDConnectProviderArn' => [ 'shape' => 'arnType', ], ], ], 'CreatePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyName', 'PolicyDocument', ], 'members' => [ 'PolicyName' => [ 'shape' => 'policyNameType', ], 'Path' => [ 'shape' => 'policyPathType', ], 'PolicyDocument' => [ 'shape' => 'policyDocumentType', ], 'Description' => [ 'shape' => 'policyDescriptionType', ], ], ], 'CreatePolicyResponse' => [ 'type' => 'structure', 'members' => [ 'Policy' => [ 'shape' => 'Policy', ], ], ], 'CreatePolicyVersionRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyArn', 'PolicyDocument', ], 'members' => [ 'PolicyArn' => [ 'shape' => 'arnType', ], 'PolicyDocument' => [ 'shape' => 'policyDocumentType', ], 'SetAsDefault' => [ 'shape' => 'booleanType', ], ], ], 'CreatePolicyVersionResponse' => [ 'type' => 'structure', 'members' => [ 'PolicyVersion' => [ 'shape' => 'PolicyVersion', ], ], ], 'CreateRoleRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', 'AssumeRolePolicyDocument', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'RoleName' => [ 'shape' => 'roleNameType', ], 'AssumeRolePolicyDocument' => [ 'shape' => 'policyDocumentType', ], ], ], 'CreateRoleResponse' => [ 'type' => 'structure', 'required' => [ 'Role', ], 'members' => [ 'Role' => [ 'shape' => 'Role', ], ], ], 'CreateSAMLProviderRequest' => [ 'type' => 'structure', 'required' => [ 'SAMLMetadataDocument', 'Name', ], 'members' => [ 'SAMLMetadataDocument' => [ 'shape' => 'SAMLMetadataDocumentType', ], 'Name' => [ 'shape' => 'SAMLProviderNameType', ], ], ], 'CreateSAMLProviderResponse' => [ 'type' => 'structure', 'members' => [ 'SAMLProviderArn' => [ 'shape' => 'arnType', ], ], ], 'CreateUserRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'UserName' => [ 'shape' => 'userNameType', ], ], ], 'CreateUserResponse' => [ 'type' => 'structure', 'members' => [ 'User' => [ 'shape' => 'User', ], ], ], 'CreateVirtualMFADeviceRequest' => [ 'type' => 'structure', 'required' => [ 'VirtualMFADeviceName', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'VirtualMFADeviceName' => [ 'shape' => 'virtualMFADeviceName', ], ], ], 'CreateVirtualMFADeviceResponse' => [ 'type' => 'structure', 'required' => [ 'VirtualMFADevice', ], 'members' => [ 'VirtualMFADevice' => [ 'shape' => 'VirtualMFADevice', ], ], ], 'CredentialReportExpiredException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'credentialReportExpiredExceptionMessage', ], ], 'error' => [ 'code' => 'ReportExpired', 'httpStatusCode' => 410, 'senderFault' => true, ], 'exception' => true, ], 'CredentialReportNotPresentException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'credentialReportNotPresentExceptionMessage', ], ], 'error' => [ 'code' => 'ReportNotPresent', 'httpStatusCode' => 410, 'senderFault' => true, ], 'exception' => true, ], 'CredentialReportNotReadyException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'credentialReportNotReadyExceptionMessage', ], ], 'error' => [ 'code' => 'ReportInProgress', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], 'DeactivateMFADeviceRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SerialNumber', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'SerialNumber' => [ 'shape' => 'serialNumberType', ], ], ], 'DeleteAccessKeyRequest' => [ 'type' => 'structure', 'required' => [ 'AccessKeyId', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'AccessKeyId' => [ 'shape' => 'accessKeyIdType', ], ], ], 'DeleteAccountAliasRequest' => [ 'type' => 'structure', 'required' => [ 'AccountAlias', ], 'members' => [ 'AccountAlias' => [ 'shape' => 'accountAliasType', ], ], ], 'DeleteConflictException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'deleteConflictMessage', ], ], 'error' => [ 'code' => 'DeleteConflict', 'httpStatusCode' => 409, 'senderFault' => true, ], 'exception' => true, ], 'DeleteGroupPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'PolicyName', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], ], ], 'DeleteGroupRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], ], ], 'DeleteInstanceProfileRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceProfileName', ], 'members' => [ 'InstanceProfileName' => [ 'shape' => 'instanceProfileNameType', ], ], ], 'DeleteLoginProfileRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], ], ], 'DeleteOpenIDConnectProviderRequest' => [ 'type' => 'structure', 'required' => [ 'OpenIDConnectProviderArn', ], 'members' => [ 'OpenIDConnectProviderArn' => [ 'shape' => 'arnType', ], ], ], 'DeletePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyArn', ], 'members' => [ 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'DeletePolicyVersionRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyArn', 'VersionId', ], 'members' => [ 'PolicyArn' => [ 'shape' => 'arnType', ], 'VersionId' => [ 'shape' => 'policyVersionIdType', ], ], ], 'DeleteRolePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', 'PolicyName', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], ], ], 'DeleteRoleRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], ], ], 'DeleteSAMLProviderRequest' => [ 'type' => 'structure', 'required' => [ 'SAMLProviderArn', ], 'members' => [ 'SAMLProviderArn' => [ 'shape' => 'arnType', ], ], ], 'DeleteSSHPublicKeyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SSHPublicKeyId', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'SSHPublicKeyId' => [ 'shape' => 'publicKeyIdType', ], ], ], 'DeleteServerCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'ServerCertificateName', ], 'members' => [ 'ServerCertificateName' => [ 'shape' => 'serverCertificateNameType', ], ], ], 'DeleteSigningCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'CertificateId', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'CertificateId' => [ 'shape' => 'certificateIdType', ], ], ], 'DeleteUserPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'PolicyName', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], ], ], 'DeleteUserRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], ], ], 'DeleteVirtualMFADeviceRequest' => [ 'type' => 'structure', 'required' => [ 'SerialNumber', ], 'members' => [ 'SerialNumber' => [ 'shape' => 'serialNumberType', ], ], ], 'DetachGroupPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'PolicyArn', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'DetachRolePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', 'PolicyArn', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'DetachUserPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'PolicyArn', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'DuplicateCertificateException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'duplicateCertificateMessage', ], ], 'error' => [ 'code' => 'DuplicateCertificate', 'httpStatusCode' => 409, 'senderFault' => true, ], 'exception' => true, ], 'DuplicateSSHPublicKeyException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'duplicateSSHPublicKeyMessage', ], ], 'error' => [ 'code' => 'DuplicateSSHPublicKey', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'EnableMFADeviceRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SerialNumber', 'AuthenticationCode1', 'AuthenticationCode2', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'SerialNumber' => [ 'shape' => 'serialNumberType', ], 'AuthenticationCode1' => [ 'shape' => 'authenticationCodeType', ], 'AuthenticationCode2' => [ 'shape' => 'authenticationCodeType', ], ], ], 'EntityAlreadyExistsException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'entityAlreadyExistsMessage', ], ], 'error' => [ 'code' => 'EntityAlreadyExists', 'httpStatusCode' => 409, 'senderFault' => true, ], 'exception' => true, ], 'EntityTemporarilyUnmodifiableException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'entityTemporarilyUnmodifiableMessage', ], ], 'error' => [ 'code' => 'EntityTemporarilyUnmodifiable', 'httpStatusCode' => 409, 'senderFault' => true, ], 'exception' => true, ], 'EntityType' => [ 'type' => 'string', 'enum' => [ 'User', 'Role', 'Group', 'LocalManagedPolicy', 'AWSManagedPolicy', ], ], 'EvalDecisionDetailsType' => [ 'type' => 'map', 'key' => [ 'shape' => 'EvalDecisionSourceType', ], 'value' => [ 'shape' => 'PolicyEvaluationDecisionType', ], ], 'EvalDecisionSourceType' => [ 'type' => 'string', 'max' => 256, 'min' => 3, ], 'EvaluationResult' => [ 'type' => 'structure', 'required' => [ 'EvalActionName', 'EvalDecision', ], 'members' => [ 'EvalActionName' => [ 'shape' => 'ActionNameType', ], 'EvalResourceName' => [ 'shape' => 'ResourceNameType', ], 'EvalDecision' => [ 'shape' => 'PolicyEvaluationDecisionType', ], 'MatchedStatements' => [ 'shape' => 'StatementListType', ], 'MissingContextValues' => [ 'shape' => 'ContextKeyNamesResultListType', ], 'EvalDecisionDetails' => [ 'shape' => 'EvalDecisionDetailsType', ], 'ResourceSpecificResults' => [ 'shape' => 'ResourceSpecificResultListType', ], ], ], 'EvaluationResultsListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'EvaluationResult', ], ], 'GenerateCredentialReportResponse' => [ 'type' => 'structure', 'members' => [ 'State' => [ 'shape' => 'ReportStateType', ], 'Description' => [ 'shape' => 'ReportStateDescriptionType', ], ], ], 'GetAccessKeyLastUsedRequest' => [ 'type' => 'structure', 'required' => [ 'AccessKeyId', ], 'members' => [ 'AccessKeyId' => [ 'shape' => 'accessKeyIdType', ], ], ], 'GetAccessKeyLastUsedResponse' => [ 'type' => 'structure', 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'AccessKeyLastUsed' => [ 'shape' => 'AccessKeyLastUsed', ], ], ], 'GetAccountAuthorizationDetailsRequest' => [ 'type' => 'structure', 'members' => [ 'Filter' => [ 'shape' => 'entityListType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'GetAccountAuthorizationDetailsResponse' => [ 'type' => 'structure', 'members' => [ 'UserDetailList' => [ 'shape' => 'userDetailListType', ], 'GroupDetailList' => [ 'shape' => 'groupDetailListType', ], 'RoleDetailList' => [ 'shape' => 'roleDetailListType', ], 'Policies' => [ 'shape' => 'ManagedPolicyDetailListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'GetAccountPasswordPolicyResponse' => [ 'type' => 'structure', 'required' => [ 'PasswordPolicy', ], 'members' => [ 'PasswordPolicy' => [ 'shape' => 'PasswordPolicy', ], ], ], 'GetAccountSummaryResponse' => [ 'type' => 'structure', 'members' => [ 'SummaryMap' => [ 'shape' => 'summaryMapType', ], ], ], 'GetContextKeysForCustomPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyInputList', ], 'members' => [ 'PolicyInputList' => [ 'shape' => 'SimulationPolicyListType', ], ], ], 'GetContextKeysForPolicyResponse' => [ 'type' => 'structure', 'members' => [ 'ContextKeyNames' => [ 'shape' => 'ContextKeyNamesResultListType', ], ], ], 'GetContextKeysForPrincipalPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'PolicySourceArn', ], 'members' => [ 'PolicySourceArn' => [ 'shape' => 'arnType', ], 'PolicyInputList' => [ 'shape' => 'SimulationPolicyListType', ], ], ], 'GetCredentialReportResponse' => [ 'type' => 'structure', 'members' => [ 'Content' => [ 'shape' => 'ReportContentType', ], 'ReportFormat' => [ 'shape' => 'ReportFormatType', ], 'GeneratedTime' => [ 'shape' => 'dateType', ], ], ], 'GetGroupPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'PolicyName', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], ], ], 'GetGroupPolicyResponse' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'PolicyName', 'PolicyDocument', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], 'PolicyDocument' => [ 'shape' => 'policyDocumentType', ], ], ], 'GetGroupRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'GetGroupResponse' => [ 'type' => 'structure', 'required' => [ 'Group', 'Users', ], 'members' => [ 'Group' => [ 'shape' => 'Group', ], 'Users' => [ 'shape' => 'userListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'GetInstanceProfileRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceProfileName', ], 'members' => [ 'InstanceProfileName' => [ 'shape' => 'instanceProfileNameType', ], ], ], 'GetInstanceProfileResponse' => [ 'type' => 'structure', 'required' => [ 'InstanceProfile', ], 'members' => [ 'InstanceProfile' => [ 'shape' => 'InstanceProfile', ], ], ], 'GetLoginProfileRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], ], ], 'GetLoginProfileResponse' => [ 'type' => 'structure', 'required' => [ 'LoginProfile', ], 'members' => [ 'LoginProfile' => [ 'shape' => 'LoginProfile', ], ], ], 'GetOpenIDConnectProviderRequest' => [ 'type' => 'structure', 'required' => [ 'OpenIDConnectProviderArn', ], 'members' => [ 'OpenIDConnectProviderArn' => [ 'shape' => 'arnType', ], ], ], 'GetOpenIDConnectProviderResponse' => [ 'type' => 'structure', 'members' => [ 'Url' => [ 'shape' => 'OpenIDConnectProviderUrlType', ], 'ClientIDList' => [ 'shape' => 'clientIDListType', ], 'ThumbprintList' => [ 'shape' => 'thumbprintListType', ], 'CreateDate' => [ 'shape' => 'dateType', ], ], ], 'GetPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyArn', ], 'members' => [ 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'GetPolicyResponse' => [ 'type' => 'structure', 'members' => [ 'Policy' => [ 'shape' => 'Policy', ], ], ], 'GetPolicyVersionRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyArn', 'VersionId', ], 'members' => [ 'PolicyArn' => [ 'shape' => 'arnType', ], 'VersionId' => [ 'shape' => 'policyVersionIdType', ], ], ], 'GetPolicyVersionResponse' => [ 'type' => 'structure', 'members' => [ 'PolicyVersion' => [ 'shape' => 'PolicyVersion', ], ], ], 'GetRolePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', 'PolicyName', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], ], ], 'GetRolePolicyResponse' => [ 'type' => 'structure', 'required' => [ 'RoleName', 'PolicyName', 'PolicyDocument', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], 'PolicyDocument' => [ 'shape' => 'policyDocumentType', ], ], ], 'GetRoleRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], ], ], 'GetRoleResponse' => [ 'type' => 'structure', 'required' => [ 'Role', ], 'members' => [ 'Role' => [ 'shape' => 'Role', ], ], ], 'GetSAMLProviderRequest' => [ 'type' => 'structure', 'required' => [ 'SAMLProviderArn', ], 'members' => [ 'SAMLProviderArn' => [ 'shape' => 'arnType', ], ], ], 'GetSAMLProviderResponse' => [ 'type' => 'structure', 'members' => [ 'SAMLMetadataDocument' => [ 'shape' => 'SAMLMetadataDocumentType', ], 'CreateDate' => [ 'shape' => 'dateType', ], 'ValidUntil' => [ 'shape' => 'dateType', ], ], ], 'GetSSHPublicKeyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SSHPublicKeyId', 'Encoding', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'SSHPublicKeyId' => [ 'shape' => 'publicKeyIdType', ], 'Encoding' => [ 'shape' => 'encodingType', ], ], ], 'GetSSHPublicKeyResponse' => [ 'type' => 'structure', 'members' => [ 'SSHPublicKey' => [ 'shape' => 'SSHPublicKey', ], ], ], 'GetServerCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'ServerCertificateName', ], 'members' => [ 'ServerCertificateName' => [ 'shape' => 'serverCertificateNameType', ], ], ], 'GetServerCertificateResponse' => [ 'type' => 'structure', 'required' => [ 'ServerCertificate', ], 'members' => [ 'ServerCertificate' => [ 'shape' => 'ServerCertificate', ], ], ], 'GetUserPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'PolicyName', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], ], ], 'GetUserPolicyResponse' => [ 'type' => 'structure', 'required' => [ 'UserName', 'PolicyName', 'PolicyDocument', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], 'PolicyDocument' => [ 'shape' => 'policyDocumentType', ], ], ], 'GetUserRequest' => [ 'type' => 'structure', 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], ], ], 'GetUserResponse' => [ 'type' => 'structure', 'required' => [ 'User', ], 'members' => [ 'User' => [ 'shape' => 'User', ], ], ], 'Group' => [ 'type' => 'structure', 'required' => [ 'Path', 'GroupName', 'GroupId', 'Arn', 'CreateDate', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'GroupName' => [ 'shape' => 'groupNameType', ], 'GroupId' => [ 'shape' => 'idType', ], 'Arn' => [ 'shape' => 'arnType', ], 'CreateDate' => [ 'shape' => 'dateType', ], ], ], 'GroupDetail' => [ 'type' => 'structure', 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'GroupName' => [ 'shape' => 'groupNameType', ], 'GroupId' => [ 'shape' => 'idType', ], 'Arn' => [ 'shape' => 'arnType', ], 'CreateDate' => [ 'shape' => 'dateType', ], 'GroupPolicyList' => [ 'shape' => 'policyDetailListType', ], 'AttachedManagedPolicies' => [ 'shape' => 'attachedPoliciesListType', ], ], ], 'InstanceProfile' => [ 'type' => 'structure', 'required' => [ 'Path', 'InstanceProfileName', 'InstanceProfileId', 'Arn', 'CreateDate', 'Roles', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'InstanceProfileName' => [ 'shape' => 'instanceProfileNameType', ], 'InstanceProfileId' => [ 'shape' => 'idType', ], 'Arn' => [ 'shape' => 'arnType', ], 'CreateDate' => [ 'shape' => 'dateType', ], 'Roles' => [ 'shape' => 'roleListType', ], ], ], 'InvalidAuthenticationCodeException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'invalidAuthenticationCodeMessage', ], ], 'error' => [ 'code' => 'InvalidAuthenticationCode', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], 'InvalidCertificateException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'invalidCertificateMessage', ], ], 'error' => [ 'code' => 'InvalidCertificate', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'InvalidInputException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'invalidInputMessage', ], ], 'error' => [ 'code' => 'InvalidInput', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'InvalidPublicKeyException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'invalidPublicKeyMessage', ], ], 'error' => [ 'code' => 'InvalidPublicKey', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'InvalidUserTypeException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'invalidUserTypeMessage', ], ], 'error' => [ 'code' => 'InvalidUserType', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'KeyPairMismatchException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'keyPairMismatchMessage', ], ], 'error' => [ 'code' => 'KeyPairMismatch', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'LimitExceededException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'limitExceededMessage', ], ], 'error' => [ 'code' => 'LimitExceeded', 'httpStatusCode' => 409, 'senderFault' => true, ], 'exception' => true, ], 'LineNumber' => [ 'type' => 'integer', ], 'ListAccessKeysRequest' => [ 'type' => 'structure', 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListAccessKeysResponse' => [ 'type' => 'structure', 'required' => [ 'AccessKeyMetadata', ], 'members' => [ 'AccessKeyMetadata' => [ 'shape' => 'accessKeyMetadataListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListAccountAliasesRequest' => [ 'type' => 'structure', 'members' => [ 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListAccountAliasesResponse' => [ 'type' => 'structure', 'required' => [ 'AccountAliases', ], 'members' => [ 'AccountAliases' => [ 'shape' => 'accountAliasListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListAttachedGroupPoliciesRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'PathPrefix' => [ 'shape' => 'policyPathType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListAttachedGroupPoliciesResponse' => [ 'type' => 'structure', 'members' => [ 'AttachedPolicies' => [ 'shape' => 'attachedPoliciesListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListAttachedRolePoliciesRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'PathPrefix' => [ 'shape' => 'policyPathType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListAttachedRolePoliciesResponse' => [ 'type' => 'structure', 'members' => [ 'AttachedPolicies' => [ 'shape' => 'attachedPoliciesListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListAttachedUserPoliciesRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'PathPrefix' => [ 'shape' => 'policyPathType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListAttachedUserPoliciesResponse' => [ 'type' => 'structure', 'members' => [ 'AttachedPolicies' => [ 'shape' => 'attachedPoliciesListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListEntitiesForPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyArn', ], 'members' => [ 'PolicyArn' => [ 'shape' => 'arnType', ], 'EntityFilter' => [ 'shape' => 'EntityType', ], 'PathPrefix' => [ 'shape' => 'pathType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListEntitiesForPolicyResponse' => [ 'type' => 'structure', 'members' => [ 'PolicyGroups' => [ 'shape' => 'PolicyGroupListType', ], 'PolicyUsers' => [ 'shape' => 'PolicyUserListType', ], 'PolicyRoles' => [ 'shape' => 'PolicyRoleListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListGroupPoliciesRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListGroupPoliciesResponse' => [ 'type' => 'structure', 'required' => [ 'PolicyNames', ], 'members' => [ 'PolicyNames' => [ 'shape' => 'policyNameListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListGroupsForUserRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListGroupsForUserResponse' => [ 'type' => 'structure', 'required' => [ 'Groups', ], 'members' => [ 'Groups' => [ 'shape' => 'groupListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListGroupsRequest' => [ 'type' => 'structure', 'members' => [ 'PathPrefix' => [ 'shape' => 'pathPrefixType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListGroupsResponse' => [ 'type' => 'structure', 'required' => [ 'Groups', ], 'members' => [ 'Groups' => [ 'shape' => 'groupListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListInstanceProfilesForRoleRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListInstanceProfilesForRoleResponse' => [ 'type' => 'structure', 'required' => [ 'InstanceProfiles', ], 'members' => [ 'InstanceProfiles' => [ 'shape' => 'instanceProfileListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListInstanceProfilesRequest' => [ 'type' => 'structure', 'members' => [ 'PathPrefix' => [ 'shape' => 'pathPrefixType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListInstanceProfilesResponse' => [ 'type' => 'structure', 'required' => [ 'InstanceProfiles', ], 'members' => [ 'InstanceProfiles' => [ 'shape' => 'instanceProfileListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListMFADevicesRequest' => [ 'type' => 'structure', 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListMFADevicesResponse' => [ 'type' => 'structure', 'required' => [ 'MFADevices', ], 'members' => [ 'MFADevices' => [ 'shape' => 'mfaDeviceListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListOpenIDConnectProvidersRequest' => [ 'type' => 'structure', 'members' => [], ], 'ListOpenIDConnectProvidersResponse' => [ 'type' => 'structure', 'members' => [ 'OpenIDConnectProviderList' => [ 'shape' => 'OpenIDConnectProviderListType', ], ], ], 'ListPoliciesRequest' => [ 'type' => 'structure', 'members' => [ 'Scope' => [ 'shape' => 'policyScopeType', ], 'OnlyAttached' => [ 'shape' => 'booleanType', ], 'PathPrefix' => [ 'shape' => 'policyPathType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListPoliciesResponse' => [ 'type' => 'structure', 'members' => [ 'Policies' => [ 'shape' => 'policyListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListPolicyVersionsRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyArn', ], 'members' => [ 'PolicyArn' => [ 'shape' => 'arnType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListPolicyVersionsResponse' => [ 'type' => 'structure', 'members' => [ 'Versions' => [ 'shape' => 'policyDocumentVersionListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListRolePoliciesRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListRolePoliciesResponse' => [ 'type' => 'structure', 'required' => [ 'PolicyNames', ], 'members' => [ 'PolicyNames' => [ 'shape' => 'policyNameListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListRolesRequest' => [ 'type' => 'structure', 'members' => [ 'PathPrefix' => [ 'shape' => 'pathPrefixType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListRolesResponse' => [ 'type' => 'structure', 'required' => [ 'Roles', ], 'members' => [ 'Roles' => [ 'shape' => 'roleListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListSAMLProvidersRequest' => [ 'type' => 'structure', 'members' => [], ], 'ListSAMLProvidersResponse' => [ 'type' => 'structure', 'members' => [ 'SAMLProviderList' => [ 'shape' => 'SAMLProviderListType', ], ], ], 'ListSSHPublicKeysRequest' => [ 'type' => 'structure', 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListSSHPublicKeysResponse' => [ 'type' => 'structure', 'members' => [ 'SSHPublicKeys' => [ 'shape' => 'SSHPublicKeyListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListServerCertificatesRequest' => [ 'type' => 'structure', 'members' => [ 'PathPrefix' => [ 'shape' => 'pathPrefixType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListServerCertificatesResponse' => [ 'type' => 'structure', 'required' => [ 'ServerCertificateMetadataList', ], 'members' => [ 'ServerCertificateMetadataList' => [ 'shape' => 'serverCertificateMetadataListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListSigningCertificatesRequest' => [ 'type' => 'structure', 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListSigningCertificatesResponse' => [ 'type' => 'structure', 'required' => [ 'Certificates', ], 'members' => [ 'Certificates' => [ 'shape' => 'certificateListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListUserPoliciesRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListUserPoliciesResponse' => [ 'type' => 'structure', 'required' => [ 'PolicyNames', ], 'members' => [ 'PolicyNames' => [ 'shape' => 'policyNameListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListUsersRequest' => [ 'type' => 'structure', 'members' => [ 'PathPrefix' => [ 'shape' => 'pathPrefixType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListUsersResponse' => [ 'type' => 'structure', 'required' => [ 'Users', ], 'members' => [ 'Users' => [ 'shape' => 'userListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'ListVirtualMFADevicesRequest' => [ 'type' => 'structure', 'members' => [ 'AssignmentStatus' => [ 'shape' => 'assignmentStatusType', ], 'Marker' => [ 'shape' => 'markerType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], ], ], 'ListVirtualMFADevicesResponse' => [ 'type' => 'structure', 'required' => [ 'VirtualMFADevices', ], 'members' => [ 'VirtualMFADevices' => [ 'shape' => 'virtualMFADeviceListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'LoginProfile' => [ 'type' => 'structure', 'required' => [ 'UserName', 'CreateDate', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'CreateDate' => [ 'shape' => 'dateType', ], 'PasswordResetRequired' => [ 'shape' => 'booleanType', ], ], ], 'MFADevice' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SerialNumber', 'EnableDate', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'SerialNumber' => [ 'shape' => 'serialNumberType', ], 'EnableDate' => [ 'shape' => 'dateType', ], ], ], 'MalformedCertificateException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'malformedCertificateMessage', ], ], 'error' => [ 'code' => 'MalformedCertificate', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'MalformedPolicyDocumentException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'malformedPolicyDocumentMessage', ], ], 'error' => [ 'code' => 'MalformedPolicyDocument', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'ManagedPolicyDetail' => [ 'type' => 'structure', 'members' => [ 'PolicyName' => [ 'shape' => 'policyNameType', ], 'PolicyId' => [ 'shape' => 'idType', ], 'Arn' => [ 'shape' => 'arnType', ], 'Path' => [ 'shape' => 'policyPathType', ], 'DefaultVersionId' => [ 'shape' => 'policyVersionIdType', ], 'AttachmentCount' => [ 'shape' => 'attachmentCountType', ], 'IsAttachable' => [ 'shape' => 'booleanType', ], 'Description' => [ 'shape' => 'policyDescriptionType', ], 'CreateDate' => [ 'shape' => 'dateType', ], 'UpdateDate' => [ 'shape' => 'dateType', ], 'PolicyVersionList' => [ 'shape' => 'policyDocumentVersionListType', ], ], ], 'ManagedPolicyDetailListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'ManagedPolicyDetail', ], ], 'NoSuchEntityException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'noSuchEntityMessage', ], ], 'error' => [ 'code' => 'NoSuchEntity', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], 'OpenIDConnectProviderListEntry' => [ 'type' => 'structure', 'members' => [ 'Arn' => [ 'shape' => 'arnType', ], ], ], 'OpenIDConnectProviderListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'OpenIDConnectProviderListEntry', ], ], 'OpenIDConnectProviderUrlType' => [ 'type' => 'string', 'max' => 255, 'min' => 1, ], 'PasswordPolicy' => [ 'type' => 'structure', 'members' => [ 'MinimumPasswordLength' => [ 'shape' => 'minimumPasswordLengthType', ], 'RequireSymbols' => [ 'shape' => 'booleanType', ], 'RequireNumbers' => [ 'shape' => 'booleanType', ], 'RequireUppercaseCharacters' => [ 'shape' => 'booleanType', ], 'RequireLowercaseCharacters' => [ 'shape' => 'booleanType', ], 'AllowUsersToChangePassword' => [ 'shape' => 'booleanType', ], 'ExpirePasswords' => [ 'shape' => 'booleanType', ], 'MaxPasswordAge' => [ 'shape' => 'maxPasswordAgeType', ], 'PasswordReusePrevention' => [ 'shape' => 'passwordReusePreventionType', ], 'HardExpiry' => [ 'shape' => 'booleanObjectType', ], ], ], 'PasswordPolicyViolationException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'passwordPolicyViolationMessage', ], ], 'error' => [ 'code' => 'PasswordPolicyViolation', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'Policy' => [ 'type' => 'structure', 'members' => [ 'PolicyName' => [ 'shape' => 'policyNameType', ], 'PolicyId' => [ 'shape' => 'idType', ], 'Arn' => [ 'shape' => 'arnType', ], 'Path' => [ 'shape' => 'policyPathType', ], 'DefaultVersionId' => [ 'shape' => 'policyVersionIdType', ], 'AttachmentCount' => [ 'shape' => 'attachmentCountType', ], 'IsAttachable' => [ 'shape' => 'booleanType', ], 'Description' => [ 'shape' => 'policyDescriptionType', ], 'CreateDate' => [ 'shape' => 'dateType', ], 'UpdateDate' => [ 'shape' => 'dateType', ], ], ], 'PolicyDetail' => [ 'type' => 'structure', 'members' => [ 'PolicyName' => [ 'shape' => 'policyNameType', ], 'PolicyDocument' => [ 'shape' => 'policyDocumentType', ], ], ], 'PolicyEvaluationDecisionType' => [ 'type' => 'string', 'enum' => [ 'allowed', 'explicitDeny', 'implicitDeny', ], ], 'PolicyEvaluationException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'policyEvaluationErrorMessage', ], ], 'error' => [ 'code' => 'PolicyEvaluation', 'httpStatusCode' => 500, ], 'exception' => true, ], 'PolicyGroup' => [ 'type' => 'structure', 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'GroupId' => [ 'shape' => 'idType', ], ], ], 'PolicyGroupListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'PolicyGroup', ], ], 'PolicyIdentifierType' => [ 'type' => 'string', ], 'PolicyRole' => [ 'type' => 'structure', 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'RoleId' => [ 'shape' => 'idType', ], ], ], 'PolicyRoleListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'PolicyRole', ], ], 'PolicySourceType' => [ 'type' => 'string', 'enum' => [ 'user', 'group', 'role', 'aws-managed', 'user-managed', 'resource', 'none', ], ], 'PolicyUser' => [ 'type' => 'structure', 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'UserId' => [ 'shape' => 'idType', ], ], ], 'PolicyUserListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'PolicyUser', ], ], 'PolicyVersion' => [ 'type' => 'structure', 'members' => [ 'Document' => [ 'shape' => 'policyDocumentType', ], 'VersionId' => [ 'shape' => 'policyVersionIdType', ], 'IsDefaultVersion' => [ 'shape' => 'booleanType', ], 'CreateDate' => [ 'shape' => 'dateType', ], ], ], 'Position' => [ 'type' => 'structure', 'members' => [ 'Line' => [ 'shape' => 'LineNumber', ], 'Column' => [ 'shape' => 'ColumnNumber', ], ], ], 'PutGroupPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'PolicyName', 'PolicyDocument', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], 'PolicyDocument' => [ 'shape' => 'policyDocumentType', ], ], ], 'PutRolePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', 'PolicyName', 'PolicyDocument', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], 'PolicyDocument' => [ 'shape' => 'policyDocumentType', ], ], ], 'PutUserPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'PolicyName', 'PolicyDocument', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], 'PolicyDocument' => [ 'shape' => 'policyDocumentType', ], ], ], 'RemoveClientIDFromOpenIDConnectProviderRequest' => [ 'type' => 'structure', 'required' => [ 'OpenIDConnectProviderArn', 'ClientID', ], 'members' => [ 'OpenIDConnectProviderArn' => [ 'shape' => 'arnType', ], 'ClientID' => [ 'shape' => 'clientIDType', ], ], ], 'RemoveRoleFromInstanceProfileRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceProfileName', 'RoleName', ], 'members' => [ 'InstanceProfileName' => [ 'shape' => 'instanceProfileNameType', ], 'RoleName' => [ 'shape' => 'roleNameType', ], ], ], 'RemoveUserFromGroupRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'UserName', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'UserName' => [ 'shape' => 'existingUserNameType', ], ], ], 'ReportContentType' => [ 'type' => 'blob', ], 'ReportFormatType' => [ 'type' => 'string', 'enum' => [ 'text/csv', ], ], 'ReportStateDescriptionType' => [ 'type' => 'string', ], 'ReportStateType' => [ 'type' => 'string', 'enum' => [ 'STARTED', 'INPROGRESS', 'COMPLETE', ], ], 'ResourceHandlingOptionType' => [ 'type' => 'string', 'max' => 64, 'min' => 1, ], 'ResourceNameListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'ResourceNameType', ], ], 'ResourceNameType' => [ 'type' => 'string', 'max' => 2048, 'min' => 1, ], 'ResourceSpecificResult' => [ 'type' => 'structure', 'required' => [ 'EvalResourceName', 'EvalResourceDecision', ], 'members' => [ 'EvalResourceName' => [ 'shape' => 'ResourceNameType', ], 'EvalResourceDecision' => [ 'shape' => 'PolicyEvaluationDecisionType', ], 'MatchedStatements' => [ 'shape' => 'StatementListType', ], 'MissingContextValues' => [ 'shape' => 'ContextKeyNamesResultListType', ], 'EvalDecisionDetails' => [ 'shape' => 'EvalDecisionDetailsType', ], ], ], 'ResourceSpecificResultListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'ResourceSpecificResult', ], ], 'ResyncMFADeviceRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SerialNumber', 'AuthenticationCode1', 'AuthenticationCode2', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'SerialNumber' => [ 'shape' => 'serialNumberType', ], 'AuthenticationCode1' => [ 'shape' => 'authenticationCodeType', ], 'AuthenticationCode2' => [ 'shape' => 'authenticationCodeType', ], ], ], 'Role' => [ 'type' => 'structure', 'required' => [ 'Path', 'RoleName', 'RoleId', 'Arn', 'CreateDate', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'RoleName' => [ 'shape' => 'roleNameType', ], 'RoleId' => [ 'shape' => 'idType', ], 'Arn' => [ 'shape' => 'arnType', ], 'CreateDate' => [ 'shape' => 'dateType', ], 'AssumeRolePolicyDocument' => [ 'shape' => 'policyDocumentType', ], ], ], 'RoleDetail' => [ 'type' => 'structure', 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'RoleName' => [ 'shape' => 'roleNameType', ], 'RoleId' => [ 'shape' => 'idType', ], 'Arn' => [ 'shape' => 'arnType', ], 'CreateDate' => [ 'shape' => 'dateType', ], 'AssumeRolePolicyDocument' => [ 'shape' => 'policyDocumentType', ], 'InstanceProfileList' => [ 'shape' => 'instanceProfileListType', ], 'RolePolicyList' => [ 'shape' => 'policyDetailListType', ], 'AttachedManagedPolicies' => [ 'shape' => 'attachedPoliciesListType', ], ], ], 'SAMLMetadataDocumentType' => [ 'type' => 'string', 'max' => 10000000, 'min' => 1000, ], 'SAMLProviderListEntry' => [ 'type' => 'structure', 'members' => [ 'Arn' => [ 'shape' => 'arnType', ], 'ValidUntil' => [ 'shape' => 'dateType', ], 'CreateDate' => [ 'shape' => 'dateType', ], ], ], 'SAMLProviderListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'SAMLProviderListEntry', ], ], 'SAMLProviderNameType' => [ 'type' => 'string', 'max' => 128, 'min' => 1, 'pattern' => '[\\w._-]+', ], 'SSHPublicKey' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SSHPublicKeyId', 'Fingerprint', 'SSHPublicKeyBody', 'Status', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'SSHPublicKeyId' => [ 'shape' => 'publicKeyIdType', ], 'Fingerprint' => [ 'shape' => 'publicKeyFingerprintType', ], 'SSHPublicKeyBody' => [ 'shape' => 'publicKeyMaterialType', ], 'Status' => [ 'shape' => 'statusType', ], 'UploadDate' => [ 'shape' => 'dateType', ], ], ], 'SSHPublicKeyListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'SSHPublicKeyMetadata', ], ], 'SSHPublicKeyMetadata' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SSHPublicKeyId', 'Status', 'UploadDate', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'SSHPublicKeyId' => [ 'shape' => 'publicKeyIdType', ], 'Status' => [ 'shape' => 'statusType', ], 'UploadDate' => [ 'shape' => 'dateType', ], ], ], 'ServerCertificate' => [ 'type' => 'structure', 'required' => [ 'ServerCertificateMetadata', 'CertificateBody', ], 'members' => [ 'ServerCertificateMetadata' => [ 'shape' => 'ServerCertificateMetadata', ], 'CertificateBody' => [ 'shape' => 'certificateBodyType', ], 'CertificateChain' => [ 'shape' => 'certificateChainType', ], ], ], 'ServerCertificateMetadata' => [ 'type' => 'structure', 'required' => [ 'Path', 'ServerCertificateName', 'ServerCertificateId', 'Arn', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'ServerCertificateName' => [ 'shape' => 'serverCertificateNameType', ], 'ServerCertificateId' => [ 'shape' => 'idType', ], 'Arn' => [ 'shape' => 'arnType', ], 'UploadDate' => [ 'shape' => 'dateType', ], 'Expiration' => [ 'shape' => 'dateType', ], ], ], 'ServiceFailureException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'serviceFailureExceptionMessage', ], ], 'error' => [ 'code' => 'ServiceFailure', 'httpStatusCode' => 500, ], 'exception' => true, ], 'SetDefaultPolicyVersionRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyArn', 'VersionId', ], 'members' => [ 'PolicyArn' => [ 'shape' => 'arnType', ], 'VersionId' => [ 'shape' => 'policyVersionIdType', ], ], ], 'SigningCertificate' => [ 'type' => 'structure', 'required' => [ 'UserName', 'CertificateId', 'CertificateBody', 'Status', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'CertificateId' => [ 'shape' => 'certificateIdType', ], 'CertificateBody' => [ 'shape' => 'certificateBodyType', ], 'Status' => [ 'shape' => 'statusType', ], 'UploadDate' => [ 'shape' => 'dateType', ], ], ], 'SimulateCustomPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyInputList', 'ActionNames', ], 'members' => [ 'PolicyInputList' => [ 'shape' => 'SimulationPolicyListType', ], 'ActionNames' => [ 'shape' => 'ActionNameListType', ], 'ResourceArns' => [ 'shape' => 'ResourceNameListType', ], 'ResourcePolicy' => [ 'shape' => 'policyDocumentType', ], 'ResourceOwner' => [ 'shape' => 'ResourceNameType', ], 'CallerArn' => [ 'shape' => 'ResourceNameType', ], 'ContextEntries' => [ 'shape' => 'ContextEntryListType', ], 'ResourceHandlingOption' => [ 'shape' => 'ResourceHandlingOptionType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'SimulatePolicyResponse' => [ 'type' => 'structure', 'members' => [ 'EvaluationResults' => [ 'shape' => 'EvaluationResultsListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'SimulatePrincipalPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'PolicySourceArn', 'ActionNames', ], 'members' => [ 'PolicySourceArn' => [ 'shape' => 'arnType', ], 'PolicyInputList' => [ 'shape' => 'SimulationPolicyListType', ], 'ActionNames' => [ 'shape' => 'ActionNameListType', ], 'ResourceArns' => [ 'shape' => 'ResourceNameListType', ], 'ResourcePolicy' => [ 'shape' => 'policyDocumentType', ], 'ResourceOwner' => [ 'shape' => 'ResourceNameType', ], 'CallerArn' => [ 'shape' => 'ResourceNameType', ], 'ContextEntries' => [ 'shape' => 'ContextEntryListType', ], 'ResourceHandlingOption' => [ 'shape' => 'ResourceHandlingOptionType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'SimulationPolicyListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'policyDocumentType', ], ], 'Statement' => [ 'type' => 'structure', 'members' => [ 'SourcePolicyId' => [ 'shape' => 'PolicyIdentifierType', ], 'SourcePolicyType' => [ 'shape' => 'PolicySourceType', ], 'StartPosition' => [ 'shape' => 'Position', ], 'EndPosition' => [ 'shape' => 'Position', ], ], ], 'StatementListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'Statement', ], ], 'UnrecognizedPublicKeyEncodingException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'unrecognizedPublicKeyEncodingMessage', ], ], 'error' => [ 'code' => 'UnrecognizedPublicKeyEncoding', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'UpdateAccessKeyRequest' => [ 'type' => 'structure', 'required' => [ 'AccessKeyId', 'Status', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'AccessKeyId' => [ 'shape' => 'accessKeyIdType', ], 'Status' => [ 'shape' => 'statusType', ], ], ], 'UpdateAccountPasswordPolicyRequest' => [ 'type' => 'structure', 'members' => [ 'MinimumPasswordLength' => [ 'shape' => 'minimumPasswordLengthType', ], 'RequireSymbols' => [ 'shape' => 'booleanType', ], 'RequireNumbers' => [ 'shape' => 'booleanType', ], 'RequireUppercaseCharacters' => [ 'shape' => 'booleanType', ], 'RequireLowercaseCharacters' => [ 'shape' => 'booleanType', ], 'AllowUsersToChangePassword' => [ 'shape' => 'booleanType', ], 'MaxPasswordAge' => [ 'shape' => 'maxPasswordAgeType', ], 'PasswordReusePrevention' => [ 'shape' => 'passwordReusePreventionType', ], 'HardExpiry' => [ 'shape' => 'booleanObjectType', ], ], ], 'UpdateAssumeRolePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', 'PolicyDocument', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'PolicyDocument' => [ 'shape' => 'policyDocumentType', ], ], ], 'UpdateGroupRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'NewPath' => [ 'shape' => 'pathType', ], 'NewGroupName' => [ 'shape' => 'groupNameType', ], ], ], 'UpdateLoginProfileRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'Password' => [ 'shape' => 'passwordType', ], 'PasswordResetRequired' => [ 'shape' => 'booleanObjectType', ], ], ], 'UpdateOpenIDConnectProviderThumbprintRequest' => [ 'type' => 'structure', 'required' => [ 'OpenIDConnectProviderArn', 'ThumbprintList', ], 'members' => [ 'OpenIDConnectProviderArn' => [ 'shape' => 'arnType', ], 'ThumbprintList' => [ 'shape' => 'thumbprintListType', ], ], ], 'UpdateSAMLProviderRequest' => [ 'type' => 'structure', 'required' => [ 'SAMLMetadataDocument', 'SAMLProviderArn', ], 'members' => [ 'SAMLMetadataDocument' => [ 'shape' => 'SAMLMetadataDocumentType', ], 'SAMLProviderArn' => [ 'shape' => 'arnType', ], ], ], 'UpdateSAMLProviderResponse' => [ 'type' => 'structure', 'members' => [ 'SAMLProviderArn' => [ 'shape' => 'arnType', ], ], ], 'UpdateSSHPublicKeyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SSHPublicKeyId', 'Status', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'SSHPublicKeyId' => [ 'shape' => 'publicKeyIdType', ], 'Status' => [ 'shape' => 'statusType', ], ], ], 'UpdateServerCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'ServerCertificateName', ], 'members' => [ 'ServerCertificateName' => [ 'shape' => 'serverCertificateNameType', ], 'NewPath' => [ 'shape' => 'pathType', ], 'NewServerCertificateName' => [ 'shape' => 'serverCertificateNameType', ], ], ], 'UpdateSigningCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'CertificateId', 'Status', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'CertificateId' => [ 'shape' => 'certificateIdType', ], 'Status' => [ 'shape' => 'statusType', ], ], ], 'UpdateUserRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'NewPath' => [ 'shape' => 'pathType', ], 'NewUserName' => [ 'shape' => 'userNameType', ], ], ], 'UploadSSHPublicKeyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SSHPublicKeyBody', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'SSHPublicKeyBody' => [ 'shape' => 'publicKeyMaterialType', ], ], ], 'UploadSSHPublicKeyResponse' => [ 'type' => 'structure', 'members' => [ 'SSHPublicKey' => [ 'shape' => 'SSHPublicKey', ], ], ], 'UploadServerCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'ServerCertificateName', 'CertificateBody', 'PrivateKey', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'ServerCertificateName' => [ 'shape' => 'serverCertificateNameType', ], 'CertificateBody' => [ 'shape' => 'certificateBodyType', ], 'PrivateKey' => [ 'shape' => 'privateKeyType', ], 'CertificateChain' => [ 'shape' => 'certificateChainType', ], ], ], 'UploadServerCertificateResponse' => [ 'type' => 'structure', 'members' => [ 'ServerCertificateMetadata' => [ 'shape' => 'ServerCertificateMetadata', ], ], ], 'UploadSigningCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'CertificateBody', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'CertificateBody' => [ 'shape' => 'certificateBodyType', ], ], ], 'UploadSigningCertificateResponse' => [ 'type' => 'structure', 'required' => [ 'Certificate', ], 'members' => [ 'Certificate' => [ 'shape' => 'SigningCertificate', ], ], ], 'User' => [ 'type' => 'structure', 'required' => [ 'Path', 'UserName', 'UserId', 'Arn', 'CreateDate', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'UserName' => [ 'shape' => 'userNameType', ], 'UserId' => [ 'shape' => 'idType', ], 'Arn' => [ 'shape' => 'arnType', ], 'CreateDate' => [ 'shape' => 'dateType', ], 'PasswordLastUsed' => [ 'shape' => 'dateType', ], ], ], 'UserDetail' => [ 'type' => 'structure', 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'UserName' => [ 'shape' => 'userNameType', ], 'UserId' => [ 'shape' => 'idType', ], 'Arn' => [ 'shape' => 'arnType', ], 'CreateDate' => [ 'shape' => 'dateType', ], 'UserPolicyList' => [ 'shape' => 'policyDetailListType', ], 'GroupList' => [ 'shape' => 'groupNameListType', ], 'AttachedManagedPolicies' => [ 'shape' => 'attachedPoliciesListType', ], ], ], 'VirtualMFADevice' => [ 'type' => 'structure', 'required' => [ 'SerialNumber', ], 'members' => [ 'SerialNumber' => [ 'shape' => 'serialNumberType', ], 'Base32StringSeed' => [ 'shape' => 'BootstrapDatum', ], 'QRCodePNG' => [ 'shape' => 'BootstrapDatum', ], 'User' => [ 'shape' => 'User', ], 'EnableDate' => [ 'shape' => 'dateType', ], ], ], 'accessKeyIdType' => [ 'type' => 'string', 'max' => 32, 'min' => 16, 'pattern' => '[\\w]+', ], 'accessKeyMetadataListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'AccessKeyMetadata', ], ], 'accessKeySecretType' => [ 'type' => 'string', 'sensitive' => true, ], 'accountAliasListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'accountAliasType', ], ], 'accountAliasType' => [ 'type' => 'string', 'max' => 63, 'min' => 3, 'pattern' => '^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$', ], 'arnType' => [ 'type' => 'string', 'max' => 2048, 'min' => 20, ], 'assignmentStatusType' => [ 'type' => 'string', 'enum' => [ 'Assigned', 'Unassigned', 'Any', ], ], 'attachedPoliciesListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'AttachedPolicy', ], ], 'attachmentCountType' => [ 'type' => 'integer', ], 'authenticationCodeType' => [ 'type' => 'string', 'max' => 6, 'min' => 6, 'pattern' => '[\\d]+', ], 'booleanObjectType' => [ 'type' => 'boolean', 'box' => true, ], 'booleanType' => [ 'type' => 'boolean', ], 'certificateBodyType' => [ 'type' => 'string', 'max' => 16384, 'min' => 1, 'pattern' => '[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+', ], 'certificateChainType' => [ 'type' => 'string', 'max' => 2097152, 'min' => 1, 'pattern' => '[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+', ], 'certificateIdType' => [ 'type' => 'string', 'max' => 128, 'min' => 24, 'pattern' => '[\\w]+', ], 'certificateListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'SigningCertificate', ], ], 'clientIDListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'clientIDType', ], ], 'clientIDType' => [ 'type' => 'string', 'max' => 255, 'min' => 1, ], 'credentialReportExpiredExceptionMessage' => [ 'type' => 'string', ], 'credentialReportNotPresentExceptionMessage' => [ 'type' => 'string', ], 'credentialReportNotReadyExceptionMessage' => [ 'type' => 'string', ], 'dateType' => [ 'type' => 'timestamp', ], 'deleteConflictMessage' => [ 'type' => 'string', ], 'duplicateCertificateMessage' => [ 'type' => 'string', ], 'duplicateSSHPublicKeyMessage' => [ 'type' => 'string', ], 'encodingType' => [ 'type' => 'string', 'enum' => [ 'SSH', 'PEM', ], ], 'entityAlreadyExistsMessage' => [ 'type' => 'string', ], 'entityListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'EntityType', ], ], 'entityTemporarilyUnmodifiableMessage' => [ 'type' => 'string', ], 'existingUserNameType' => [ 'type' => 'string', 'max' => 128, 'min' => 1, 'pattern' => '[\\w+=,.@-]+', ], 'groupDetailListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'GroupDetail', ], ], 'groupListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'Group', ], ], 'groupNameListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'groupNameType', ], ], 'groupNameType' => [ 'type' => 'string', 'max' => 128, 'min' => 1, 'pattern' => '[\\w+=,.@-]+', ], 'idType' => [ 'type' => 'string', 'max' => 32, 'min' => 16, 'pattern' => '[\\w]+', ], 'instanceProfileListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceProfile', ], ], 'instanceProfileNameType' => [ 'type' => 'string', 'max' => 128, 'min' => 1, 'pattern' => '[\\w+=,.@-]+', ], 'invalidAuthenticationCodeMessage' => [ 'type' => 'string', ], 'invalidCertificateMessage' => [ 'type' => 'string', ], 'invalidInputMessage' => [ 'type' => 'string', ], 'invalidPublicKeyMessage' => [ 'type' => 'string', ], 'invalidUserTypeMessage' => [ 'type' => 'string', ], 'keyPairMismatchMessage' => [ 'type' => 'string', ], 'limitExceededMessage' => [ 'type' => 'string', ], 'malformedCertificateMessage' => [ 'type' => 'string', ], 'malformedPolicyDocumentMessage' => [ 'type' => 'string', ], 'markerType' => [ 'type' => 'string', 'max' => 320, 'min' => 1, 'pattern' => '[\\u0020-\\u00FF]+', ], 'maxItemsType' => [ 'type' => 'integer', 'max' => 1000, 'min' => 1, ], 'maxPasswordAgeType' => [ 'type' => 'integer', 'box' => true, 'max' => 1095, 'min' => 1, ], 'mfaDeviceListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'MFADevice', ], ], 'minimumPasswordLengthType' => [ 'type' => 'integer', 'max' => 128, 'min' => 6, ], 'noSuchEntityMessage' => [ 'type' => 'string', ], 'passwordPolicyViolationMessage' => [ 'type' => 'string', ], 'passwordReusePreventionType' => [ 'type' => 'integer', 'box' => true, 'max' => 24, 'min' => 1, ], 'passwordType' => [ 'type' => 'string', 'max' => 128, 'min' => 1, 'pattern' => '[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+', 'sensitive' => true, ], 'pathPrefixType' => [ 'type' => 'string', 'max' => 512, 'min' => 1, 'pattern' => '\\u002F[\\u0021-\\u007F]*', ], 'pathType' => [ 'type' => 'string', 'max' => 512, 'min' => 1, 'pattern' => '(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)', ], 'policyDescriptionType' => [ 'type' => 'string', 'max' => 1000, ], 'policyDetailListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'PolicyDetail', ], ], 'policyDocumentType' => [ 'type' => 'string', 'max' => 131072, 'min' => 1, 'pattern' => '[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+', ], 'policyDocumentVersionListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'PolicyVersion', ], ], 'policyEvaluationErrorMessage' => [ 'type' => 'string', ], 'policyListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'Policy', ], ], 'policyNameListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'policyNameType', ], ], 'policyNameType' => [ 'type' => 'string', 'max' => 128, 'min' => 1, 'pattern' => '[\\w+=,.@-]+', ], 'policyPathType' => [ 'type' => 'string', 'pattern' => '((/[A-Za-z0-9\\.,\\+@=_-]+)*)/', ], 'policyScopeType' => [ 'type' => 'string', 'enum' => [ 'All', 'AWS', 'Local', ], ], 'policyVersionIdType' => [ 'type' => 'string', 'pattern' => 'v[1-9][0-9]*(\\.[A-Za-z0-9-]*)?', ], 'privateKeyType' => [ 'type' => 'string', 'max' => 16384, 'min' => 1, 'pattern' => '[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+', 'sensitive' => true, ], 'publicKeyFingerprintType' => [ 'type' => 'string', 'max' => 48, 'min' => 48, 'pattern' => '[:\\w]+', ], 'publicKeyIdType' => [ 'type' => 'string', 'max' => 128, 'min' => 20, 'pattern' => '[\\w]+', ], 'publicKeyMaterialType' => [ 'type' => 'string', 'max' => 16384, 'min' => 1, 'pattern' => '[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+', ], 'roleDetailListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'RoleDetail', ], ], 'roleListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'Role', ], ], 'roleNameType' => [ 'type' => 'string', 'max' => 64, 'min' => 1, 'pattern' => '[\\w+=,.@-]+', ], 'serialNumberType' => [ 'type' => 'string', 'max' => 256, 'min' => 9, 'pattern' => '[\\w+=/:,.@-]+', ], 'serverCertificateMetadataListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'ServerCertificateMetadata', ], ], 'serverCertificateNameType' => [ 'type' => 'string', 'max' => 128, 'min' => 1, 'pattern' => '[\\w+=,.@-]+', ], 'serviceFailureExceptionMessage' => [ 'type' => 'string', ], 'statusType' => [ 'type' => 'string', 'enum' => [ 'Active', 'Inactive', ], ], 'stringType' => [ 'type' => 'string', ], 'summaryKeyType' => [ 'type' => 'string', 'enum' => [ 'Users', 'UsersQuota', 'Groups', 'GroupsQuota', 'ServerCertificates', 'ServerCertificatesQuota', 'UserPolicySizeQuota', 'GroupPolicySizeQuota', 'GroupsPerUserQuota', 'SigningCertificatesPerUserQuota', 'AccessKeysPerUserQuota', 'MFADevices', 'MFADevicesInUse', 'AccountMFAEnabled', 'AccountAccessKeysPresent', 'AccountSigningCertificatesPresent', 'AttachedPoliciesPerGroupQuota', 'AttachedPoliciesPerRoleQuota', 'AttachedPoliciesPerUserQuota', 'Policies', 'PoliciesQuota', 'PolicySizeQuota', 'PolicyVersionsInUse', 'PolicyVersionsInUseQuota', 'VersionsPerPolicyQuota', ], ], 'summaryMapType' => [ 'type' => 'map', 'key' => [ 'shape' => 'summaryKeyType', ], 'value' => [ 'shape' => 'summaryValueType', ], ], 'summaryValueType' => [ 'type' => 'integer', ], 'thumbprintListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'thumbprintType', ], ], 'thumbprintType' => [ 'type' => 'string', 'max' => 40, 'min' => 40, ], 'unrecognizedPublicKeyEncodingMessage' => [ 'type' => 'string', ], 'userDetailListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'UserDetail', ], ], 'userListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'User', ], ], 'userNameType' => [ 'type' => 'string', 'max' => 64, 'min' => 1, 'pattern' => '[\\w+=,.@-]+', ], 'virtualMFADeviceListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'VirtualMFADevice', ], ], 'virtualMFADeviceName' => [ 'type' => 'string', 'min' => 1, 'pattern' => '[\\w+=,.@-]+', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/logs/2014-03-28/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2014-03-28', 'endpointPrefix' => 'logs', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceFullName' => 'Amazon CloudWatch Logs', 'signatureVersion' => 'v4', 'targetPrefix' => 'Logs_20140328', ], 'operations' => [ 'CancelExportTask' => [ 'name' => 'CancelExportTask', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelExportTaskRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'InvalidOperationException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'CreateExportTask' => [ 'name' => 'CreateExportTask', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateExportTaskRequest', ], 'output' => [ 'shape' => 'CreateExportTaskResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'ServiceUnavailableException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'ResourceAlreadyExistsException', ], ], ], 'CreateLogGroup' => [ 'name' => 'CreateLogGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateLogGroupRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'CreateLogStream' => [ 'name' => 'CreateLogStream', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateLogStreamRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceAlreadyExistsException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'DeleteDestination' => [ 'name' => 'DeleteDestination', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteDestinationRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'DeleteLogGroup' => [ 'name' => 'DeleteLogGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteLogGroupRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'DeleteLogStream' => [ 'name' => 'DeleteLogStream', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteLogStreamRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'DeleteMetricFilter' => [ 'name' => 'DeleteMetricFilter', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteMetricFilterRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'DeleteRetentionPolicy' => [ 'name' => 'DeleteRetentionPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteRetentionPolicyRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'DeleteSubscriptionFilter' => [ 'name' => 'DeleteSubscriptionFilter', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSubscriptionFilterRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'DescribeDestinations' => [ 'name' => 'DescribeDestinations', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeDestinationsRequest', ], 'output' => [ 'shape' => 'DescribeDestinationsResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'DescribeExportTasks' => [ 'name' => 'DescribeExportTasks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeExportTasksRequest', ], 'output' => [ 'shape' => 'DescribeExportTasksResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'DescribeLogGroups' => [ 'name' => 'DescribeLogGroups', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeLogGroupsRequest', ], 'output' => [ 'shape' => 'DescribeLogGroupsResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'DescribeLogStreams' => [ 'name' => 'DescribeLogStreams', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeLogStreamsRequest', ], 'output' => [ 'shape' => 'DescribeLogStreamsResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'DescribeMetricFilters' => [ 'name' => 'DescribeMetricFilters', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeMetricFiltersRequest', ], 'output' => [ 'shape' => 'DescribeMetricFiltersResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'DescribeSubscriptionFilters' => [ 'name' => 'DescribeSubscriptionFilters', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSubscriptionFiltersRequest', ], 'output' => [ 'shape' => 'DescribeSubscriptionFiltersResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'FilterLogEvents' => [ 'name' => 'FilterLogEvents', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'FilterLogEventsRequest', ], 'output' => [ 'shape' => 'FilterLogEventsResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'GetLogEvents' => [ 'name' => 'GetLogEvents', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetLogEventsRequest', ], 'output' => [ 'shape' => 'GetLogEventsResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'PutDestination' => [ 'name' => 'PutDestination', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutDestinationRequest', ], 'output' => [ 'shape' => 'PutDestinationResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'PutDestinationPolicy' => [ 'name' => 'PutDestinationPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutDestinationPolicyRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'PutLogEvents' => [ 'name' => 'PutLogEvents', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutLogEventsRequest', ], 'output' => [ 'shape' => 'PutLogEventsResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'InvalidSequenceTokenException', ], [ 'shape' => 'DataAlreadyAcceptedException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'PutMetricFilter' => [ 'name' => 'PutMetricFilter', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutMetricFilterRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'PutRetentionPolicy' => [ 'name' => 'PutRetentionPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutRetentionPolicyRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'PutSubscriptionFilter' => [ 'name' => 'PutSubscriptionFilter', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutSubscriptionFilterRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'OperationAbortedException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], 'TestMetricFilter' => [ 'name' => 'TestMetricFilter', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'TestMetricFilterRequest', ], 'output' => [ 'shape' => 'TestMetricFilterResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', ], [ 'shape' => 'ServiceUnavailableException', ], ], ], ], 'shapes' => [ 'AccessPolicy' => [ 'type' => 'string', 'min' => 1, ], 'Arn' => [ 'type' => 'string', ], 'CancelExportTaskRequest' => [ 'type' => 'structure', 'required' => [ 'taskId', ], 'members' => [ 'taskId' => [ 'shape' => 'ExportTaskId', ], ], ], 'CreateExportTaskRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', 'from', 'to', 'destination', ], 'members' => [ 'taskName' => [ 'shape' => 'ExportTaskName', ], 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'logStreamNamePrefix' => [ 'shape' => 'LogStreamName', ], 'from' => [ 'shape' => 'Timestamp', ], 'to' => [ 'shape' => 'Timestamp', ], 'destination' => [ 'shape' => 'ExportDestinationBucket', ], 'destinationPrefix' => [ 'shape' => 'ExportDestinationPrefix', ], ], ], 'CreateExportTaskResponse' => [ 'type' => 'structure', 'members' => [ 'taskId' => [ 'shape' => 'ExportTaskId', ], ], ], 'CreateLogGroupRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], ], ], 'CreateLogStreamRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', 'logStreamName', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'logStreamName' => [ 'shape' => 'LogStreamName', ], ], ], 'DataAlreadyAcceptedException' => [ 'type' => 'structure', 'members' => [ 'expectedSequenceToken' => [ 'shape' => 'SequenceToken', ], ], 'exception' => true, ], 'Days' => [ 'type' => 'integer', ], 'DeleteDestinationRequest' => [ 'type' => 'structure', 'required' => [ 'destinationName', ], 'members' => [ 'destinationName' => [ 'shape' => 'DestinationName', ], ], ], 'DeleteLogGroupRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], ], ], 'DeleteLogStreamRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', 'logStreamName', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'logStreamName' => [ 'shape' => 'LogStreamName', ], ], ], 'DeleteMetricFilterRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', 'filterName', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'filterName' => [ 'shape' => 'FilterName', ], ], ], 'DeleteRetentionPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], ], ], 'DeleteSubscriptionFilterRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', 'filterName', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'filterName' => [ 'shape' => 'FilterName', ], ], ], 'Descending' => [ 'type' => 'boolean', ], 'DescribeDestinationsRequest' => [ 'type' => 'structure', 'members' => [ 'DestinationNamePrefix' => [ 'shape' => 'DestinationName', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'limit' => [ 'shape' => 'DescribeLimit', ], ], ], 'DescribeDestinationsResponse' => [ 'type' => 'structure', 'members' => [ 'destinations' => [ 'shape' => 'Destinations', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeExportTasksRequest' => [ 'type' => 'structure', 'members' => [ 'taskId' => [ 'shape' => 'ExportTaskId', ], 'statusCode' => [ 'shape' => 'ExportTaskStatusCode', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'limit' => [ 'shape' => 'DescribeLimit', ], ], ], 'DescribeExportTasksResponse' => [ 'type' => 'structure', 'members' => [ 'exportTasks' => [ 'shape' => 'ExportTasks', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeLimit' => [ 'type' => 'integer', 'max' => 50, 'min' => 1, ], 'DescribeLogGroupsRequest' => [ 'type' => 'structure', 'members' => [ 'logGroupNamePrefix' => [ 'shape' => 'LogGroupName', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'limit' => [ 'shape' => 'DescribeLimit', ], ], ], 'DescribeLogGroupsResponse' => [ 'type' => 'structure', 'members' => [ 'logGroups' => [ 'shape' => 'LogGroups', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeLogStreamsRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'logStreamNamePrefix' => [ 'shape' => 'LogStreamName', ], 'orderBy' => [ 'shape' => 'OrderBy', ], 'descending' => [ 'shape' => 'Descending', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'limit' => [ 'shape' => 'DescribeLimit', ], ], ], 'DescribeLogStreamsResponse' => [ 'type' => 'structure', 'members' => [ 'logStreams' => [ 'shape' => 'LogStreams', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeMetricFiltersRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'filterNamePrefix' => [ 'shape' => 'FilterName', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'limit' => [ 'shape' => 'DescribeLimit', ], ], ], 'DescribeMetricFiltersResponse' => [ 'type' => 'structure', 'members' => [ 'metricFilters' => [ 'shape' => 'MetricFilters', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeSubscriptionFiltersRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'filterNamePrefix' => [ 'shape' => 'FilterName', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'limit' => [ 'shape' => 'DescribeLimit', ], ], ], 'DescribeSubscriptionFiltersResponse' => [ 'type' => 'structure', 'members' => [ 'subscriptionFilters' => [ 'shape' => 'SubscriptionFilters', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'Destination' => [ 'type' => 'structure', 'members' => [ 'destinationName' => [ 'shape' => 'DestinationName', ], 'targetArn' => [ 'shape' => 'TargetArn', ], 'roleArn' => [ 'shape' => 'RoleArn', ], 'accessPolicy' => [ 'shape' => 'AccessPolicy', ], 'arn' => [ 'shape' => 'Arn', ], 'creationTime' => [ 'shape' => 'Timestamp', ], ], ], 'DestinationArn' => [ 'type' => 'string', 'min' => 1, ], 'DestinationName' => [ 'type' => 'string', 'max' => 512, 'min' => 1, 'pattern' => '[^:*]*', ], 'Destinations' => [ 'type' => 'list', 'member' => [ 'shape' => 'Destination', ], ], 'EventId' => [ 'type' => 'string', ], 'EventMessage' => [ 'type' => 'string', 'min' => 1, ], 'EventNumber' => [ 'type' => 'long', ], 'EventsLimit' => [ 'type' => 'integer', 'max' => 10000, 'min' => 1, ], 'ExportDestinationBucket' => [ 'type' => 'string', 'max' => 512, 'min' => 1, ], 'ExportDestinationPrefix' => [ 'type' => 'string', ], 'ExportTask' => [ 'type' => 'structure', 'members' => [ 'taskId' => [ 'shape' => 'ExportTaskId', ], 'taskName' => [ 'shape' => 'ExportTaskName', ], 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'from' => [ 'shape' => 'Timestamp', ], 'to' => [ 'shape' => 'Timestamp', ], 'destination' => [ 'shape' => 'ExportDestinationBucket', ], 'destinationPrefix' => [ 'shape' => 'ExportDestinationPrefix', ], 'status' => [ 'shape' => 'ExportTaskStatus', ], 'executionInfo' => [ 'shape' => 'ExportTaskExecutionInfo', ], ], ], 'ExportTaskExecutionInfo' => [ 'type' => 'structure', 'members' => [ 'creationTime' => [ 'shape' => 'Timestamp', ], 'completionTime' => [ 'shape' => 'Timestamp', ], ], ], 'ExportTaskId' => [ 'type' => 'string', 'max' => 512, 'min' => 1, ], 'ExportTaskName' => [ 'type' => 'string', 'max' => 512, 'min' => 1, ], 'ExportTaskStatus' => [ 'type' => 'structure', 'members' => [ 'code' => [ 'shape' => 'ExportTaskStatusCode', ], 'message' => [ 'shape' => 'ExportTaskStatusMessage', ], ], ], 'ExportTaskStatusCode' => [ 'type' => 'string', 'enum' => [ 'CANCELLED', 'COMPLETED', 'FAILED', 'PENDING', 'PENDING_CANCEL', 'RUNNING', ], ], 'ExportTaskStatusMessage' => [ 'type' => 'string', ], 'ExportTasks' => [ 'type' => 'list', 'member' => [ 'shape' => 'ExportTask', ], ], 'ExtractedValues' => [ 'type' => 'map', 'key' => [ 'shape' => 'Token', ], 'value' => [ 'shape' => 'Value', ], ], 'FilterCount' => [ 'type' => 'integer', ], 'FilterLogEventsRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'logStreamNames' => [ 'shape' => 'InputLogStreamNames', ], 'startTime' => [ 'shape' => 'Timestamp', ], 'endTime' => [ 'shape' => 'Timestamp', ], 'filterPattern' => [ 'shape' => 'FilterPattern', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'limit' => [ 'shape' => 'EventsLimit', ], 'interleaved' => [ 'shape' => 'Interleaved', ], ], ], 'FilterLogEventsResponse' => [ 'type' => 'structure', 'members' => [ 'events' => [ 'shape' => 'FilteredLogEvents', ], 'searchedLogStreams' => [ 'shape' => 'SearchedLogStreams', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'FilterName' => [ 'type' => 'string', 'max' => 512, 'min' => 1, 'pattern' => '[^:*]*', ], 'FilterPattern' => [ 'type' => 'string', 'max' => 1024, 'min' => 0, ], 'FilteredLogEvent' => [ 'type' => 'structure', 'members' => [ 'logStreamName' => [ 'shape' => 'LogStreamName', ], 'timestamp' => [ 'shape' => 'Timestamp', ], 'message' => [ 'shape' => 'EventMessage', ], 'ingestionTime' => [ 'shape' => 'Timestamp', ], 'eventId' => [ 'shape' => 'EventId', ], ], ], 'FilteredLogEvents' => [ 'type' => 'list', 'member' => [ 'shape' => 'FilteredLogEvent', ], ], 'GetLogEventsRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', 'logStreamName', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'logStreamName' => [ 'shape' => 'LogStreamName', ], 'startTime' => [ 'shape' => 'Timestamp', ], 'endTime' => [ 'shape' => 'Timestamp', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'limit' => [ 'shape' => 'EventsLimit', ], 'startFromHead' => [ 'shape' => 'StartFromHead', ], ], ], 'GetLogEventsResponse' => [ 'type' => 'structure', 'members' => [ 'events' => [ 'shape' => 'OutputLogEvents', ], 'nextForwardToken' => [ 'shape' => 'NextToken', ], 'nextBackwardToken' => [ 'shape' => 'NextToken', ], ], ], 'InputLogEvent' => [ 'type' => 'structure', 'required' => [ 'timestamp', 'message', ], 'members' => [ 'timestamp' => [ 'shape' => 'Timestamp', ], 'message' => [ 'shape' => 'EventMessage', ], ], ], 'InputLogEvents' => [ 'type' => 'list', 'member' => [ 'shape' => 'InputLogEvent', ], 'max' => 10000, 'min' => 1, ], 'InputLogStreamNames' => [ 'type' => 'list', 'member' => [ 'shape' => 'LogStreamName', ], 'max' => 100, 'min' => 1, ], 'Interleaved' => [ 'type' => 'boolean', ], 'InvalidOperationException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidParameterException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidSequenceTokenException' => [ 'type' => 'structure', 'members' => [ 'expectedSequenceToken' => [ 'shape' => 'SequenceToken', ], ], 'exception' => true, ], 'LimitExceededException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'LogEventIndex' => [ 'type' => 'integer', ], 'LogGroup' => [ 'type' => 'structure', 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'creationTime' => [ 'shape' => 'Timestamp', ], 'retentionInDays' => [ 'shape' => 'Days', ], 'metricFilterCount' => [ 'shape' => 'FilterCount', ], 'arn' => [ 'shape' => 'Arn', ], 'storedBytes' => [ 'shape' => 'StoredBytes', ], ], ], 'LogGroupName' => [ 'type' => 'string', 'max' => 512, 'min' => 1, 'pattern' => '[\\.\\-_/#A-Za-z0-9]+', ], 'LogGroups' => [ 'type' => 'list', 'member' => [ 'shape' => 'LogGroup', ], ], 'LogStream' => [ 'type' => 'structure', 'members' => [ 'logStreamName' => [ 'shape' => 'LogStreamName', ], 'creationTime' => [ 'shape' => 'Timestamp', ], 'firstEventTimestamp' => [ 'shape' => 'Timestamp', ], 'lastEventTimestamp' => [ 'shape' => 'Timestamp', ], 'lastIngestionTime' => [ 'shape' => 'Timestamp', ], 'uploadSequenceToken' => [ 'shape' => 'SequenceToken', ], 'arn' => [ 'shape' => 'Arn', ], 'storedBytes' => [ 'shape' => 'StoredBytes', ], ], ], 'LogStreamName' => [ 'type' => 'string', 'max' => 512, 'min' => 1, 'pattern' => '[^:*]*', ], 'LogStreamSearchedCompletely' => [ 'type' => 'boolean', ], 'LogStreams' => [ 'type' => 'list', 'member' => [ 'shape' => 'LogStream', ], ], 'MetricFilter' => [ 'type' => 'structure', 'members' => [ 'filterName' => [ 'shape' => 'FilterName', ], 'filterPattern' => [ 'shape' => 'FilterPattern', ], 'metricTransformations' => [ 'shape' => 'MetricTransformations', ], 'creationTime' => [ 'shape' => 'Timestamp', ], ], ], 'MetricFilterMatchRecord' => [ 'type' => 'structure', 'members' => [ 'eventNumber' => [ 'shape' => 'EventNumber', ], 'eventMessage' => [ 'shape' => 'EventMessage', ], 'extractedValues' => [ 'shape' => 'ExtractedValues', ], ], ], 'MetricFilterMatches' => [ 'type' => 'list', 'member' => [ 'shape' => 'MetricFilterMatchRecord', ], ], 'MetricFilters' => [ 'type' => 'list', 'member' => [ 'shape' => 'MetricFilter', ], ], 'MetricName' => [ 'type' => 'string', 'max' => 255, 'pattern' => '[^:*$]*', ], 'MetricNamespace' => [ 'type' => 'string', 'max' => 255, 'pattern' => '[^:*$]*', ], 'MetricTransformation' => [ 'type' => 'structure', 'required' => [ 'metricName', 'metricNamespace', 'metricValue', ], 'members' => [ 'metricName' => [ 'shape' => 'MetricName', ], 'metricNamespace' => [ 'shape' => 'MetricNamespace', ], 'metricValue' => [ 'shape' => 'MetricValue', ], ], ], 'MetricTransformations' => [ 'type' => 'list', 'member' => [ 'shape' => 'MetricTransformation', ], 'max' => 1, 'min' => 1, ], 'MetricValue' => [ 'type' => 'string', 'max' => 100, ], 'NextToken' => [ 'type' => 'string', 'min' => 1, ], 'OperationAbortedException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'OrderBy' => [ 'type' => 'string', 'enum' => [ 'LogStreamName', 'LastEventTime', ], ], 'OutputLogEvent' => [ 'type' => 'structure', 'members' => [ 'timestamp' => [ 'shape' => 'Timestamp', ], 'message' => [ 'shape' => 'EventMessage', ], 'ingestionTime' => [ 'shape' => 'Timestamp', ], ], ], 'OutputLogEvents' => [ 'type' => 'list', 'member' => [ 'shape' => 'OutputLogEvent', ], ], 'PutDestinationPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'destinationName', 'accessPolicy', ], 'members' => [ 'destinationName' => [ 'shape' => 'DestinationName', ], 'accessPolicy' => [ 'shape' => 'AccessPolicy', ], ], ], 'PutDestinationRequest' => [ 'type' => 'structure', 'required' => [ 'destinationName', 'targetArn', 'roleArn', ], 'members' => [ 'destinationName' => [ 'shape' => 'DestinationName', ], 'targetArn' => [ 'shape' => 'TargetArn', ], 'roleArn' => [ 'shape' => 'RoleArn', ], ], ], 'PutDestinationResponse' => [ 'type' => 'structure', 'members' => [ 'destination' => [ 'shape' => 'Destination', ], ], ], 'PutLogEventsRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', 'logStreamName', 'logEvents', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'logStreamName' => [ 'shape' => 'LogStreamName', ], 'logEvents' => [ 'shape' => 'InputLogEvents', ], 'sequenceToken' => [ 'shape' => 'SequenceToken', ], ], ], 'PutLogEventsResponse' => [ 'type' => 'structure', 'members' => [ 'nextSequenceToken' => [ 'shape' => 'SequenceToken', ], 'rejectedLogEventsInfo' => [ 'shape' => 'RejectedLogEventsInfo', ], ], ], 'PutMetricFilterRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', 'filterName', 'filterPattern', 'metricTransformations', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'filterName' => [ 'shape' => 'FilterName', ], 'filterPattern' => [ 'shape' => 'FilterPattern', ], 'metricTransformations' => [ 'shape' => 'MetricTransformations', ], ], ], 'PutRetentionPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', 'retentionInDays', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'retentionInDays' => [ 'shape' => 'Days', ], ], ], 'PutSubscriptionFilterRequest' => [ 'type' => 'structure', 'required' => [ 'logGroupName', 'filterName', 'filterPattern', 'destinationArn', ], 'members' => [ 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'filterName' => [ 'shape' => 'FilterName', ], 'filterPattern' => [ 'shape' => 'FilterPattern', ], 'destinationArn' => [ 'shape' => 'DestinationArn', ], 'roleArn' => [ 'shape' => 'RoleArn', ], ], ], 'RejectedLogEventsInfo' => [ 'type' => 'structure', 'members' => [ 'tooNewLogEventStartIndex' => [ 'shape' => 'LogEventIndex', ], 'tooOldLogEventEndIndex' => [ 'shape' => 'LogEventIndex', ], 'expiredLogEventEndIndex' => [ 'shape' => 'LogEventIndex', ], ], ], 'ResourceAlreadyExistsException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'ResourceNotFoundException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'RoleArn' => [ 'type' => 'string', 'min' => 1, ], 'SearchedLogStream' => [ 'type' => 'structure', 'members' => [ 'logStreamName' => [ 'shape' => 'LogStreamName', ], 'searchedCompletely' => [ 'shape' => 'LogStreamSearchedCompletely', ], ], ], 'SearchedLogStreams' => [ 'type' => 'list', 'member' => [ 'shape' => 'SearchedLogStream', ], ], 'SequenceToken' => [ 'type' => 'string', 'min' => 1, ], 'ServiceUnavailableException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, 'fault' => true, ], 'StartFromHead' => [ 'type' => 'boolean', ], 'StoredBytes' => [ 'type' => 'long', 'min' => 0, ], 'SubscriptionFilter' => [ 'type' => 'structure', 'members' => [ 'filterName' => [ 'shape' => 'FilterName', ], 'logGroupName' => [ 'shape' => 'LogGroupName', ], 'filterPattern' => [ 'shape' => 'FilterPattern', ], 'destinationArn' => [ 'shape' => 'DestinationArn', ], 'roleArn' => [ 'shape' => 'RoleArn', ], 'creationTime' => [ 'shape' => 'Timestamp', ], ], ], 'SubscriptionFilters' => [ 'type' => 'list', 'member' => [ 'shape' => 'SubscriptionFilter', ], ], 'TargetArn' => [ 'type' => 'string', 'min' => 1, ], 'TestEventMessages' => [ 'type' => 'list', 'member' => [ 'shape' => 'EventMessage', ], 'max' => 50, 'min' => 1, ], 'TestMetricFilterRequest' => [ 'type' => 'structure', 'required' => [ 'filterPattern', 'logEventMessages', ], 'members' => [ 'filterPattern' => [ 'shape' => 'FilterPattern', ], 'logEventMessages' => [ 'shape' => 'TestEventMessages', ], ], ], 'TestMetricFilterResponse' => [ 'type' => 'structure', 'members' => [ 'matches' => [ 'shape' => 'MetricFilterMatches', ], ], ], 'Timestamp' => [ 'type' => 'long', 'min' => 0, ], 'Token' => [ 'type' => 'string', ], 'Value' => [ 'type' => 'string', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/opsworks/2013-02-18/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2013-02-18', 'endpointPrefix' => 'opsworks', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceFullName' => 'AWS OpsWorks', 'signatureVersion' => 'v4', 'targetPrefix' => 'OpsWorks_20130218', ], 'operations' => [ 'AssignInstance' => [ 'name' => 'AssignInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AssignInstanceRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'AssignVolume' => [ 'name' => 'AssignVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AssignVolumeRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'AssociateElasticIp' => [ 'name' => 'AssociateElasticIp', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AssociateElasticIpRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'AttachElasticLoadBalancer' => [ 'name' => 'AttachElasticLoadBalancer', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AttachElasticLoadBalancerRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'CloneStack' => [ 'name' => 'CloneStack', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CloneStackRequest', ], 'output' => [ 'shape' => 'CloneStackResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'CreateApp' => [ 'name' => 'CreateApp', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateAppRequest', ], 'output' => [ 'shape' => 'CreateAppResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'CreateDeployment' => [ 'name' => 'CreateDeployment', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateDeploymentRequest', ], 'output' => [ 'shape' => 'CreateDeploymentResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'CreateInstance' => [ 'name' => 'CreateInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateInstanceRequest', ], 'output' => [ 'shape' => 'CreateInstanceResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'CreateLayer' => [ 'name' => 'CreateLayer', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateLayerRequest', ], 'output' => [ 'shape' => 'CreateLayerResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'CreateStack' => [ 'name' => 'CreateStack', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateStackRequest', ], 'output' => [ 'shape' => 'CreateStackResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], ], ], 'CreateUserProfile' => [ 'name' => 'CreateUserProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateUserProfileRequest', ], 'output' => [ 'shape' => 'CreateUserProfileResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], ], ], 'DeleteApp' => [ 'name' => 'DeleteApp', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteAppRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DeleteInstance' => [ 'name' => 'DeleteInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteInstanceRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DeleteLayer' => [ 'name' => 'DeleteLayer', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteLayerRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DeleteStack' => [ 'name' => 'DeleteStack', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteStackRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DeleteUserProfile' => [ 'name' => 'DeleteUserProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteUserProfileRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DeregisterEcsCluster' => [ 'name' => 'DeregisterEcsCluster', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeregisterEcsClusterRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DeregisterElasticIp' => [ 'name' => 'DeregisterElasticIp', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeregisterElasticIpRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DeregisterInstance' => [ 'name' => 'DeregisterInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeregisterInstanceRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DeregisterRdsDbInstance' => [ 'name' => 'DeregisterRdsDbInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeregisterRdsDbInstanceRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DeregisterVolume' => [ 'name' => 'DeregisterVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeregisterVolumeRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeAgentVersions' => [ 'name' => 'DescribeAgentVersions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeAgentVersionsRequest', ], 'output' => [ 'shape' => 'DescribeAgentVersionsResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeApps' => [ 'name' => 'DescribeApps', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeAppsRequest', ], 'output' => [ 'shape' => 'DescribeAppsResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeCommands' => [ 'name' => 'DescribeCommands', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeCommandsRequest', ], 'output' => [ 'shape' => 'DescribeCommandsResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeDeployments' => [ 'name' => 'DescribeDeployments', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeDeploymentsRequest', ], 'output' => [ 'shape' => 'DescribeDeploymentsResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeEcsClusters' => [ 'name' => 'DescribeEcsClusters', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeEcsClustersRequest', ], 'output' => [ 'shape' => 'DescribeEcsClustersResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeElasticIps' => [ 'name' => 'DescribeElasticIps', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeElasticIpsRequest', ], 'output' => [ 'shape' => 'DescribeElasticIpsResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeElasticLoadBalancers' => [ 'name' => 'DescribeElasticLoadBalancers', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeElasticLoadBalancersRequest', ], 'output' => [ 'shape' => 'DescribeElasticLoadBalancersResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeInstances' => [ 'name' => 'DescribeInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeInstancesRequest', ], 'output' => [ 'shape' => 'DescribeInstancesResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeLayers' => [ 'name' => 'DescribeLayers', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeLayersRequest', ], 'output' => [ 'shape' => 'DescribeLayersResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeLoadBasedAutoScaling' => [ 'name' => 'DescribeLoadBasedAutoScaling', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeLoadBasedAutoScalingRequest', ], 'output' => [ 'shape' => 'DescribeLoadBasedAutoScalingResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeMyUserProfile' => [ 'name' => 'DescribeMyUserProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'output' => [ 'shape' => 'DescribeMyUserProfileResult', ], ], 'DescribePermissions' => [ 'name' => 'DescribePermissions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribePermissionsRequest', ], 'output' => [ 'shape' => 'DescribePermissionsResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeRaidArrays' => [ 'name' => 'DescribeRaidArrays', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeRaidArraysRequest', ], 'output' => [ 'shape' => 'DescribeRaidArraysResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeRdsDbInstances' => [ 'name' => 'DescribeRdsDbInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeRdsDbInstancesRequest', ], 'output' => [ 'shape' => 'DescribeRdsDbInstancesResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeServiceErrors' => [ 'name' => 'DescribeServiceErrors', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeServiceErrorsRequest', ], 'output' => [ 'shape' => 'DescribeServiceErrorsResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeStackProvisioningParameters' => [ 'name' => 'DescribeStackProvisioningParameters', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeStackProvisioningParametersRequest', ], 'output' => [ 'shape' => 'DescribeStackProvisioningParametersResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeStackSummary' => [ 'name' => 'DescribeStackSummary', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeStackSummaryRequest', ], 'output' => [ 'shape' => 'DescribeStackSummaryResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeStacks' => [ 'name' => 'DescribeStacks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeStacksRequest', ], 'output' => [ 'shape' => 'DescribeStacksResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeTimeBasedAutoScaling' => [ 'name' => 'DescribeTimeBasedAutoScaling', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeTimeBasedAutoScalingRequest', ], 'output' => [ 'shape' => 'DescribeTimeBasedAutoScalingResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeUserProfiles' => [ 'name' => 'DescribeUserProfiles', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeUserProfilesRequest', ], 'output' => [ 'shape' => 'DescribeUserProfilesResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DescribeVolumes' => [ 'name' => 'DescribeVolumes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVolumesRequest', ], 'output' => [ 'shape' => 'DescribeVolumesResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DetachElasticLoadBalancer' => [ 'name' => 'DetachElasticLoadBalancer', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DetachElasticLoadBalancerRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', ], ], ], 'DisassociateElasticIp' => [ 'name' => 'DisassociateElasticIp', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DisassociateElasticIpRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'GetHostnameSuggestion' => [ 'name' => 'GetHostnameSuggestion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetHostnameSuggestionRequest', ], 'output' => [ 'shape' => 'GetHostnameSuggestionResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'GrantAccess' => [ 'name' => 'GrantAccess', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GrantAccessRequest', ], 'output' => [ 'shape' => 'GrantAccessResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'RebootInstance' => [ 'name' => 'RebootInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RebootInstanceRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'RegisterEcsCluster' => [ 'name' => 'RegisterEcsCluster', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RegisterEcsClusterRequest', ], 'output' => [ 'shape' => 'RegisterEcsClusterResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'RegisterElasticIp' => [ 'name' => 'RegisterElasticIp', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RegisterElasticIpRequest', ], 'output' => [ 'shape' => 'RegisterElasticIpResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'RegisterInstance' => [ 'name' => 'RegisterInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RegisterInstanceRequest', ], 'output' => [ 'shape' => 'RegisterInstanceResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'RegisterRdsDbInstance' => [ 'name' => 'RegisterRdsDbInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RegisterRdsDbInstanceRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'RegisterVolume' => [ 'name' => 'RegisterVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RegisterVolumeRequest', ], 'output' => [ 'shape' => 'RegisterVolumeResult', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'SetLoadBasedAutoScaling' => [ 'name' => 'SetLoadBasedAutoScaling', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetLoadBasedAutoScalingRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'SetPermission' => [ 'name' => 'SetPermission', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetPermissionRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'SetTimeBasedAutoScaling' => [ 'name' => 'SetTimeBasedAutoScaling', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetTimeBasedAutoScalingRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'StartInstance' => [ 'name' => 'StartInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StartInstanceRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'StartStack' => [ 'name' => 'StartStack', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StartStackRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'StopInstance' => [ 'name' => 'StopInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StopInstanceRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'StopStack' => [ 'name' => 'StopStack', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StopStackRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'UnassignInstance' => [ 'name' => 'UnassignInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UnassignInstanceRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'UnassignVolume' => [ 'name' => 'UnassignVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UnassignVolumeRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'UpdateApp' => [ 'name' => 'UpdateApp', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateAppRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'UpdateElasticIp' => [ 'name' => 'UpdateElasticIp', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateElasticIpRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'UpdateInstance' => [ 'name' => 'UpdateInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateInstanceRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'UpdateLayer' => [ 'name' => 'UpdateLayer', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateLayerRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'UpdateMyUserProfile' => [ 'name' => 'UpdateMyUserProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateMyUserProfileRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], ], ], 'UpdateRdsDbInstance' => [ 'name' => 'UpdateRdsDbInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateRdsDbInstanceRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'UpdateStack' => [ 'name' => 'UpdateStack', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateStackRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'UpdateUserProfile' => [ 'name' => 'UpdateUserProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateUserProfileRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], 'UpdateVolume' => [ 'name' => 'UpdateVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateVolumeRequest', ], 'errors' => [ [ 'shape' => 'ValidationException', ], [ 'shape' => 'ResourceNotFoundException', ], ], ], ], 'shapes' => [ 'AgentVersion' => [ 'type' => 'structure', 'members' => [ 'Version' => [ 'shape' => 'String', ], 'ConfigurationManager' => [ 'shape' => 'StackConfigurationManager', ], ], ], 'AgentVersions' => [ 'type' => 'list', 'member' => [ 'shape' => 'AgentVersion', ], ], 'App' => [ 'type' => 'structure', 'members' => [ 'AppId' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], 'Shortname' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'Description' => [ 'shape' => 'String', ], 'DataSources' => [ 'shape' => 'DataSources', ], 'Type' => [ 'shape' => 'AppType', ], 'AppSource' => [ 'shape' => 'Source', ], 'Domains' => [ 'shape' => 'Strings', ], 'EnableSsl' => [ 'shape' => 'Boolean', ], 'SslConfiguration' => [ 'shape' => 'SslConfiguration', ], 'Attributes' => [ 'shape' => 'AppAttributes', ], 'CreatedAt' => [ 'shape' => 'String', ], 'Environment' => [ 'shape' => 'EnvironmentVariables', ], ], ], 'AppAttributes' => [ 'type' => 'map', 'key' => [ 'shape' => 'AppAttributesKeys', ], 'value' => [ 'shape' => 'String', ], ], 'AppAttributesKeys' => [ 'type' => 'string', 'enum' => [ 'DocumentRoot', 'RailsEnv', 'AutoBundleOnDeploy', 'AwsFlowRubySettings', ], ], 'AppType' => [ 'type' => 'string', 'enum' => [ 'aws-flow-ruby', 'java', 'rails', 'php', 'nodejs', 'static', 'other', ], ], 'Apps' => [ 'type' => 'list', 'member' => [ 'shape' => 'App', ], ], 'Architecture' => [ 'type' => 'string', 'enum' => [ 'x86_64', 'i386', ], ], 'AssignInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', 'LayerIds', ], 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], 'LayerIds' => [ 'shape' => 'Strings', ], ], ], 'AssignVolumeRequest' => [ 'type' => 'structure', 'required' => [ 'VolumeId', ], 'members' => [ 'VolumeId' => [ 'shape' => 'String', ], 'InstanceId' => [ 'shape' => 'String', ], ], ], 'AssociateElasticIpRequest' => [ 'type' => 'structure', 'required' => [ 'ElasticIp', ], 'members' => [ 'ElasticIp' => [ 'shape' => 'String', ], 'InstanceId' => [ 'shape' => 'String', ], ], ], 'AttachElasticLoadBalancerRequest' => [ 'type' => 'structure', 'required' => [ 'ElasticLoadBalancerName', 'LayerId', ], 'members' => [ 'ElasticLoadBalancerName' => [ 'shape' => 'String', ], 'LayerId' => [ 'shape' => 'String', ], ], ], 'AutoScalingThresholds' => [ 'type' => 'structure', 'members' => [ 'InstanceCount' => [ 'shape' => 'Integer', ], 'ThresholdsWaitTime' => [ 'shape' => 'Minute', ], 'IgnoreMetricsTime' => [ 'shape' => 'Minute', ], 'CpuThreshold' => [ 'shape' => 'Double', ], 'MemoryThreshold' => [ 'shape' => 'Double', ], 'LoadThreshold' => [ 'shape' => 'Double', ], 'Alarms' => [ 'shape' => 'Strings', ], ], ], 'AutoScalingType' => [ 'type' => 'string', 'enum' => [ 'load', 'timer', ], ], 'BlockDeviceMapping' => [ 'type' => 'structure', 'members' => [ 'DeviceName' => [ 'shape' => 'String', ], 'NoDevice' => [ 'shape' => 'String', ], 'VirtualName' => [ 'shape' => 'String', ], 'Ebs' => [ 'shape' => 'EbsBlockDevice', ], ], ], 'BlockDeviceMappings' => [ 'type' => 'list', 'member' => [ 'shape' => 'BlockDeviceMapping', ], ], 'Boolean' => [ 'type' => 'boolean', 'box' => true, ], 'ChefConfiguration' => [ 'type' => 'structure', 'members' => [ 'ManageBerkshelf' => [ 'shape' => 'Boolean', ], 'BerkshelfVersion' => [ 'shape' => 'String', ], ], ], 'CloneStackRequest' => [ 'type' => 'structure', 'required' => [ 'SourceStackId', 'ServiceRoleArn', ], 'members' => [ 'SourceStackId' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'Region' => [ 'shape' => 'String', ], 'VpcId' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'StackAttributes', ], 'ServiceRoleArn' => [ 'shape' => 'String', ], 'DefaultInstanceProfileArn' => [ 'shape' => 'String', ], 'DefaultOs' => [ 'shape' => 'String', ], 'HostnameTheme' => [ 'shape' => 'String', ], 'DefaultAvailabilityZone' => [ 'shape' => 'String', ], 'DefaultSubnetId' => [ 'shape' => 'String', ], 'CustomJson' => [ 'shape' => 'String', ], 'ConfigurationManager' => [ 'shape' => 'StackConfigurationManager', ], 'ChefConfiguration' => [ 'shape' => 'ChefConfiguration', ], 'UseCustomCookbooks' => [ 'shape' => 'Boolean', ], 'UseOpsworksSecurityGroups' => [ 'shape' => 'Boolean', ], 'CustomCookbooksSource' => [ 'shape' => 'Source', ], 'DefaultSshKeyName' => [ 'shape' => 'String', ], 'ClonePermissions' => [ 'shape' => 'Boolean', ], 'CloneAppIds' => [ 'shape' => 'Strings', ], 'DefaultRootDeviceType' => [ 'shape' => 'RootDeviceType', ], 'AgentVersion' => [ 'shape' => 'String', ], ], ], 'CloneStackResult' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], ], ], 'Command' => [ 'type' => 'structure', 'members' => [ 'CommandId' => [ 'shape' => 'String', ], 'InstanceId' => [ 'shape' => 'String', ], 'DeploymentId' => [ 'shape' => 'String', ], 'CreatedAt' => [ 'shape' => 'DateTime', ], 'AcknowledgedAt' => [ 'shape' => 'DateTime', ], 'CompletedAt' => [ 'shape' => 'DateTime', ], 'Status' => [ 'shape' => 'String', ], 'ExitCode' => [ 'shape' => 'Integer', ], 'LogUrl' => [ 'shape' => 'String', ], 'Type' => [ 'shape' => 'String', ], ], ], 'Commands' => [ 'type' => 'list', 'member' => [ 'shape' => 'Command', ], ], 'CreateAppRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', 'Name', 'Type', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'Shortname' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'Description' => [ 'shape' => 'String', ], 'DataSources' => [ 'shape' => 'DataSources', ], 'Type' => [ 'shape' => 'AppType', ], 'AppSource' => [ 'shape' => 'Source', ], 'Domains' => [ 'shape' => 'Strings', ], 'EnableSsl' => [ 'shape' => 'Boolean', ], 'SslConfiguration' => [ 'shape' => 'SslConfiguration', ], 'Attributes' => [ 'shape' => 'AppAttributes', ], 'Environment' => [ 'shape' => 'EnvironmentVariables', ], ], ], 'CreateAppResult' => [ 'type' => 'structure', 'members' => [ 'AppId' => [ 'shape' => 'String', ], ], ], 'CreateDeploymentRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', 'Command', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'AppId' => [ 'shape' => 'String', ], 'InstanceIds' => [ 'shape' => 'Strings', ], 'LayerIds' => [ 'shape' => 'Strings', ], 'Command' => [ 'shape' => 'DeploymentCommand', ], 'Comment' => [ 'shape' => 'String', ], 'CustomJson' => [ 'shape' => 'String', ], ], ], 'CreateDeploymentResult' => [ 'type' => 'structure', 'members' => [ 'DeploymentId' => [ 'shape' => 'String', ], ], ], 'CreateInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', 'LayerIds', 'InstanceType', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'LayerIds' => [ 'shape' => 'Strings', ], 'InstanceType' => [ 'shape' => 'String', ], 'AutoScalingType' => [ 'shape' => 'AutoScalingType', ], 'Hostname' => [ 'shape' => 'String', ], 'Os' => [ 'shape' => 'String', ], 'AmiId' => [ 'shape' => 'String', ], 'SshKeyName' => [ 'shape' => 'String', ], 'AvailabilityZone' => [ 'shape' => 'String', ], 'VirtualizationType' => [ 'shape' => 'String', ], 'SubnetId' => [ 'shape' => 'String', ], 'Architecture' => [ 'shape' => 'Architecture', ], 'RootDeviceType' => [ 'shape' => 'RootDeviceType', ], 'BlockDeviceMappings' => [ 'shape' => 'BlockDeviceMappings', ], 'InstallUpdatesOnBoot' => [ 'shape' => 'Boolean', ], 'EbsOptimized' => [ 'shape' => 'Boolean', ], 'AgentVersion' => [ 'shape' => 'String', ], 'Tenancy' => [ 'shape' => 'String', ], ], ], 'CreateInstanceResult' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], ], ], 'CreateLayerRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', 'Type', 'Name', 'Shortname', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'Type' => [ 'shape' => 'LayerType', ], 'Name' => [ 'shape' => 'String', ], 'Shortname' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'LayerAttributes', ], 'CustomInstanceProfileArn' => [ 'shape' => 'String', ], 'CustomJson' => [ 'shape' => 'String', ], 'CustomSecurityGroupIds' => [ 'shape' => 'Strings', ], 'Packages' => [ 'shape' => 'Strings', ], 'VolumeConfigurations' => [ 'shape' => 'VolumeConfigurations', ], 'EnableAutoHealing' => [ 'shape' => 'Boolean', ], 'AutoAssignElasticIps' => [ 'shape' => 'Boolean', ], 'AutoAssignPublicIps' => [ 'shape' => 'Boolean', ], 'CustomRecipes' => [ 'shape' => 'Recipes', ], 'InstallUpdatesOnBoot' => [ 'shape' => 'Boolean', ], 'UseEbsOptimizedInstances' => [ 'shape' => 'Boolean', ], 'LifecycleEventConfiguration' => [ 'shape' => 'LifecycleEventConfiguration', ], ], ], 'CreateLayerResult' => [ 'type' => 'structure', 'members' => [ 'LayerId' => [ 'shape' => 'String', ], ], ], 'CreateStackRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'Region', 'ServiceRoleArn', 'DefaultInstanceProfileArn', ], 'members' => [ 'Name' => [ 'shape' => 'String', ], 'Region' => [ 'shape' => 'String', ], 'VpcId' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'StackAttributes', ], 'ServiceRoleArn' => [ 'shape' => 'String', ], 'DefaultInstanceProfileArn' => [ 'shape' => 'String', ], 'DefaultOs' => [ 'shape' => 'String', ], 'HostnameTheme' => [ 'shape' => 'String', ], 'DefaultAvailabilityZone' => [ 'shape' => 'String', ], 'DefaultSubnetId' => [ 'shape' => 'String', ], 'CustomJson' => [ 'shape' => 'String', ], 'ConfigurationManager' => [ 'shape' => 'StackConfigurationManager', ], 'ChefConfiguration' => [ 'shape' => 'ChefConfiguration', ], 'UseCustomCookbooks' => [ 'shape' => 'Boolean', ], 'UseOpsworksSecurityGroups' => [ 'shape' => 'Boolean', ], 'CustomCookbooksSource' => [ 'shape' => 'Source', ], 'DefaultSshKeyName' => [ 'shape' => 'String', ], 'DefaultRootDeviceType' => [ 'shape' => 'RootDeviceType', ], 'AgentVersion' => [ 'shape' => 'String', ], ], ], 'CreateStackResult' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], ], ], 'CreateUserProfileRequest' => [ 'type' => 'structure', 'required' => [ 'IamUserArn', ], 'members' => [ 'IamUserArn' => [ 'shape' => 'String', ], 'SshUsername' => [ 'shape' => 'String', ], 'SshPublicKey' => [ 'shape' => 'String', ], 'AllowSelfManagement' => [ 'shape' => 'Boolean', ], ], ], 'CreateUserProfileResult' => [ 'type' => 'structure', 'members' => [ 'IamUserArn' => [ 'shape' => 'String', ], ], ], 'DailyAutoScalingSchedule' => [ 'type' => 'map', 'key' => [ 'shape' => 'Hour', ], 'value' => [ 'shape' => 'Switch', ], ], 'DataSource' => [ 'type' => 'structure', 'members' => [ 'Type' => [ 'shape' => 'String', ], 'Arn' => [ 'shape' => 'String', ], 'DatabaseName' => [ 'shape' => 'String', ], ], ], 'DataSources' => [ 'type' => 'list', 'member' => [ 'shape' => 'DataSource', ], ], 'DateTime' => [ 'type' => 'string', ], 'DeleteAppRequest' => [ 'type' => 'structure', 'required' => [ 'AppId', ], 'members' => [ 'AppId' => [ 'shape' => 'String', ], ], ], 'DeleteInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], 'DeleteElasticIp' => [ 'shape' => 'Boolean', ], 'DeleteVolumes' => [ 'shape' => 'Boolean', ], ], ], 'DeleteLayerRequest' => [ 'type' => 'structure', 'required' => [ 'LayerId', ], 'members' => [ 'LayerId' => [ 'shape' => 'String', ], ], ], 'DeleteStackRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], ], ], 'DeleteUserProfileRequest' => [ 'type' => 'structure', 'required' => [ 'IamUserArn', ], 'members' => [ 'IamUserArn' => [ 'shape' => 'String', ], ], ], 'Deployment' => [ 'type' => 'structure', 'members' => [ 'DeploymentId' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], 'AppId' => [ 'shape' => 'String', ], 'CreatedAt' => [ 'shape' => 'DateTime', ], 'CompletedAt' => [ 'shape' => 'DateTime', ], 'Duration' => [ 'shape' => 'Integer', ], 'IamUserArn' => [ 'shape' => 'String', ], 'Comment' => [ 'shape' => 'String', ], 'Command' => [ 'shape' => 'DeploymentCommand', ], 'Status' => [ 'shape' => 'String', ], 'CustomJson' => [ 'shape' => 'String', ], 'InstanceIds' => [ 'shape' => 'Strings', ], ], ], 'DeploymentCommand' => [ 'type' => 'structure', 'required' => [ 'Name', ], 'members' => [ 'Name' => [ 'shape' => 'DeploymentCommandName', ], 'Args' => [ 'shape' => 'DeploymentCommandArgs', ], ], ], 'DeploymentCommandArgs' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'Strings', ], ], 'DeploymentCommandName' => [ 'type' => 'string', 'enum' => [ 'install_dependencies', 'update_dependencies', 'update_custom_cookbooks', 'execute_recipes', 'configure', 'setup', 'deploy', 'rollback', 'start', 'stop', 'restart', 'undeploy', ], ], 'Deployments' => [ 'type' => 'list', 'member' => [ 'shape' => 'Deployment', ], ], 'DeregisterEcsClusterRequest' => [ 'type' => 'structure', 'required' => [ 'EcsClusterArn', ], 'members' => [ 'EcsClusterArn' => [ 'shape' => 'String', ], ], ], 'DeregisterElasticIpRequest' => [ 'type' => 'structure', 'required' => [ 'ElasticIp', ], 'members' => [ 'ElasticIp' => [ 'shape' => 'String', ], ], ], 'DeregisterInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], ], ], 'DeregisterRdsDbInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'RdsDbInstanceArn', ], 'members' => [ 'RdsDbInstanceArn' => [ 'shape' => 'String', ], ], ], 'DeregisterVolumeRequest' => [ 'type' => 'structure', 'required' => [ 'VolumeId', ], 'members' => [ 'VolumeId' => [ 'shape' => 'String', ], ], ], 'DescribeAgentVersionsRequest' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'ConfigurationManager' => [ 'shape' => 'StackConfigurationManager', ], ], ], 'DescribeAgentVersionsResult' => [ 'type' => 'structure', 'members' => [ 'AgentVersions' => [ 'shape' => 'AgentVersions', ], ], ], 'DescribeAppsRequest' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'AppIds' => [ 'shape' => 'Strings', ], ], ], 'DescribeAppsResult' => [ 'type' => 'structure', 'members' => [ 'Apps' => [ 'shape' => 'Apps', ], ], ], 'DescribeCommandsRequest' => [ 'type' => 'structure', 'members' => [ 'DeploymentId' => [ 'shape' => 'String', ], 'InstanceId' => [ 'shape' => 'String', ], 'CommandIds' => [ 'shape' => 'Strings', ], ], ], 'DescribeCommandsResult' => [ 'type' => 'structure', 'members' => [ 'Commands' => [ 'shape' => 'Commands', ], ], ], 'DescribeDeploymentsRequest' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'AppId' => [ 'shape' => 'String', ], 'DeploymentIds' => [ 'shape' => 'Strings', ], ], ], 'DescribeDeploymentsResult' => [ 'type' => 'structure', 'members' => [ 'Deployments' => [ 'shape' => 'Deployments', ], ], ], 'DescribeEcsClustersRequest' => [ 'type' => 'structure', 'members' => [ 'EcsClusterArns' => [ 'shape' => 'Strings', ], 'StackId' => [ 'shape' => 'String', ], 'NextToken' => [ 'shape' => 'String', ], 'MaxResults' => [ 'shape' => 'Integer', ], ], ], 'DescribeEcsClustersResult' => [ 'type' => 'structure', 'members' => [ 'EcsClusters' => [ 'shape' => 'EcsClusters', ], 'NextToken' => [ 'shape' => 'String', ], ], ], 'DescribeElasticIpsRequest' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], 'Ips' => [ 'shape' => 'Strings', ], ], ], 'DescribeElasticIpsResult' => [ 'type' => 'structure', 'members' => [ 'ElasticIps' => [ 'shape' => 'ElasticIps', ], ], ], 'DescribeElasticLoadBalancersRequest' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'LayerIds' => [ 'shape' => 'Strings', ], ], ], 'DescribeElasticLoadBalancersResult' => [ 'type' => 'structure', 'members' => [ 'ElasticLoadBalancers' => [ 'shape' => 'ElasticLoadBalancers', ], ], ], 'DescribeInstancesRequest' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'LayerId' => [ 'shape' => 'String', ], 'InstanceIds' => [ 'shape' => 'Strings', ], ], ], 'DescribeInstancesResult' => [ 'type' => 'structure', 'members' => [ 'Instances' => [ 'shape' => 'Instances', ], ], ], 'DescribeLayersRequest' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'LayerIds' => [ 'shape' => 'Strings', ], ], ], 'DescribeLayersResult' => [ 'type' => 'structure', 'members' => [ 'Layers' => [ 'shape' => 'Layers', ], ], ], 'DescribeLoadBasedAutoScalingRequest' => [ 'type' => 'structure', 'required' => [ 'LayerIds', ], 'members' => [ 'LayerIds' => [ 'shape' => 'Strings', ], ], ], 'DescribeLoadBasedAutoScalingResult' => [ 'type' => 'structure', 'members' => [ 'LoadBasedAutoScalingConfigurations' => [ 'shape' => 'LoadBasedAutoScalingConfigurations', ], ], ], 'DescribeMyUserProfileResult' => [ 'type' => 'structure', 'members' => [ 'UserProfile' => [ 'shape' => 'SelfUserProfile', ], ], ], 'DescribePermissionsRequest' => [ 'type' => 'structure', 'members' => [ 'IamUserArn' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], ], ], 'DescribePermissionsResult' => [ 'type' => 'structure', 'members' => [ 'Permissions' => [ 'shape' => 'Permissions', ], ], ], 'DescribeRaidArraysRequest' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], 'RaidArrayIds' => [ 'shape' => 'Strings', ], ], ], 'DescribeRaidArraysResult' => [ 'type' => 'structure', 'members' => [ 'RaidArrays' => [ 'shape' => 'RaidArrays', ], ], ], 'DescribeRdsDbInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'RdsDbInstanceArns' => [ 'shape' => 'Strings', ], ], ], 'DescribeRdsDbInstancesResult' => [ 'type' => 'structure', 'members' => [ 'RdsDbInstances' => [ 'shape' => 'RdsDbInstances', ], ], ], 'DescribeServiceErrorsRequest' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'InstanceId' => [ 'shape' => 'String', ], 'ServiceErrorIds' => [ 'shape' => 'Strings', ], ], ], 'DescribeServiceErrorsResult' => [ 'type' => 'structure', 'members' => [ 'ServiceErrors' => [ 'shape' => 'ServiceErrors', ], ], ], 'DescribeStackProvisioningParametersRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], ], ], 'DescribeStackProvisioningParametersResult' => [ 'type' => 'structure', 'members' => [ 'AgentInstallerUrl' => [ 'shape' => 'String', ], 'Parameters' => [ 'shape' => 'Parameters', ], ], ], 'DescribeStackSummaryRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], ], ], 'DescribeStackSummaryResult' => [ 'type' => 'structure', 'members' => [ 'StackSummary' => [ 'shape' => 'StackSummary', ], ], ], 'DescribeStacksRequest' => [ 'type' => 'structure', 'members' => [ 'StackIds' => [ 'shape' => 'Strings', ], ], ], 'DescribeStacksResult' => [ 'type' => 'structure', 'members' => [ 'Stacks' => [ 'shape' => 'Stacks', ], ], ], 'DescribeTimeBasedAutoScalingRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceIds', ], 'members' => [ 'InstanceIds' => [ 'shape' => 'Strings', ], ], ], 'DescribeTimeBasedAutoScalingResult' => [ 'type' => 'structure', 'members' => [ 'TimeBasedAutoScalingConfigurations' => [ 'shape' => 'TimeBasedAutoScalingConfigurations', ], ], ], 'DescribeUserProfilesRequest' => [ 'type' => 'structure', 'members' => [ 'IamUserArns' => [ 'shape' => 'Strings', ], ], ], 'DescribeUserProfilesResult' => [ 'type' => 'structure', 'members' => [ 'UserProfiles' => [ 'shape' => 'UserProfiles', ], ], ], 'DescribeVolumesRequest' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], 'RaidArrayId' => [ 'shape' => 'String', ], 'VolumeIds' => [ 'shape' => 'Strings', ], ], ], 'DescribeVolumesResult' => [ 'type' => 'structure', 'members' => [ 'Volumes' => [ 'shape' => 'Volumes', ], ], ], 'DetachElasticLoadBalancerRequest' => [ 'type' => 'structure', 'required' => [ 'ElasticLoadBalancerName', 'LayerId', ], 'members' => [ 'ElasticLoadBalancerName' => [ 'shape' => 'String', ], 'LayerId' => [ 'shape' => 'String', ], ], ], 'DisassociateElasticIpRequest' => [ 'type' => 'structure', 'required' => [ 'ElasticIp', ], 'members' => [ 'ElasticIp' => [ 'shape' => 'String', ], ], ], 'Double' => [ 'type' => 'double', 'box' => true, ], 'EbsBlockDevice' => [ 'type' => 'structure', 'members' => [ 'SnapshotId' => [ 'shape' => 'String', ], 'Iops' => [ 'shape' => 'Integer', ], 'VolumeSize' => [ 'shape' => 'Integer', ], 'VolumeType' => [ 'shape' => 'VolumeType', ], 'DeleteOnTermination' => [ 'shape' => 'Boolean', ], ], ], 'EcsCluster' => [ 'type' => 'structure', 'members' => [ 'EcsClusterArn' => [ 'shape' => 'String', ], 'EcsClusterName' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], 'RegisteredAt' => [ 'shape' => 'DateTime', ], ], ], 'EcsClusters' => [ 'type' => 'list', 'member' => [ 'shape' => 'EcsCluster', ], ], 'ElasticIp' => [ 'type' => 'structure', 'members' => [ 'Ip' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'Domain' => [ 'shape' => 'String', ], 'Region' => [ 'shape' => 'String', ], 'InstanceId' => [ 'shape' => 'String', ], ], ], 'ElasticIps' => [ 'type' => 'list', 'member' => [ 'shape' => 'ElasticIp', ], ], 'ElasticLoadBalancer' => [ 'type' => 'structure', 'members' => [ 'ElasticLoadBalancerName' => [ 'shape' => 'String', ], 'Region' => [ 'shape' => 'String', ], 'DnsName' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], 'LayerId' => [ 'shape' => 'String', ], 'VpcId' => [ 'shape' => 'String', ], 'AvailabilityZones' => [ 'shape' => 'Strings', ], 'SubnetIds' => [ 'shape' => 'Strings', ], 'Ec2InstanceIds' => [ 'shape' => 'Strings', ], ], ], 'ElasticLoadBalancers' => [ 'type' => 'list', 'member' => [ 'shape' => 'ElasticLoadBalancer', ], ], 'EnvironmentVariable' => [ 'type' => 'structure', 'required' => [ 'Key', 'Value', ], 'members' => [ 'Key' => [ 'shape' => 'String', ], 'Value' => [ 'shape' => 'String', ], 'Secure' => [ 'shape' => 'Boolean', ], ], ], 'EnvironmentVariables' => [ 'type' => 'list', 'member' => [ 'shape' => 'EnvironmentVariable', ], ], 'GetHostnameSuggestionRequest' => [ 'type' => 'structure', 'required' => [ 'LayerId', ], 'members' => [ 'LayerId' => [ 'shape' => 'String', ], ], ], 'GetHostnameSuggestionResult' => [ 'type' => 'structure', 'members' => [ 'LayerId' => [ 'shape' => 'String', ], 'Hostname' => [ 'shape' => 'String', ], ], ], 'GrantAccessRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], 'ValidForInMinutes' => [ 'shape' => 'ValidForInMinutes', ], ], ], 'GrantAccessResult' => [ 'type' => 'structure', 'members' => [ 'TemporaryCredential' => [ 'shape' => 'TemporaryCredential', ], ], ], 'Hour' => [ 'type' => 'string', ], 'Instance' => [ 'type' => 'structure', 'members' => [ 'AgentVersion' => [ 'shape' => 'String', ], 'AmiId' => [ 'shape' => 'String', ], 'Architecture' => [ 'shape' => 'Architecture', ], 'AutoScalingType' => [ 'shape' => 'AutoScalingType', ], 'AvailabilityZone' => [ 'shape' => 'String', ], 'BlockDeviceMappings' => [ 'shape' => 'BlockDeviceMappings', ], 'CreatedAt' => [ 'shape' => 'DateTime', ], 'EbsOptimized' => [ 'shape' => 'Boolean', ], 'Ec2InstanceId' => [ 'shape' => 'String', ], 'EcsClusterArn' => [ 'shape' => 'String', ], 'EcsContainerInstanceArn' => [ 'shape' => 'String', ], 'ElasticIp' => [ 'shape' => 'String', ], 'Hostname' => [ 'shape' => 'String', ], 'InfrastructureClass' => [ 'shape' => 'String', ], 'InstallUpdatesOnBoot' => [ 'shape' => 'Boolean', ], 'InstanceId' => [ 'shape' => 'String', ], 'InstanceProfileArn' => [ 'shape' => 'String', ], 'InstanceType' => [ 'shape' => 'String', ], 'LastServiceErrorId' => [ 'shape' => 'String', ], 'LayerIds' => [ 'shape' => 'Strings', ], 'Os' => [ 'shape' => 'String', ], 'Platform' => [ 'shape' => 'String', ], 'PrivateDns' => [ 'shape' => 'String', ], 'PrivateIp' => [ 'shape' => 'String', ], 'PublicDns' => [ 'shape' => 'String', ], 'PublicIp' => [ 'shape' => 'String', ], 'RegisteredBy' => [ 'shape' => 'String', ], 'ReportedAgentVersion' => [ 'shape' => 'String', ], 'ReportedOs' => [ 'shape' => 'ReportedOs', ], 'RootDeviceType' => [ 'shape' => 'RootDeviceType', ], 'RootDeviceVolumeId' => [ 'shape' => 'String', ], 'SecurityGroupIds' => [ 'shape' => 'Strings', ], 'SshHostDsaKeyFingerprint' => [ 'shape' => 'String', ], 'SshHostRsaKeyFingerprint' => [ 'shape' => 'String', ], 'SshKeyName' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], 'Status' => [ 'shape' => 'String', ], 'SubnetId' => [ 'shape' => 'String', ], 'Tenancy' => [ 'shape' => 'String', ], 'VirtualizationType' => [ 'shape' => 'VirtualizationType', ], ], ], 'InstanceIdentity' => [ 'type' => 'structure', 'members' => [ 'Document' => [ 'shape' => 'String', ], 'Signature' => [ 'shape' => 'String', ], ], ], 'Instances' => [ 'type' => 'list', 'member' => [ 'shape' => 'Instance', ], ], 'InstancesCount' => [ 'type' => 'structure', 'members' => [ 'Assigning' => [ 'shape' => 'Integer', ], 'Booting' => [ 'shape' => 'Integer', ], 'ConnectionLost' => [ 'shape' => 'Integer', ], 'Deregistering' => [ 'shape' => 'Integer', ], 'Online' => [ 'shape' => 'Integer', ], 'Pending' => [ 'shape' => 'Integer', ], 'Rebooting' => [ 'shape' => 'Integer', ], 'Registered' => [ 'shape' => 'Integer', ], 'Registering' => [ 'shape' => 'Integer', ], 'Requested' => [ 'shape' => 'Integer', ], 'RunningSetup' => [ 'shape' => 'Integer', ], 'SetupFailed' => [ 'shape' => 'Integer', ], 'ShuttingDown' => [ 'shape' => 'Integer', ], 'StartFailed' => [ 'shape' => 'Integer', ], 'Stopped' => [ 'shape' => 'Integer', ], 'Stopping' => [ 'shape' => 'Integer', ], 'Terminated' => [ 'shape' => 'Integer', ], 'Terminating' => [ 'shape' => 'Integer', ], 'Unassigning' => [ 'shape' => 'Integer', ], ], ], 'Integer' => [ 'type' => 'integer', 'box' => true, ], 'Layer' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'LayerId' => [ 'shape' => 'String', ], 'Type' => [ 'shape' => 'LayerType', ], 'Name' => [ 'shape' => 'String', ], 'Shortname' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'LayerAttributes', ], 'CustomInstanceProfileArn' => [ 'shape' => 'String', ], 'CustomJson' => [ 'shape' => 'String', ], 'CustomSecurityGroupIds' => [ 'shape' => 'Strings', ], 'DefaultSecurityGroupNames' => [ 'shape' => 'Strings', ], 'Packages' => [ 'shape' => 'Strings', ], 'VolumeConfigurations' => [ 'shape' => 'VolumeConfigurations', ], 'EnableAutoHealing' => [ 'shape' => 'Boolean', ], 'AutoAssignElasticIps' => [ 'shape' => 'Boolean', ], 'AutoAssignPublicIps' => [ 'shape' => 'Boolean', ], 'DefaultRecipes' => [ 'shape' => 'Recipes', ], 'CustomRecipes' => [ 'shape' => 'Recipes', ], 'CreatedAt' => [ 'shape' => 'DateTime', ], 'InstallUpdatesOnBoot' => [ 'shape' => 'Boolean', ], 'UseEbsOptimizedInstances' => [ 'shape' => 'Boolean', ], 'LifecycleEventConfiguration' => [ 'shape' => 'LifecycleEventConfiguration', ], ], ], 'LayerAttributes' => [ 'type' => 'map', 'key' => [ 'shape' => 'LayerAttributesKeys', ], 'value' => [ 'shape' => 'String', ], ], 'LayerAttributesKeys' => [ 'type' => 'string', 'enum' => [ 'EcsClusterArn', 'EnableHaproxyStats', 'HaproxyStatsUrl', 'HaproxyStatsUser', 'HaproxyStatsPassword', 'HaproxyHealthCheckUrl', 'HaproxyHealthCheckMethod', 'MysqlRootPassword', 'MysqlRootPasswordUbiquitous', 'GangliaUrl', 'GangliaUser', 'GangliaPassword', 'MemcachedMemory', 'NodejsVersion', 'RubyVersion', 'RubygemsVersion', 'ManageBundler', 'BundlerVersion', 'RailsStack', 'PassengerVersion', 'Jvm', 'JvmVersion', 'JvmOptions', 'JavaAppServer', 'JavaAppServerVersion', ], ], 'LayerType' => [ 'type' => 'string', 'enum' => [ 'aws-flow-ruby', 'ecs-cluster', 'java-app', 'lb', 'web', 'php-app', 'rails-app', 'nodejs-app', 'memcached', 'db-master', 'monitoring-master', 'custom', ], ], 'Layers' => [ 'type' => 'list', 'member' => [ 'shape' => 'Layer', ], ], 'LifecycleEventConfiguration' => [ 'type' => 'structure', 'members' => [ 'Shutdown' => [ 'shape' => 'ShutdownEventConfiguration', ], ], ], 'LoadBasedAutoScalingConfiguration' => [ 'type' => 'structure', 'members' => [ 'LayerId' => [ 'shape' => 'String', ], 'Enable' => [ 'shape' => 'Boolean', ], 'UpScaling' => [ 'shape' => 'AutoScalingThresholds', ], 'DownScaling' => [ 'shape' => 'AutoScalingThresholds', ], ], ], 'LoadBasedAutoScalingConfigurations' => [ 'type' => 'list', 'member' => [ 'shape' => 'LoadBasedAutoScalingConfiguration', ], ], 'Minute' => [ 'type' => 'integer', 'box' => true, 'max' => 100, 'min' => 1, ], 'Parameters' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'String', ], ], 'Permission' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'IamUserArn' => [ 'shape' => 'String', ], 'AllowSsh' => [ 'shape' => 'Boolean', ], 'AllowSudo' => [ 'shape' => 'Boolean', ], 'Level' => [ 'shape' => 'String', ], ], ], 'Permissions' => [ 'type' => 'list', 'member' => [ 'shape' => 'Permission', ], ], 'RaidArray' => [ 'type' => 'structure', 'members' => [ 'RaidArrayId' => [ 'shape' => 'String', ], 'InstanceId' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'RaidLevel' => [ 'shape' => 'Integer', ], 'NumberOfDisks' => [ 'shape' => 'Integer', ], 'Size' => [ 'shape' => 'Integer', ], 'Device' => [ 'shape' => 'String', ], 'MountPoint' => [ 'shape' => 'String', ], 'AvailabilityZone' => [ 'shape' => 'String', ], 'CreatedAt' => [ 'shape' => 'DateTime', ], 'StackId' => [ 'shape' => 'String', ], 'VolumeType' => [ 'shape' => 'String', ], 'Iops' => [ 'shape' => 'Integer', ], ], ], 'RaidArrays' => [ 'type' => 'list', 'member' => [ 'shape' => 'RaidArray', ], ], 'RdsDbInstance' => [ 'type' => 'structure', 'members' => [ 'RdsDbInstanceArn' => [ 'shape' => 'String', ], 'DbInstanceIdentifier' => [ 'shape' => 'String', ], 'DbUser' => [ 'shape' => 'String', ], 'DbPassword' => [ 'shape' => 'String', ], 'Region' => [ 'shape' => 'String', ], 'Address' => [ 'shape' => 'String', ], 'Engine' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], 'MissingOnRds' => [ 'shape' => 'Boolean', ], ], ], 'RdsDbInstances' => [ 'type' => 'list', 'member' => [ 'shape' => 'RdsDbInstance', ], ], 'RebootInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], ], ], 'Recipes' => [ 'type' => 'structure', 'members' => [ 'Setup' => [ 'shape' => 'Strings', ], 'Configure' => [ 'shape' => 'Strings', ], 'Deploy' => [ 'shape' => 'Strings', ], 'Undeploy' => [ 'shape' => 'Strings', ], 'Shutdown' => [ 'shape' => 'Strings', ], ], ], 'RegisterEcsClusterRequest' => [ 'type' => 'structure', 'required' => [ 'EcsClusterArn', 'StackId', ], 'members' => [ 'EcsClusterArn' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], ], ], 'RegisterEcsClusterResult' => [ 'type' => 'structure', 'members' => [ 'EcsClusterArn' => [ 'shape' => 'String', ], ], ], 'RegisterElasticIpRequest' => [ 'type' => 'structure', 'required' => [ 'ElasticIp', 'StackId', ], 'members' => [ 'ElasticIp' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], ], ], 'RegisterElasticIpResult' => [ 'type' => 'structure', 'members' => [ 'ElasticIp' => [ 'shape' => 'String', ], ], ], 'RegisterInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'Hostname' => [ 'shape' => 'String', ], 'PublicIp' => [ 'shape' => 'String', ], 'PrivateIp' => [ 'shape' => 'String', ], 'RsaPublicKey' => [ 'shape' => 'String', ], 'RsaPublicKeyFingerprint' => [ 'shape' => 'String', ], 'InstanceIdentity' => [ 'shape' => 'InstanceIdentity', ], ], ], 'RegisterInstanceResult' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], ], ], 'RegisterRdsDbInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', 'RdsDbInstanceArn', 'DbUser', 'DbPassword', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'RdsDbInstanceArn' => [ 'shape' => 'String', ], 'DbUser' => [ 'shape' => 'String', ], 'DbPassword' => [ 'shape' => 'String', ], ], ], 'RegisterVolumeRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', ], 'members' => [ 'Ec2VolumeId' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], ], ], 'RegisterVolumeResult' => [ 'type' => 'structure', 'members' => [ 'VolumeId' => [ 'shape' => 'String', ], ], ], 'ReportedOs' => [ 'type' => 'structure', 'members' => [ 'Family' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'Version' => [ 'shape' => 'String', ], ], ], 'ResourceNotFoundException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'RootDeviceType' => [ 'type' => 'string', 'enum' => [ 'ebs', 'instance-store', ], ], 'SelfUserProfile' => [ 'type' => 'structure', 'members' => [ 'IamUserArn' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'SshUsername' => [ 'shape' => 'String', ], 'SshPublicKey' => [ 'shape' => 'String', ], ], ], 'ServiceError' => [ 'type' => 'structure', 'members' => [ 'ServiceErrorId' => [ 'shape' => 'String', ], 'StackId' => [ 'shape' => 'String', ], 'InstanceId' => [ 'shape' => 'String', ], 'Type' => [ 'shape' => 'String', ], 'Message' => [ 'shape' => 'String', ], 'CreatedAt' => [ 'shape' => 'DateTime', ], ], ], 'ServiceErrors' => [ 'type' => 'list', 'member' => [ 'shape' => 'ServiceError', ], ], 'SetLoadBasedAutoScalingRequest' => [ 'type' => 'structure', 'required' => [ 'LayerId', ], 'members' => [ 'LayerId' => [ 'shape' => 'String', ], 'Enable' => [ 'shape' => 'Boolean', ], 'UpScaling' => [ 'shape' => 'AutoScalingThresholds', ], 'DownScaling' => [ 'shape' => 'AutoScalingThresholds', ], ], ], 'SetPermissionRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', 'IamUserArn', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'IamUserArn' => [ 'shape' => 'String', ], 'AllowSsh' => [ 'shape' => 'Boolean', ], 'AllowSudo' => [ 'shape' => 'Boolean', ], 'Level' => [ 'shape' => 'String', ], ], ], 'SetTimeBasedAutoScalingRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], 'AutoScalingSchedule' => [ 'shape' => 'WeeklyAutoScalingSchedule', ], ], ], 'ShutdownEventConfiguration' => [ 'type' => 'structure', 'members' => [ 'ExecutionTimeout' => [ 'shape' => 'Integer', ], 'DelayUntilElbConnectionsDrained' => [ 'shape' => 'Boolean', ], ], ], 'Source' => [ 'type' => 'structure', 'members' => [ 'Type' => [ 'shape' => 'SourceType', ], 'Url' => [ 'shape' => 'String', ], 'Username' => [ 'shape' => 'String', ], 'Password' => [ 'shape' => 'String', ], 'SshKey' => [ 'shape' => 'String', ], 'Revision' => [ 'shape' => 'String', ], ], ], 'SourceType' => [ 'type' => 'string', 'enum' => [ 'git', 'svn', 'archive', 's3', ], ], 'SslConfiguration' => [ 'type' => 'structure', 'required' => [ 'Certificate', 'PrivateKey', ], 'members' => [ 'Certificate' => [ 'shape' => 'String', ], 'PrivateKey' => [ 'shape' => 'String', ], 'Chain' => [ 'shape' => 'String', ], ], ], 'Stack' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'Arn' => [ 'shape' => 'String', ], 'Region' => [ 'shape' => 'String', ], 'VpcId' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'StackAttributes', ], 'ServiceRoleArn' => [ 'shape' => 'String', ], 'DefaultInstanceProfileArn' => [ 'shape' => 'String', ], 'DefaultOs' => [ 'shape' => 'String', ], 'HostnameTheme' => [ 'shape' => 'String', ], 'DefaultAvailabilityZone' => [ 'shape' => 'String', ], 'DefaultSubnetId' => [ 'shape' => 'String', ], 'CustomJson' => [ 'shape' => 'String', ], 'ConfigurationManager' => [ 'shape' => 'StackConfigurationManager', ], 'ChefConfiguration' => [ 'shape' => 'ChefConfiguration', ], 'UseCustomCookbooks' => [ 'shape' => 'Boolean', ], 'UseOpsworksSecurityGroups' => [ 'shape' => 'Boolean', ], 'CustomCookbooksSource' => [ 'shape' => 'Source', ], 'DefaultSshKeyName' => [ 'shape' => 'String', ], 'CreatedAt' => [ 'shape' => 'DateTime', ], 'DefaultRootDeviceType' => [ 'shape' => 'RootDeviceType', ], 'AgentVersion' => [ 'shape' => 'String', ], ], ], 'StackAttributes' => [ 'type' => 'map', 'key' => [ 'shape' => 'StackAttributesKeys', ], 'value' => [ 'shape' => 'String', ], ], 'StackAttributesKeys' => [ 'type' => 'string', 'enum' => [ 'Color', ], ], 'StackConfigurationManager' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'String', ], 'Version' => [ 'shape' => 'String', ], ], ], 'StackSummary' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'Arn' => [ 'shape' => 'String', ], 'LayersCount' => [ 'shape' => 'Integer', ], 'AppsCount' => [ 'shape' => 'Integer', ], 'InstancesCount' => [ 'shape' => 'InstancesCount', ], ], ], 'Stacks' => [ 'type' => 'list', 'member' => [ 'shape' => 'Stack', ], ], 'StartInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], ], ], 'StartStackRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], ], ], 'StopInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], ], ], 'StopStackRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], ], ], 'String' => [ 'type' => 'string', ], 'Strings' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], 'Switch' => [ 'type' => 'string', ], 'TemporaryCredential' => [ 'type' => 'structure', 'members' => [ 'Username' => [ 'shape' => 'String', ], 'Password' => [ 'shape' => 'String', ], 'ValidForInMinutes' => [ 'shape' => 'Integer', ], 'InstanceId' => [ 'shape' => 'String', ], ], ], 'TimeBasedAutoScalingConfiguration' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], 'AutoScalingSchedule' => [ 'shape' => 'WeeklyAutoScalingSchedule', ], ], ], 'TimeBasedAutoScalingConfigurations' => [ 'type' => 'list', 'member' => [ 'shape' => 'TimeBasedAutoScalingConfiguration', ], ], 'UnassignInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], ], ], 'UnassignVolumeRequest' => [ 'type' => 'structure', 'required' => [ 'VolumeId', ], 'members' => [ 'VolumeId' => [ 'shape' => 'String', ], ], ], 'UpdateAppRequest' => [ 'type' => 'structure', 'required' => [ 'AppId', ], 'members' => [ 'AppId' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'Description' => [ 'shape' => 'String', ], 'DataSources' => [ 'shape' => 'DataSources', ], 'Type' => [ 'shape' => 'AppType', ], 'AppSource' => [ 'shape' => 'Source', ], 'Domains' => [ 'shape' => 'Strings', ], 'EnableSsl' => [ 'shape' => 'Boolean', ], 'SslConfiguration' => [ 'shape' => 'SslConfiguration', ], 'Attributes' => [ 'shape' => 'AppAttributes', ], 'Environment' => [ 'shape' => 'EnvironmentVariables', ], ], ], 'UpdateElasticIpRequest' => [ 'type' => 'structure', 'required' => [ 'ElasticIp', ], 'members' => [ 'ElasticIp' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], ], ], 'UpdateInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'InstanceId' => [ 'shape' => 'String', ], 'LayerIds' => [ 'shape' => 'Strings', ], 'InstanceType' => [ 'shape' => 'String', ], 'AutoScalingType' => [ 'shape' => 'AutoScalingType', ], 'Hostname' => [ 'shape' => 'String', ], 'Os' => [ 'shape' => 'String', ], 'AmiId' => [ 'shape' => 'String', ], 'SshKeyName' => [ 'shape' => 'String', ], 'Architecture' => [ 'shape' => 'Architecture', ], 'InstallUpdatesOnBoot' => [ 'shape' => 'Boolean', ], 'EbsOptimized' => [ 'shape' => 'Boolean', ], 'AgentVersion' => [ 'shape' => 'String', ], ], ], 'UpdateLayerRequest' => [ 'type' => 'structure', 'required' => [ 'LayerId', ], 'members' => [ 'LayerId' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'Shortname' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'LayerAttributes', ], 'CustomInstanceProfileArn' => [ 'shape' => 'String', ], 'CustomJson' => [ 'shape' => 'String', ], 'CustomSecurityGroupIds' => [ 'shape' => 'Strings', ], 'Packages' => [ 'shape' => 'Strings', ], 'VolumeConfigurations' => [ 'shape' => 'VolumeConfigurations', ], 'EnableAutoHealing' => [ 'shape' => 'Boolean', ], 'AutoAssignElasticIps' => [ 'shape' => 'Boolean', ], 'AutoAssignPublicIps' => [ 'shape' => 'Boolean', ], 'CustomRecipes' => [ 'shape' => 'Recipes', ], 'InstallUpdatesOnBoot' => [ 'shape' => 'Boolean', ], 'UseEbsOptimizedInstances' => [ 'shape' => 'Boolean', ], 'LifecycleEventConfiguration' => [ 'shape' => 'LifecycleEventConfiguration', ], ], ], 'UpdateMyUserProfileRequest' => [ 'type' => 'structure', 'members' => [ 'SshPublicKey' => [ 'shape' => 'String', ], ], ], 'UpdateRdsDbInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'RdsDbInstanceArn', ], 'members' => [ 'RdsDbInstanceArn' => [ 'shape' => 'String', ], 'DbUser' => [ 'shape' => 'String', ], 'DbPassword' => [ 'shape' => 'String', ], ], ], 'UpdateStackRequest' => [ 'type' => 'structure', 'required' => [ 'StackId', ], 'members' => [ 'StackId' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'Attributes' => [ 'shape' => 'StackAttributes', ], 'ServiceRoleArn' => [ 'shape' => 'String', ], 'DefaultInstanceProfileArn' => [ 'shape' => 'String', ], 'DefaultOs' => [ 'shape' => 'String', ], 'HostnameTheme' => [ 'shape' => 'String', ], 'DefaultAvailabilityZone' => [ 'shape' => 'String', ], 'DefaultSubnetId' => [ 'shape' => 'String', ], 'CustomJson' => [ 'shape' => 'String', ], 'ConfigurationManager' => [ 'shape' => 'StackConfigurationManager', ], 'ChefConfiguration' => [ 'shape' => 'ChefConfiguration', ], 'UseCustomCookbooks' => [ 'shape' => 'Boolean', ], 'CustomCookbooksSource' => [ 'shape' => 'Source', ], 'DefaultSshKeyName' => [ 'shape' => 'String', ], 'DefaultRootDeviceType' => [ 'shape' => 'RootDeviceType', ], 'UseOpsworksSecurityGroups' => [ 'shape' => 'Boolean', ], 'AgentVersion' => [ 'shape' => 'String', ], ], ], 'UpdateUserProfileRequest' => [ 'type' => 'structure', 'required' => [ 'IamUserArn', ], 'members' => [ 'IamUserArn' => [ 'shape' => 'String', ], 'SshUsername' => [ 'shape' => 'String', ], 'SshPublicKey' => [ 'shape' => 'String', ], 'AllowSelfManagement' => [ 'shape' => 'Boolean', ], ], ], 'UpdateVolumeRequest' => [ 'type' => 'structure', 'required' => [ 'VolumeId', ], 'members' => [ 'VolumeId' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'MountPoint' => [ 'shape' => 'String', ], ], ], 'UserProfile' => [ 'type' => 'structure', 'members' => [ 'IamUserArn' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'SshUsername' => [ 'shape' => 'String', ], 'SshPublicKey' => [ 'shape' => 'String', ], 'AllowSelfManagement' => [ 'shape' => 'Boolean', ], ], ], 'UserProfiles' => [ 'type' => 'list', 'member' => [ 'shape' => 'UserProfile', ], ], 'ValidForInMinutes' => [ 'type' => 'integer', 'box' => true, 'max' => 1440, 'min' => 60, ], 'ValidationException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'VirtualizationType' => [ 'type' => 'string', 'enum' => [ 'paravirtual', 'hvm', ], ], 'Volume' => [ 'type' => 'structure', 'members' => [ 'VolumeId' => [ 'shape' => 'String', ], 'Ec2VolumeId' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'RaidArrayId' => [ 'shape' => 'String', ], 'InstanceId' => [ 'shape' => 'String', ], 'Status' => [ 'shape' => 'String', ], 'Size' => [ 'shape' => 'Integer', ], 'Device' => [ 'shape' => 'String', ], 'MountPoint' => [ 'shape' => 'String', ], 'Region' => [ 'shape' => 'String', ], 'AvailabilityZone' => [ 'shape' => 'String', ], 'VolumeType' => [ 'shape' => 'String', ], 'Iops' => [ 'shape' => 'Integer', ], ], ], 'VolumeConfiguration' => [ 'type' => 'structure', 'required' => [ 'MountPoint', 'NumberOfDisks', 'Size', ], 'members' => [ 'MountPoint' => [ 'shape' => 'String', ], 'RaidLevel' => [ 'shape' => 'Integer', ], 'NumberOfDisks' => [ 'shape' => 'Integer', ], 'Size' => [ 'shape' => 'Integer', ], 'VolumeType' => [ 'shape' => 'String', ], 'Iops' => [ 'shape' => 'Integer', ], ], ], 'VolumeConfigurations' => [ 'type' => 'list', 'member' => [ 'shape' => 'VolumeConfiguration', ], ], 'VolumeType' => [ 'type' => 'string', 'enum' => [ 'gp2', 'io1', 'standard', ], ], 'Volumes' => [ 'type' => 'list', 'member' => [ 'shape' => 'Volume', ], ], 'WeeklyAutoScalingSchedule' => [ 'type' => 'structure', 'members' => [ 'Monday' => [ 'shape' => 'DailyAutoScalingSchedule', ], 'Tuesday' => [ 'shape' => 'DailyAutoScalingSchedule', ], 'Wednesday' => [ 'shape' => 'DailyAutoScalingSchedule', ], 'Thursday' => [ 'shape' => 'DailyAutoScalingSchedule', ], 'Friday' => [ 'shape' => 'DailyAutoScalingSchedule', ], 'Saturday' => [ 'shape' => 'DailyAutoScalingSchedule', ], 'Sunday' => [ 'shape' => 'DailyAutoScalingSchedule', ], ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/support/2013-04-15/api-2.json.php:return [ 'metadata' => [ 'apiVersion' => '2013-04-15', 'endpointPrefix' => 'support', 'jsonVersion' => '1.1', 'serviceFullName' => 'AWS Support', 'signatureVersion' => 'v4', 'targetPrefix' => 'AWSSupport_20130415', 'protocol' => 'json', ], 'operations' => [ 'AddAttachmentsToSet' => [ 'name' => 'AddAttachmentsToSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddAttachmentsToSetRequest', ], 'output' => [ 'shape' => 'AddAttachmentsToSetResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], [ 'shape' => 'AttachmentSetIdNotFound', 'exception' => true, ], [ 'shape' => 'AttachmentSetExpired', 'exception' => true, ], [ 'shape' => 'AttachmentSetSizeLimitExceeded', 'exception' => true, ], [ 'shape' => 'AttachmentLimitExceeded', 'exception' => true, ], ], ], 'AddCommunicationToCase' => [ 'name' => 'AddCommunicationToCase', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddCommunicationToCaseRequest', ], 'output' => [ 'shape' => 'AddCommunicationToCaseResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], [ 'shape' => 'CaseIdNotFound', 'exception' => true, ], [ 'shape' => 'AttachmentSetIdNotFound', 'exception' => true, ], [ 'shape' => 'AttachmentSetExpired', 'exception' => true, ], ], ], 'CreateCase' => [ 'name' => 'CreateCase', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateCaseRequest', ], 'output' => [ 'shape' => 'CreateCaseResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], [ 'shape' => 'CaseCreationLimitExceeded', 'exception' => true, ], [ 'shape' => 'AttachmentSetIdNotFound', 'exception' => true, ], [ 'shape' => 'AttachmentSetExpired', 'exception' => true, ], ], ], 'DescribeAttachment' => [ 'name' => 'DescribeAttachment', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeAttachmentRequest', ], 'output' => [ 'shape' => 'DescribeAttachmentResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], [ 'shape' => 'DescribeAttachmentLimitExceeded', 'exception' => true, ], [ 'shape' => 'AttachmentIdNotFound', 'exception' => true, ], ], ], 'DescribeCases' => [ 'name' => 'DescribeCases', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeCasesRequest', ], 'output' => [ 'shape' => 'DescribeCasesResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], [ 'shape' => 'CaseIdNotFound', 'exception' => true, ], ], ], 'DescribeCommunications' => [ 'name' => 'DescribeCommunications', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeCommunicationsRequest', ], 'output' => [ 'shape' => 'DescribeCommunicationsResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], [ 'shape' => 'CaseIdNotFound', 'exception' => true, ], ], ], 'DescribeServices' => [ 'name' => 'DescribeServices', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeServicesRequest', ], 'output' => [ 'shape' => 'DescribeServicesResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], ], ], 'DescribeSeverityLevels' => [ 'name' => 'DescribeSeverityLevels', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSeverityLevelsRequest', ], 'output' => [ 'shape' => 'DescribeSeverityLevelsResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], ], ], 'DescribeTrustedAdvisorCheckRefreshStatuses' => [ 'name' => 'DescribeTrustedAdvisorCheckRefreshStatuses', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeTrustedAdvisorCheckRefreshStatusesRequest', ], 'output' => [ 'shape' => 'DescribeTrustedAdvisorCheckRefreshStatusesResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], ], ], 'DescribeTrustedAdvisorCheckResult' => [ 'name' => 'DescribeTrustedAdvisorCheckResult', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeTrustedAdvisorCheckResultRequest', ], 'output' => [ 'shape' => 'DescribeTrustedAdvisorCheckResultResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], ], ], 'DescribeTrustedAdvisorCheckSummaries' => [ 'name' => 'DescribeTrustedAdvisorCheckSummaries', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeTrustedAdvisorCheckSummariesRequest', ], 'output' => [ 'shape' => 'DescribeTrustedAdvisorCheckSummariesResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], ], ], 'DescribeTrustedAdvisorChecks' => [ 'name' => 'DescribeTrustedAdvisorChecks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeTrustedAdvisorChecksRequest', ], 'output' => [ 'shape' => 'DescribeTrustedAdvisorChecksResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], ], ], 'RefreshTrustedAdvisorCheck' => [ 'name' => 'RefreshTrustedAdvisorCheck', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RefreshTrustedAdvisorCheckRequest', ], 'output' => [ 'shape' => 'RefreshTrustedAdvisorCheckResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], ], ], 'ResolveCase' => [ 'name' => 'ResolveCase', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ResolveCaseRequest', ], 'output' => [ 'shape' => 'ResolveCaseResponse', ], 'errors' => [ [ 'shape' => 'InternalServerError', 'exception' => true, 'fault' => true, ], [ 'shape' => 'CaseIdNotFound', 'exception' => true, ], ], ], ], 'shapes' => [ 'AddAttachmentsToSetRequest' => [ 'type' => 'structure', 'required' => [ 'attachments', ], 'members' => [ 'attachmentSetId' => [ 'shape' => 'AttachmentSetId', ], 'attachments' => [ 'shape' => 'Attachments', ], ], ], 'AddAttachmentsToSetResponse' => [ 'type' => 'structure', 'members' => [ 'attachmentSetId' => [ 'shape' => 'AttachmentSetId', ], 'expiryTime' => [ 'shape' => 'ExpiryTime', ], ], ], 'AddCommunicationToCaseRequest' => [ 'type' => 'structure', 'required' => [ 'communicationBody', ], 'members' => [ 'caseId' => [ 'shape' => 'CaseId', ], 'communicationBody' => [ 'shape' => 'CommunicationBody', ], 'ccEmailAddresses' => [ 'shape' => 'CcEmailAddressList', ], 'attachmentSetId' => [ 'shape' => 'AttachmentSetId', ], ], ], 'AddCommunicationToCaseResponse' => [ 'type' => 'structure', 'members' => [ 'result' => [ 'shape' => 'Result', ], ], ], 'AfterTime' => [ 'type' => 'string', ], 'Attachment' => [ 'type' => 'structure', 'members' => [ 'fileName' => [ 'shape' => 'FileName', ], 'data' => [ 'shape' => 'Data', ], ], ], 'AttachmentDetails' => [ 'type' => 'structure', 'members' => [ 'attachmentId' => [ 'shape' => 'AttachmentId', ], 'fileName' => [ 'shape' => 'FileName', ], ], ], 'AttachmentId' => [ 'type' => 'string', ], 'AttachmentIdNotFound' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'AttachmentLimitExceeded' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'AttachmentSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'AttachmentDetails', ], ], 'AttachmentSetExpired' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'AttachmentSetId' => [ 'type' => 'string', ], 'AttachmentSetIdNotFound' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'AttachmentSetSizeLimitExceeded' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'Attachments' => [ 'type' => 'list', 'member' => [ 'shape' => 'Attachment', ], ], 'BeforeTime' => [ 'type' => 'string', ], 'Boolean' => [ 'type' => 'boolean', ], 'CaseCreationLimitExceeded' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'CaseDetails' => [ 'type' => 'structure', 'members' => [ 'caseId' => [ 'shape' => 'CaseId', ], 'displayId' => [ 'shape' => 'DisplayId', ], 'subject' => [ 'shape' => 'Subject', ], 'status' => [ 'shape' => 'Status', ], 'serviceCode' => [ 'shape' => 'ServiceCode', ], 'categoryCode' => [ 'shape' => 'CategoryCode', ], 'severityCode' => [ 'shape' => 'SeverityCode', ], 'submittedBy' => [ 'shape' => 'SubmittedBy', ], 'timeCreated' => [ 'shape' => 'TimeCreated', ], 'recentCommunications' => [ 'shape' => 'RecentCaseCommunications', ], 'ccEmailAddresses' => [ 'shape' => 'CcEmailAddressList', ], 'language' => [ 'shape' => 'Language', ], ], ], 'CaseId' => [ 'type' => 'string', ], 'CaseIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'CaseId', ], 'min' => 0, 'max' => 100, ], 'CaseIdNotFound' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'CaseList' => [ 'type' => 'list', 'member' => [ 'shape' => 'CaseDetails', ], ], 'CaseStatus' => [ 'type' => 'string', ], 'Category' => [ 'type' => 'structure', 'members' => [ 'code' => [ 'shape' => 'CategoryCode', ], 'name' => [ 'shape' => 'CategoryName', ], ], ], 'CategoryCode' => [ 'type' => 'string', ], 'CategoryList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Category', ], ], 'CategoryName' => [ 'type' => 'string', ], 'CcEmailAddress' => [ 'type' => 'string', ], 'CcEmailAddressList' => [ 'type' => 'list', 'member' => [ 'shape' => 'CcEmailAddress', ], ], 'Communication' => [ 'type' => 'structure', 'members' => [ 'caseId' => [ 'shape' => 'CaseId', ], 'body' => [ 'shape' => 'CommunicationBody', ], 'submittedBy' => [ 'shape' => 'SubmittedBy', ], 'timeCreated' => [ 'shape' => 'TimeCreated', ], 'attachmentSet' => [ 'shape' => 'AttachmentSet', ], ], ], 'CommunicationBody' => [ 'type' => 'string', ], 'CommunicationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Communication', ], ], 'CreateCaseRequest' => [ 'type' => 'structure', 'required' => [ 'subject', 'communicationBody', ], 'members' => [ 'subject' => [ 'shape' => 'Subject', ], 'serviceCode' => [ 'shape' => 'ServiceCode', ], 'severityCode' => [ 'shape' => 'SeverityCode', ], 'categoryCode' => [ 'shape' => 'CategoryCode', ], 'communicationBody' => [ 'shape' => 'CommunicationBody', ], 'ccEmailAddresses' => [ 'shape' => 'CcEmailAddressList', ], 'language' => [ 'shape' => 'Language', ], 'issueType' => [ 'shape' => 'IssueType', ], 'attachmentSetId' => [ 'shape' => 'AttachmentSetId', ], ], ], 'CreateCaseResponse' => [ 'type' => 'structure', 'members' => [ 'caseId' => [ 'shape' => 'CaseId', ], ], ], 'Data' => [ 'type' => 'blob', ], 'DescribeAttachmentLimitExceeded' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, ], 'DescribeAttachmentRequest' => [ 'type' => 'structure', 'required' => [ 'attachmentId', ], 'members' => [ 'attachmentId' => [ 'shape' => 'AttachmentId', ], ], ], 'DescribeAttachmentResponse' => [ 'type' => 'structure', 'members' => [ 'attachment' => [ 'shape' => 'Attachment', ], ], ], 'DescribeCasesRequest' => [ 'type' => 'structure', 'members' => [ 'caseIdList' => [ 'shape' => 'CaseIdList', ], 'displayId' => [ 'shape' => 'DisplayId', ], 'afterTime' => [ 'shape' => 'AfterTime', ], 'beforeTime' => [ 'shape' => 'BeforeTime', ], 'includeResolvedCases' => [ 'shape' => 'IncludeResolvedCases', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'maxResults' => [ 'shape' => 'MaxResults', ], 'language' => [ 'shape' => 'Language', ], 'includeCommunications' => [ 'shape' => 'IncludeCommunications', ], ], ], 'DescribeCasesResponse' => [ 'type' => 'structure', 'members' => [ 'cases' => [ 'shape' => 'CaseList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeCommunicationsRequest' => [ 'type' => 'structure', 'required' => [ 'caseId', ], 'members' => [ 'caseId' => [ 'shape' => 'CaseId', ], 'beforeTime' => [ 'shape' => 'BeforeTime', ], 'afterTime' => [ 'shape' => 'AfterTime', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'maxResults' => [ 'shape' => 'MaxResults', ], ], ], 'DescribeCommunicationsResponse' => [ 'type' => 'structure', 'members' => [ 'communications' => [ 'shape' => 'CommunicationList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeServicesRequest' => [ 'type' => 'structure', 'members' => [ 'serviceCodeList' => [ 'shape' => 'ServiceCodeList', ], 'language' => [ 'shape' => 'Language', ], ], ], 'DescribeServicesResponse' => [ 'type' => 'structure', 'members' => [ 'services' => [ 'shape' => 'ServiceList', ], ], ], 'DescribeSeverityLevelsRequest' => [ 'type' => 'structure', 'members' => [ 'language' => [ 'shape' => 'Language', ], ], ], 'DescribeSeverityLevelsResponse' => [ 'type' => 'structure', 'members' => [ 'severityLevels' => [ 'shape' => 'SeverityLevelsList', ], ], ], 'DescribeTrustedAdvisorCheckRefreshStatusesRequest' => [ 'type' => 'structure', 'required' => [ 'checkIds', ], 'members' => [ 'checkIds' => [ 'shape' => 'StringList', ], ], ], 'DescribeTrustedAdvisorCheckRefreshStatusesResponse' => [ 'type' => 'structure', 'required' => [ 'statuses', ], 'members' => [ 'statuses' => [ 'shape' => 'TrustedAdvisorCheckRefreshStatusList', ], ], ], 'DescribeTrustedAdvisorCheckResultRequest' => [ 'type' => 'structure', 'required' => [ 'checkId', ], 'members' => [ 'checkId' => [ 'shape' => 'String', ], 'language' => [ 'shape' => 'String', ], ], ], 'DescribeTrustedAdvisorCheckResultResponse' => [ 'type' => 'structure', 'members' => [ 'result' => [ 'shape' => 'TrustedAdvisorCheckResult', ], ], ], 'DescribeTrustedAdvisorCheckSummariesRequest' => [ 'type' => 'structure', 'required' => [ 'checkIds', ], 'members' => [ 'checkIds' => [ 'shape' => 'StringList', ], ], ], 'DescribeTrustedAdvisorCheckSummariesResponse' => [ 'type' => 'structure', 'required' => [ 'summaries', ], 'members' => [ 'summaries' => [ 'shape' => 'TrustedAdvisorCheckSummaryList', ], ], ], 'DescribeTrustedAdvisorChecksRequest' => [ 'type' => 'structure', 'required' => [ 'language', ], 'members' => [ 'language' => [ 'shape' => 'String', ], ], ], 'DescribeTrustedAdvisorChecksResponse' => [ 'type' => 'structure', 'required' => [ 'checks', ], 'members' => [ 'checks' => [ 'shape' => 'TrustedAdvisorCheckList', ], ], ], 'DisplayId' => [ 'type' => 'string', ], 'Double' => [ 'type' => 'double', ], 'ErrorMessage' => [ 'type' => 'string', ], 'ExpiryTime' => [ 'type' => 'string', ], 'FileName' => [ 'type' => 'string', ], 'IncludeCommunications' => [ 'type' => 'boolean', ], 'IncludeResolvedCases' => [ 'type' => 'boolean', ], 'InternalServerError' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'ErrorMessage', ], ], 'exception' => true, 'fault' => true, ], 'IssueType' => [ 'type' => 'string', ], 'Language' => [ 'type' => 'string', ], 'Long' => [ 'type' => 'long', ], 'MaxResults' => [ 'type' => 'integer', 'min' => 10, 'max' => 100, ], 'NextToken' => [ 'type' => 'string', ], 'RecentCaseCommunications' => [ 'type' => 'structure', 'members' => [ 'communications' => [ 'shape' => 'CommunicationList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'RefreshTrustedAdvisorCheckRequest' => [ 'type' => 'structure', 'required' => [ 'checkId', ], 'members' => [ 'checkId' => [ 'shape' => 'String', ], ], ], 'RefreshTrustedAdvisorCheckResponse' => [ 'type' => 'structure', 'required' => [ 'status', ], 'members' => [ 'status' => [ 'shape' => 'TrustedAdvisorCheckRefreshStatus', ], ], ], 'ResolveCaseRequest' => [ 'type' => 'structure', 'members' => [ 'caseId' => [ 'shape' => 'CaseId', ], ], ], 'ResolveCaseResponse' => [ 'type' => 'structure', 'members' => [ 'initialCaseStatus' => [ 'shape' => 'CaseStatus', ], 'finalCaseStatus' => [ 'shape' => 'CaseStatus', ], ], ], 'Result' => [ 'type' => 'boolean', ], 'Service' => [ 'type' => 'structure', 'members' => [ 'code' => [ 'shape' => 'ServiceCode', ], 'name' => [ 'shape' => 'ServiceName', ], 'categories' => [ 'shape' => 'CategoryList', ], ], ], 'ServiceCode' => [ 'type' => 'string', 'pattern' => '[0-9a-z\\-_]+', ], 'ServiceCodeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ServiceCode', ], 'min' => 0, 'max' => 100, ], 'ServiceList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Service', ], ], 'ServiceName' => [ 'type' => 'string', ], 'SeverityCode' => [ 'type' => 'string', ], 'SeverityLevel' => [ 'type' => 'structure', 'members' => [ 'code' => [ 'shape' => 'SeverityLevelCode', ], 'name' => [ 'shape' => 'SeverityLevelName', ], ], ], 'SeverityLevelCode' => [ 'type' => 'string', ], 'SeverityLevelName' => [ 'type' => 'string', ], 'SeverityLevelsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'SeverityLevel', ], ], 'Status' => [ 'type' => 'string', ], 'String' => [ 'type' => 'string', ], 'StringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], 'Subject' => [ 'type' => 'string', ], 'SubmittedBy' => [ 'type' => 'string', ], 'TimeCreated' => [ 'type' => 'string', ], 'TrustedAdvisorCategorySpecificSummary' => [ 'type' => 'structure', 'members' => [ 'costOptimizing' => [ 'shape' => 'TrustedAdvisorCostOptimizingSummary', ], ], ], 'TrustedAdvisorCheckDescription' => [ 'type' => 'structure', 'required' => [ 'id', 'name', 'description', 'category', 'metadata', ], 'members' => [ 'id' => [ 'shape' => 'String', ], 'name' => [ 'shape' => 'String', ], 'description' => [ 'shape' => 'String', ], 'category' => [ 'shape' => 'String', ], 'metadata' => [ 'shape' => 'StringList', ], ], ], 'TrustedAdvisorCheckList' => [ 'type' => 'list', 'member' => [ 'shape' => 'TrustedAdvisorCheckDescription', ], ], 'TrustedAdvisorCheckRefreshStatus' => [ 'type' => 'structure', 'required' => [ 'checkId', 'status', 'millisUntilNextRefreshable', ], 'members' => [ 'checkId' => [ 'shape' => 'String', ], 'status' => [ 'shape' => 'String', ], 'millisUntilNextRefreshable' => [ 'shape' => 'Long', ], ], ], 'TrustedAdvisorCheckRefreshStatusList' => [ 'type' => 'list', 'member' => [ 'shape' => 'TrustedAdvisorCheckRefreshStatus', ], ], 'TrustedAdvisorCheckResult' => [ 'type' => 'structure', 'required' => [ 'checkId', 'timestamp', 'status', 'resourcesSummary', 'categorySpecificSummary', 'flaggedResources', ], 'members' => [ 'checkId' => [ 'shape' => 'String', ], 'timestamp' => [ 'shape' => 'String', ], 'status' => [ 'shape' => 'String', ], 'resourcesSummary' => [ 'shape' => 'TrustedAdvisorResourcesSummary', ], 'categorySpecificSummary' => [ 'shape' => 'TrustedAdvisorCategorySpecificSummary', ], 'flaggedResources' => [ 'shape' => 'TrustedAdvisorResourceDetailList', ], ], ], 'TrustedAdvisorCheckSummary' => [ 'type' => 'structure', 'required' => [ 'checkId', 'timestamp', 'status', 'resourcesSummary', 'categorySpecificSummary', ], 'members' => [ 'checkId' => [ 'shape' => 'String', ], 'timestamp' => [ 'shape' => 'String', ], 'status' => [ 'shape' => 'String', ], 'hasFlaggedResources' => [ 'shape' => 'Boolean', ], 'resourcesSummary' => [ 'shape' => 'TrustedAdvisorResourcesSummary', ], 'categorySpecificSummary' => [ 'shape' => 'TrustedAdvisorCategorySpecificSummary', ], ], ], 'TrustedAdvisorCheckSummaryList' => [ 'type' => 'list', 'member' => [ 'shape' => 'TrustedAdvisorCheckSummary', ], ], 'TrustedAdvisorCostOptimizingSummary' => [ 'type' => 'structure', 'required' => [ 'estimatedMonthlySavings', 'estimatedPercentMonthlySavings', ], 'members' => [ 'estimatedMonthlySavings' => [ 'shape' => 'Double', ], 'estimatedPercentMonthlySavings' => [ 'shape' => 'Double', ], ], ], 'TrustedAdvisorResourceDetail' => [ 'type' => 'structure', 'required' => [ 'status', 'region', 'resourceId', 'metadata', ], 'members' => [ 'status' => [ 'shape' => 'String', ], 'region' => [ 'shape' => 'String', ], 'resourceId' => [ 'shape' => 'String', ], 'isSuppressed' => [ 'shape' => 'Boolean', ], 'metadata' => [ 'shape' => 'StringList', ], ], ], 'TrustedAdvisorResourceDetailList' => [ 'type' => 'list', 'member' => [ 'shape' => 'TrustedAdvisorResourceDetail', ], ], 'TrustedAdvisorResourcesSummary' => [ 'type' => 'structure', 'required' => [ 'resourcesProcessed', 'resourcesFlagged', 'resourcesIgnored', 'resourcesSuppressed', ], 'members' => [ 'resourcesProcessed' => [ 'shape' => 'Long', ], 'resourcesFlagged' => [ 'shape' => 'Long', ], 'resourcesIgnored' => [ 'shape' => 'Long', ], 'resourcesSuppressed' => [ 'shape' => 'Long', ], ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/codedeploy/2014-10-06/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2014-10-06', 'endpointPrefix' => 'codedeploy', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceAbbreviation' => 'CodeDeploy', 'serviceFullName' => 'AWS CodeDeploy', 'signatureVersion' => 'v4', 'targetPrefix' => 'CodeDeploy_20141006', 'timestampFormat' => 'unixTimestamp', ], 'operations' => [ 'AddTagsToOnPremisesInstances' => [ 'name' => 'AddTagsToOnPremisesInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddTagsToOnPremisesInstancesInput', ], 'errors' => [ [ 'shape' => 'InstanceNameRequiredException', ], [ 'shape' => 'TagRequiredException', ], [ 'shape' => 'InvalidTagException', ], [ 'shape' => 'TagLimitExceededException', ], [ 'shape' => 'InstanceLimitExceededException', ], [ 'shape' => 'InstanceNotRegisteredException', ], ], ], 'BatchGetApplicationRevisions' => [ 'name' => 'BatchGetApplicationRevisions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'BatchGetApplicationRevisionsInput', ], 'output' => [ 'shape' => 'BatchGetApplicationRevisionsOutput', ], 'errors' => [ [ 'shape' => 'ApplicationDoesNotExistException', ], [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'RevisionRequiredException', ], [ 'shape' => 'InvalidRevisionException', ], [ 'shape' => 'BatchLimitExceededException', ], ], ], 'BatchGetApplications' => [ 'name' => 'BatchGetApplications', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'BatchGetApplicationsInput', ], 'output' => [ 'shape' => 'BatchGetApplicationsOutput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'ApplicationDoesNotExistException', ], [ 'shape' => 'BatchLimitExceededException', ], ], ], 'BatchGetDeploymentGroups' => [ 'name' => 'BatchGetDeploymentGroups', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'BatchGetDeploymentGroupsInput', ], 'output' => [ 'shape' => 'BatchGetDeploymentGroupsOutput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'ApplicationDoesNotExistException', ], [ 'shape' => 'DeploymentGroupNameRequiredException', ], [ 'shape' => 'InvalidDeploymentGroupNameException', ], [ 'shape' => 'BatchLimitExceededException', ], ], ], 'BatchGetDeploymentInstances' => [ 'name' => 'BatchGetDeploymentInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'BatchGetDeploymentInstancesInput', ], 'output' => [ 'shape' => 'BatchGetDeploymentInstancesOutput', ], 'errors' => [ [ 'shape' => 'DeploymentIdRequiredException', ], [ 'shape' => 'DeploymentDoesNotExistException', ], [ 'shape' => 'InstanceIdRequiredException', ], [ 'shape' => 'InvalidDeploymentIdException', ], [ 'shape' => 'InvalidInstanceNameException', ], [ 'shape' => 'BatchLimitExceededException', ], ], ], 'BatchGetDeployments' => [ 'name' => 'BatchGetDeployments', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'BatchGetDeploymentsInput', ], 'output' => [ 'shape' => 'BatchGetDeploymentsOutput', ], 'errors' => [ [ 'shape' => 'DeploymentIdRequiredException', ], [ 'shape' => 'InvalidDeploymentIdException', ], [ 'shape' => 'BatchLimitExceededException', ], ], ], 'BatchGetOnPremisesInstances' => [ 'name' => 'BatchGetOnPremisesInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'BatchGetOnPremisesInstancesInput', ], 'output' => [ 'shape' => 'BatchGetOnPremisesInstancesOutput', ], 'errors' => [ [ 'shape' => 'InstanceNameRequiredException', ], [ 'shape' => 'InvalidInstanceNameException', ], [ 'shape' => 'BatchLimitExceededException', ], ], ], 'CreateApplication' => [ 'name' => 'CreateApplication', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateApplicationInput', ], 'output' => [ 'shape' => 'CreateApplicationOutput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'ApplicationAlreadyExistsException', ], [ 'shape' => 'ApplicationLimitExceededException', ], ], ], 'CreateDeployment' => [ 'name' => 'CreateDeployment', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateDeploymentInput', ], 'output' => [ 'shape' => 'CreateDeploymentOutput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'ApplicationDoesNotExistException', ], [ 'shape' => 'DeploymentGroupNameRequiredException', ], [ 'shape' => 'InvalidDeploymentGroupNameException', ], [ 'shape' => 'DeploymentGroupDoesNotExistException', ], [ 'shape' => 'RevisionRequiredException', ], [ 'shape' => 'InvalidRevisionException', ], [ 'shape' => 'InvalidDeploymentConfigNameException', ], [ 'shape' => 'DeploymentConfigDoesNotExistException', ], [ 'shape' => 'DescriptionTooLongException', ], [ 'shape' => 'DeploymentLimitExceededException', ], ], ], 'CreateDeploymentConfig' => [ 'name' => 'CreateDeploymentConfig', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateDeploymentConfigInput', ], 'output' => [ 'shape' => 'CreateDeploymentConfigOutput', ], 'errors' => [ [ 'shape' => 'InvalidDeploymentConfigNameException', ], [ 'shape' => 'DeploymentConfigNameRequiredException', ], [ 'shape' => 'DeploymentConfigAlreadyExistsException', ], [ 'shape' => 'InvalidMinimumHealthyHostValueException', ], [ 'shape' => 'DeploymentConfigLimitExceededException', ], ], ], 'CreateDeploymentGroup' => [ 'name' => 'CreateDeploymentGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateDeploymentGroupInput', ], 'output' => [ 'shape' => 'CreateDeploymentGroupOutput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'ApplicationDoesNotExistException', ], [ 'shape' => 'DeploymentGroupNameRequiredException', ], [ 'shape' => 'InvalidDeploymentGroupNameException', ], [ 'shape' => 'DeploymentGroupAlreadyExistsException', ], [ 'shape' => 'InvalidEC2TagException', ], [ 'shape' => 'InvalidTagException', ], [ 'shape' => 'InvalidAutoScalingGroupException', ], [ 'shape' => 'InvalidDeploymentConfigNameException', ], [ 'shape' => 'DeploymentConfigDoesNotExistException', ], [ 'shape' => 'RoleRequiredException', ], [ 'shape' => 'InvalidRoleException', ], [ 'shape' => 'DeploymentGroupLimitExceededException', ], [ 'shape' => 'LifecycleHookLimitExceededException', ], [ 'shape' => 'InvalidTriggerConfigException', ], [ 'shape' => 'TriggerTargetsLimitExceededException', ], ], ], 'DeleteApplication' => [ 'name' => 'DeleteApplication', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteApplicationInput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], ], ], 'DeleteDeploymentConfig' => [ 'name' => 'DeleteDeploymentConfig', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteDeploymentConfigInput', ], 'errors' => [ [ 'shape' => 'InvalidDeploymentConfigNameException', ], [ 'shape' => 'DeploymentConfigNameRequiredException', ], [ 'shape' => 'DeploymentConfigInUseException', ], [ 'shape' => 'InvalidOperationException', ], ], ], 'DeleteDeploymentGroup' => [ 'name' => 'DeleteDeploymentGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteDeploymentGroupInput', ], 'output' => [ 'shape' => 'DeleteDeploymentGroupOutput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'DeploymentGroupNameRequiredException', ], [ 'shape' => 'InvalidDeploymentGroupNameException', ], [ 'shape' => 'InvalidRoleException', ], ], ], 'DeregisterOnPremisesInstance' => [ 'name' => 'DeregisterOnPremisesInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeregisterOnPremisesInstanceInput', ], 'errors' => [ [ 'shape' => 'InstanceNameRequiredException', ], [ 'shape' => 'InvalidInstanceNameException', ], ], ], 'GetApplication' => [ 'name' => 'GetApplication', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetApplicationInput', ], 'output' => [ 'shape' => 'GetApplicationOutput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'ApplicationDoesNotExistException', ], ], ], 'GetApplicationRevision' => [ 'name' => 'GetApplicationRevision', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetApplicationRevisionInput', ], 'output' => [ 'shape' => 'GetApplicationRevisionOutput', ], 'errors' => [ [ 'shape' => 'ApplicationDoesNotExistException', ], [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'RevisionDoesNotExistException', ], [ 'shape' => 'RevisionRequiredException', ], [ 'shape' => 'InvalidRevisionException', ], ], ], 'GetDeployment' => [ 'name' => 'GetDeployment', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetDeploymentInput', ], 'output' => [ 'shape' => 'GetDeploymentOutput', ], 'errors' => [ [ 'shape' => 'DeploymentIdRequiredException', ], [ 'shape' => 'InvalidDeploymentIdException', ], [ 'shape' => 'DeploymentDoesNotExistException', ], ], ], 'GetDeploymentConfig' => [ 'name' => 'GetDeploymentConfig', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetDeploymentConfigInput', ], 'output' => [ 'shape' => 'GetDeploymentConfigOutput', ], 'errors' => [ [ 'shape' => 'InvalidDeploymentConfigNameException', ], [ 'shape' => 'DeploymentConfigNameRequiredException', ], [ 'shape' => 'DeploymentConfigDoesNotExistException', ], ], ], 'GetDeploymentGroup' => [ 'name' => 'GetDeploymentGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetDeploymentGroupInput', ], 'output' => [ 'shape' => 'GetDeploymentGroupOutput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'ApplicationDoesNotExistException', ], [ 'shape' => 'DeploymentGroupNameRequiredException', ], [ 'shape' => 'InvalidDeploymentGroupNameException', ], [ 'shape' => 'DeploymentGroupDoesNotExistException', ], ], ], 'GetDeploymentInstance' => [ 'name' => 'GetDeploymentInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetDeploymentInstanceInput', ], 'output' => [ 'shape' => 'GetDeploymentInstanceOutput', ], 'errors' => [ [ 'shape' => 'DeploymentIdRequiredException', ], [ 'shape' => 'DeploymentDoesNotExistException', ], [ 'shape' => 'InstanceIdRequiredException', ], [ 'shape' => 'InvalidDeploymentIdException', ], [ 'shape' => 'InstanceDoesNotExistException', ], [ 'shape' => 'InvalidInstanceNameException', ], ], ], 'GetOnPremisesInstance' => [ 'name' => 'GetOnPremisesInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetOnPremisesInstanceInput', ], 'output' => [ 'shape' => 'GetOnPremisesInstanceOutput', ], 'errors' => [ [ 'shape' => 'InstanceNameRequiredException', ], [ 'shape' => 'InstanceNotRegisteredException', ], [ 'shape' => 'InvalidInstanceNameException', ], ], ], 'ListApplicationRevisions' => [ 'name' => 'ListApplicationRevisions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListApplicationRevisionsInput', ], 'output' => [ 'shape' => 'ListApplicationRevisionsOutput', ], 'errors' => [ [ 'shape' => 'ApplicationDoesNotExistException', ], [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'InvalidSortByException', ], [ 'shape' => 'InvalidSortOrderException', ], [ 'shape' => 'InvalidBucketNameFilterException', ], [ 'shape' => 'InvalidKeyPrefixFilterException', ], [ 'shape' => 'BucketNameFilterRequiredException', ], [ 'shape' => 'InvalidDeployedStateFilterException', ], [ 'shape' => 'InvalidNextTokenException', ], ], ], 'ListApplications' => [ 'name' => 'ListApplications', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListApplicationsInput', ], 'output' => [ 'shape' => 'ListApplicationsOutput', ], 'errors' => [ [ 'shape' => 'InvalidNextTokenException', ], ], ], 'ListDeploymentConfigs' => [ 'name' => 'ListDeploymentConfigs', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListDeploymentConfigsInput', ], 'output' => [ 'shape' => 'ListDeploymentConfigsOutput', ], 'errors' => [ [ 'shape' => 'InvalidNextTokenException', ], ], ], 'ListDeploymentGroups' => [ 'name' => 'ListDeploymentGroups', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListDeploymentGroupsInput', ], 'output' => [ 'shape' => 'ListDeploymentGroupsOutput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'ApplicationDoesNotExistException', ], [ 'shape' => 'InvalidNextTokenException', ], ], ], 'ListDeploymentInstances' => [ 'name' => 'ListDeploymentInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListDeploymentInstancesInput', ], 'output' => [ 'shape' => 'ListDeploymentInstancesOutput', ], 'errors' => [ [ 'shape' => 'DeploymentIdRequiredException', ], [ 'shape' => 'DeploymentDoesNotExistException', ], [ 'shape' => 'DeploymentNotStartedException', ], [ 'shape' => 'InvalidNextTokenException', ], [ 'shape' => 'InvalidDeploymentIdException', ], [ 'shape' => 'InvalidInstanceStatusException', ], ], ], 'ListDeployments' => [ 'name' => 'ListDeployments', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListDeploymentsInput', ], 'output' => [ 'shape' => 'ListDeploymentsOutput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'ApplicationDoesNotExistException', ], [ 'shape' => 'InvalidDeploymentGroupNameException', ], [ 'shape' => 'DeploymentGroupDoesNotExistException', ], [ 'shape' => 'DeploymentGroupNameRequiredException', ], [ 'shape' => 'InvalidTimeRangeException', ], [ 'shape' => 'InvalidDeploymentStatusException', ], [ 'shape' => 'InvalidNextTokenException', ], ], ], 'ListOnPremisesInstances' => [ 'name' => 'ListOnPremisesInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListOnPremisesInstancesInput', ], 'output' => [ 'shape' => 'ListOnPremisesInstancesOutput', ], 'errors' => [ [ 'shape' => 'InvalidRegistrationStatusException', ], [ 'shape' => 'InvalidTagFilterException', ], [ 'shape' => 'InvalidNextTokenException', ], ], ], 'RegisterApplicationRevision' => [ 'name' => 'RegisterApplicationRevision', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RegisterApplicationRevisionInput', ], 'errors' => [ [ 'shape' => 'ApplicationDoesNotExistException', ], [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'DescriptionTooLongException', ], [ 'shape' => 'RevisionRequiredException', ], [ 'shape' => 'InvalidRevisionException', ], ], ], 'RegisterOnPremisesInstance' => [ 'name' => 'RegisterOnPremisesInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RegisterOnPremisesInstanceInput', ], 'errors' => [ [ 'shape' => 'InstanceNameAlreadyRegisteredException', ], [ 'shape' => 'IamUserArnAlreadyRegisteredException', ], [ 'shape' => 'InstanceNameRequiredException', ], [ 'shape' => 'IamUserArnRequiredException', ], [ 'shape' => 'InvalidInstanceNameException', ], [ 'shape' => 'InvalidIamUserArnException', ], ], ], 'RemoveTagsFromOnPremisesInstances' => [ 'name' => 'RemoveTagsFromOnPremisesInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RemoveTagsFromOnPremisesInstancesInput', ], 'errors' => [ [ 'shape' => 'InstanceNameRequiredException', ], [ 'shape' => 'TagRequiredException', ], [ 'shape' => 'InvalidTagException', ], [ 'shape' => 'TagLimitExceededException', ], [ 'shape' => 'InstanceLimitExceededException', ], [ 'shape' => 'InstanceNotRegisteredException', ], ], ], 'StopDeployment' => [ 'name' => 'StopDeployment', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StopDeploymentInput', ], 'output' => [ 'shape' => 'StopDeploymentOutput', ], 'errors' => [ [ 'shape' => 'DeploymentIdRequiredException', ], [ 'shape' => 'DeploymentDoesNotExistException', ], [ 'shape' => 'DeploymentAlreadyCompletedException', ], [ 'shape' => 'InvalidDeploymentIdException', ], ], ], 'UpdateApplication' => [ 'name' => 'UpdateApplication', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateApplicationInput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'ApplicationAlreadyExistsException', ], [ 'shape' => 'ApplicationDoesNotExistException', ], ], ], 'UpdateDeploymentGroup' => [ 'name' => 'UpdateDeploymentGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateDeploymentGroupInput', ], 'output' => [ 'shape' => 'UpdateDeploymentGroupOutput', ], 'errors' => [ [ 'shape' => 'ApplicationNameRequiredException', ], [ 'shape' => 'InvalidApplicationNameException', ], [ 'shape' => 'ApplicationDoesNotExistException', ], [ 'shape' => 'InvalidDeploymentGroupNameException', ], [ 'shape' => 'DeploymentGroupAlreadyExistsException', ], [ 'shape' => 'DeploymentGroupNameRequiredException', ], [ 'shape' => 'DeploymentGroupDoesNotExistException', ], [ 'shape' => 'InvalidEC2TagException', ], [ 'shape' => 'InvalidTagException', ], [ 'shape' => 'InvalidAutoScalingGroupException', ], [ 'shape' => 'InvalidDeploymentConfigNameException', ], [ 'shape' => 'DeploymentConfigDoesNotExistException', ], [ 'shape' => 'InvalidRoleException', ], [ 'shape' => 'LifecycleHookLimitExceededException', ], [ 'shape' => 'InvalidTriggerConfigException', ], [ 'shape' => 'TriggerTargetsLimitExceededException', ], ], ], ], 'shapes' => [ 'AddTagsToOnPremisesInstancesInput' => [ 'type' => 'structure', 'required' => [ 'tags', 'instanceNames', ], 'members' => [ 'tags' => [ 'shape' => 'TagList', ], 'instanceNames' => [ 'shape' => 'InstanceNameList', ], ], ], 'ApplicationAlreadyExistsException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'ApplicationDoesNotExistException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'ApplicationId' => [ 'type' => 'string', ], 'ApplicationInfo' => [ 'type' => 'structure', 'members' => [ 'applicationId' => [ 'shape' => 'ApplicationId', ], 'applicationName' => [ 'shape' => 'ApplicationName', ], 'createTime' => [ 'shape' => 'Timestamp', ], 'linkedToGitHub' => [ 'shape' => 'Boolean', ], ], ], 'ApplicationLimitExceededException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'ApplicationName' => [ 'type' => 'string', 'max' => 100, 'min' => 1, ], 'ApplicationNameRequiredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'ApplicationRevisionSortBy' => [ 'type' => 'string', 'enum' => [ 'registerTime', 'firstUsedTime', 'lastUsedTime', ], ], 'ApplicationsInfoList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ApplicationInfo', ], ], 'ApplicationsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ApplicationName', ], ], 'AutoScalingGroup' => [ 'type' => 'structure', 'members' => [ 'name' => [ 'shape' => 'AutoScalingGroupName', ], 'hook' => [ 'shape' => 'AutoScalingGroupHook', ], ], ], 'AutoScalingGroupHook' => [ 'type' => 'string', ], 'AutoScalingGroupList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AutoScalingGroup', ], ], 'AutoScalingGroupName' => [ 'type' => 'string', ], 'AutoScalingGroupNameList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AutoScalingGroupName', ], ], 'BatchGetApplicationRevisionsInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', 'revisions', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'revisions' => [ 'shape' => 'RevisionLocationList', ], ], ], 'BatchGetApplicationRevisionsOutput' => [ 'type' => 'structure', 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'errorMessage' => [ 'shape' => 'ErrorMessage', ], 'revisions' => [ 'shape' => 'RevisionInfoList', ], ], ], 'BatchGetApplicationsInput' => [ 'type' => 'structure', 'members' => [ 'applicationNames' => [ 'shape' => 'ApplicationsList', ], ], ], 'BatchGetApplicationsOutput' => [ 'type' => 'structure', 'members' => [ 'applicationsInfo' => [ 'shape' => 'ApplicationsInfoList', ], ], ], 'BatchGetDeploymentGroupsInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', 'deploymentGroupNames', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'deploymentGroupNames' => [ 'shape' => 'DeploymentGroupsList', ], ], ], 'BatchGetDeploymentGroupsOutput' => [ 'type' => 'structure', 'members' => [ 'deploymentGroupsInfo' => [ 'shape' => 'DeploymentGroupInfoList', ], 'errorMessage' => [ 'shape' => 'ErrorMessage', ], ], ], 'BatchGetDeploymentInstancesInput' => [ 'type' => 'structure', 'required' => [ 'deploymentId', 'instanceIds', ], 'members' => [ 'deploymentId' => [ 'shape' => 'DeploymentId', ], 'instanceIds' => [ 'shape' => 'InstancesList', ], ], ], 'BatchGetDeploymentInstancesOutput' => [ 'type' => 'structure', 'members' => [ 'instancesSummary' => [ 'shape' => 'InstanceSummaryList', ], 'errorMessage' => [ 'shape' => 'ErrorMessage', ], ], ], 'BatchGetDeploymentsInput' => [ 'type' => 'structure', 'members' => [ 'deploymentIds' => [ 'shape' => 'DeploymentsList', ], ], ], 'BatchGetDeploymentsOutput' => [ 'type' => 'structure', 'members' => [ 'deploymentsInfo' => [ 'shape' => 'DeploymentsInfoList', ], ], ], 'BatchGetOnPremisesInstancesInput' => [ 'type' => 'structure', 'members' => [ 'instanceNames' => [ 'shape' => 'InstanceNameList', ], ], ], 'BatchGetOnPremisesInstancesOutput' => [ 'type' => 'structure', 'members' => [ 'instanceInfos' => [ 'shape' => 'InstanceInfoList', ], ], ], 'BatchLimitExceededException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'Boolean' => [ 'type' => 'boolean', ], 'BucketNameFilterRequiredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'BundleType' => [ 'type' => 'string', 'enum' => [ 'tar', 'tgz', 'zip', ], ], 'CommitId' => [ 'type' => 'string', ], 'CreateApplicationInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], ], ], 'CreateApplicationOutput' => [ 'type' => 'structure', 'members' => [ 'applicationId' => [ 'shape' => 'ApplicationId', ], ], ], 'CreateDeploymentConfigInput' => [ 'type' => 'structure', 'required' => [ 'deploymentConfigName', ], 'members' => [ 'deploymentConfigName' => [ 'shape' => 'DeploymentConfigName', ], 'minimumHealthyHosts' => [ 'shape' => 'MinimumHealthyHosts', ], ], ], 'CreateDeploymentConfigOutput' => [ 'type' => 'structure', 'members' => [ 'deploymentConfigId' => [ 'shape' => 'DeploymentConfigId', ], ], ], 'CreateDeploymentGroupInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', 'deploymentGroupName', 'serviceRoleArn', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'deploymentGroupName' => [ 'shape' => 'DeploymentGroupName', ], 'deploymentConfigName' => [ 'shape' => 'DeploymentConfigName', ], 'ec2TagFilters' => [ 'shape' => 'EC2TagFilterList', ], 'onPremisesInstanceTagFilters' => [ 'shape' => 'TagFilterList', ], 'autoScalingGroups' => [ 'shape' => 'AutoScalingGroupNameList', ], 'serviceRoleArn' => [ 'shape' => 'Role', ], 'triggerConfigurations' => [ 'shape' => 'TriggerConfigList', ], ], ], 'CreateDeploymentGroupOutput' => [ 'type' => 'structure', 'members' => [ 'deploymentGroupId' => [ 'shape' => 'DeploymentGroupId', ], ], ], 'CreateDeploymentInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'deploymentGroupName' => [ 'shape' => 'DeploymentGroupName', ], 'revision' => [ 'shape' => 'RevisionLocation', ], 'deploymentConfigName' => [ 'shape' => 'DeploymentConfigName', ], 'description' => [ 'shape' => 'Description', ], 'ignoreApplicationStopFailures' => [ 'shape' => 'Boolean', ], ], ], 'CreateDeploymentOutput' => [ 'type' => 'structure', 'members' => [ 'deploymentId' => [ 'shape' => 'DeploymentId', ], ], ], 'DeleteApplicationInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], ], ], 'DeleteDeploymentConfigInput' => [ 'type' => 'structure', 'required' => [ 'deploymentConfigName', ], 'members' => [ 'deploymentConfigName' => [ 'shape' => 'DeploymentConfigName', ], ], ], 'DeleteDeploymentGroupInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', 'deploymentGroupName', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'deploymentGroupName' => [ 'shape' => 'DeploymentGroupName', ], ], ], 'DeleteDeploymentGroupOutput' => [ 'type' => 'structure', 'members' => [ 'hooksNotCleanedUp' => [ 'shape' => 'AutoScalingGroupList', ], ], ], 'DeploymentAlreadyCompletedException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentConfigAlreadyExistsException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentConfigDoesNotExistException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentConfigId' => [ 'type' => 'string', ], 'DeploymentConfigInUseException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentConfigInfo' => [ 'type' => 'structure', 'members' => [ 'deploymentConfigId' => [ 'shape' => 'DeploymentConfigId', ], 'deploymentConfigName' => [ 'shape' => 'DeploymentConfigName', ], 'minimumHealthyHosts' => [ 'shape' => 'MinimumHealthyHosts', ], 'createTime' => [ 'shape' => 'Timestamp', ], ], ], 'DeploymentConfigLimitExceededException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentConfigName' => [ 'type' => 'string', 'max' => 100, 'min' => 1, ], 'DeploymentConfigNameRequiredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentConfigsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DeploymentConfigName', ], ], 'DeploymentCreator' => [ 'type' => 'string', 'enum' => [ 'user', 'autoscaling', ], ], 'DeploymentDoesNotExistException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentGroupAlreadyExistsException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentGroupDoesNotExistException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentGroupId' => [ 'type' => 'string', ], 'DeploymentGroupInfo' => [ 'type' => 'structure', 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'deploymentGroupId' => [ 'shape' => 'DeploymentGroupId', ], 'deploymentGroupName' => [ 'shape' => 'DeploymentGroupName', ], 'deploymentConfigName' => [ 'shape' => 'DeploymentConfigName', ], 'ec2TagFilters' => [ 'shape' => 'EC2TagFilterList', ], 'onPremisesInstanceTagFilters' => [ 'shape' => 'TagFilterList', ], 'autoScalingGroups' => [ 'shape' => 'AutoScalingGroupList', ], 'serviceRoleArn' => [ 'shape' => 'Role', ], 'targetRevision' => [ 'shape' => 'RevisionLocation', ], 'triggerConfigurations' => [ 'shape' => 'TriggerConfigList', ], ], ], 'DeploymentGroupInfoList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DeploymentGroupInfo', ], ], 'DeploymentGroupLimitExceededException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentGroupName' => [ 'type' => 'string', 'max' => 100, 'min' => 1, ], 'DeploymentGroupNameRequiredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentGroupsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DeploymentGroupName', ], ], 'DeploymentId' => [ 'type' => 'string', ], 'DeploymentIdRequiredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentInfo' => [ 'type' => 'structure', 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'deploymentGroupName' => [ 'shape' => 'DeploymentGroupName', ], 'deploymentConfigName' => [ 'shape' => 'DeploymentConfigName', ], 'deploymentId' => [ 'shape' => 'DeploymentId', ], 'revision' => [ 'shape' => 'RevisionLocation', ], 'status' => [ 'shape' => 'DeploymentStatus', ], 'errorInformation' => [ 'shape' => 'ErrorInformation', ], 'createTime' => [ 'shape' => 'Timestamp', ], 'startTime' => [ 'shape' => 'Timestamp', ], 'completeTime' => [ 'shape' => 'Timestamp', ], 'deploymentOverview' => [ 'shape' => 'DeploymentOverview', ], 'description' => [ 'shape' => 'Description', ], 'creator' => [ 'shape' => 'DeploymentCreator', ], 'ignoreApplicationStopFailures' => [ 'shape' => 'Boolean', ], ], ], 'DeploymentLimitExceededException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentNotStartedException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'DeploymentOverview' => [ 'type' => 'structure', 'members' => [ 'Pending' => [ 'shape' => 'InstanceCount', ], 'InProgress' => [ 'shape' => 'InstanceCount', ], 'Succeeded' => [ 'shape' => 'InstanceCount', ], 'Failed' => [ 'shape' => 'InstanceCount', ], 'Skipped' => [ 'shape' => 'InstanceCount', ], ], ], 'DeploymentStatus' => [ 'type' => 'string', 'enum' => [ 'Created', 'Queued', 'InProgress', 'Succeeded', 'Failed', 'Stopped', ], ], 'DeploymentStatusList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DeploymentStatus', ], ], 'DeploymentsInfoList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DeploymentInfo', ], ], 'DeploymentsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DeploymentId', ], ], 'DeregisterOnPremisesInstanceInput' => [ 'type' => 'structure', 'required' => [ 'instanceName', ], 'members' => [ 'instanceName' => [ 'shape' => 'InstanceName', ], ], ], 'Description' => [ 'type' => 'string', ], 'DescriptionTooLongException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'Diagnostics' => [ 'type' => 'structure', 'members' => [ 'errorCode' => [ 'shape' => 'LifecycleErrorCode', ], 'scriptName' => [ 'shape' => 'ScriptName', ], 'message' => [ 'shape' => 'LifecycleMessage', ], 'logTail' => [ 'shape' => 'LogTail', ], ], ], 'EC2TagFilter' => [ 'type' => 'structure', 'members' => [ 'Key' => [ 'shape' => 'Key', ], 'Value' => [ 'shape' => 'Value', ], 'Type' => [ 'shape' => 'EC2TagFilterType', ], ], ], 'EC2TagFilterList' => [ 'type' => 'list', 'member' => [ 'shape' => 'EC2TagFilter', ], ], 'EC2TagFilterType' => [ 'type' => 'string', 'enum' => [ 'KEY_ONLY', 'VALUE_ONLY', 'KEY_AND_VALUE', ], ], 'ETag' => [ 'type' => 'string', ], 'ErrorCode' => [ 'type' => 'string', 'enum' => [ 'DEPLOYMENT_GROUP_MISSING', 'APPLICATION_MISSING', 'REVISION_MISSING', 'IAM_ROLE_MISSING', 'IAM_ROLE_PERMISSIONS', 'NO_EC2_SUBSCRIPTION', 'OVER_MAX_INSTANCES', 'NO_INSTANCES', 'TIMEOUT', 'HEALTH_CONSTRAINTS_INVALID', 'HEALTH_CONSTRAINTS', 'INTERNAL_ERROR', 'THROTTLED', ], ], 'ErrorInformation' => [ 'type' => 'structure', 'members' => [ 'code' => [ 'shape' => 'ErrorCode', ], 'message' => [ 'shape' => 'ErrorMessage', ], ], ], 'ErrorMessage' => [ 'type' => 'string', ], 'GenericRevisionInfo' => [ 'type' => 'structure', 'members' => [ 'description' => [ 'shape' => 'Description', ], 'deploymentGroups' => [ 'shape' => 'DeploymentGroupsList', ], 'firstUsedTime' => [ 'shape' => 'Timestamp', ], 'lastUsedTime' => [ 'shape' => 'Timestamp', ], 'registerTime' => [ 'shape' => 'Timestamp', ], ], ], 'GetApplicationInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], ], ], 'GetApplicationOutput' => [ 'type' => 'structure', 'members' => [ 'application' => [ 'shape' => 'ApplicationInfo', ], ], ], 'GetApplicationRevisionInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', 'revision', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'revision' => [ 'shape' => 'RevisionLocation', ], ], ], 'GetApplicationRevisionOutput' => [ 'type' => 'structure', 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'revision' => [ 'shape' => 'RevisionLocation', ], 'revisionInfo' => [ 'shape' => 'GenericRevisionInfo', ], ], ], 'GetDeploymentConfigInput' => [ 'type' => 'structure', 'required' => [ 'deploymentConfigName', ], 'members' => [ 'deploymentConfigName' => [ 'shape' => 'DeploymentConfigName', ], ], ], 'GetDeploymentConfigOutput' => [ 'type' => 'structure', 'members' => [ 'deploymentConfigInfo' => [ 'shape' => 'DeploymentConfigInfo', ], ], ], 'GetDeploymentGroupInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', 'deploymentGroupName', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'deploymentGroupName' => [ 'shape' => 'DeploymentGroupName', ], ], ], 'GetDeploymentGroupOutput' => [ 'type' => 'structure', 'members' => [ 'deploymentGroupInfo' => [ 'shape' => 'DeploymentGroupInfo', ], ], ], 'GetDeploymentInput' => [ 'type' => 'structure', 'required' => [ 'deploymentId', ], 'members' => [ 'deploymentId' => [ 'shape' => 'DeploymentId', ], ], ], 'GetDeploymentInstanceInput' => [ 'type' => 'structure', 'required' => [ 'deploymentId', 'instanceId', ], 'members' => [ 'deploymentId' => [ 'shape' => 'DeploymentId', ], 'instanceId' => [ 'shape' => 'InstanceId', ], ], ], 'GetDeploymentInstanceOutput' => [ 'type' => 'structure', 'members' => [ 'instanceSummary' => [ 'shape' => 'InstanceSummary', ], ], ], 'GetDeploymentOutput' => [ 'type' => 'structure', 'members' => [ 'deploymentInfo' => [ 'shape' => 'DeploymentInfo', ], ], ], 'GetOnPremisesInstanceInput' => [ 'type' => 'structure', 'required' => [ 'instanceName', ], 'members' => [ 'instanceName' => [ 'shape' => 'InstanceName', ], ], ], 'GetOnPremisesInstanceOutput' => [ 'type' => 'structure', 'members' => [ 'instanceInfo' => [ 'shape' => 'InstanceInfo', ], ], ], 'GitHubLocation' => [ 'type' => 'structure', 'members' => [ 'repository' => [ 'shape' => 'Repository', ], 'commitId' => [ 'shape' => 'CommitId', ], ], ], 'IamUserArn' => [ 'type' => 'string', ], 'IamUserArnAlreadyRegisteredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'IamUserArnRequiredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InstanceArn' => [ 'type' => 'string', ], 'InstanceCount' => [ 'type' => 'long', ], 'InstanceDoesNotExistException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InstanceId' => [ 'type' => 'string', ], 'InstanceIdRequiredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InstanceInfo' => [ 'type' => 'structure', 'members' => [ 'instanceName' => [ 'shape' => 'InstanceName', ], 'iamUserArn' => [ 'shape' => 'IamUserArn', ], 'instanceArn' => [ 'shape' => 'InstanceArn', ], 'registerTime' => [ 'shape' => 'Timestamp', ], 'deregisterTime' => [ 'shape' => 'Timestamp', ], 'tags' => [ 'shape' => 'TagList', ], ], ], 'InstanceInfoList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceInfo', ], ], 'InstanceLimitExceededException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InstanceName' => [ 'type' => 'string', ], 'InstanceNameAlreadyRegisteredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InstanceNameList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceName', ], ], 'InstanceNameRequiredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InstanceNotRegisteredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InstanceStatus' => [ 'type' => 'string', 'enum' => [ 'Pending', 'InProgress', 'Succeeded', 'Failed', 'Skipped', 'Unknown', ], ], 'InstanceStatusList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceStatus', ], ], 'InstanceSummary' => [ 'type' => 'structure', 'members' => [ 'deploymentId' => [ 'shape' => 'DeploymentId', ], 'instanceId' => [ 'shape' => 'InstanceId', ], 'status' => [ 'shape' => 'InstanceStatus', ], 'lastUpdatedAt' => [ 'shape' => 'Timestamp', ], 'lifecycleEvents' => [ 'shape' => 'LifecycleEventList', ], ], ], 'InstanceSummaryList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceSummary', ], ], 'InstancesList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceId', ], ], 'InvalidApplicationNameException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidAutoScalingGroupException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidBucketNameFilterException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidDeployedStateFilterException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidDeploymentConfigNameException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidDeploymentGroupNameException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidDeploymentIdException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidDeploymentStatusException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidEC2TagException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidIamUserArnException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidInstanceNameException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidInstanceStatusException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidKeyPrefixFilterException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidMinimumHealthyHostValueException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidNextTokenException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidOperationException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidRegistrationStatusException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidRevisionException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidRoleException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidSortByException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidSortOrderException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidTagException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidTagFilterException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidTimeRangeException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'InvalidTriggerConfigException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'Key' => [ 'type' => 'string', ], 'LifecycleErrorCode' => [ 'type' => 'string', 'enum' => [ 'Success', 'ScriptMissing', 'ScriptNotExecutable', 'ScriptTimedOut', 'ScriptFailed', 'UnknownError', ], ], 'LifecycleEvent' => [ 'type' => 'structure', 'members' => [ 'lifecycleEventName' => [ 'shape' => 'LifecycleEventName', ], 'diagnostics' => [ 'shape' => 'Diagnostics', ], 'startTime' => [ 'shape' => 'Timestamp', ], 'endTime' => [ 'shape' => 'Timestamp', ], 'status' => [ 'shape' => 'LifecycleEventStatus', ], ], ], 'LifecycleEventList' => [ 'type' => 'list', 'member' => [ 'shape' => 'LifecycleEvent', ], ], 'LifecycleEventName' => [ 'type' => 'string', ], 'LifecycleEventStatus' => [ 'type' => 'string', 'enum' => [ 'Pending', 'InProgress', 'Succeeded', 'Failed', 'Skipped', 'Unknown', ], ], 'LifecycleHookLimitExceededException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'LifecycleMessage' => [ 'type' => 'string', ], 'ListApplicationRevisionsInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'sortBy' => [ 'shape' => 'ApplicationRevisionSortBy', ], 'sortOrder' => [ 'shape' => 'SortOrder', ], 's3Bucket' => [ 'shape' => 'S3Bucket', ], 's3KeyPrefix' => [ 'shape' => 'S3Key', ], 'deployed' => [ 'shape' => 'ListStateFilterAction', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListApplicationRevisionsOutput' => [ 'type' => 'structure', 'members' => [ 'revisions' => [ 'shape' => 'RevisionLocationList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListApplicationsInput' => [ 'type' => 'structure', 'members' => [ 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListApplicationsOutput' => [ 'type' => 'structure', 'members' => [ 'applications' => [ 'shape' => 'ApplicationsList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListDeploymentConfigsInput' => [ 'type' => 'structure', 'members' => [ 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListDeploymentConfigsOutput' => [ 'type' => 'structure', 'members' => [ 'deploymentConfigsList' => [ 'shape' => 'DeploymentConfigsList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListDeploymentGroupsInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListDeploymentGroupsOutput' => [ 'type' => 'structure', 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'deploymentGroups' => [ 'shape' => 'DeploymentGroupsList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListDeploymentInstancesInput' => [ 'type' => 'structure', 'required' => [ 'deploymentId', ], 'members' => [ 'deploymentId' => [ 'shape' => 'DeploymentId', ], 'nextToken' => [ 'shape' => 'NextToken', ], 'instanceStatusFilter' => [ 'shape' => 'InstanceStatusList', ], ], ], 'ListDeploymentInstancesOutput' => [ 'type' => 'structure', 'members' => [ 'instancesList' => [ 'shape' => 'InstancesList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListDeploymentsInput' => [ 'type' => 'structure', 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'deploymentGroupName' => [ 'shape' => 'DeploymentGroupName', ], 'includeOnlyStatuses' => [ 'shape' => 'DeploymentStatusList', ], 'createTimeRange' => [ 'shape' => 'TimeRange', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListDeploymentsOutput' => [ 'type' => 'structure', 'members' => [ 'deployments' => [ 'shape' => 'DeploymentsList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListOnPremisesInstancesInput' => [ 'type' => 'structure', 'members' => [ 'registrationStatus' => [ 'shape' => 'RegistrationStatus', ], 'tagFilters' => [ 'shape' => 'TagFilterList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListOnPremisesInstancesOutput' => [ 'type' => 'structure', 'members' => [ 'instanceNames' => [ 'shape' => 'InstanceNameList', ], 'nextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListStateFilterAction' => [ 'type' => 'string', 'enum' => [ 'include', 'exclude', 'ignore', ], ], 'LogTail' => [ 'type' => 'string', ], 'Message' => [ 'type' => 'string', ], 'MinimumHealthyHosts' => [ 'type' => 'structure', 'members' => [ 'value' => [ 'shape' => 'MinimumHealthyHostsValue', ], 'type' => [ 'shape' => 'MinimumHealthyHostsType', ], ], ], 'MinimumHealthyHostsType' => [ 'type' => 'string', 'enum' => [ 'HOST_COUNT', 'FLEET_PERCENT', ], ], 'MinimumHealthyHostsValue' => [ 'type' => 'integer', ], 'NextToken' => [ 'type' => 'string', ], 'RegisterApplicationRevisionInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', 'revision', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'description' => [ 'shape' => 'Description', ], 'revision' => [ 'shape' => 'RevisionLocation', ], ], ], 'RegisterOnPremisesInstanceInput' => [ 'type' => 'structure', 'required' => [ 'instanceName', 'iamUserArn', ], 'members' => [ 'instanceName' => [ 'shape' => 'InstanceName', ], 'iamUserArn' => [ 'shape' => 'IamUserArn', ], ], ], 'RegistrationStatus' => [ 'type' => 'string', 'enum' => [ 'Registered', 'Deregistered', ], ], 'RemoveTagsFromOnPremisesInstancesInput' => [ 'type' => 'structure', 'required' => [ 'tags', 'instanceNames', ], 'members' => [ 'tags' => [ 'shape' => 'TagList', ], 'instanceNames' => [ 'shape' => 'InstanceNameList', ], ], ], 'Repository' => [ 'type' => 'string', ], 'RevisionDoesNotExistException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'RevisionInfo' => [ 'type' => 'structure', 'members' => [ 'revisionLocation' => [ 'shape' => 'RevisionLocation', ], 'genericRevisionInfo' => [ 'shape' => 'GenericRevisionInfo', ], ], ], 'RevisionInfoList' => [ 'type' => 'list', 'member' => [ 'shape' => 'RevisionInfo', ], ], 'RevisionLocation' => [ 'type' => 'structure', 'members' => [ 'revisionType' => [ 'shape' => 'RevisionLocationType', ], 's3Location' => [ 'shape' => 'S3Location', ], 'gitHubLocation' => [ 'shape' => 'GitHubLocation', ], ], ], 'RevisionLocationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'RevisionLocation', ], ], 'RevisionLocationType' => [ 'type' => 'string', 'enum' => [ 'S3', 'GitHub', ], ], 'RevisionRequiredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'Role' => [ 'type' => 'string', ], 'RoleRequiredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'S3Bucket' => [ 'type' => 'string', ], 'S3Key' => [ 'type' => 'string', ], 'S3Location' => [ 'type' => 'structure', 'members' => [ 'bucket' => [ 'shape' => 'S3Bucket', ], 'key' => [ 'shape' => 'S3Key', ], 'bundleType' => [ 'shape' => 'BundleType', ], 'version' => [ 'shape' => 'VersionId', ], 'eTag' => [ 'shape' => 'ETag', ], ], ], 'ScriptName' => [ 'type' => 'string', ], 'SortOrder' => [ 'type' => 'string', 'enum' => [ 'ascending', 'descending', ], ], 'StopDeploymentInput' => [ 'type' => 'structure', 'required' => [ 'deploymentId', ], 'members' => [ 'deploymentId' => [ 'shape' => 'DeploymentId', ], ], ], 'StopDeploymentOutput' => [ 'type' => 'structure', 'members' => [ 'status' => [ 'shape' => 'StopStatus', ], 'statusMessage' => [ 'shape' => 'Message', ], ], ], 'StopStatus' => [ 'type' => 'string', 'enum' => [ 'Pending', 'Succeeded', ], ], 'Tag' => [ 'type' => 'structure', 'members' => [ 'Key' => [ 'shape' => 'Key', ], 'Value' => [ 'shape' => 'Value', ], ], ], 'TagFilter' => [ 'type' => 'structure', 'members' => [ 'Key' => [ 'shape' => 'Key', ], 'Value' => [ 'shape' => 'Value', ], 'Type' => [ 'shape' => 'TagFilterType', ], ], ], 'TagFilterList' => [ 'type' => 'list', 'member' => [ 'shape' => 'TagFilter', ], ], 'TagFilterType' => [ 'type' => 'string', 'enum' => [ 'KEY_ONLY', 'VALUE_ONLY', 'KEY_AND_VALUE', ], ], 'TagLimitExceededException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'TagList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Tag', ], ], 'TagRequiredException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'TimeRange' => [ 'type' => 'structure', 'members' => [ 'start' => [ 'shape' => 'Timestamp', ], 'end' => [ 'shape' => 'Timestamp', ], ], ], 'Timestamp' => [ 'type' => 'timestamp', ], 'TriggerConfig' => [ 'type' => 'structure', 'members' => [ 'triggerName' => [ 'shape' => 'TriggerName', ], 'triggerTargetArn' => [ 'shape' => 'TriggerTargetArn', ], 'triggerEvents' => [ 'shape' => 'TriggerEventTypeList', ], ], ], 'TriggerConfigList' => [ 'type' => 'list', 'member' => [ 'shape' => 'TriggerConfig', ], ], 'TriggerEventType' => [ 'type' => 'string', 'enum' => [ 'DeploymentStart', 'DeploymentSuccess', 'DeploymentFailure', 'DeploymentStop', 'InstanceStart', 'InstanceSuccess', 'InstanceFailure', ], ], 'TriggerEventTypeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'TriggerEventType', ], ], 'TriggerName' => [ 'type' => 'string', ], 'TriggerTargetArn' => [ 'type' => 'string', ], 'TriggerTargetsLimitExceededException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'UpdateApplicationInput' => [ 'type' => 'structure', 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'newApplicationName' => [ 'shape' => 'ApplicationName', ], ], ], 'UpdateDeploymentGroupInput' => [ 'type' => 'structure', 'required' => [ 'applicationName', 'currentDeploymentGroupName', ], 'members' => [ 'applicationName' => [ 'shape' => 'ApplicationName', ], 'currentDeploymentGroupName' => [ 'shape' => 'DeploymentGroupName', ], 'newDeploymentGroupName' => [ 'shape' => 'DeploymentGroupName', ], 'deploymentConfigName' => [ 'shape' => 'DeploymentConfigName', ], 'ec2TagFilters' => [ 'shape' => 'EC2TagFilterList', ], 'onPremisesInstanceTagFilters' => [ 'shape' => 'TagFilterList', ], 'autoScalingGroups' => [ 'shape' => 'AutoScalingGroupNameList', ], 'serviceRoleArn' => [ 'shape' => 'Role', ], 'triggerConfigurations' => [ 'shape' => 'TriggerConfigList', ], ], ], 'UpdateDeploymentGroupOutput' => [ 'type' => 'structure', 'members' => [ 'hooksNotCleanedUp' => [ 'shape' => 'AutoScalingGroupList', ], ], ], 'Value' => [ 'type' => 'string', ], 'VersionId' => [ 'type' => 'string', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/manifest.json.php:return [ 'acm' => [ 'namespace' => 'Acm', 'versions' => [ 'latest' => '2015-12-08', '2015-12-08' => '2015-12-08', ], ], 'apigateway' => [ 'namespace' => 'ApiGateway', 'versions' => [ 'latest' => '2015-07-09', '2015-07-09' => '2015-07-09', '2015-06-01' => '2015-07-09', ], ], 'application-autoscaling' => [ 'namespace' => 'ApplicationAutoScaling', 'versions' => [ 'latest' => '2016-02-06', '2016-02-06' => '2016-02-06', ], ], 'autoscaling' => [ 'namespace' => 'AutoScaling', 'versions' => [ 'latest' => '2011-01-01', '2011-01-01' => '2011-01-01', ], ], 'cloudformation' => [ 'namespace' => 'CloudFormation', 'versions' => [ 'latest' => '2010-05-15', '2010-05-15' => '2010-05-15', ], ], 'cloudfront' => [ 'namespace' => 'CloudFront', 'versions' => [ 'latest' => '2016-01-28', '2016-01-28' => '2016-01-28', '2016-01-13' => '2016-01-28', '2015-09-17' => '2016-01-28', '2015-07-27' => '2015-07-27', '2015-04-17' => '2015-07-27', '2014-11-06' => '2015-07-27', ], ], 'cloudhsm' => [ 'namespace' => 'CloudHsm', 'versions' => [ 'latest' => '2014-05-30', '2014-05-30' => '2014-05-30', ], ], 'cloudsearch' => [ 'namespace' => 'CloudSearch', 'versions' => [ 'latest' => '2013-01-01', '2013-01-01' => '2013-01-01', ], ], 'cloudsearchdomain' => [ 'namespace' => 'CloudSearchDomain', 'versions' => [ 'latest' => '2013-01-01', '2013-01-01' => '2013-01-01', ], ], 'cloudtrail' => [ 'namespace' => 'CloudTrail', 'versions' => [ 'latest' => '2013-11-01', '2013-11-01' => '2013-11-01', ], ], 'codecommit' => [ 'namespace' => 'CodeCommit', 'versions' => [ 'latest' => '2015-04-13', '2015-04-13' => '2015-04-13', ], ], 'codedeploy' => [ 'namespace' => 'CodeDeploy', 'versions' => [ 'latest' => '2014-10-06', '2014-10-06' => '2014-10-06', ], ], 'codepipeline' => [ 'namespace' => 'CodePipeline', 'versions' => [ 'latest' => '2015-07-09', '2015-07-09' => '2015-07-09', ], ], 'cognito-identity' => [ 'namespace' => 'CognitoIdentity', 'versions' => [ 'latest' => '2014-06-30', '2014-06-30' => '2014-06-30', ], ], 'cognito-idp' => [ 'namespace' => 'CognitoIdentityProvider', 'versions' => [ 'latest' => '2016-04-18', '2016-04-18' => '2016-04-18', ], ], 'cognito-sync' => [ 'namespace' => 'CognitoSync', 'versions' => [ 'latest' => '2014-06-30', '2014-06-30' => '2014-06-30', ], ], 'config' => [ 'namespace' => 'ConfigService', 'versions' => [ 'latest' => '2014-11-12', '2014-11-12' => '2014-11-12', ], ], 'data.iot' => [ 'namespace' => 'IotDataPlane', 'versions' => [ 'latest' => '2015-05-28', '2015-05-28' => '2015-05-28', ], ], 'datapipeline' => [ 'namespace' => 'DataPipeline', 'versions' => [ 'latest' => '2012-10-29', '2012-10-29' => '2012-10-29', ], ], 'devicefarm' => [ 'namespace' => 'DeviceFarm', 'versions' => [ 'latest' => '2015-06-23', '2015-06-23' => '2015-06-23', ], ], 'directconnect' => [ 'namespace' => 'DirectConnect', 'versions' => [ 'latest' => '2012-10-25', '2012-10-25' => '2012-10-25', ], ], 'discovery' => [ 'namespace' => 'ApplicationDiscoveryService', 'versions' => [ 'latest' => '2015-11-01', '2015-11-01' => '2015-11-01', ], ], 'dms' => [ 'namespace' => 'DatabaseMigrationService', 'versions' => [ 'latest' => '2016-01-01', '2016-01-01' => '2016-01-01', ], ], 'ds' => [ 'namespace' => 'DirectoryService', 'versions' => [ 'latest' => '2015-04-16', '2015-04-16' => '2015-04-16', ], ], 'dynamodb' => [ 'namespace' => 'DynamoDb', 'versions' => [ 'latest' => '2012-08-10', '2012-08-10' => '2012-08-10', ], ], 'ec2' => [ 'namespace' => 'Ec2', 'versions' => [ 'latest' => '2015-10-01', '2015-10-01' => '2015-10-01', '2015-04-15' => '2015-10-01', ], ], 'ecr' => [ 'namespace' => 'Ecr', 'versions' => [ 'latest' => '2015-09-21', '2015-09-21' => '2015-09-21', ], ], 'ecs' => [ 'namespace' => 'Ecs', 'versions' => [ 'latest' => '2014-11-13', '2014-11-13' => '2014-11-13', ], ], 'elasticache' => [ 'namespace' => 'ElastiCache', 'versions' => [ 'latest' => '2015-02-02', '2015-02-02' => '2015-02-02', ], ], 'elasticbeanstalk' => [ 'namespace' => 'ElasticBeanstalk', 'versions' => [ 'latest' => '2010-12-01', '2010-12-01' => '2010-12-01', ], ], 'elasticfilesystem' => [ 'namespace' => 'Efs', 'versions' => [ 'latest' => '2015-02-01', '2015-02-01' => '2015-02-01', ], ], 'elasticloadbalancing' => [ 'namespace' => 'ElasticLoadBalancing', 'versions' => [ 'latest' => '2012-06-01', '2012-06-01' => '2012-06-01', ], ], 'elasticmapreduce' => [ 'namespace' => 'Emr', 'versions' => [ 'latest' => '2009-03-31', '2009-03-31' => '2009-03-31', ], ], 'elastictranscoder' => [ 'namespace' => 'ElasticTranscoder', 'versions' => [ 'latest' => '2012-09-25', '2012-09-25' => '2012-09-25', ], ], 'email' => [ 'namespace' => 'Ses', 'versions' => [ 'latest' => '2010-12-01', '2010-12-01' => '2010-12-01', ], ], 'es' => [ 'namespace' => 'ElasticsearchService', 'versions' => [ 'latest' => '2015-01-01', '2015-01-01' => '2015-01-01', ], ], 'events' => [ 'namespace' => 'CloudWatchEvents', 'versions' => [ 'latest' => '2015-10-07', '2015-10-07' => '2015-10-07', '2014-02-03' => '2015-10-07', ], ], 'firehose' => [ 'namespace' => 'Firehose', 'versions' => [ 'latest' => '2015-08-04', '2015-08-04' => '2015-08-04', ], ], 'gamelift' => [ 'namespace' => 'GameLift', 'versions' => [ 'latest' => '2015-10-01', '2015-10-01' => '2015-10-01', ], ], 'glacier' => [ 'namespace' => 'Glacier', 'versions' => [ 'latest' => '2012-06-01', '2012-06-01' => '2012-06-01', ], ], 'iam' => [ 'namespace' => 'Iam', 'versions' => [ 'latest' => '2010-05-08', '2010-05-08' => '2010-05-08', ], ], 'importexport' => [ 'namespace' => 'ImportExport', 'versions' => [ 'latest' => '2010-06-01', '2010-06-01' => '2010-06-01', ], ], 'inspector' => [ 'namespace' => 'Inspector', 'versions' => [ 'latest' => '2016-02-16', '2016-02-16' => '2016-02-16', '2015-08-18' => '2016-02-16', ], ], 'iot' => [ 'namespace' => 'Iot', 'versions' => [ 'latest' => '2015-05-28', '2015-05-28' => '2015-05-28', ], ], 'kinesis' => [ 'namespace' => 'Kinesis', 'versions' => [ 'latest' => '2013-12-02', '2013-12-02' => '2013-12-02', ], ], 'kms' => [ 'namespace' => 'Kms', 'versions' => [ 'latest' => '2014-11-01', '2014-11-01' => '2014-11-01', ], ], 'lambda' => [ 'namespace' => 'Lambda', 'versions' => [ 'latest' => '2015-03-31', '2015-03-31' => '2015-03-31', ], ], 'logs' => [ 'namespace' => 'CloudWatchLogs', 'versions' => [ 'latest' => '2014-03-28', '2014-03-28' => '2014-03-28', ], ], 'machinelearning' => [ 'namespace' => 'MachineLearning', 'versions' => [ 'latest' => '2014-12-12', '2014-12-12' => '2014-12-12', ], ], 'marketplacecommerceanalytics' => [ 'namespace' => 'MarketplaceCommerceAnalytics', 'versions' => [ 'latest' => '2015-07-01', '2015-07-01' => '2015-07-01', ], ], 'metering.marketplace' => [ 'namespace' => 'MarketplaceMetering', 'versions' => [ 'latest' => '2016-01-14', '2016-01-14' => '2016-01-14', ], ], 'monitoring' => [ 'namespace' => 'CloudWatch', 'versions' => [ 'latest' => '2010-08-01', '2010-08-01' => '2010-08-01', ], ], 'opsworks' => [ 'namespace' => 'OpsWorks', 'versions' => [ 'latest' => '2013-02-18', '2013-02-18' => '2013-02-18', ], ], 'rds' => [ 'namespace' => 'Rds', 'versions' => [ 'latest' => '2014-10-31', '2014-10-31' => '2014-10-31', ], ], 'redshift' => [ 'namespace' => 'Redshift', 'versions' => [ 'latest' => '2012-12-01', '2012-12-01' => '2012-12-01', ], ], 'route53' => [ 'namespace' => 'Route53', 'versions' => [ 'latest' => '2013-04-01', '2013-04-01' => '2013-04-01', ], ], 'route53domains' => [ 'namespace' => 'Route53Domains', 'versions' => [ 'latest' => '2014-05-15', '2014-05-15' => '2014-05-15', ], ], 's3' => [ 'namespace' => 'S3', 'versions' => [ 'latest' => '2006-03-01', '2006-03-01' => '2006-03-01', ], ], 'sns' => [ 'namespace' => 'Sns', 'versions' => [ 'latest' => '2010-03-31', '2010-03-31' => '2010-03-31', ], ], 'sqs' => [ 'namespace' => 'Sqs', 'versions' => [ 'latest' => '2012-11-05', '2012-11-05' => '2012-11-05', ], ], 'ssm' => [ 'namespace' => 'Ssm', 'versions' => [ 'latest' => '2014-11-06', '2014-11-06' => '2014-11-06', ], ], 'storagegateway' => [ 'namespace' => 'StorageGateway', 'versions' => [ 'latest' => '2013-06-30', '2013-06-30' => '2013-06-30', ], ], 'streams.dynamodb' => [ 'namespace' => 'DynamoDbStreams', 'versions' => [ 'latest' => '2012-08-10', '2012-08-10' => '2012-08-10', ], ], 'sts' => [ 'namespace' => 'Sts', 'versions' => [ 'latest' => '2011-06-15', '2011-06-15' => '2011-06-15', ], ], 'support' => [ 'namespace' => 'Support', 'versions' => [ 'latest' => '2013-04-15', '2013-04-15' => '2013-04-15', ], ], 'swf' => [ 'namespace' => 'Swf', 'versions' => [ 'latest' => '2012-01-25', '2012-01-25' => '2012-01-25', ], ], 'waf' => [ 'namespace' => 'Waf', 'versions' => [ 'latest' => '2015-08-24', '2015-08-24' => '2015-08-24', ], ], 'workspaces' => [ 'namespace' => 'WorkSpaces', 'versions' => [ 'latest' => '2015-04-08', '2015-04-08' => '2015-04-08', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/waf/2015-08-24/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2015-08-24', 'endpointPrefix' => 'waf', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceAbbreviation' => 'WAF', 'serviceFullName' => 'AWS WAF', 'signatureVersion' => 'v4', 'targetPrefix' => 'AWSWAF_20150824', ], 'operations' => [ 'CreateByteMatchSet' => [ 'name' => 'CreateByteMatchSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateByteMatchSetRequest', ], 'output' => [ 'shape' => 'CreateByteMatchSetResponse', ], 'errors' => [ [ 'shape' => 'WAFDisallowedNameException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'CreateIPSet' => [ 'name' => 'CreateIPSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateIPSetRequest', ], 'output' => [ 'shape' => 'CreateIPSetResponse', ], 'errors' => [ [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFDisallowedNameException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'CreateRule' => [ 'name' => 'CreateRule', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateRuleRequest', ], 'output' => [ 'shape' => 'CreateRuleResponse', ], 'errors' => [ [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFDisallowedNameException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'CreateSizeConstraintSet' => [ 'name' => 'CreateSizeConstraintSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateSizeConstraintSetRequest', ], 'output' => [ 'shape' => 'CreateSizeConstraintSetResponse', ], 'errors' => [ [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFDisallowedNameException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'CreateSqlInjectionMatchSet' => [ 'name' => 'CreateSqlInjectionMatchSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateSqlInjectionMatchSetRequest', ], 'output' => [ 'shape' => 'CreateSqlInjectionMatchSetResponse', ], 'errors' => [ [ 'shape' => 'WAFDisallowedNameException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'CreateWebACL' => [ 'name' => 'CreateWebACL', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateWebACLRequest', ], 'output' => [ 'shape' => 'CreateWebACLResponse', ], 'errors' => [ [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFDisallowedNameException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'CreateXssMatchSet' => [ 'name' => 'CreateXssMatchSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateXssMatchSetRequest', ], 'output' => [ 'shape' => 'CreateXssMatchSetResponse', ], 'errors' => [ [ 'shape' => 'WAFDisallowedNameException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'DeleteByteMatchSet' => [ 'name' => 'DeleteByteMatchSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteByteMatchSetRequest', ], 'output' => [ 'shape' => 'DeleteByteMatchSetResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFReferencedItemException', ], [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFNonEmptyEntityException', ], ], ], 'DeleteIPSet' => [ 'name' => 'DeleteIPSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteIPSetRequest', ], 'output' => [ 'shape' => 'DeleteIPSetResponse', ], 'errors' => [ [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFReferencedItemException', ], [ 'shape' => 'WAFNonEmptyEntityException', ], ], ], 'DeleteRule' => [ 'name' => 'DeleteRule', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteRuleRequest', ], 'output' => [ 'shape' => 'DeleteRuleResponse', ], 'errors' => [ [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFReferencedItemException', ], [ 'shape' => 'WAFNonEmptyEntityException', ], ], ], 'DeleteSizeConstraintSet' => [ 'name' => 'DeleteSizeConstraintSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSizeConstraintSetRequest', ], 'output' => [ 'shape' => 'DeleteSizeConstraintSetResponse', ], 'errors' => [ [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFReferencedItemException', ], [ 'shape' => 'WAFNonEmptyEntityException', ], ], ], 'DeleteSqlInjectionMatchSet' => [ 'name' => 'DeleteSqlInjectionMatchSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSqlInjectionMatchSetRequest', ], 'output' => [ 'shape' => 'DeleteSqlInjectionMatchSetResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFReferencedItemException', ], [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFNonEmptyEntityException', ], ], ], 'DeleteWebACL' => [ 'name' => 'DeleteWebACL', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteWebACLRequest', ], 'output' => [ 'shape' => 'DeleteWebACLResponse', ], 'errors' => [ [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFReferencedItemException', ], [ 'shape' => 'WAFNonEmptyEntityException', ], ], ], 'DeleteXssMatchSet' => [ 'name' => 'DeleteXssMatchSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteXssMatchSetRequest', ], 'output' => [ 'shape' => 'DeleteXssMatchSetResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFReferencedItemException', ], [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFNonEmptyEntityException', ], ], ], 'GetByteMatchSet' => [ 'name' => 'GetByteMatchSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetByteMatchSetRequest', ], 'output' => [ 'shape' => 'GetByteMatchSetResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], ], ], 'GetChangeToken' => [ 'name' => 'GetChangeToken', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetChangeTokenRequest', ], 'output' => [ 'shape' => 'GetChangeTokenResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], ], ], 'GetChangeTokenStatus' => [ 'name' => 'GetChangeTokenStatus', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetChangeTokenStatusRequest', ], 'output' => [ 'shape' => 'GetChangeTokenStatusResponse', ], 'errors' => [ [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFInternalErrorException', ], ], ], 'GetIPSet' => [ 'name' => 'GetIPSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetIPSetRequest', ], 'output' => [ 'shape' => 'GetIPSetResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], ], ], 'GetRule' => [ 'name' => 'GetRule', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetRuleRequest', ], 'output' => [ 'shape' => 'GetRuleResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], ], ], 'GetSampledRequests' => [ 'name' => 'GetSampledRequests', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetSampledRequestsRequest', ], 'output' => [ 'shape' => 'GetSampledRequestsResponse', ], 'errors' => [ [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFInternalErrorException', ], ], ], 'GetSizeConstraintSet' => [ 'name' => 'GetSizeConstraintSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetSizeConstraintSetRequest', ], 'output' => [ 'shape' => 'GetSizeConstraintSetResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], ], ], 'GetSqlInjectionMatchSet' => [ 'name' => 'GetSqlInjectionMatchSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetSqlInjectionMatchSetRequest', ], 'output' => [ 'shape' => 'GetSqlInjectionMatchSetResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], ], ], 'GetWebACL' => [ 'name' => 'GetWebACL', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetWebACLRequest', ], 'output' => [ 'shape' => 'GetWebACLResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], ], ], 'GetXssMatchSet' => [ 'name' => 'GetXssMatchSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetXssMatchSetRequest', ], 'output' => [ 'shape' => 'GetXssMatchSetResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFNonexistentItemException', ], ], ], 'ListByteMatchSets' => [ 'name' => 'ListByteMatchSets', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListByteMatchSetsRequest', ], 'output' => [ 'shape' => 'ListByteMatchSetsResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], ], ], 'ListIPSets' => [ 'name' => 'ListIPSets', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListIPSetsRequest', ], 'output' => [ 'shape' => 'ListIPSetsResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], ], ], 'ListRules' => [ 'name' => 'ListRules', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListRulesRequest', ], 'output' => [ 'shape' => 'ListRulesResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], ], ], 'ListSizeConstraintSets' => [ 'name' => 'ListSizeConstraintSets', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListSizeConstraintSetsRequest', ], 'output' => [ 'shape' => 'ListSizeConstraintSetsResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], ], ], 'ListSqlInjectionMatchSets' => [ 'name' => 'ListSqlInjectionMatchSets', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListSqlInjectionMatchSetsRequest', ], 'output' => [ 'shape' => 'ListSqlInjectionMatchSetsResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], ], ], 'ListWebACLs' => [ 'name' => 'ListWebACLs', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListWebACLsRequest', ], 'output' => [ 'shape' => 'ListWebACLsResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], ], ], 'ListXssMatchSets' => [ 'name' => 'ListXssMatchSets', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListXssMatchSetsRequest', ], 'output' => [ 'shape' => 'ListXssMatchSetsResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], ], ], 'UpdateByteMatchSet' => [ 'name' => 'UpdateByteMatchSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateByteMatchSetRequest', ], 'output' => [ 'shape' => 'UpdateByteMatchSetResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFInvalidOperationException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFNonexistentContainerException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'UpdateIPSet' => [ 'name' => 'UpdateIPSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateIPSetRequest', ], 'output' => [ 'shape' => 'UpdateIPSetResponse', ], 'errors' => [ [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFInvalidOperationException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFNonexistentContainerException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFReferencedItemException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'UpdateRule' => [ 'name' => 'UpdateRule', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateRuleRequest', ], 'output' => [ 'shape' => 'UpdateRuleResponse', ], 'errors' => [ [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFInvalidOperationException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFNonexistentContainerException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFReferencedItemException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'UpdateSizeConstraintSet' => [ 'name' => 'UpdateSizeConstraintSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateSizeConstraintSetRequest', ], 'output' => [ 'shape' => 'UpdateSizeConstraintSetResponse', ], 'errors' => [ [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFInvalidOperationException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFNonexistentContainerException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFReferencedItemException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'UpdateSqlInjectionMatchSet' => [ 'name' => 'UpdateSqlInjectionMatchSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateSqlInjectionMatchSetRequest', ], 'output' => [ 'shape' => 'UpdateSqlInjectionMatchSetResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFInvalidOperationException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFNonexistentContainerException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'UpdateWebACL' => [ 'name' => 'UpdateWebACL', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateWebACLRequest', ], 'output' => [ 'shape' => 'UpdateWebACLResponse', ], 'errors' => [ [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFInvalidOperationException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFNonexistentContainerException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFReferencedItemException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], 'UpdateXssMatchSet' => [ 'name' => 'UpdateXssMatchSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateXssMatchSetRequest', ], 'output' => [ 'shape' => 'UpdateXssMatchSetResponse', ], 'errors' => [ [ 'shape' => 'WAFInternalErrorException', ], [ 'shape' => 'WAFInvalidAccountException', ], [ 'shape' => 'WAFInvalidOperationException', ], [ 'shape' => 'WAFInvalidParameterException', ], [ 'shape' => 'WAFNonexistentContainerException', ], [ 'shape' => 'WAFNonexistentItemException', ], [ 'shape' => 'WAFStaleDataException', ], [ 'shape' => 'WAFLimitsExceededException', ], ], ], ], 'shapes' => [ 'Action' => [ 'type' => 'string', ], 'ActivatedRule' => [ 'type' => 'structure', 'required' => [ 'Priority', 'RuleId', 'Action', ], 'members' => [ 'Priority' => [ 'shape' => 'RulePriority', ], 'RuleId' => [ 'shape' => 'ResourceId', ], 'Action' => [ 'shape' => 'WafAction', ], ], ], 'ActivatedRules' => [ 'type' => 'list', 'member' => [ 'shape' => 'ActivatedRule', ], ], 'ByteMatchSet' => [ 'type' => 'structure', 'required' => [ 'ByteMatchSetId', 'ByteMatchTuples', ], 'members' => [ 'ByteMatchSetId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], 'ByteMatchTuples' => [ 'shape' => 'ByteMatchTuples', ], ], ], 'ByteMatchSetSummaries' => [ 'type' => 'list', 'member' => [ 'shape' => 'ByteMatchSetSummary', ], ], 'ByteMatchSetSummary' => [ 'type' => 'structure', 'required' => [ 'ByteMatchSetId', 'Name', ], 'members' => [ 'ByteMatchSetId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], ], ], 'ByteMatchSetUpdate' => [ 'type' => 'structure', 'required' => [ 'Action', 'ByteMatchTuple', ], 'members' => [ 'Action' => [ 'shape' => 'ChangeAction', ], 'ByteMatchTuple' => [ 'shape' => 'ByteMatchTuple', ], ], ], 'ByteMatchSetUpdates' => [ 'type' => 'list', 'member' => [ 'shape' => 'ByteMatchSetUpdate', ], ], 'ByteMatchTargetString' => [ 'type' => 'blob', ], 'ByteMatchTuple' => [ 'type' => 'structure', 'required' => [ 'FieldToMatch', 'TargetString', 'TextTransformation', 'PositionalConstraint', ], 'members' => [ 'FieldToMatch' => [ 'shape' => 'FieldToMatch', ], 'TargetString' => [ 'shape' => 'ByteMatchTargetString', ], 'TextTransformation' => [ 'shape' => 'TextTransformation', ], 'PositionalConstraint' => [ 'shape' => 'PositionalConstraint', ], ], ], 'ByteMatchTuples' => [ 'type' => 'list', 'member' => [ 'shape' => 'ByteMatchTuple', ], ], 'ChangeAction' => [ 'type' => 'string', 'enum' => [ 'INSERT', 'DELETE', ], ], 'ChangeToken' => [ 'type' => 'string', ], 'ChangeTokenStatus' => [ 'type' => 'string', 'enum' => [ 'PROVISIONED', 'PENDING', 'INSYNC', ], ], 'ComparisonOperator' => [ 'type' => 'string', 'enum' => [ 'EQ', 'NE', 'LE', 'LT', 'GE', 'GT', ], ], 'Country' => [ 'type' => 'string', ], 'CreateByteMatchSetRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'ChangeToken', ], 'members' => [ 'Name' => [ 'shape' => 'ResourceName', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateByteMatchSetResponse' => [ 'type' => 'structure', 'members' => [ 'ByteMatchSet' => [ 'shape' => 'ByteMatchSet', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateIPSetRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'ChangeToken', ], 'members' => [ 'Name' => [ 'shape' => 'ResourceName', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateIPSetResponse' => [ 'type' => 'structure', 'members' => [ 'IPSet' => [ 'shape' => 'IPSet', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateRuleRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'MetricName', 'ChangeToken', ], 'members' => [ 'Name' => [ 'shape' => 'ResourceName', ], 'MetricName' => [ 'shape' => 'MetricName', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateRuleResponse' => [ 'type' => 'structure', 'members' => [ 'Rule' => [ 'shape' => 'Rule', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateSizeConstraintSetRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'ChangeToken', ], 'members' => [ 'Name' => [ 'shape' => 'ResourceName', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateSizeConstraintSetResponse' => [ 'type' => 'structure', 'members' => [ 'SizeConstraintSet' => [ 'shape' => 'SizeConstraintSet', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateSqlInjectionMatchSetRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'ChangeToken', ], 'members' => [ 'Name' => [ 'shape' => 'ResourceName', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateSqlInjectionMatchSetResponse' => [ 'type' => 'structure', 'members' => [ 'SqlInjectionMatchSet' => [ 'shape' => 'SqlInjectionMatchSet', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateWebACLRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'MetricName', 'DefaultAction', 'ChangeToken', ], 'members' => [ 'Name' => [ 'shape' => 'ResourceName', ], 'MetricName' => [ 'shape' => 'MetricName', ], 'DefaultAction' => [ 'shape' => 'WafAction', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateWebACLResponse' => [ 'type' => 'structure', 'members' => [ 'WebACL' => [ 'shape' => 'WebACL', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateXssMatchSetRequest' => [ 'type' => 'structure', 'required' => [ 'Name', 'ChangeToken', ], 'members' => [ 'Name' => [ 'shape' => 'ResourceName', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'CreateXssMatchSetResponse' => [ 'type' => 'structure', 'members' => [ 'XssMatchSet' => [ 'shape' => 'XssMatchSet', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteByteMatchSetRequest' => [ 'type' => 'structure', 'required' => [ 'ByteMatchSetId', 'ChangeToken', ], 'members' => [ 'ByteMatchSetId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteByteMatchSetResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteIPSetRequest' => [ 'type' => 'structure', 'required' => [ 'IPSetId', 'ChangeToken', ], 'members' => [ 'IPSetId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteIPSetResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteRuleRequest' => [ 'type' => 'structure', 'required' => [ 'RuleId', 'ChangeToken', ], 'members' => [ 'RuleId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteRuleResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteSizeConstraintSetRequest' => [ 'type' => 'structure', 'required' => [ 'SizeConstraintSetId', 'ChangeToken', ], 'members' => [ 'SizeConstraintSetId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteSizeConstraintSetResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteSqlInjectionMatchSetRequest' => [ 'type' => 'structure', 'required' => [ 'SqlInjectionMatchSetId', 'ChangeToken', ], 'members' => [ 'SqlInjectionMatchSetId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteSqlInjectionMatchSetResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteWebACLRequest' => [ 'type' => 'structure', 'required' => [ 'WebACLId', 'ChangeToken', ], 'members' => [ 'WebACLId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteWebACLResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteXssMatchSetRequest' => [ 'type' => 'structure', 'required' => [ 'XssMatchSetId', 'ChangeToken', ], 'members' => [ 'XssMatchSetId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'DeleteXssMatchSetResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'FieldToMatch' => [ 'type' => 'structure', 'required' => [ 'Type', ], 'members' => [ 'Type' => [ 'shape' => 'MatchFieldType', ], 'Data' => [ 'shape' => 'MatchFieldData', ], ], ], 'GetByteMatchSetRequest' => [ 'type' => 'structure', 'required' => [ 'ByteMatchSetId', ], 'members' => [ 'ByteMatchSetId' => [ 'shape' => 'ResourceId', ], ], ], 'GetByteMatchSetResponse' => [ 'type' => 'structure', 'members' => [ 'ByteMatchSet' => [ 'shape' => 'ByteMatchSet', ], ], ], 'GetChangeTokenRequest' => [ 'type' => 'structure', 'members' => [], ], 'GetChangeTokenResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'GetChangeTokenStatusRequest' => [ 'type' => 'structure', 'required' => [ 'ChangeToken', ], 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'GetChangeTokenStatusResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeTokenStatus' => [ 'shape' => 'ChangeTokenStatus', ], ], ], 'GetIPSetRequest' => [ 'type' => 'structure', 'required' => [ 'IPSetId', ], 'members' => [ 'IPSetId' => [ 'shape' => 'ResourceId', ], ], ], 'GetIPSetResponse' => [ 'type' => 'structure', 'members' => [ 'IPSet' => [ 'shape' => 'IPSet', ], ], ], 'GetRuleRequest' => [ 'type' => 'structure', 'required' => [ 'RuleId', ], 'members' => [ 'RuleId' => [ 'shape' => 'ResourceId', ], ], ], 'GetRuleResponse' => [ 'type' => 'structure', 'members' => [ 'Rule' => [ 'shape' => 'Rule', ], ], ], 'GetSampledRequestsRequest' => [ 'type' => 'structure', 'required' => [ 'WebAclId', 'RuleId', 'TimeWindow', 'MaxItems', ], 'members' => [ 'WebAclId' => [ 'shape' => 'ResourceId', ], 'RuleId' => [ 'shape' => 'ResourceId', ], 'TimeWindow' => [ 'shape' => 'TimeWindow', ], 'MaxItems' => [ 'shape' => 'ListMaxItems', ], ], ], 'GetSampledRequestsResponse' => [ 'type' => 'structure', 'members' => [ 'SampledRequests' => [ 'shape' => 'SampledHTTPRequests', ], 'PopulationSize' => [ 'shape' => 'PopulationSize', ], 'TimeWindow' => [ 'shape' => 'TimeWindow', ], ], ], 'GetSizeConstraintSetRequest' => [ 'type' => 'structure', 'required' => [ 'SizeConstraintSetId', ], 'members' => [ 'SizeConstraintSetId' => [ 'shape' => 'ResourceId', ], ], ], 'GetSizeConstraintSetResponse' => [ 'type' => 'structure', 'members' => [ 'SizeConstraintSet' => [ 'shape' => 'SizeConstraintSet', ], ], ], 'GetSqlInjectionMatchSetRequest' => [ 'type' => 'structure', 'required' => [ 'SqlInjectionMatchSetId', ], 'members' => [ 'SqlInjectionMatchSetId' => [ 'shape' => 'ResourceId', ], ], ], 'GetSqlInjectionMatchSetResponse' => [ 'type' => 'structure', 'members' => [ 'SqlInjectionMatchSet' => [ 'shape' => 'SqlInjectionMatchSet', ], ], ], 'GetWebACLRequest' => [ 'type' => 'structure', 'required' => [ 'WebACLId', ], 'members' => [ 'WebACLId' => [ 'shape' => 'ResourceId', ], ], ], 'GetWebACLResponse' => [ 'type' => 'structure', 'members' => [ 'WebACL' => [ 'shape' => 'WebACL', ], ], ], 'GetXssMatchSetRequest' => [ 'type' => 'structure', 'required' => [ 'XssMatchSetId', ], 'members' => [ 'XssMatchSetId' => [ 'shape' => 'ResourceId', ], ], ], 'GetXssMatchSetResponse' => [ 'type' => 'structure', 'members' => [ 'XssMatchSet' => [ 'shape' => 'XssMatchSet', ], ], ], 'HTTPHeader' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'HeaderName', ], 'Value' => [ 'shape' => 'HeaderValue', ], ], ], 'HTTPHeaders' => [ 'type' => 'list', 'member' => [ 'shape' => 'HTTPHeader', ], ], 'HTTPMethod' => [ 'type' => 'string', ], 'HTTPRequest' => [ 'type' => 'structure', 'members' => [ 'ClientIP' => [ 'shape' => 'IPString', ], 'Country' => [ 'shape' => 'Country', ], 'URI' => [ 'shape' => 'URIString', ], 'Method' => [ 'shape' => 'HTTPMethod', ], 'HTTPVersion' => [ 'shape' => 'HTTPVersion', ], 'Headers' => [ 'shape' => 'HTTPHeaders', ], ], ], 'HTTPVersion' => [ 'type' => 'string', ], 'HeaderName' => [ 'type' => 'string', ], 'HeaderValue' => [ 'type' => 'string', ], 'IPSet' => [ 'type' => 'structure', 'required' => [ 'IPSetId', 'IPSetDescriptors', ], 'members' => [ 'IPSetId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], 'IPSetDescriptors' => [ 'shape' => 'IPSetDescriptors', ], ], ], 'IPSetDescriptor' => [ 'type' => 'structure', 'required' => [ 'Type', 'Value', ], 'members' => [ 'Type' => [ 'shape' => 'IPSetDescriptorType', ], 'Value' => [ 'shape' => 'IPSetDescriptorValue', ], ], ], 'IPSetDescriptorType' => [ 'type' => 'string', 'enum' => [ 'IPV4', ], ], 'IPSetDescriptorValue' => [ 'type' => 'string', ], 'IPSetDescriptors' => [ 'type' => 'list', 'member' => [ 'shape' => 'IPSetDescriptor', ], ], 'IPSetSummaries' => [ 'type' => 'list', 'member' => [ 'shape' => 'IPSetSummary', ], ], 'IPSetSummary' => [ 'type' => 'structure', 'required' => [ 'IPSetId', 'Name', ], 'members' => [ 'IPSetId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], ], ], 'IPSetUpdate' => [ 'type' => 'structure', 'required' => [ 'Action', 'IPSetDescriptor', ], 'members' => [ 'Action' => [ 'shape' => 'ChangeAction', ], 'IPSetDescriptor' => [ 'shape' => 'IPSetDescriptor', ], ], ], 'IPSetUpdates' => [ 'type' => 'list', 'member' => [ 'shape' => 'IPSetUpdate', ], ], 'IPString' => [ 'type' => 'string', ], 'ListByteMatchSetsRequest' => [ 'type' => 'structure', 'required' => [ 'Limit', ], 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'Limit' => [ 'shape' => 'PaginationLimit', ], ], ], 'ListByteMatchSetsResponse' => [ 'type' => 'structure', 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'ByteMatchSets' => [ 'shape' => 'ByteMatchSetSummaries', ], ], ], 'ListIPSetsRequest' => [ 'type' => 'structure', 'required' => [ 'Limit', ], 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'Limit' => [ 'shape' => 'PaginationLimit', ], ], ], 'ListIPSetsResponse' => [ 'type' => 'structure', 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'IPSets' => [ 'shape' => 'IPSetSummaries', ], ], ], 'ListMaxItems' => [ 'type' => 'long', 'max' => 100, 'min' => 1, ], 'ListRulesRequest' => [ 'type' => 'structure', 'required' => [ 'Limit', ], 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'Limit' => [ 'shape' => 'PaginationLimit', ], ], ], 'ListRulesResponse' => [ 'type' => 'structure', 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'Rules' => [ 'shape' => 'RuleSummaries', ], ], ], 'ListSizeConstraintSetsRequest' => [ 'type' => 'structure', 'required' => [ 'Limit', ], 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'Limit' => [ 'shape' => 'PaginationLimit', ], ], ], 'ListSizeConstraintSetsResponse' => [ 'type' => 'structure', 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'SizeConstraintSets' => [ 'shape' => 'SizeConstraintSetSummaries', ], ], ], 'ListSqlInjectionMatchSetsRequest' => [ 'type' => 'structure', 'required' => [ 'Limit', ], 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'Limit' => [ 'shape' => 'PaginationLimit', ], ], ], 'ListSqlInjectionMatchSetsResponse' => [ 'type' => 'structure', 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'SqlInjectionMatchSets' => [ 'shape' => 'SqlInjectionMatchSetSummaries', ], ], ], 'ListWebACLsRequest' => [ 'type' => 'structure', 'required' => [ 'Limit', ], 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'Limit' => [ 'shape' => 'PaginationLimit', ], ], ], 'ListWebACLsResponse' => [ 'type' => 'structure', 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'WebACLs' => [ 'shape' => 'WebACLSummaries', ], ], ], 'ListXssMatchSetsRequest' => [ 'type' => 'structure', 'required' => [ 'Limit', ], 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'Limit' => [ 'shape' => 'PaginationLimit', ], ], ], 'ListXssMatchSetsResponse' => [ 'type' => 'structure', 'members' => [ 'NextMarker' => [ 'shape' => 'NextMarker', ], 'XssMatchSets' => [ 'shape' => 'XssMatchSetSummaries', ], ], ], 'MatchFieldData' => [ 'type' => 'string', ], 'MatchFieldType' => [ 'type' => 'string', 'enum' => [ 'URI', 'QUERY_STRING', 'HEADER', 'METHOD', 'BODY', ], ], 'MetricName' => [ 'type' => 'string', ], 'Negated' => [ 'type' => 'boolean', ], 'NextMarker' => [ 'type' => 'string', 'min' => 1, ], 'PaginationLimit' => [ 'type' => 'integer', 'max' => 100, 'min' => 1, ], 'ParameterExceptionField' => [ 'type' => 'string', 'enum' => [ 'CHANGE_ACTION', 'WAF_ACTION', 'PREDICATE_TYPE', 'IPSET_TYPE', 'BYTE_MATCH_FIELD_TYPE', 'SQL_INJECTION_MATCH_FIELD_TYPE', 'BYTE_MATCH_TEXT_TRANSFORMATION', 'BYTE_MATCH_POSITIONAL_CONSTRAINT', 'SIZE_CONSTRAINT_COMPARISON_OPERATOR', ], ], 'ParameterExceptionParameter' => [ 'type' => 'string', 'min' => 1, ], 'ParameterExceptionReason' => [ 'type' => 'string', 'enum' => [ 'INVALID_OPTION', 'ILLEGAL_COMBINATION', ], ], 'PopulationSize' => [ 'type' => 'long', ], 'PositionalConstraint' => [ 'type' => 'string', 'enum' => [ 'EXACTLY', 'STARTS_WITH', 'ENDS_WITH', 'CONTAINS', 'CONTAINS_WORD', ], ], 'Predicate' => [ 'type' => 'structure', 'required' => [ 'Negated', 'Type', 'DataId', ], 'members' => [ 'Negated' => [ 'shape' => 'Negated', ], 'Type' => [ 'shape' => 'PredicateType', ], 'DataId' => [ 'shape' => 'ResourceId', ], ], ], 'PredicateType' => [ 'type' => 'string', 'enum' => [ 'IPMatch', 'ByteMatch', 'SqlInjectionMatch', 'SizeConstraint', 'XssMatch', ], ], 'Predicates' => [ 'type' => 'list', 'member' => [ 'shape' => 'Predicate', ], ], 'ResourceId' => [ 'type' => 'string', 'max' => 128, 'min' => 1, ], 'ResourceName' => [ 'type' => 'string', 'max' => 128, 'min' => 1, ], 'Rule' => [ 'type' => 'structure', 'required' => [ 'RuleId', 'Predicates', ], 'members' => [ 'RuleId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], 'MetricName' => [ 'shape' => 'MetricName', ], 'Predicates' => [ 'shape' => 'Predicates', ], ], ], 'RulePriority' => [ 'type' => 'integer', ], 'RuleSummaries' => [ 'type' => 'list', 'member' => [ 'shape' => 'RuleSummary', ], ], 'RuleSummary' => [ 'type' => 'structure', 'required' => [ 'RuleId', 'Name', ], 'members' => [ 'RuleId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], ], ], 'RuleUpdate' => [ 'type' => 'structure', 'required' => [ 'Action', 'Predicate', ], 'members' => [ 'Action' => [ 'shape' => 'ChangeAction', ], 'Predicate' => [ 'shape' => 'Predicate', ], ], ], 'RuleUpdates' => [ 'type' => 'list', 'member' => [ 'shape' => 'RuleUpdate', ], ], 'SampleWeight' => [ 'type' => 'long', 'min' => 0, ], 'SampledHTTPRequest' => [ 'type' => 'structure', 'required' => [ 'Request', 'Weight', ], 'members' => [ 'Request' => [ 'shape' => 'HTTPRequest', ], 'Weight' => [ 'shape' => 'SampleWeight', ], 'Timestamp' => [ 'shape' => 'Timestamp', ], 'Action' => [ 'shape' => 'Action', ], ], ], 'SampledHTTPRequests' => [ 'type' => 'list', 'member' => [ 'shape' => 'SampledHTTPRequest', ], ], 'Size' => [ 'type' => 'long', 'max' => 21474836480, 'min' => 0, ], 'SizeConstraint' => [ 'type' => 'structure', 'required' => [ 'FieldToMatch', 'TextTransformation', 'ComparisonOperator', 'Size', ], 'members' => [ 'FieldToMatch' => [ 'shape' => 'FieldToMatch', ], 'TextTransformation' => [ 'shape' => 'TextTransformation', ], 'ComparisonOperator' => [ 'shape' => 'ComparisonOperator', ], 'Size' => [ 'shape' => 'Size', ], ], ], 'SizeConstraintSet' => [ 'type' => 'structure', 'required' => [ 'SizeConstraintSetId', 'SizeConstraints', ], 'members' => [ 'SizeConstraintSetId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], 'SizeConstraints' => [ 'shape' => 'SizeConstraints', ], ], ], 'SizeConstraintSetSummaries' => [ 'type' => 'list', 'member' => [ 'shape' => 'SizeConstraintSetSummary', ], ], 'SizeConstraintSetSummary' => [ 'type' => 'structure', 'required' => [ 'SizeConstraintSetId', 'Name', ], 'members' => [ 'SizeConstraintSetId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], ], ], 'SizeConstraintSetUpdate' => [ 'type' => 'structure', 'required' => [ 'Action', 'SizeConstraint', ], 'members' => [ 'Action' => [ 'shape' => 'ChangeAction', ], 'SizeConstraint' => [ 'shape' => 'SizeConstraint', ], ], ], 'SizeConstraintSetUpdates' => [ 'type' => 'list', 'member' => [ 'shape' => 'SizeConstraintSetUpdate', ], ], 'SizeConstraints' => [ 'type' => 'list', 'member' => [ 'shape' => 'SizeConstraint', ], ], 'SqlInjectionMatchSet' => [ 'type' => 'structure', 'required' => [ 'SqlInjectionMatchSetId', 'SqlInjectionMatchTuples', ], 'members' => [ 'SqlInjectionMatchSetId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], 'SqlInjectionMatchTuples' => [ 'shape' => 'SqlInjectionMatchTuples', ], ], ], 'SqlInjectionMatchSetSummaries' => [ 'type' => 'list', 'member' => [ 'shape' => 'SqlInjectionMatchSetSummary', ], ], 'SqlInjectionMatchSetSummary' => [ 'type' => 'structure', 'required' => [ 'SqlInjectionMatchSetId', 'Name', ], 'members' => [ 'SqlInjectionMatchSetId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], ], ], 'SqlInjectionMatchSetUpdate' => [ 'type' => 'structure', 'required' => [ 'Action', 'SqlInjectionMatchTuple', ], 'members' => [ 'Action' => [ 'shape' => 'ChangeAction', ], 'SqlInjectionMatchTuple' => [ 'shape' => 'SqlInjectionMatchTuple', ], ], ], 'SqlInjectionMatchSetUpdates' => [ 'type' => 'list', 'member' => [ 'shape' => 'SqlInjectionMatchSetUpdate', ], ], 'SqlInjectionMatchTuple' => [ 'type' => 'structure', 'required' => [ 'FieldToMatch', 'TextTransformation', ], 'members' => [ 'FieldToMatch' => [ 'shape' => 'FieldToMatch', ], 'TextTransformation' => [ 'shape' => 'TextTransformation', ], ], ], 'SqlInjectionMatchTuples' => [ 'type' => 'list', 'member' => [ 'shape' => 'SqlInjectionMatchTuple', ], ], 'TextTransformation' => [ 'type' => 'string', 'enum' => [ 'NONE', 'COMPRESS_WHITE_SPACE', 'HTML_ENTITY_DECODE', 'LOWERCASE', 'CMD_LINE', 'URL_DECODE', ], ], 'TimeWindow' => [ 'type' => 'structure', 'required' => [ 'StartTime', 'EndTime', ], 'members' => [ 'StartTime' => [ 'shape' => 'Timestamp', ], 'EndTime' => [ 'shape' => 'Timestamp', ], ], ], 'Timestamp' => [ 'type' => 'timestamp', ], 'URIString' => [ 'type' => 'string', ], 'UpdateByteMatchSetRequest' => [ 'type' => 'structure', 'required' => [ 'ByteMatchSetId', 'ChangeToken', 'Updates', ], 'members' => [ 'ByteMatchSetId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], 'Updates' => [ 'shape' => 'ByteMatchSetUpdates', ], ], ], 'UpdateByteMatchSetResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'UpdateIPSetRequest' => [ 'type' => 'structure', 'required' => [ 'IPSetId', 'ChangeToken', 'Updates', ], 'members' => [ 'IPSetId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], 'Updates' => [ 'shape' => 'IPSetUpdates', ], ], ], 'UpdateIPSetResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'UpdateRuleRequest' => [ 'type' => 'structure', 'required' => [ 'RuleId', 'ChangeToken', 'Updates', ], 'members' => [ 'RuleId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], 'Updates' => [ 'shape' => 'RuleUpdates', ], ], ], 'UpdateRuleResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'UpdateSizeConstraintSetRequest' => [ 'type' => 'structure', 'required' => [ 'SizeConstraintSetId', 'ChangeToken', 'Updates', ], 'members' => [ 'SizeConstraintSetId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], 'Updates' => [ 'shape' => 'SizeConstraintSetUpdates', ], ], ], 'UpdateSizeConstraintSetResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'UpdateSqlInjectionMatchSetRequest' => [ 'type' => 'structure', 'required' => [ 'SqlInjectionMatchSetId', 'ChangeToken', 'Updates', ], 'members' => [ 'SqlInjectionMatchSetId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], 'Updates' => [ 'shape' => 'SqlInjectionMatchSetUpdates', ], ], ], 'UpdateSqlInjectionMatchSetResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'UpdateWebACLRequest' => [ 'type' => 'structure', 'required' => [ 'WebACLId', 'ChangeToken', ], 'members' => [ 'WebACLId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], 'Updates' => [ 'shape' => 'WebACLUpdates', ], 'DefaultAction' => [ 'shape' => 'WafAction', ], ], ], 'UpdateWebACLResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'UpdateXssMatchSetRequest' => [ 'type' => 'structure', 'required' => [ 'XssMatchSetId', 'ChangeToken', 'Updates', ], 'members' => [ 'XssMatchSetId' => [ 'shape' => 'ResourceId', ], 'ChangeToken' => [ 'shape' => 'ChangeToken', ], 'Updates' => [ 'shape' => 'XssMatchSetUpdates', ], ], ], 'UpdateXssMatchSetResponse' => [ 'type' => 'structure', 'members' => [ 'ChangeToken' => [ 'shape' => 'ChangeToken', ], ], ], 'WAFDisallowedNameException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'exception' => true, ], 'WAFInternalErrorException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'exception' => true, 'fault' => true, ], 'WAFInvalidAccountException' => [ 'type' => 'structure', 'members' => [], 'exception' => true, ], 'WAFInvalidOperationException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'exception' => true, ], 'WAFInvalidParameterException' => [ 'type' => 'structure', 'members' => [ 'field' => [ 'shape' => 'ParameterExceptionField', ], 'parameter' => [ 'shape' => 'ParameterExceptionParameter', ], 'reason' => [ 'shape' => 'ParameterExceptionReason', ], ], 'exception' => true, ], 'WAFLimitsExceededException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'exception' => true, ], 'WAFNonEmptyEntityException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'exception' => true, ], 'WAFNonexistentContainerException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'exception' => true, ], 'WAFNonexistentItemException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'exception' => true, ], 'WAFReferencedItemException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'exception' => true, ], 'WAFStaleDataException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'errorMessage', ], ], 'exception' => true, ], 'WafAction' => [ 'type' => 'structure', 'required' => [ 'Type', ], 'members' => [ 'Type' => [ 'shape' => 'WafActionType', ], ], ], 'WafActionType' => [ 'type' => 'string', 'enum' => [ 'BLOCK', 'ALLOW', 'COUNT', ], ], 'WebACL' => [ 'type' => 'structure', 'required' => [ 'WebACLId', 'DefaultAction', 'Rules', ], 'members' => [ 'WebACLId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], 'MetricName' => [ 'shape' => 'MetricName', ], 'DefaultAction' => [ 'shape' => 'WafAction', ], 'Rules' => [ 'shape' => 'ActivatedRules', ], ], ], 'WebACLSummaries' => [ 'type' => 'list', 'member' => [ 'shape' => 'WebACLSummary', ], ], 'WebACLSummary' => [ 'type' => 'structure', 'required' => [ 'WebACLId', 'Name', ], 'members' => [ 'WebACLId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], ], ], 'WebACLUpdate' => [ 'type' => 'structure', 'required' => [ 'Action', 'ActivatedRule', ], 'members' => [ 'Action' => [ 'shape' => 'ChangeAction', ], 'ActivatedRule' => [ 'shape' => 'ActivatedRule', ], ], ], 'WebACLUpdates' => [ 'type' => 'list', 'member' => [ 'shape' => 'WebACLUpdate', ], ], 'XssMatchSet' => [ 'type' => 'structure', 'required' => [ 'XssMatchSetId', 'XssMatchTuples', ], 'members' => [ 'XssMatchSetId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], 'XssMatchTuples' => [ 'shape' => 'XssMatchTuples', ], ], ], 'XssMatchSetSummaries' => [ 'type' => 'list', 'member' => [ 'shape' => 'XssMatchSetSummary', ], ], 'XssMatchSetSummary' => [ 'type' => 'structure', 'required' => [ 'XssMatchSetId', 'Name', ], 'members' => [ 'XssMatchSetId' => [ 'shape' => 'ResourceId', ], 'Name' => [ 'shape' => 'ResourceName', ], ], ], 'XssMatchSetUpdate' => [ 'type' => 'structure', 'required' => [ 'Action', 'XssMatchTuple', ], 'members' => [ 'Action' => [ 'shape' => 'ChangeAction', ], 'XssMatchTuple' => [ 'shape' => 'XssMatchTuple', ], ], ], 'XssMatchSetUpdates' => [ 'type' => 'list', 'member' => [ 'shape' => 'XssMatchSetUpdate', ], ], 'XssMatchTuple' => [ 'type' => 'structure', 'required' => [ 'FieldToMatch', 'TextTransformation', ], 'members' => [ 'FieldToMatch' => [ 'shape' => 'FieldToMatch', ], 'TextTransformation' => [ 'shape' => 'TextTransformation', ], ], ], 'XssMatchTuples' => [ 'type' => 'list', 'member' => [ 'shape' => 'XssMatchTuple', ], ], 'errorMessage' => [ 'type' => 'string', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/cognito-sync/2014-06-30/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2014-06-30', 'endpointPrefix' => 'cognito-sync', 'jsonVersion' => '1.1', 'serviceFullName' => 'Amazon Cognito Sync', 'signatureVersion' => 'v4', 'protocol' => 'rest-json', ], 'operations' => [ 'BulkPublish' => [ 'name' => 'BulkPublish', 'http' => [ 'method' => 'POST', 'requestUri' => '/identitypools/{IdentityPoolId}/bulkpublish', 'responseCode' => 200, ], 'input' => [ 'shape' => 'BulkPublishRequest', ], 'output' => [ 'shape' => 'BulkPublishResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'DuplicateRequestException', 'error' => [ 'code' => 'DuplicateRequest', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'AlreadyStreamedException', 'error' => [ 'code' => 'AlreadyStreamed', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], ], ], 'DeleteDataset' => [ 'name' => 'DeleteDataset', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}', 'responseCode' => 200, ], 'input' => [ 'shape' => 'DeleteDatasetRequest', ], 'output' => [ 'shape' => 'DeleteDatasetResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceConflictException', 'error' => [ 'code' => 'ResourceConflict', 'httpStatusCode' => 409, 'senderFault' => true, ], 'exception' => true, ], ], ], 'DescribeDataset' => [ 'name' => 'DescribeDataset', 'http' => [ 'method' => 'GET', 'requestUri' => '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}', 'responseCode' => 200, ], 'input' => [ 'shape' => 'DescribeDatasetRequest', ], 'output' => [ 'shape' => 'DescribeDatasetResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], ], ], 'DescribeIdentityPoolUsage' => [ 'name' => 'DescribeIdentityPoolUsage', 'http' => [ 'method' => 'GET', 'requestUri' => '/identitypools/{IdentityPoolId}', 'responseCode' => 200, ], 'input' => [ 'shape' => 'DescribeIdentityPoolUsageRequest', ], 'output' => [ 'shape' => 'DescribeIdentityPoolUsageResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], ], ], 'DescribeIdentityUsage' => [ 'name' => 'DescribeIdentityUsage', 'http' => [ 'method' => 'GET', 'requestUri' => '/identitypools/{IdentityPoolId}/identities/{IdentityId}', 'responseCode' => 200, ], 'input' => [ 'shape' => 'DescribeIdentityUsageRequest', ], 'output' => [ 'shape' => 'DescribeIdentityUsageResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], ], ], 'GetBulkPublishDetails' => [ 'name' => 'GetBulkPublishDetails', 'http' => [ 'method' => 'POST', 'requestUri' => '/identitypools/{IdentityPoolId}/getBulkPublishDetails', 'responseCode' => 200, ], 'input' => [ 'shape' => 'GetBulkPublishDetailsRequest', ], 'output' => [ 'shape' => 'GetBulkPublishDetailsResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'GetCognitoEvents' => [ 'name' => 'GetCognitoEvents', 'http' => [ 'method' => 'GET', 'requestUri' => '/identitypools/{IdentityPoolId}/events', 'responseCode' => 200, ], 'input' => [ 'shape' => 'GetCognitoEventsRequest', ], 'output' => [ 'shape' => 'GetCognitoEventsResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], ], ], 'GetIdentityPoolConfiguration' => [ 'name' => 'GetIdentityPoolConfiguration', 'http' => [ 'method' => 'GET', 'requestUri' => '/identitypools/{IdentityPoolId}/configuration', 'responseCode' => 200, ], 'input' => [ 'shape' => 'GetIdentityPoolConfigurationRequest', ], 'output' => [ 'shape' => 'GetIdentityPoolConfigurationResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], ], ], 'ListDatasets' => [ 'name' => 'ListDatasets', 'http' => [ 'method' => 'GET', 'requestUri' => '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets', 'responseCode' => 200, ], 'input' => [ 'shape' => 'ListDatasetsRequest', ], 'output' => [ 'shape' => 'ListDatasetsResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], ], ], 'ListIdentityPoolUsage' => [ 'name' => 'ListIdentityPoolUsage', 'http' => [ 'method' => 'GET', 'requestUri' => '/identitypools', 'responseCode' => 200, ], 'input' => [ 'shape' => 'ListIdentityPoolUsageRequest', ], 'output' => [ 'shape' => 'ListIdentityPoolUsageResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], ], ], 'ListRecords' => [ 'name' => 'ListRecords', 'http' => [ 'method' => 'GET', 'requestUri' => '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/records', 'responseCode' => 200, ], 'input' => [ 'shape' => 'ListRecordsRequest', ], 'output' => [ 'shape' => 'ListRecordsResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], 'RegisterDevice' => [ 'name' => 'RegisterDevice', 'http' => [ 'method' => 'POST', 'requestUri' => '/identitypools/{IdentityPoolId}/identity/{IdentityId}/device', 'responseCode' => 200, ], 'input' => [ 'shape' => 'RegisterDeviceRequest', ], 'output' => [ 'shape' => 'RegisterDeviceResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InvalidConfigurationException', 'error' => [ 'code' => 'InvalidConfiguration', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], ], ], 'SetCognitoEvents' => [ 'name' => 'SetCognitoEvents', 'http' => [ 'method' => 'POST', 'requestUri' => '/identitypools/{IdentityPoolId}/events', 'responseCode' => 200, ], 'input' => [ 'shape' => 'SetCognitoEventsRequest', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], ], ], 'SetIdentityPoolConfiguration' => [ 'name' => 'SetIdentityPoolConfiguration', 'http' => [ 'method' => 'POST', 'requestUri' => '/identitypools/{IdentityPoolId}/configuration', 'responseCode' => 200, ], 'input' => [ 'shape' => 'SetIdentityPoolConfigurationRequest', ], 'output' => [ 'shape' => 'SetIdentityPoolConfigurationResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ConcurrentModificationException', 'error' => [ 'code' => 'ConcurrentModification', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], ], ], 'SubscribeToDataset' => [ 'name' => 'SubscribeToDataset', 'http' => [ 'method' => 'POST', 'requestUri' => '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}', 'responseCode' => 200, ], 'input' => [ 'shape' => 'SubscribeToDatasetRequest', ], 'output' => [ 'shape' => 'SubscribeToDatasetResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InvalidConfigurationException', 'error' => [ 'code' => 'InvalidConfiguration', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], ], ], 'UnsubscribeFromDataset' => [ 'name' => 'UnsubscribeFromDataset', 'http' => [ 'method' => 'DELETE', 'requestUri' => '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}', 'responseCode' => 200, ], 'input' => [ 'shape' => 'UnsubscribeFromDatasetRequest', ], 'output' => [ 'shape' => 'UnsubscribeFromDatasetResponse', ], 'errors' => [ [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], [ 'shape' => 'InvalidConfigurationException', 'error' => [ 'code' => 'InvalidConfiguration', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], ], ], 'UpdateRecords' => [ 'name' => 'UpdateRecords', 'http' => [ 'method' => 'POST', 'requestUri' => '/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}', 'responseCode' => 200, ], 'input' => [ 'shape' => 'UpdateRecordsRequest', ], 'output' => [ 'shape' => 'UpdateRecordsResponse', ], 'errors' => [ [ 'shape' => 'InvalidParameterException', 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'LimitExceededException', 'error' => [ 'code' => 'LimitExceeded', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'NotAuthorizedException', 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceNotFoundException', 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'ResourceConflictException', 'error' => [ 'code' => 'ResourceConflict', 'httpStatusCode' => 409, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InvalidLambdaFunctionOutputException', 'error' => [ 'code' => 'InvalidLambdaFunctionOutput', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'LambdaThrottledException', 'error' => [ 'code' => 'LambdaThrottled', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'TooManyRequestsException', 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], [ 'shape' => 'InternalErrorException', 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], ], ], ], 'shapes' => [ 'AlreadyStreamedException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'error' => [ 'code' => 'AlreadyStreamed', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'ApplicationArn' => [ 'type' => 'string', 'pattern' => 'arn:aws:sns:[-0-9a-z]+:\\d+:app/[A-Z_]+/[a-zA-Z0-9_.-]+', ], 'ApplicationArnList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ApplicationArn', ], ], 'AssumeRoleArn' => [ 'type' => 'string', 'min' => 20, 'max' => 2048, 'pattern' => 'arn:aws:iam::\\d+:role/.*', ], 'Boolean' => [ 'type' => 'boolean', ], 'BulkPublishRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], ], ], 'BulkPublishResponse' => [ 'type' => 'structure', 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', ], ], ], 'BulkPublishStatus' => [ 'type' => 'string', 'enum' => [ 'NOT_STARTED', 'IN_PROGRESS', 'FAILED', 'SUCCEEDED', ], ], 'ClientContext' => [ 'type' => 'string', ], 'CognitoEventType' => [ 'type' => 'string', ], 'CognitoStreams' => [ 'type' => 'structure', 'members' => [ 'StreamName' => [ 'shape' => 'StreamName', ], 'RoleArn' => [ 'shape' => 'AssumeRoleArn', ], 'StreamingStatus' => [ 'shape' => 'StreamingStatus', ], ], ], 'ConcurrentModificationException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'error' => [ 'code' => 'ConcurrentModification', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'Dataset' => [ 'type' => 'structure', 'members' => [ 'IdentityId' => [ 'shape' => 'IdentityId', ], 'DatasetName' => [ 'shape' => 'DatasetName', ], 'CreationDate' => [ 'shape' => 'Date', ], 'LastModifiedDate' => [ 'shape' => 'Date', ], 'LastModifiedBy' => [ 'shape' => 'String', ], 'DataStorage' => [ 'shape' => 'Long', ], 'NumRecords' => [ 'shape' => 'Long', ], ], ], 'DatasetList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Dataset', ], ], 'DatasetName' => [ 'type' => 'string', 'min' => 1, 'max' => 128, 'pattern' => '[a-zA-Z0-9_.:-]+', ], 'Date' => [ 'type' => 'timestamp', ], 'DeleteDatasetRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', 'IdentityId', 'DatasetName', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], 'IdentityId' => [ 'shape' => 'IdentityId', 'location' => 'uri', 'locationName' => 'IdentityId', ], 'DatasetName' => [ 'shape' => 'DatasetName', 'location' => 'uri', 'locationName' => 'DatasetName', ], ], ], 'DeleteDatasetResponse' => [ 'type' => 'structure', 'members' => [ 'Dataset' => [ 'shape' => 'Dataset', ], ], ], 'DescribeDatasetRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', 'IdentityId', 'DatasetName', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], 'IdentityId' => [ 'shape' => 'IdentityId', 'location' => 'uri', 'locationName' => 'IdentityId', ], 'DatasetName' => [ 'shape' => 'DatasetName', 'location' => 'uri', 'locationName' => 'DatasetName', ], ], ], 'DescribeDatasetResponse' => [ 'type' => 'structure', 'members' => [ 'Dataset' => [ 'shape' => 'Dataset', ], ], ], 'DescribeIdentityPoolUsageRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], ], ], 'DescribeIdentityPoolUsageResponse' => [ 'type' => 'structure', 'members' => [ 'IdentityPoolUsage' => [ 'shape' => 'IdentityPoolUsage', ], ], ], 'DescribeIdentityUsageRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', 'IdentityId', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], 'IdentityId' => [ 'shape' => 'IdentityId', 'location' => 'uri', 'locationName' => 'IdentityId', ], ], ], 'DescribeIdentityUsageResponse' => [ 'type' => 'structure', 'members' => [ 'IdentityUsage' => [ 'shape' => 'IdentityUsage', ], ], ], 'DeviceId' => [ 'type' => 'string', 'min' => 1, 'max' => 256, ], 'DuplicateRequestException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'error' => [ 'code' => 'DuplicateRequest', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'Events' => [ 'type' => 'map', 'key' => [ 'shape' => 'CognitoEventType', ], 'value' => [ 'shape' => 'LambdaFunctionArn', ], 'max' => 1, ], 'ExceptionMessage' => [ 'type' => 'string', ], 'GetBulkPublishDetailsRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], ], ], 'GetBulkPublishDetailsResponse' => [ 'type' => 'structure', 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', ], 'BulkPublishStartTime' => [ 'shape' => 'Date', ], 'BulkPublishCompleteTime' => [ 'shape' => 'Date', ], 'BulkPublishStatus' => [ 'shape' => 'BulkPublishStatus', ], 'FailureMessage' => [ 'shape' => 'String', ], ], ], 'GetCognitoEventsRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], ], ], 'GetCognitoEventsResponse' => [ 'type' => 'structure', 'members' => [ 'Events' => [ 'shape' => 'Events', ], ], ], 'GetIdentityPoolConfigurationRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], ], ], 'GetIdentityPoolConfigurationResponse' => [ 'type' => 'structure', 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', ], 'PushSync' => [ 'shape' => 'PushSync', ], 'CognitoStreams' => [ 'shape' => 'CognitoStreams', ], ], ], 'IdentityId' => [ 'type' => 'string', 'min' => 1, 'max' => 55, 'pattern' => '[\\w-]+:[0-9a-f-]+', ], 'IdentityPoolId' => [ 'type' => 'string', 'min' => 1, 'max' => 55, 'pattern' => '[\\w-]+:[0-9a-f-]+', ], 'IdentityPoolUsage' => [ 'type' => 'structure', 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', ], 'SyncSessionsCount' => [ 'shape' => 'Long', ], 'DataStorage' => [ 'shape' => 'Long', ], 'LastModifiedDate' => [ 'shape' => 'Date', ], ], ], 'IdentityPoolUsageList' => [ 'type' => 'list', 'member' => [ 'shape' => 'IdentityPoolUsage', ], ], 'IdentityUsage' => [ 'type' => 'structure', 'members' => [ 'IdentityId' => [ 'shape' => 'IdentityId', ], 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', ], 'LastModifiedDate' => [ 'shape' => 'Date', ], 'DatasetCount' => [ 'shape' => 'Integer', ], 'DataStorage' => [ 'shape' => 'Long', ], ], ], 'Integer' => [ 'type' => 'integer', ], 'IntegerString' => [ 'type' => 'integer', ], 'InternalErrorException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'error' => [ 'code' => 'InternalError', 'httpStatusCode' => 500, ], 'exception' => true, 'fault' => true, ], 'InvalidConfigurationException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'error' => [ 'code' => 'InvalidConfiguration', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'InvalidLambdaFunctionOutputException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'error' => [ 'code' => 'InvalidLambdaFunctionOutput', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'InvalidParameterException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'error' => [ 'code' => 'InvalidParameter', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'LambdaFunctionArn' => [ 'type' => 'string', ], 'LambdaThrottledException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'error' => [ 'code' => 'LambdaThrottled', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], 'LimitExceededException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'error' => [ 'code' => 'LimitExceeded', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'ListDatasetsRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityId', 'IdentityPoolId', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], 'IdentityId' => [ 'shape' => 'IdentityId', 'location' => 'uri', 'locationName' => 'IdentityId', ], 'NextToken' => [ 'shape' => 'String', 'location' => 'querystring', 'locationName' => 'nextToken', ], 'MaxResults' => [ 'shape' => 'IntegerString', 'location' => 'querystring', 'locationName' => 'maxResults', ], ], ], 'ListDatasetsResponse' => [ 'type' => 'structure', 'members' => [ 'Datasets' => [ 'shape' => 'DatasetList', ], 'Count' => [ 'shape' => 'Integer', ], 'NextToken' => [ 'shape' => 'String', ], ], ], 'ListIdentityPoolUsageRequest' => [ 'type' => 'structure', 'members' => [ 'NextToken' => [ 'shape' => 'String', 'location' => 'querystring', 'locationName' => 'nextToken', ], 'MaxResults' => [ 'shape' => 'IntegerString', 'location' => 'querystring', 'locationName' => 'maxResults', ], ], ], 'ListIdentityPoolUsageResponse' => [ 'type' => 'structure', 'members' => [ 'IdentityPoolUsages' => [ 'shape' => 'IdentityPoolUsageList', ], 'MaxResults' => [ 'shape' => 'Integer', ], 'Count' => [ 'shape' => 'Integer', ], 'NextToken' => [ 'shape' => 'String', ], ], ], 'ListRecordsRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', 'IdentityId', 'DatasetName', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], 'IdentityId' => [ 'shape' => 'IdentityId', 'location' => 'uri', 'locationName' => 'IdentityId', ], 'DatasetName' => [ 'shape' => 'DatasetName', 'location' => 'uri', 'locationName' => 'DatasetName', ], 'LastSyncCount' => [ 'shape' => 'Long', 'location' => 'querystring', 'locationName' => 'lastSyncCount', ], 'NextToken' => [ 'shape' => 'String', 'location' => 'querystring', 'locationName' => 'nextToken', ], 'MaxResults' => [ 'shape' => 'IntegerString', 'location' => 'querystring', 'locationName' => 'maxResults', ], 'SyncSessionToken' => [ 'shape' => 'SyncSessionToken', 'location' => 'querystring', 'locationName' => 'syncSessionToken', ], ], ], 'ListRecordsResponse' => [ 'type' => 'structure', 'members' => [ 'Records' => [ 'shape' => 'RecordList', ], 'NextToken' => [ 'shape' => 'String', ], 'Count' => [ 'shape' => 'Integer', ], 'DatasetSyncCount' => [ 'shape' => 'Long', ], 'LastModifiedBy' => [ 'shape' => 'String', ], 'MergedDatasetNames' => [ 'shape' => 'MergedDatasetNameList', ], 'DatasetExists' => [ 'shape' => 'Boolean', ], 'DatasetDeletedAfterRequestedSyncCount' => [ 'shape' => 'Boolean', ], 'SyncSessionToken' => [ 'shape' => 'String', ], ], ], 'Long' => [ 'type' => 'long', ], 'MergedDatasetNameList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], 'NotAuthorizedException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'error' => [ 'code' => 'NotAuthorizedError', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], 'Operation' => [ 'type' => 'string', 'enum' => [ 'replace', 'remove', ], ], 'Platform' => [ 'type' => 'string', 'enum' => [ 'APNS', 'APNS_SANDBOX', 'GCM', 'ADM', ], ], 'PushSync' => [ 'type' => 'structure', 'members' => [ 'ApplicationArns' => [ 'shape' => 'ApplicationArnList', ], 'RoleArn' => [ 'shape' => 'AssumeRoleArn', ], ], ], 'PushToken' => [ 'type' => 'string', ], 'Record' => [ 'type' => 'structure', 'members' => [ 'Key' => [ 'shape' => 'RecordKey', ], 'Value' => [ 'shape' => 'RecordValue', ], 'SyncCount' => [ 'shape' => 'Long', ], 'LastModifiedDate' => [ 'shape' => 'Date', ], 'LastModifiedBy' => [ 'shape' => 'String', ], 'DeviceLastModifiedDate' => [ 'shape' => 'Date', ], ], ], 'RecordKey' => [ 'type' => 'string', 'min' => 1, 'max' => 1024, ], 'RecordList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Record', ], ], 'RecordPatch' => [ 'type' => 'structure', 'required' => [ 'Op', 'Key', 'SyncCount', ], 'members' => [ 'Op' => [ 'shape' => 'Operation', ], 'Key' => [ 'shape' => 'RecordKey', ], 'Value' => [ 'shape' => 'RecordValue', ], 'SyncCount' => [ 'shape' => 'Long', ], 'DeviceLastModifiedDate' => [ 'shape' => 'Date', ], ], ], 'RecordPatchList' => [ 'type' => 'list', 'member' => [ 'shape' => 'RecordPatch', ], ], 'RecordValue' => [ 'type' => 'string', 'max' => 1048575, ], 'RegisterDeviceRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', 'IdentityId', 'Platform', 'Token', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], 'IdentityId' => [ 'shape' => 'IdentityId', 'location' => 'uri', 'locationName' => 'IdentityId', ], 'Platform' => [ 'shape' => 'Platform', ], 'Token' => [ 'shape' => 'PushToken', ], ], ], 'RegisterDeviceResponse' => [ 'type' => 'structure', 'members' => [ 'DeviceId' => [ 'shape' => 'DeviceId', ], ], ], 'ResourceConflictException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'error' => [ 'code' => 'ResourceConflict', 'httpStatusCode' => 409, 'senderFault' => true, ], 'exception' => true, ], 'ResourceNotFoundException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'error' => [ 'code' => 'ResourceNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], 'SetCognitoEventsRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', 'Events', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], 'Events' => [ 'shape' => 'Events', ], ], ], 'SetIdentityPoolConfigurationRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], 'PushSync' => [ 'shape' => 'PushSync', ], 'CognitoStreams' => [ 'shape' => 'CognitoStreams', ], ], ], 'SetIdentityPoolConfigurationResponse' => [ 'type' => 'structure', 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', ], 'PushSync' => [ 'shape' => 'PushSync', ], 'CognitoStreams' => [ 'shape' => 'CognitoStreams', ], ], ], 'StreamName' => [ 'type' => 'string', 'min' => 1, 'max' => 128, ], 'StreamingStatus' => [ 'type' => 'string', 'enum' => [ 'ENABLED', 'DISABLED', ], ], 'String' => [ 'type' => 'string', ], 'SubscribeToDatasetRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', 'IdentityId', 'DatasetName', 'DeviceId', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], 'IdentityId' => [ 'shape' => 'IdentityId', 'location' => 'uri', 'locationName' => 'IdentityId', ], 'DatasetName' => [ 'shape' => 'DatasetName', 'location' => 'uri', 'locationName' => 'DatasetName', ], 'DeviceId' => [ 'shape' => 'DeviceId', 'location' => 'uri', 'locationName' => 'DeviceId', ], ], ], 'SubscribeToDatasetResponse' => [ 'type' => 'structure', 'members' => [], ], 'SyncSessionToken' => [ 'type' => 'string', ], 'TooManyRequestsException' => [ 'type' => 'structure', 'required' => [ 'message', ], 'members' => [ 'message' => [ 'shape' => 'ExceptionMessage', ], ], 'error' => [ 'code' => 'TooManyRequests', 'httpStatusCode' => 429, 'senderFault' => true, ], 'exception' => true, ], 'UnsubscribeFromDatasetRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', 'IdentityId', 'DatasetName', 'DeviceId', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], 'IdentityId' => [ 'shape' => 'IdentityId', 'location' => 'uri', 'locationName' => 'IdentityId', ], 'DatasetName' => [ 'shape' => 'DatasetName', 'location' => 'uri', 'locationName' => 'DatasetName', ], 'DeviceId' => [ 'shape' => 'DeviceId', 'location' => 'uri', 'locationName' => 'DeviceId', ], ], ], 'UnsubscribeFromDatasetResponse' => [ 'type' => 'structure', 'members' => [], ], 'UpdateRecordsRequest' => [ 'type' => 'structure', 'required' => [ 'IdentityPoolId', 'IdentityId', 'DatasetName', 'SyncSessionToken', ], 'members' => [ 'IdentityPoolId' => [ 'shape' => 'IdentityPoolId', 'location' => 'uri', 'locationName' => 'IdentityPoolId', ], 'IdentityId' => [ 'shape' => 'IdentityId', 'location' => 'uri', 'locationName' => 'IdentityId', ], 'DatasetName' => [ 'shape' => 'DatasetName', 'location' => 'uri', 'locationName' => 'DatasetName', ], 'DeviceId' => [ 'shape' => 'DeviceId', ], 'RecordPatches' => [ 'shape' => 'RecordPatchList', ], 'SyncSessionToken' => [ 'shape' => 'SyncSessionToken', ], 'ClientContext' => [ 'shape' => 'ClientContext', 'location' => 'header', 'locationName' => 'x-amz-Client-Context', ], ], ], 'UpdateRecordsResponse' => [ 'type' => 'structure', 'members' => [ 'Records' => [ 'shape' => 'RecordList', ], ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/endpoints.json.php:return [ 'version' => 3, 'partitions' => [ [ 'partition' => 'aws', 'partitionName' => 'AWS Standard', 'dnsSuffix' => 'amazonaws.com', 'regionRegex' => '^(us|eu|ap|sa)\\-\\w+\\-\\d+$', 'defaults' => [ 'hostname' => '{service}.{region}.{dnsSuffix}', 'protocols' => [ 'https', ], 'signatureVersions' => [ 'v4', ], ], 'regions' => [ 'aws-global' => [ 'description' => 'AWS partition-global endpoint', ], 'us-east-1' => [ 'description' => 'US East (N. Virginia)', ], 'us-west-1' => [ 'description' => 'US West (N. California)', ], 'us-west-2' => [ 'description' => 'US West (Oregon)', ], 'ap-northeast-1' => [ 'description' => 'Asia Pacific (Tokyo)', ], 'ap-northeast-2' => [ 'description' => 'Asia Pacific (Seoul)', ], 'ap-southeast-1' => [ 'description' => 'Asia Pacific (Singapore)', ], 'ap-southeast-2' => [ 'description' => 'Asia Pacific (Sydney)', ], 'sa-east-1' => [ 'description' => 'South America (Sao Paulo)', ], 'eu-west-1' => [ 'description' => 'EU (Ireland)', ], 'eu-central-1' => [ 'description' => 'EU (Frankfurt)', ], ], 'services' => [ 'acm' => [ 'endpoints' => [ 'us-east-1' => [], ], ], 'apigateway' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'eu-west-1' => [], 'ap-northeast-1' => [], 'ap-southeast-1' => [], 'eu-central-1' => [], ], ], 'application-autoscaling' => [ 'defaults' => [ 'hostname' => 'autoscaling.{region}.amazonaws.com', 'credentialScope' => [ 'service' => 'application-autoscaling', ], 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'eu-west-1' => [], ], ], 'appstream' => [ 'endpoints' => [ 'us-east-1' => [], 'ap-northeast-1' => [], ], ], 'autoscaling' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'cloudformation' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'cloudfront' => [ 'partitionEndpoint' => 'aws-global', 'isRegionalized' => false, 'endpoints' => [ 'aws-global' => [ 'hostname' => 'cloudfront.amazonaws.com', 'protocols' => [ 'http', 'https', ], 'credentialScope' => [ 'region' => 'us-east-1', ], ], ], ], 'cloudhsm' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'cloudsearch' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'cloudtrail' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'codecommit' => [ 'endpoints' => [ 'us-east-1' => [], ], ], 'codedeploy' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'eu-west-1' => [], 'eu-central-1' => [], 'sa-east-1' => [], ], ], 'codepipeline' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], ], ], 'cognito-identity' => [ 'endpoints' => [ 'us-east-1' => [], 'eu-west-1' => [], 'ap-northeast-1' => [], ], ], 'cognito-idp' => [ 'endpoints' => [ 'us-east-1' => [], 'eu-west-1' => [], 'ap-northeast-1' => [], ], ], 'cognito-sync' => [ 'endpoints' => [ 'us-east-1' => [], 'eu-west-1' => [], 'ap-northeast-1' => [], ], ], 'config' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'datapipeline' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-southeast-2' => [], 'eu-west-1' => [], ], ], 'data.iot' => [ 'defaults' => [ 'protocols' => [ 'https', 'mqqt', ], 'credentialScope' => [ 'service' => 'iotdata', ], ], 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'devicefarm' => [ 'endpoints' => [ 'us-west-2' => [], ], ], 'directconnect' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'discovery' => [ 'endpoints' => [ 'us-west-2' => [], ], ], 'dms' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'ds' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'eu-west-1' => [], ], ], 'dynamodb' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], 'local' => [ 'hostname' => 'localhost:8000', 'protocols' => [ 'http', ], 'credentialScope' => [ 'region' => 'us-east-1', ], ], ], ], 'ec2' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'ecs' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'ecr' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'eu-west-1' => [], ], ], 'elasticache' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'elasticbeanstalk' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'elasticfilesystem' => [ 'endpoints' => [ 'us-west-2' => [], ], ], 'elasticloadbalancing' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'elasticmapreduce' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], 'sslCommonName' => '{region}.{service}.{dnsSuffix}', ], 'endpoints' => [ 'us-east-1' => [ 'sslCommonName' => '{service}.{region}.{dnsSuffix}', ], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [ 'sslCommonName' => '{service}.{region}.{dnsSuffix}', ], ], ], 'elastictranscoder' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-southeast-1' => [], 'eu-west-1' => [], ], ], 'email' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'eu-west-1' => [], ], ], 'es' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'eu-west-1' => [], 'eu-central-1' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'sa-east-1' => [], ], ], 'events' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'firehose' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'eu-west-1' => [], ], ], 'gamelift' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'eu-west-1' => [], 'ap-northeast-1' => [], ], ], 'glacier' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-2' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'iam' => [ 'partitionEndpoint' => 'aws-global', 'isRegionalized' => false, 'endpoints' => [ 'aws-global' => [ 'hostname' => 'iam.amazonaws.com', 'credentialScope' => [ 'region' => 'us-east-1', ], ], ], ], 'importexport' => [ 'partitionEndpoint' => 'aws-global', 'isRegionalized' => false, 'endpoints' => [ 'aws-global' => [ 'hostname' => 'importexport.amazonaws.com', 'signatureVersions' => [ 'v2', 'v4', ], 'credentialScope' => [ 'service' => 'IngestionService', 'region' => 'us-east-1', ], ], ], ], 'inspector' => [ 'endpoints' => [ 'us-west-2' => [], 'us-east-1' => [], 'eu-west-1' => [], 'ap-northeast-1' => [], ], ], 'iot' => [ 'defaults' => [ 'credentialScope' => [ 'service' => 'execute-api', ], ], 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-southeast-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'kinesis' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'eu-west-1' => [], 'eu-central-1' => [], 'sa-east-1' => [], ], ], 'kms' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'lambda' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'logs' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'eu-west-1' => [], 'eu-central-1' => [], 'sa-east-1' => [], ], ], 'machinelearning' => [ 'endpoints' => [ 'us-east-1' => [], 'eu-west-1' => [], ], ], 'marketplacecommerceanalytics' => [ 'endpoints' => [ 'us-east-1' => [], ], ], 'metering.marketplace' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], ], ], 'mobileanalytics' => [ 'endpoints' => [ 'us-east-1' => [], ], ], 'monitoring' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'opsworks' => [ 'endpoints' => [ 'us-east-1' => [], ], ], 'rds' => [ 'endpoints' => [ 'us-east-1' => [ 'sslCommonName' => '{service}.{dnsSuffix}', ], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'redshift' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'route53' => [ 'partitionEndpoint' => 'aws-global', 'isRegionalized' => false, 'endpoints' => [ 'aws-global' => [ 'hostname' => 'route53.amazonaws.com', 'credentialScope' => [ 'region' => 'us-east-1', ], ], ], ], 'route53domains' => [ 'endpoints' => [ 'us-east-1' => [], ], ], 's3' => [ 'partitionEndpoint' => 'us-east-1', 'isRegionalized' => true, 'defaults' => [ 'protocols' => [ 'http', 'https', ], 'signatureVersions' => [ 's3', 's3v4', ], ], 'endpoints' => [ 'us-east-1' => [ 'hostname' => 's3.amazonaws.com', ], 's3-external-1' => [ 'credentialScope' => [ 'region' => 'us-east-1', ], 'hostname' => 's3-external-1.amazonaws.com', ], 'us-west-1' => [ 'hostname' => 's3-us-west-1.amazonaws.com', ], 'us-west-2' => [ 'hostname' => 's3-us-west-2.amazonaws.com', ], 'ap-northeast-1' => [ 'hostname' => 's3-ap-northeast-1.amazonaws.com', ], 'ap-northeast-2' => [ 'signatureVersions' => [ 's3v4', ], ], 'ap-southeast-1' => [ 'hostname' => 's3-ap-southeast-1.amazonaws.com', ], 'ap-southeast-2' => [ 'hostname' => 's3-ap-southeast-2.amazonaws.com', ], 'sa-east-1' => [ 'hostname' => 's3-sa-east-1.amazonaws.com', ], 'eu-west-1' => [ 'hostname' => 's3-eu-west-1.amazonaws.com', ], 'eu-central-1' => [ 'signatureVersions' => [ 's3v4', ], ], ], ], 'sdb' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'us-east-1' => [ 'hostname' => 'sdb.amazonaws.com', ], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], ], ], 'sns' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'sqs' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], 'sslCommonName' => '{region}.queue.{dnsSuffix}', ], 'endpoints' => [ 'us-east-1' => [ 'sslCommonName' => 'queue.{dnsSuffix}', ], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'ssm' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'eu-central-1' => [], 'eu-west-1' => [], 'ap-northeast-1' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], ], ], 'storagegateway' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'streams.dynamodb' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], 'credentialScope' => [ 'service' => 'dynamodb', ], ], 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'sts' => [ 'defaults' => [ 'hostname' => 'sts.amazonaws.com', 'credentialScope' => [ 'region' => 'us-east-1', ], ], 'partitionEndpoint' => 'aws-global', 'endpoints' => [ 'aws-global' => [], 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [ 'hostname' => 'sts.ap-northeast-2.amazonaws.com', 'credentialScope' => [ 'region' => 'ap-northeast-2', ], ], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'support' => [ 'endpoints' => [ 'us-east-1' => [], ], ], 'swf' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-northeast-2' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'sa-east-1' => [], 'eu-west-1' => [], 'eu-central-1' => [], ], ], 'waf' => [ 'partitionEndpoint' => 'aws-global', 'isRegionalized' => false, 'endpoints' => [ 'aws-global' => [ 'hostname' => 'waf.amazonaws.com', 'credentialScope' => [ 'region' => 'us-east-1', ], ], ], ], 'workspaces' => [ 'endpoints' => [ 'us-east-1' => [], 'us-west-2' => [], 'ap-northeast-1' => [], 'ap-southeast-1' => [], 'ap-southeast-2' => [], 'eu-west-1' => [], ], ], ], ], [ 'partition' => 'aws-cn', 'partitionName' => 'AWS China', 'dnsSuffix' => 'amazonaws.com.cn', 'regionRegex' => '^cn\\-\\w+\\-\\d+$', 'defaults' => [ 'hostname' => '{service}.{region}.{dnsSuffix}', 'protocols' => [ 'https', ], 'signatureVersions' => [ 'v4', ], ], 'regions' => [ 'aws-cn-global' => [ 'description' => 'AWS China partition-global endpoint', ], 'cn-north-1' => [ 'description' => 'China (Beijing)', ], ], 'services' => [ 'autoscaling' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'cn-north-1' => [], ], ], 'cloudformation' => [ 'endpoints' => [ 'cn-north-1' => [], ], ], 'cloudtrail' => [ 'endpoints' => [ 'cn-north-1' => [], ], ], 'directconnect' => [ 'endpoints' => [ 'cn-north-1' => [], ], ], 'dynamodb' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'cn-north-1' => [], ], ], 'ec2' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'cn-north-1' => [], ], ], 'elasticache' => [ 'endpoints' => [ 'cn-north-1' => [], ], ], 'elasticbeanstalk' => [ 'endpoints' => [ 'cn-north-1' => [], ], ], 'elasticloadbalancing' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'cn-north-1' => [], ], ], 'elasticmapreduce' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'cn-north-1' => [], ], ], 'glacier' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'cn-north-1' => [], ], ], 'iam' => [ 'partitionEndpoint' => 'aws-cn-global', 'isRegionalized' => false, 'endpoints' => [ 'aws-cn-global' => [ 'hostname' => 'iam.cn-north-1.amazonaws.com.cn', 'credentialScope' => [ 'region' => 'cn-north-1', ], ], ], ], 'kinesis' => [ 'endpoints' => [ 'cn-north-1' => [], ], ], 'monitoring' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'cn-north-1' => [], ], ], 'rds' => [ 'endpoints' => [ 'cn-north-1' => [], ], ], 's3' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], 'signatureVersions' => [ 's3v4', ], ], 'endpoints' => [ 'cn-north-1' => [], ], ], 'sns' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'cn-north-1' => [], ], ], 'sqs' => [ 'defaults' => [ 'sslCommonName' => '{region}.queue.{dnsSuffix}', 'protocols' => [ 'http', 'https', ], ], 'endpoints' => [ 'cn-north-1' => [], ], ], 'storagegateway' => [ 'endpoints' => [ 'cn-north-1' => [], ], ], 'streams.dynamodb' => [ 'defaults' => [ 'protocols' => [ 'http', 'https', ], 'credentialScope' => [ 'service' => 'dynamodb', ], ], 'endpoints' => [ 'cn-north-1' => [], ], ], 'sts' => [ 'endpoints' => [ 'cn-north-1' => [], ], ], 'swf' => [ 'endpoints' => [ 'cn-north-1' => [], ], ], ], ], [ 'partition' => 'aws-us-gov', 'partitionName' => 'AWS GovCloud (US)', 'dnsSuffix' => 'amazonaws.com', 'regionRegex' => '^us\\-gov\\-\\w+\\-\\d+$', 'defaults' => [ 'hostname' => '{service}.{region}.{dnsSuffix}', 'protocols' => [ 'https', ], 'signatureVersions' => [ 'v4', ], ], 'regions' => [ 'aws-us-gov-global' => [ 'description' => 'AWS GovCloud (US) partition-global endpoint', ], 'us-gov-west-1' => [ 'description' => 'AWS GovCloud (US)', ], ], 'services' => [ 'autoscaling' => [ 'endpoints' => [ 'us-gov-west-1' => [ 'protocols' => [ 'http', 'https', ], ], ], ], 'cloudformation' => [ 'endpoints' => [ 'us-gov-west-1' => [], ], ], 'cloudhsm' => [ 'endpoints' => [ 'us-gov-west-1' => [], ], ], 'cloudtrail' => [ 'endpoints' => [ 'us-gov-west-1' => [], ], ], 'dynamodb' => [ 'endpoints' => [ 'us-gov-west-1' => [], ], ], 'streams.dynamodb' => [ 'defaults' => [ 'credentialScope' => [ 'service' => 'dynamodb', ], ], 'endpoints' => [ 'us-gov-west-1' => [], ], ], 'ec2' => [ 'endpoints' => [ 'us-gov-west-1' => [], ], ], 'elasticache' => [ 'endpoints' => [ 'us-gov-west-1' => [], ], ], 'elasticloadbalancing' => [ 'endpoints' => [ 'us-gov-west-1' => [ 'protocols' => [ 'http', 'https', ], ], ], ], 'elasticmapreduce' => [ 'endpoints' => [ 'us-gov-west-1' => [ 'protocols' => [ 'http', 'https', ], ], ], ], 'glacier' => [ 'endpoints' => [ 'us-gov-west-1' => [ 'protocols' => [ 'http', 'https', ], ], ], ], 'iam' => [ 'partitionEndpoint' => 'aws-us-gov-global', 'isRegionalized' => false, 'endpoints' => [ 'aws-us-gov-global' => [ 'hostname' => 'iam.us-gov.amazonaws.com', 'credentialScope' => [ 'region' => 'us-gov-west-1', ], ], ], ], 'kms' => [ 'endpoints' => [ 'us-gov-west-1' => [], ], ], 'monitoring' => [ 'endpoints' => [ 'us-gov-west-1' => [], ], ], 'rds' => [ 'endpoints' => [ 'us-gov-west-1' => [], ], ], 'redshift' => [ 'endpoints' => [ 'us-gov-west-1' => [], ], ], 's3' => [ 'defaults' => [ 'signatureVersions' => [ 's3', 's3v4', ], ], 'endpoints' => [ 'us-gov-west-1' => [ 'protocols' => [ 'http', 'https', ], 'hostname' => 's3-us-gov-west-1.amazonaws.com', ], 'fips-us-gov-west-1' => [ 'credentialScope' => [ 'region' => 'us-gov-west-1', ], 'hostname' => 's3-fips-us-gov-west-1.amazonaws.com', ], ], ], 'sns' => [ 'endpoints' => [ 'us-gov-west-1' => [ 'protocols' => [ 'http', 'https', ], ], ], ], 'sqs' => [ 'endpoints' => [ 'us-gov-west-1' => [ 'sslCommonName' => '{region}.queue.{dnsSuffix}', 'protocols' => [ 'http', 'https', ], ], ], ], 'sts' => [ 'endpoints' => [ 'us-gov-west-1' => [], ], ], 'swf' => [ 'endpoints' => [ 'us-gov-west-1' => [], ], ], ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/cloudformation/2010-05-15/paginators-1.json.php:// This file was auto-generated from sdk-root/src/data/cloudformation/2010-05-15/paginators-1.json
/Users/a01064483/desktop/current/exam/Aws/data/cloudformation/2010-05-15/api-2.json.php:// This file was auto-generated from sdk-root/src/data/cloudformation/2010-05-15/api-2.json
/Users/a01064483/desktop/current/exam/Aws/data/cloudformation/2010-05-15/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2010-05-15', 'endpointPrefix' => 'cloudformation', 'protocol' => 'query', 'serviceFullName' => 'AWS CloudFormation', 'signatureVersion' => 'v4', 'xmlNamespace' => 'http://cloudformation.amazonaws.com/doc/2010-05-15/', ], 'operations' => [ 'CancelUpdateStack' => [ 'name' => 'CancelUpdateStack', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelUpdateStackInput', ], ], 'ContinueUpdateRollback' => [ 'name' => 'ContinueUpdateRollback', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ContinueUpdateRollbackInput', ], 'output' => [ 'shape' => 'ContinueUpdateRollbackOutput', 'resultWrapper' => 'ContinueUpdateRollbackResult', ], ], 'CreateChangeSet' => [ 'name' => 'CreateChangeSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateChangeSetInput', ], 'output' => [ 'shape' => 'CreateChangeSetOutput', 'resultWrapper' => 'CreateChangeSetResult', ], 'errors' => [ [ 'shape' => 'AlreadyExistsException', ], [ 'shape' => 'InsufficientCapabilitiesException', ], [ 'shape' => 'LimitExceededException', ], ], ], 'CreateStack' => [ 'name' => 'CreateStack', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateStackInput', ], 'output' => [ 'shape' => 'CreateStackOutput', 'resultWrapper' => 'CreateStackResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'AlreadyExistsException', ], [ 'shape' => 'InsufficientCapabilitiesException', ], ], ], 'DeleteChangeSet' => [ 'name' => 'DeleteChangeSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteChangeSetInput', ], 'output' => [ 'shape' => 'DeleteChangeSetOutput', 'resultWrapper' => 'DeleteChangeSetResult', ], 'errors' => [ [ 'shape' => 'InvalidChangeSetStatusException', ], ], ], 'DeleteStack' => [ 'name' => 'DeleteStack', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteStackInput', ], ], 'DescribeAccountLimits' => [ 'name' => 'DescribeAccountLimits', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeAccountLimitsInput', ], 'output' => [ 'shape' => 'DescribeAccountLimitsOutput', 'resultWrapper' => 'DescribeAccountLimitsResult', ], ], 'DescribeChangeSet' => [ 'name' => 'DescribeChangeSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeChangeSetInput', ], 'output' => [ 'shape' => 'DescribeChangeSetOutput', 'resultWrapper' => 'DescribeChangeSetResult', ], 'errors' => [ [ 'shape' => 'ChangeSetNotFoundException', ], ], ], 'DescribeStackEvents' => [ 'name' => 'DescribeStackEvents', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeStackEventsInput', ], 'output' => [ 'shape' => 'DescribeStackEventsOutput', 'resultWrapper' => 'DescribeStackEventsResult', ], ], 'DescribeStackResource' => [ 'name' => 'DescribeStackResource', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeStackResourceInput', ], 'output' => [ 'shape' => 'DescribeStackResourceOutput', 'resultWrapper' => 'DescribeStackResourceResult', ], ], 'DescribeStackResources' => [ 'name' => 'DescribeStackResources', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeStackResourcesInput', ], 'output' => [ 'shape' => 'DescribeStackResourcesOutput', 'resultWrapper' => 'DescribeStackResourcesResult', ], ], 'DescribeStacks' => [ 'name' => 'DescribeStacks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeStacksInput', ], 'output' => [ 'shape' => 'DescribeStacksOutput', 'resultWrapper' => 'DescribeStacksResult', ], ], 'EstimateTemplateCost' => [ 'name' => 'EstimateTemplateCost', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'EstimateTemplateCostInput', ], 'output' => [ 'shape' => 'EstimateTemplateCostOutput', 'resultWrapper' => 'EstimateTemplateCostResult', ], ], 'ExecuteChangeSet' => [ 'name' => 'ExecuteChangeSet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ExecuteChangeSetInput', ], 'output' => [ 'shape' => 'ExecuteChangeSetOutput', 'resultWrapper' => 'ExecuteChangeSetResult', ], 'errors' => [ [ 'shape' => 'InvalidChangeSetStatusException', ], [ 'shape' => 'ChangeSetNotFoundException', ], ], ], 'GetStackPolicy' => [ 'name' => 'GetStackPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetStackPolicyInput', ], 'output' => [ 'shape' => 'GetStackPolicyOutput', 'resultWrapper' => 'GetStackPolicyResult', ], ], 'GetTemplate' => [ 'name' => 'GetTemplate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetTemplateInput', ], 'output' => [ 'shape' => 'GetTemplateOutput', 'resultWrapper' => 'GetTemplateResult', ], ], 'GetTemplateSummary' => [ 'name' => 'GetTemplateSummary', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetTemplateSummaryInput', ], 'output' => [ 'shape' => 'GetTemplateSummaryOutput', 'resultWrapper' => 'GetTemplateSummaryResult', ], ], 'ListChangeSets' => [ 'name' => 'ListChangeSets', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListChangeSetsInput', ], 'output' => [ 'shape' => 'ListChangeSetsOutput', 'resultWrapper' => 'ListChangeSetsResult', ], ], 'ListStackResources' => [ 'name' => 'ListStackResources', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListStackResourcesInput', ], 'output' => [ 'shape' => 'ListStackResourcesOutput', 'resultWrapper' => 'ListStackResourcesResult', ], ], 'ListStacks' => [ 'name' => 'ListStacks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListStacksInput', ], 'output' => [ 'shape' => 'ListStacksOutput', 'resultWrapper' => 'ListStacksResult', ], ], 'SetStackPolicy' => [ 'name' => 'SetStackPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetStackPolicyInput', ], ], 'SignalResource' => [ 'name' => 'SignalResource', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SignalResourceInput', ], ], 'UpdateStack' => [ 'name' => 'UpdateStack', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateStackInput', ], 'output' => [ 'shape' => 'UpdateStackOutput', 'resultWrapper' => 'UpdateStackResult', ], 'errors' => [ [ 'shape' => 'InsufficientCapabilitiesException', ], ], ], 'ValidateTemplate' => [ 'name' => 'ValidateTemplate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ValidateTemplateInput', ], 'output' => [ 'shape' => 'ValidateTemplateOutput', 'resultWrapper' => 'ValidateTemplateResult', ], ], ], 'shapes' => [ 'AccountLimit' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'LimitName', ], 'Value' => [ 'shape' => 'LimitValue', ], ], ], 'AccountLimitList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AccountLimit', ], ], 'AllowedValue' => [ 'type' => 'string', ], 'AllowedValues' => [ 'type' => 'list', 'member' => [ 'shape' => 'AllowedValue', ], ], 'AlreadyExistsException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'AlreadyExistsException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'CancelUpdateStackInput' => [ 'type' => 'structure', 'required' => [ 'StackName', ], 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], ], ], 'Capabilities' => [ 'type' => 'list', 'member' => [ 'shape' => 'Capability', ], ], 'CapabilitiesReason' => [ 'type' => 'string', ], 'Capability' => [ 'type' => 'string', 'enum' => [ 'CAPABILITY_IAM', ], ], 'CausingEntity' => [ 'type' => 'string', ], 'Change' => [ 'type' => 'structure', 'members' => [ 'Type' => [ 'shape' => 'ChangeType', ], 'ResourceChange' => [ 'shape' => 'ResourceChange', ], ], ], 'ChangeAction' => [ 'type' => 'string', 'enum' => [ 'Add', 'Modify', 'Remove', ], ], 'ChangeSetId' => [ 'type' => 'string', 'min' => 1, 'pattern' => 'arn:[-a-zA-Z0-9:/]*', ], 'ChangeSetName' => [ 'type' => 'string', 'max' => 128, 'min' => 1, 'pattern' => '[a-zA-Z][-a-zA-Z0-9]*', ], 'ChangeSetNameOrId' => [ 'type' => 'string', 'max' => 1600, 'min' => 1, 'pattern' => '[a-zA-Z][-a-zA-Z0-9]*|arn:[-a-zA-Z0-9:/]*', ], 'ChangeSetNotFoundException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'ChangeSetNotFound', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], 'ChangeSetStatus' => [ 'type' => 'string', 'enum' => [ 'CREATE_PENDING', 'CREATE_IN_PROGRESS', 'CREATE_COMPLETE', 'DELETE_COMPLETE', 'FAILED', ], ], 'ChangeSetStatusReason' => [ 'type' => 'string', ], 'ChangeSetSummaries' => [ 'type' => 'list', 'member' => [ 'shape' => 'ChangeSetSummary', ], ], 'ChangeSetSummary' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'StackId', ], 'StackName' => [ 'shape' => 'StackName', ], 'ChangeSetId' => [ 'shape' => 'ChangeSetId', ], 'ChangeSetName' => [ 'shape' => 'ChangeSetName', ], 'ExecutionStatus' => [ 'shape' => 'ExecutionStatus', ], 'Status' => [ 'shape' => 'ChangeSetStatus', ], 'StatusReason' => [ 'shape' => 'ChangeSetStatusReason', ], 'CreationTime' => [ 'shape' => 'CreationTime', ], 'Description' => [ 'shape' => 'Description', ], ], ], 'ChangeSource' => [ 'type' => 'string', 'enum' => [ 'ResourceReference', 'ParameterReference', 'ResourceAttribute', 'DirectModification', 'Automatic', ], ], 'ChangeType' => [ 'type' => 'string', 'enum' => [ 'Resource', ], ], 'Changes' => [ 'type' => 'list', 'member' => [ 'shape' => 'Change', ], ], 'ClientToken' => [ 'type' => 'string', 'max' => 128, 'min' => 1, ], 'ContinueUpdateRollbackInput' => [ 'type' => 'structure', 'required' => [ 'StackName', ], 'members' => [ 'StackName' => [ 'shape' => 'StackNameOrId', ], ], ], 'ContinueUpdateRollbackOutput' => [ 'type' => 'structure', 'members' => [], ], 'CreateChangeSetInput' => [ 'type' => 'structure', 'required' => [ 'StackName', 'ChangeSetName', ], 'members' => [ 'StackName' => [ 'shape' => 'StackNameOrId', ], 'TemplateBody' => [ 'shape' => 'TemplateBody', ], 'TemplateURL' => [ 'shape' => 'TemplateURL', ], 'UsePreviousTemplate' => [ 'shape' => 'UsePreviousTemplate', ], 'Parameters' => [ 'shape' => 'Parameters', ], 'Capabilities' => [ 'shape' => 'Capabilities', ], 'ResourceTypes' => [ 'shape' => 'ResourceTypes', ], 'NotificationARNs' => [ 'shape' => 'NotificationARNs', ], 'Tags' => [ 'shape' => 'Tags', ], 'ChangeSetName' => [ 'shape' => 'ChangeSetName', ], 'ClientToken' => [ 'shape' => 'ClientToken', ], 'Description' => [ 'shape' => 'Description', ], ], ], 'CreateChangeSetOutput' => [ 'type' => 'structure', 'members' => [ 'Id' => [ 'shape' => 'ChangeSetId', ], ], ], 'CreateStackInput' => [ 'type' => 'structure', 'required' => [ 'StackName', ], 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], 'TemplateBody' => [ 'shape' => 'TemplateBody', ], 'TemplateURL' => [ 'shape' => 'TemplateURL', ], 'Parameters' => [ 'shape' => 'Parameters', ], 'DisableRollback' => [ 'shape' => 'DisableRollback', ], 'TimeoutInMinutes' => [ 'shape' => 'TimeoutMinutes', ], 'NotificationARNs' => [ 'shape' => 'NotificationARNs', ], 'Capabilities' => [ 'shape' => 'Capabilities', ], 'ResourceTypes' => [ 'shape' => 'ResourceTypes', ], 'OnFailure' => [ 'shape' => 'OnFailure', ], 'StackPolicyBody' => [ 'shape' => 'StackPolicyBody', ], 'StackPolicyURL' => [ 'shape' => 'StackPolicyURL', ], 'Tags' => [ 'shape' => 'Tags', ], ], ], 'CreateStackOutput' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'StackId', ], ], ], 'CreationTime' => [ 'type' => 'timestamp', ], 'DeleteChangeSetInput' => [ 'type' => 'structure', 'required' => [ 'ChangeSetName', ], 'members' => [ 'ChangeSetName' => [ 'shape' => 'ChangeSetNameOrId', ], 'StackName' => [ 'shape' => 'StackNameOrId', ], ], ], 'DeleteChangeSetOutput' => [ 'type' => 'structure', 'members' => [], ], 'DeleteStackInput' => [ 'type' => 'structure', 'required' => [ 'StackName', ], 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], 'RetainResources' => [ 'shape' => 'RetainResources', ], ], ], 'DeletionTime' => [ 'type' => 'timestamp', ], 'DescribeAccountLimitsInput' => [ 'type' => 'structure', 'members' => [ 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeAccountLimitsOutput' => [ 'type' => 'structure', 'members' => [ 'AccountLimits' => [ 'shape' => 'AccountLimitList', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeChangeSetInput' => [ 'type' => 'structure', 'required' => [ 'ChangeSetName', ], 'members' => [ 'ChangeSetName' => [ 'shape' => 'ChangeSetNameOrId', ], 'StackName' => [ 'shape' => 'StackNameOrId', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeChangeSetOutput' => [ 'type' => 'structure', 'members' => [ 'ChangeSetName' => [ 'shape' => 'ChangeSetName', ], 'ChangeSetId' => [ 'shape' => 'ChangeSetId', ], 'StackId' => [ 'shape' => 'StackId', ], 'StackName' => [ 'shape' => 'StackName', ], 'Description' => [ 'shape' => 'Description', ], 'Parameters' => [ 'shape' => 'Parameters', ], 'CreationTime' => [ 'shape' => 'CreationTime', ], 'ExecutionStatus' => [ 'shape' => 'ExecutionStatus', ], 'Status' => [ 'shape' => 'ChangeSetStatus', ], 'StatusReason' => [ 'shape' => 'ChangeSetStatusReason', ], 'NotificationARNs' => [ 'shape' => 'NotificationARNs', ], 'Capabilities' => [ 'shape' => 'Capabilities', ], 'Tags' => [ 'shape' => 'Tags', ], 'Changes' => [ 'shape' => 'Changes', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeStackEventsInput' => [ 'type' => 'structure', 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeStackEventsOutput' => [ 'type' => 'structure', 'members' => [ 'StackEvents' => [ 'shape' => 'StackEvents', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeStackResourceInput' => [ 'type' => 'structure', 'required' => [ 'StackName', 'LogicalResourceId', ], 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], 'LogicalResourceId' => [ 'shape' => 'LogicalResourceId', ], ], ], 'DescribeStackResourceOutput' => [ 'type' => 'structure', 'members' => [ 'StackResourceDetail' => [ 'shape' => 'StackResourceDetail', ], ], ], 'DescribeStackResourcesInput' => [ 'type' => 'structure', 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], 'LogicalResourceId' => [ 'shape' => 'LogicalResourceId', ], 'PhysicalResourceId' => [ 'shape' => 'PhysicalResourceId', ], ], ], 'DescribeStackResourcesOutput' => [ 'type' => 'structure', 'members' => [ 'StackResources' => [ 'shape' => 'StackResources', ], ], ], 'DescribeStacksInput' => [ 'type' => 'structure', 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeStacksOutput' => [ 'type' => 'structure', 'members' => [ 'Stacks' => [ 'shape' => 'Stacks', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'Description' => [ 'type' => 'string', 'max' => 1024, 'min' => 1, ], 'DisableRollback' => [ 'type' => 'boolean', ], 'EstimateTemplateCostInput' => [ 'type' => 'structure', 'members' => [ 'TemplateBody' => [ 'shape' => 'TemplateBody', ], 'TemplateURL' => [ 'shape' => 'TemplateURL', ], 'Parameters' => [ 'shape' => 'Parameters', ], ], ], 'EstimateTemplateCostOutput' => [ 'type' => 'structure', 'members' => [ 'Url' => [ 'shape' => 'Url', ], ], ], 'EvaluationType' => [ 'type' => 'string', 'enum' => [ 'Static', 'Dynamic', ], ], 'EventId' => [ 'type' => 'string', ], 'ExecuteChangeSetInput' => [ 'type' => 'structure', 'required' => [ 'ChangeSetName', ], 'members' => [ 'ChangeSetName' => [ 'shape' => 'ChangeSetNameOrId', ], 'StackName' => [ 'shape' => 'StackNameOrId', ], ], ], 'ExecuteChangeSetOutput' => [ 'type' => 'structure', 'members' => [], ], 'ExecutionStatus' => [ 'type' => 'string', 'enum' => [ 'UNAVAILABLE', 'AVAILABLE', 'EXECUTE_IN_PROGRESS', 'EXECUTE_COMPLETE', 'EXECUTE_FAILED', 'OBSOLETE', ], ], 'GetStackPolicyInput' => [ 'type' => 'structure', 'required' => [ 'StackName', ], 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], ], ], 'GetStackPolicyOutput' => [ 'type' => 'structure', 'members' => [ 'StackPolicyBody' => [ 'shape' => 'StackPolicyBody', ], ], ], 'GetTemplateInput' => [ 'type' => 'structure', 'required' => [ 'StackName', ], 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], ], ], 'GetTemplateOutput' => [ 'type' => 'structure', 'members' => [ 'TemplateBody' => [ 'shape' => 'TemplateBody', ], ], ], 'GetTemplateSummaryInput' => [ 'type' => 'structure', 'members' => [ 'TemplateBody' => [ 'shape' => 'TemplateBody', ], 'TemplateURL' => [ 'shape' => 'TemplateURL', ], 'StackName' => [ 'shape' => 'StackNameOrId', ], ], ], 'GetTemplateSummaryOutput' => [ 'type' => 'structure', 'members' => [ 'Parameters' => [ 'shape' => 'ParameterDeclarations', ], 'Description' => [ 'shape' => 'Description', ], 'Capabilities' => [ 'shape' => 'Capabilities', ], 'CapabilitiesReason' => [ 'shape' => 'CapabilitiesReason', ], 'ResourceTypes' => [ 'shape' => 'ResourceTypes', ], 'Version' => [ 'shape' => 'Version', ], 'Metadata' => [ 'shape' => 'Metadata', ], ], ], 'InsufficientCapabilitiesException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'InsufficientCapabilitiesException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'InvalidChangeSetStatusException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'InvalidChangeSetStatus', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'LastUpdatedTime' => [ 'type' => 'timestamp', ], 'LimitExceededException' => [ 'type' => 'structure', 'members' => [], 'error' => [ 'code' => 'LimitExceededException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'LimitName' => [ 'type' => 'string', ], 'LimitValue' => [ 'type' => 'integer', ], 'ListChangeSetsInput' => [ 'type' => 'structure', 'required' => [ 'StackName', ], 'members' => [ 'StackName' => [ 'shape' => 'StackNameOrId', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListChangeSetsOutput' => [ 'type' => 'structure', 'members' => [ 'Summaries' => [ 'shape' => 'ChangeSetSummaries', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListStackResourcesInput' => [ 'type' => 'structure', 'required' => [ 'StackName', ], 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListStackResourcesOutput' => [ 'type' => 'structure', 'members' => [ 'StackResourceSummaries' => [ 'shape' => 'StackResourceSummaries', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'ListStacksInput' => [ 'type' => 'structure', 'members' => [ 'NextToken' => [ 'shape' => 'NextToken', ], 'StackStatusFilter' => [ 'shape' => 'StackStatusFilter', ], ], ], 'ListStacksOutput' => [ 'type' => 'structure', 'members' => [ 'StackSummaries' => [ 'shape' => 'StackSummaries', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'LogicalResourceId' => [ 'type' => 'string', ], 'Metadata' => [ 'type' => 'string', ], 'NextToken' => [ 'type' => 'string', 'max' => 1024, 'min' => 1, ], 'NoEcho' => [ 'type' => 'boolean', ], 'NotificationARN' => [ 'type' => 'string', ], 'NotificationARNs' => [ 'type' => 'list', 'member' => [ 'shape' => 'NotificationARN', ], 'max' => 5, ], 'OnFailure' => [ 'type' => 'string', 'enum' => [ 'DO_NOTHING', 'ROLLBACK', 'DELETE', ], ], 'Output' => [ 'type' => 'structure', 'members' => [ 'OutputKey' => [ 'shape' => 'OutputKey', ], 'OutputValue' => [ 'shape' => 'OutputValue', ], 'Description' => [ 'shape' => 'Description', ], ], ], 'OutputKey' => [ 'type' => 'string', ], 'OutputValue' => [ 'type' => 'string', ], 'Outputs' => [ 'type' => 'list', 'member' => [ 'shape' => 'Output', ], ], 'Parameter' => [ 'type' => 'structure', 'members' => [ 'ParameterKey' => [ 'shape' => 'ParameterKey', ], 'ParameterValue' => [ 'shape' => 'ParameterValue', ], 'UsePreviousValue' => [ 'shape' => 'UsePreviousValue', ], ], ], 'ParameterConstraints' => [ 'type' => 'structure', 'members' => [ 'AllowedValues' => [ 'shape' => 'AllowedValues', ], ], ], 'ParameterDeclaration' => [ 'type' => 'structure', 'members' => [ 'ParameterKey' => [ 'shape' => 'ParameterKey', ], 'DefaultValue' => [ 'shape' => 'ParameterValue', ], 'ParameterType' => [ 'shape' => 'ParameterType', ], 'NoEcho' => [ 'shape' => 'NoEcho', ], 'Description' => [ 'shape' => 'Description', ], 'ParameterConstraints' => [ 'shape' => 'ParameterConstraints', ], ], ], 'ParameterDeclarations' => [ 'type' => 'list', 'member' => [ 'shape' => 'ParameterDeclaration', ], ], 'ParameterKey' => [ 'type' => 'string', ], 'ParameterType' => [ 'type' => 'string', ], 'ParameterValue' => [ 'type' => 'string', ], 'Parameters' => [ 'type' => 'list', 'member' => [ 'shape' => 'Parameter', ], ], 'PhysicalResourceId' => [ 'type' => 'string', ], 'PropertyName' => [ 'type' => 'string', ], 'Replacement' => [ 'type' => 'string', 'enum' => [ 'True', 'False', 'Conditional', ], ], 'RequiresRecreation' => [ 'type' => 'string', 'enum' => [ 'Never', 'Conditionally', 'Always', ], ], 'ResourceAttribute' => [ 'type' => 'string', 'enum' => [ 'Properties', 'Metadata', 'CreationPolicy', 'UpdatePolicy', 'DeletionPolicy', 'Tags', ], ], 'ResourceChange' => [ 'type' => 'structure', 'members' => [ 'Action' => [ 'shape' => 'ChangeAction', ], 'LogicalResourceId' => [ 'shape' => 'LogicalResourceId', ], 'PhysicalResourceId' => [ 'shape' => 'PhysicalResourceId', ], 'ResourceType' => [ 'shape' => 'ResourceType', ], 'Replacement' => [ 'shape' => 'Replacement', ], 'Scope' => [ 'shape' => 'Scope', ], 'Details' => [ 'shape' => 'ResourceChangeDetails', ], ], ], 'ResourceChangeDetail' => [ 'type' => 'structure', 'members' => [ 'Target' => [ 'shape' => 'ResourceTargetDefinition', ], 'Evaluation' => [ 'shape' => 'EvaluationType', ], 'ChangeSource' => [ 'shape' => 'ChangeSource', ], 'CausingEntity' => [ 'shape' => 'CausingEntity', ], ], ], 'ResourceChangeDetails' => [ 'type' => 'list', 'member' => [ 'shape' => 'ResourceChangeDetail', ], ], 'ResourceProperties' => [ 'type' => 'string', ], 'ResourceSignalStatus' => [ 'type' => 'string', 'enum' => [ 'SUCCESS', 'FAILURE', ], ], 'ResourceSignalUniqueId' => [ 'type' => 'string', 'max' => 64, 'min' => 1, ], 'ResourceStatus' => [ 'type' => 'string', 'enum' => [ 'CREATE_IN_PROGRESS', 'CREATE_FAILED', 'CREATE_COMPLETE', 'DELETE_IN_PROGRESS', 'DELETE_FAILED', 'DELETE_COMPLETE', 'DELETE_SKIPPED', 'UPDATE_IN_PROGRESS', 'UPDATE_FAILED', 'UPDATE_COMPLETE', ], ], 'ResourceStatusReason' => [ 'type' => 'string', ], 'ResourceTargetDefinition' => [ 'type' => 'structure', 'members' => [ 'Attribute' => [ 'shape' => 'ResourceAttribute', ], 'Name' => [ 'shape' => 'PropertyName', ], 'RequiresRecreation' => [ 'shape' => 'RequiresRecreation', ], ], ], 'ResourceType' => [ 'type' => 'string', 'max' => 256, 'min' => 1, ], 'ResourceTypes' => [ 'type' => 'list', 'member' => [ 'shape' => 'ResourceType', ], ], 'RetainResources' => [ 'type' => 'list', 'member' => [ 'shape' => 'LogicalResourceId', ], ], 'Scope' => [ 'type' => 'list', 'member' => [ 'shape' => 'ResourceAttribute', ], ], 'SetStackPolicyInput' => [ 'type' => 'structure', 'required' => [ 'StackName', ], 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], 'StackPolicyBody' => [ 'shape' => 'StackPolicyBody', ], 'StackPolicyURL' => [ 'shape' => 'StackPolicyURL', ], ], ], 'SignalResourceInput' => [ 'type' => 'structure', 'required' => [ 'StackName', 'LogicalResourceId', 'UniqueId', 'Status', ], 'members' => [ 'StackName' => [ 'shape' => 'StackNameOrId', ], 'LogicalResourceId' => [ 'shape' => 'LogicalResourceId', ], 'UniqueId' => [ 'shape' => 'ResourceSignalUniqueId', ], 'Status' => [ 'shape' => 'ResourceSignalStatus', ], ], ], 'Stack' => [ 'type' => 'structure', 'required' => [ 'StackName', 'CreationTime', 'StackStatus', ], 'members' => [ 'StackId' => [ 'shape' => 'StackId', ], 'StackName' => [ 'shape' => 'StackName', ], 'Description' => [ 'shape' => 'Description', ], 'Parameters' => [ 'shape' => 'Parameters', ], 'CreationTime' => [ 'shape' => 'CreationTime', ], 'LastUpdatedTime' => [ 'shape' => 'LastUpdatedTime', ], 'StackStatus' => [ 'shape' => 'StackStatus', ], 'StackStatusReason' => [ 'shape' => 'StackStatusReason', ], 'DisableRollback' => [ 'shape' => 'DisableRollback', ], 'NotificationARNs' => [ 'shape' => 'NotificationARNs', ], 'TimeoutInMinutes' => [ 'shape' => 'TimeoutMinutes', ], 'Capabilities' => [ 'shape' => 'Capabilities', ], 'Outputs' => [ 'shape' => 'Outputs', ], 'Tags' => [ 'shape' => 'Tags', ], ], ], 'StackEvent' => [ 'type' => 'structure', 'required' => [ 'StackId', 'EventId', 'StackName', 'Timestamp', ], 'members' => [ 'StackId' => [ 'shape' => 'StackId', ], 'EventId' => [ 'shape' => 'EventId', ], 'StackName' => [ 'shape' => 'StackName', ], 'LogicalResourceId' => [ 'shape' => 'LogicalResourceId', ], 'PhysicalResourceId' => [ 'shape' => 'PhysicalResourceId', ], 'ResourceType' => [ 'shape' => 'ResourceType', ], 'Timestamp' => [ 'shape' => 'Timestamp', ], 'ResourceStatus' => [ 'shape' => 'ResourceStatus', ], 'ResourceStatusReason' => [ 'shape' => 'ResourceStatusReason', ], 'ResourceProperties' => [ 'shape' => 'ResourceProperties', ], ], ], 'StackEvents' => [ 'type' => 'list', 'member' => [ 'shape' => 'StackEvent', ], ], 'StackId' => [ 'type' => 'string', ], 'StackName' => [ 'type' => 'string', ], 'StackNameOrId' => [ 'type' => 'string', 'min' => 1, 'pattern' => '([a-zA-Z][-a-zA-Z0-9]*)|(arn:\\b(aws|aws-us-gov|aws-cn)\\b:[-a-zA-Z0-9:/._+]*)', ], 'StackPolicyBody' => [ 'type' => 'string', 'max' => 16384, 'min' => 1, ], 'StackPolicyDuringUpdateBody' => [ 'type' => 'string', 'max' => 16384, 'min' => 1, ], 'StackPolicyDuringUpdateURL' => [ 'type' => 'string', 'max' => 1350, 'min' => 1, ], 'StackPolicyURL' => [ 'type' => 'string', 'max' => 1350, 'min' => 1, ], 'StackResource' => [ 'type' => 'structure', 'required' => [ 'LogicalResourceId', 'ResourceType', 'Timestamp', 'ResourceStatus', ], 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], 'StackId' => [ 'shape' => 'StackId', ], 'LogicalResourceId' => [ 'shape' => 'LogicalResourceId', ], 'PhysicalResourceId' => [ 'shape' => 'PhysicalResourceId', ], 'ResourceType' => [ 'shape' => 'ResourceType', ], 'Timestamp' => [ 'shape' => 'Timestamp', ], 'ResourceStatus' => [ 'shape' => 'ResourceStatus', ], 'ResourceStatusReason' => [ 'shape' => 'ResourceStatusReason', ], 'Description' => [ 'shape' => 'Description', ], ], ], 'StackResourceDetail' => [ 'type' => 'structure', 'required' => [ 'LogicalResourceId', 'ResourceType', 'LastUpdatedTimestamp', 'ResourceStatus', ], 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], 'StackId' => [ 'shape' => 'StackId', ], 'LogicalResourceId' => [ 'shape' => 'LogicalResourceId', ], 'PhysicalResourceId' => [ 'shape' => 'PhysicalResourceId', ], 'ResourceType' => [ 'shape' => 'ResourceType', ], 'LastUpdatedTimestamp' => [ 'shape' => 'Timestamp', ], 'ResourceStatus' => [ 'shape' => 'ResourceStatus', ], 'ResourceStatusReason' => [ 'shape' => 'ResourceStatusReason', ], 'Description' => [ 'shape' => 'Description', ], 'Metadata' => [ 'shape' => 'Metadata', ], ], ], 'StackResourceSummaries' => [ 'type' => 'list', 'member' => [ 'shape' => 'StackResourceSummary', ], ], 'StackResourceSummary' => [ 'type' => 'structure', 'required' => [ 'LogicalResourceId', 'ResourceType', 'LastUpdatedTimestamp', 'ResourceStatus', ], 'members' => [ 'LogicalResourceId' => [ 'shape' => 'LogicalResourceId', ], 'PhysicalResourceId' => [ 'shape' => 'PhysicalResourceId', ], 'ResourceType' => [ 'shape' => 'ResourceType', ], 'LastUpdatedTimestamp' => [ 'shape' => 'Timestamp', ], 'ResourceStatus' => [ 'shape' => 'ResourceStatus', ], 'ResourceStatusReason' => [ 'shape' => 'ResourceStatusReason', ], ], ], 'StackResources' => [ 'type' => 'list', 'member' => [ 'shape' => 'StackResource', ], ], 'StackStatus' => [ 'type' => 'string', 'enum' => [ 'CREATE_IN_PROGRESS', 'CREATE_FAILED', 'CREATE_COMPLETE', 'ROLLBACK_IN_PROGRESS', 'ROLLBACK_FAILED', 'ROLLBACK_COMPLETE', 'DELETE_IN_PROGRESS', 'DELETE_FAILED', 'DELETE_COMPLETE', 'UPDATE_IN_PROGRESS', 'UPDATE_COMPLETE_CLEANUP_IN_PROGRESS', 'UPDATE_COMPLETE', 'UPDATE_ROLLBACK_IN_PROGRESS', 'UPDATE_ROLLBACK_FAILED', 'UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS', 'UPDATE_ROLLBACK_COMPLETE', ], ], 'StackStatusFilter' => [ 'type' => 'list', 'member' => [ 'shape' => 'StackStatus', ], ], 'StackStatusReason' => [ 'type' => 'string', ], 'StackSummaries' => [ 'type' => 'list', 'member' => [ 'shape' => 'StackSummary', ], ], 'StackSummary' => [ 'type' => 'structure', 'required' => [ 'StackName', 'CreationTime', 'StackStatus', ], 'members' => [ 'StackId' => [ 'shape' => 'StackId', ], 'StackName' => [ 'shape' => 'StackName', ], 'TemplateDescription' => [ 'shape' => 'TemplateDescription', ], 'CreationTime' => [ 'shape' => 'CreationTime', ], 'LastUpdatedTime' => [ 'shape' => 'LastUpdatedTime', ], 'DeletionTime' => [ 'shape' => 'DeletionTime', ], 'StackStatus' => [ 'shape' => 'StackStatus', ], 'StackStatusReason' => [ 'shape' => 'StackStatusReason', ], ], ], 'Stacks' => [ 'type' => 'list', 'member' => [ 'shape' => 'Stack', ], ], 'Tag' => [ 'type' => 'structure', 'members' => [ 'Key' => [ 'shape' => 'TagKey', ], 'Value' => [ 'shape' => 'TagValue', ], ], ], 'TagKey' => [ 'type' => 'string', ], 'TagValue' => [ 'type' => 'string', ], 'Tags' => [ 'type' => 'list', 'member' => [ 'shape' => 'Tag', ], ], 'TemplateBody' => [ 'type' => 'string', 'min' => 1, ], 'TemplateDescription' => [ 'type' => 'string', ], 'TemplateParameter' => [ 'type' => 'structure', 'members' => [ 'ParameterKey' => [ 'shape' => 'ParameterKey', ], 'DefaultValue' => [ 'shape' => 'ParameterValue', ], 'NoEcho' => [ 'shape' => 'NoEcho', ], 'Description' => [ 'shape' => 'Description', ], ], ], 'TemplateParameters' => [ 'type' => 'list', 'member' => [ 'shape' => 'TemplateParameter', ], ], 'TemplateURL' => [ 'type' => 'string', 'max' => 1024, 'min' => 1, ], 'TimeoutMinutes' => [ 'type' => 'integer', 'min' => 1, ], 'Timestamp' => [ 'type' => 'timestamp', ], 'UpdateStackInput' => [ 'type' => 'structure', 'required' => [ 'StackName', ], 'members' => [ 'StackName' => [ 'shape' => 'StackName', ], 'TemplateBody' => [ 'shape' => 'TemplateBody', ], 'TemplateURL' => [ 'shape' => 'TemplateURL', ], 'UsePreviousTemplate' => [ 'shape' => 'UsePreviousTemplate', ], 'StackPolicyDuringUpdateBody' => [ 'shape' => 'StackPolicyDuringUpdateBody', ], 'StackPolicyDuringUpdateURL' => [ 'shape' => 'StackPolicyDuringUpdateURL', ], 'Parameters' => [ 'shape' => 'Parameters', ], 'Capabilities' => [ 'shape' => 'Capabilities', ], 'ResourceTypes' => [ 'shape' => 'ResourceTypes', ], 'StackPolicyBody' => [ 'shape' => 'StackPolicyBody', ], 'StackPolicyURL' => [ 'shape' => 'StackPolicyURL', ], 'NotificationARNs' => [ 'shape' => 'NotificationARNs', ], 'Tags' => [ 'shape' => 'Tags', ], ], ], 'UpdateStackOutput' => [ 'type' => 'structure', 'members' => [ 'StackId' => [ 'shape' => 'StackId', ], ], ], 'Url' => [ 'type' => 'string', ], 'UsePreviousTemplate' => [ 'type' => 'boolean', ], 'UsePreviousValue' => [ 'type' => 'boolean', ], 'ValidateTemplateInput' => [ 'type' => 'structure', 'members' => [ 'TemplateBody' => [ 'shape' => 'TemplateBody', ], 'TemplateURL' => [ 'shape' => 'TemplateURL', ], ], ], 'ValidateTemplateOutput' => [ 'type' => 'structure', 'members' => [ 'Parameters' => [ 'shape' => 'TemplateParameters', ], 'Description' => [ 'shape' => 'Description', ], 'Capabilities' => [ 'shape' => 'Capabilities', ], 'CapabilitiesReason' => [ 'shape' => 'CapabilitiesReason', ], ], ], 'Version' => [ 'type' => 'string', ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/cloudformation/2010-05-15/waiters-2.json.php:// This file was auto-generated from sdk-root/src/data/cloudformation/2010-05-15/waiters-2.json
/Users/a01064483/desktop/current/exam/Aws/data/devicefarm/2015-06-23/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2015-06-23', 'endpointPrefix' => 'devicefarm', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceFullName' => 'AWS Device Farm', 'signatureVersion' => 'v4', 'targetPrefix' => 'DeviceFarm_20150623', ], 'operations' => [ 'CreateDevicePool' => [ 'name' => 'CreateDevicePool', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateDevicePoolRequest', ], 'output' => [ 'shape' => 'CreateDevicePoolResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'CreateProject' => [ 'name' => 'CreateProject', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateProjectRequest', ], 'output' => [ 'shape' => 'CreateProjectResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'CreateUpload' => [ 'name' => 'CreateUpload', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateUploadRequest', ], 'output' => [ 'shape' => 'CreateUploadResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'DeleteDevicePool' => [ 'name' => 'DeleteDevicePool', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteDevicePoolRequest', ], 'output' => [ 'shape' => 'DeleteDevicePoolResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'DeleteProject' => [ 'name' => 'DeleteProject', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteProjectRequest', ], 'output' => [ 'shape' => 'DeleteProjectResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'DeleteRun' => [ 'name' => 'DeleteRun', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteRunRequest', ], 'output' => [ 'shape' => 'DeleteRunResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'DeleteUpload' => [ 'name' => 'DeleteUpload', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteUploadRequest', ], 'output' => [ 'shape' => 'DeleteUploadResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'GetAccountSettings' => [ 'name' => 'GetAccountSettings', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetAccountSettingsRequest', ], 'output' => [ 'shape' => 'GetAccountSettingsResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'GetDevice' => [ 'name' => 'GetDevice', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetDeviceRequest', ], 'output' => [ 'shape' => 'GetDeviceResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'GetDevicePool' => [ 'name' => 'GetDevicePool', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetDevicePoolRequest', ], 'output' => [ 'shape' => 'GetDevicePoolResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'GetDevicePoolCompatibility' => [ 'name' => 'GetDevicePoolCompatibility', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetDevicePoolCompatibilityRequest', ], 'output' => [ 'shape' => 'GetDevicePoolCompatibilityResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'GetJob' => [ 'name' => 'GetJob', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetJobRequest', ], 'output' => [ 'shape' => 'GetJobResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'GetOfferingStatus' => [ 'name' => 'GetOfferingStatus', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetOfferingStatusRequest', ], 'output' => [ 'shape' => 'GetOfferingStatusResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'NotEligibleException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'GetProject' => [ 'name' => 'GetProject', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetProjectRequest', ], 'output' => [ 'shape' => 'GetProjectResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'GetRun' => [ 'name' => 'GetRun', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetRunRequest', ], 'output' => [ 'shape' => 'GetRunResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'GetSuite' => [ 'name' => 'GetSuite', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetSuiteRequest', ], 'output' => [ 'shape' => 'GetSuiteResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'GetTest' => [ 'name' => 'GetTest', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetTestRequest', ], 'output' => [ 'shape' => 'GetTestResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'GetUpload' => [ 'name' => 'GetUpload', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetUploadRequest', ], 'output' => [ 'shape' => 'GetUploadResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListArtifacts' => [ 'name' => 'ListArtifacts', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListArtifactsRequest', ], 'output' => [ 'shape' => 'ListArtifactsResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListDevicePools' => [ 'name' => 'ListDevicePools', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListDevicePoolsRequest', ], 'output' => [ 'shape' => 'ListDevicePoolsResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListDevices' => [ 'name' => 'ListDevices', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListDevicesRequest', ], 'output' => [ 'shape' => 'ListDevicesResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListJobs' => [ 'name' => 'ListJobs', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListJobsRequest', ], 'output' => [ 'shape' => 'ListJobsResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListOfferingTransactions' => [ 'name' => 'ListOfferingTransactions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListOfferingTransactionsRequest', ], 'output' => [ 'shape' => 'ListOfferingTransactionsResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'NotEligibleException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListOfferings' => [ 'name' => 'ListOfferings', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListOfferingsRequest', ], 'output' => [ 'shape' => 'ListOfferingsResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'NotEligibleException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListProjects' => [ 'name' => 'ListProjects', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListProjectsRequest', ], 'output' => [ 'shape' => 'ListProjectsResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListRuns' => [ 'name' => 'ListRuns', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListRunsRequest', ], 'output' => [ 'shape' => 'ListRunsResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListSamples' => [ 'name' => 'ListSamples', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListSamplesRequest', ], 'output' => [ 'shape' => 'ListSamplesResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListSuites' => [ 'name' => 'ListSuites', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListSuitesRequest', ], 'output' => [ 'shape' => 'ListSuitesResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListTests' => [ 'name' => 'ListTests', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListTestsRequest', ], 'output' => [ 'shape' => 'ListTestsResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListUniqueProblems' => [ 'name' => 'ListUniqueProblems', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListUniqueProblemsRequest', ], 'output' => [ 'shape' => 'ListUniqueProblemsResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ListUploads' => [ 'name' => 'ListUploads', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListUploadsRequest', ], 'output' => [ 'shape' => 'ListUploadsResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'PurchaseOffering' => [ 'name' => 'PurchaseOffering', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PurchaseOfferingRequest', ], 'output' => [ 'shape' => 'PurchaseOfferingResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'NotEligibleException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'RenewOffering' => [ 'name' => 'RenewOffering', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RenewOfferingRequest', ], 'output' => [ 'shape' => 'RenewOfferingResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'NotEligibleException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'ScheduleRun' => [ 'name' => 'ScheduleRun', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ScheduleRunRequest', ], 'output' => [ 'shape' => 'ScheduleRunResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'IdempotencyException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'StopRun' => [ 'name' => 'StopRun', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StopRunRequest', ], 'output' => [ 'shape' => 'StopRunResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'UpdateDevicePool' => [ 'name' => 'UpdateDevicePool', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateDevicePoolRequest', ], 'output' => [ 'shape' => 'UpdateDevicePoolResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], 'UpdateProject' => [ 'name' => 'UpdateProject', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateProjectRequest', ], 'output' => [ 'shape' => 'UpdateProjectResult', ], 'errors' => [ [ 'shape' => 'ArgumentException', ], [ 'shape' => 'NotFoundException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceAccountException', ], ], ], ], 'shapes' => [ 'AWSAccountNumber' => [ 'type' => 'string', 'max' => 16, 'min' => 2, ], 'AccountSettings' => [ 'type' => 'structure', 'members' => [ 'awsAccountNumber' => [ 'shape' => 'AWSAccountNumber', ], 'unmeteredDevices' => [ 'shape' => 'PurchasedDevicesMap', ], 'unmeteredRemoteAccessDevices' => [ 'shape' => 'PurchasedDevicesMap', ], ], ], 'AmazonResourceName' => [ 'type' => 'string', 'min' => 32, ], 'AmazonResourceNames' => [ 'type' => 'list', 'member' => [ 'shape' => 'AmazonResourceName', ], ], 'ArgumentException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'Message', ], ], 'exception' => true, ], 'Artifact' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'type' => [ 'shape' => 'ArtifactType', ], 'extension' => [ 'shape' => 'String', ], 'url' => [ 'shape' => 'URL', ], ], ], 'ArtifactCategory' => [ 'type' => 'string', 'enum' => [ 'SCREENSHOT', 'FILE', 'LOG', ], ], 'ArtifactType' => [ 'type' => 'string', 'enum' => [ 'UNKNOWN', 'SCREENSHOT', 'DEVICE_LOG', 'MESSAGE_LOG', 'RESULT_LOG', 'SERVICE_LOG', 'WEBKIT_LOG', 'INSTRUMENTATION_OUTPUT', 'EXERCISER_MONKEY_OUTPUT', 'CALABASH_JSON_OUTPUT', 'CALABASH_PRETTY_OUTPUT', 'CALABASH_STANDARD_OUTPUT', 'CALABASH_JAVA_XML_OUTPUT', 'AUTOMATION_OUTPUT', 'APPIUM_SERVER_OUTPUT', 'APPIUM_JAVA_OUTPUT', 'APPIUM_JAVA_XML_OUTPUT', 'APPIUM_PYTHON_OUTPUT', 'APPIUM_PYTHON_XML_OUTPUT', 'EXPLORER_EVENT_LOG', 'EXPLORER_SUMMARY_LOG', 'APPLICATION_CRASH_REPORT', 'XCTEST_LOG', 'VIDEO', ], ], 'Artifacts' => [ 'type' => 'list', 'member' => [ 'shape' => 'Artifact', ], ], 'BillingMethod' => [ 'type' => 'string', 'enum' => [ 'METERED', 'UNMETERED', ], ], 'Boolean' => [ 'type' => 'boolean', ], 'CPU' => [ 'type' => 'structure', 'members' => [ 'frequency' => [ 'shape' => 'String', ], 'architecture' => [ 'shape' => 'String', ], 'clock' => [ 'shape' => 'Double', ], ], ], 'ContentType' => [ 'type' => 'string', 'max' => 64, 'min' => 0, ], 'Counters' => [ 'type' => 'structure', 'members' => [ 'total' => [ 'shape' => 'Integer', ], 'passed' => [ 'shape' => 'Integer', ], 'failed' => [ 'shape' => 'Integer', ], 'warned' => [ 'shape' => 'Integer', ], 'errored' => [ 'shape' => 'Integer', ], 'stopped' => [ 'shape' => 'Integer', ], 'skipped' => [ 'shape' => 'Integer', ], ], ], 'CreateDevicePoolRequest' => [ 'type' => 'structure', 'required' => [ 'projectArn', 'name', 'rules', ], 'members' => [ 'projectArn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'description' => [ 'shape' => 'Message', ], 'rules' => [ 'shape' => 'Rules', ], ], ], 'CreateDevicePoolResult' => [ 'type' => 'structure', 'members' => [ 'devicePool' => [ 'shape' => 'DevicePool', ], ], ], 'CreateProjectRequest' => [ 'type' => 'structure', 'required' => [ 'name', ], 'members' => [ 'name' => [ 'shape' => 'Name', ], ], ], 'CreateProjectResult' => [ 'type' => 'structure', 'members' => [ 'project' => [ 'shape' => 'Project', ], ], ], 'CreateUploadRequest' => [ 'type' => 'structure', 'required' => [ 'projectArn', 'name', 'type', ], 'members' => [ 'projectArn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'type' => [ 'shape' => 'UploadType', ], 'contentType' => [ 'shape' => 'ContentType', ], ], ], 'CreateUploadResult' => [ 'type' => 'structure', 'members' => [ 'upload' => [ 'shape' => 'Upload', ], ], ], 'CurrencyCode' => [ 'type' => 'string', 'enum' => [ 'USD', ], ], 'DateTime' => [ 'type' => 'timestamp', ], 'DeleteDevicePoolRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'DeleteDevicePoolResult' => [ 'type' => 'structure', 'members' => [], ], 'DeleteProjectRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'DeleteProjectResult' => [ 'type' => 'structure', 'members' => [], ], 'DeleteRunRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'DeleteRunResult' => [ 'type' => 'structure', 'members' => [], ], 'DeleteUploadRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'DeleteUploadResult' => [ 'type' => 'structure', 'members' => [], ], 'Device' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'manufacturer' => [ 'shape' => 'String', ], 'model' => [ 'shape' => 'String', ], 'formFactor' => [ 'shape' => 'DeviceFormFactor', ], 'platform' => [ 'shape' => 'DevicePlatform', ], 'os' => [ 'shape' => 'String', ], 'cpu' => [ 'shape' => 'CPU', ], 'resolution' => [ 'shape' => 'Resolution', ], 'heapSize' => [ 'shape' => 'Long', ], 'memory' => [ 'shape' => 'Long', ], 'image' => [ 'shape' => 'String', ], 'carrier' => [ 'shape' => 'String', ], 'radio' => [ 'shape' => 'String', ], ], ], 'DeviceAttribute' => [ 'type' => 'string', 'enum' => [ 'ARN', 'PLATFORM', 'FORM_FACTOR', 'MANUFACTURER', ], ], 'DeviceFormFactor' => [ 'type' => 'string', 'enum' => [ 'PHONE', 'TABLET', ], ], 'DeviceMinutes' => [ 'type' => 'structure', 'members' => [ 'total' => [ 'shape' => 'Double', ], 'metered' => [ 'shape' => 'Double', ], 'unmetered' => [ 'shape' => 'Double', ], ], ], 'DevicePlatform' => [ 'type' => 'string', 'enum' => [ 'ANDROID', 'IOS', ], ], 'DevicePool' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'description' => [ 'shape' => 'Message', ], 'type' => [ 'shape' => 'DevicePoolType', ], 'rules' => [ 'shape' => 'Rules', ], ], ], 'DevicePoolCompatibilityResult' => [ 'type' => 'structure', 'members' => [ 'device' => [ 'shape' => 'Device', ], 'compatible' => [ 'shape' => 'Boolean', ], 'incompatibilityMessages' => [ 'shape' => 'IncompatibilityMessages', ], ], ], 'DevicePoolCompatibilityResults' => [ 'type' => 'list', 'member' => [ 'shape' => 'DevicePoolCompatibilityResult', ], ], 'DevicePoolType' => [ 'type' => 'string', 'enum' => [ 'CURATED', 'PRIVATE', ], ], 'DevicePools' => [ 'type' => 'list', 'member' => [ 'shape' => 'DevicePool', ], ], 'Devices' => [ 'type' => 'list', 'member' => [ 'shape' => 'Device', ], ], 'Double' => [ 'type' => 'double', ], 'ExecutionResult' => [ 'type' => 'string', 'enum' => [ 'PENDING', 'PASSED', 'WARNED', 'FAILED', 'SKIPPED', 'ERRORED', 'STOPPED', ], ], 'ExecutionStatus' => [ 'type' => 'string', 'enum' => [ 'PENDING', 'PENDING_CONCURRENCY', 'PENDING_DEVICE', 'PROCESSING', 'SCHEDULING', 'PREPARING', 'RUNNING', 'COMPLETED', 'STOPPING', ], ], 'Filter' => [ 'type' => 'string', 'max' => 8192, 'min' => 0, ], 'GetAccountSettingsRequest' => [ 'type' => 'structure', 'members' => [], ], 'GetAccountSettingsResult' => [ 'type' => 'structure', 'members' => [ 'accountSettings' => [ 'shape' => 'AccountSettings', ], ], ], 'GetDevicePoolCompatibilityRequest' => [ 'type' => 'structure', 'required' => [ 'devicePoolArn', ], 'members' => [ 'devicePoolArn' => [ 'shape' => 'AmazonResourceName', ], 'appArn' => [ 'shape' => 'AmazonResourceName', ], 'testType' => [ 'shape' => 'TestType', ], ], ], 'GetDevicePoolCompatibilityResult' => [ 'type' => 'structure', 'members' => [ 'compatibleDevices' => [ 'shape' => 'DevicePoolCompatibilityResults', ], 'incompatibleDevices' => [ 'shape' => 'DevicePoolCompatibilityResults', ], ], ], 'GetDevicePoolRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'GetDevicePoolResult' => [ 'type' => 'structure', 'members' => [ 'devicePool' => [ 'shape' => 'DevicePool', ], ], ], 'GetDeviceRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'GetDeviceResult' => [ 'type' => 'structure', 'members' => [ 'device' => [ 'shape' => 'Device', ], ], ], 'GetJobRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'GetJobResult' => [ 'type' => 'structure', 'members' => [ 'job' => [ 'shape' => 'Job', ], ], ], 'GetOfferingStatusRequest' => [ 'type' => 'structure', 'members' => [ 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'GetOfferingStatusResult' => [ 'type' => 'structure', 'members' => [ 'current' => [ 'shape' => 'OfferingStatusMap', ], 'nextPeriod' => [ 'shape' => 'OfferingStatusMap', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'GetProjectRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'GetProjectResult' => [ 'type' => 'structure', 'members' => [ 'project' => [ 'shape' => 'Project', ], ], ], 'GetRunRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'GetRunResult' => [ 'type' => 'structure', 'members' => [ 'run' => [ 'shape' => 'Run', ], ], ], 'GetSuiteRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'GetSuiteResult' => [ 'type' => 'structure', 'members' => [ 'suite' => [ 'shape' => 'Suite', ], ], ], 'GetTestRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'GetTestResult' => [ 'type' => 'structure', 'members' => [ 'test' => [ 'shape' => 'Test', ], ], ], 'GetUploadRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'GetUploadResult' => [ 'type' => 'structure', 'members' => [ 'upload' => [ 'shape' => 'Upload', ], ], ], 'IdempotencyException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'Message', ], ], 'exception' => true, ], 'IncompatibilityMessage' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'Message', ], 'type' => [ 'shape' => 'DeviceAttribute', ], ], ], 'IncompatibilityMessages' => [ 'type' => 'list', 'member' => [ 'shape' => 'IncompatibilityMessage', ], ], 'Integer' => [ 'type' => 'integer', ], 'Job' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'type' => [ 'shape' => 'TestType', ], 'created' => [ 'shape' => 'DateTime', ], 'status' => [ 'shape' => 'ExecutionStatus', ], 'result' => [ 'shape' => 'ExecutionResult', ], 'started' => [ 'shape' => 'DateTime', ], 'stopped' => [ 'shape' => 'DateTime', ], 'counters' => [ 'shape' => 'Counters', ], 'message' => [ 'shape' => 'Message', ], 'device' => [ 'shape' => 'Device', ], 'deviceMinutes' => [ 'shape' => 'DeviceMinutes', ], ], ], 'Jobs' => [ 'type' => 'list', 'member' => [ 'shape' => 'Job', ], ], 'LimitExceededException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'Message', ], ], 'exception' => true, ], 'ListArtifactsRequest' => [ 'type' => 'structure', 'required' => [ 'arn', 'type', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'type' => [ 'shape' => 'ArtifactCategory', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListArtifactsResult' => [ 'type' => 'structure', 'members' => [ 'artifacts' => [ 'shape' => 'Artifacts', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListDevicePoolsRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'type' => [ 'shape' => 'DevicePoolType', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListDevicePoolsResult' => [ 'type' => 'structure', 'members' => [ 'devicePools' => [ 'shape' => 'DevicePools', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListDevicesRequest' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListDevicesResult' => [ 'type' => 'structure', 'members' => [ 'devices' => [ 'shape' => 'Devices', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListJobsRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListJobsResult' => [ 'type' => 'structure', 'members' => [ 'jobs' => [ 'shape' => 'Jobs', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListOfferingTransactionsRequest' => [ 'type' => 'structure', 'members' => [ 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListOfferingTransactionsResult' => [ 'type' => 'structure', 'members' => [ 'offeringTransactions' => [ 'shape' => 'OfferingTransactions', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListOfferingsRequest' => [ 'type' => 'structure', 'members' => [ 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListOfferingsResult' => [ 'type' => 'structure', 'members' => [ 'offerings' => [ 'shape' => 'Offerings', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListProjectsRequest' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListProjectsResult' => [ 'type' => 'structure', 'members' => [ 'projects' => [ 'shape' => 'Projects', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListRunsRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListRunsResult' => [ 'type' => 'structure', 'members' => [ 'runs' => [ 'shape' => 'Runs', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListSamplesRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListSamplesResult' => [ 'type' => 'structure', 'members' => [ 'samples' => [ 'shape' => 'Samples', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListSuitesRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListSuitesResult' => [ 'type' => 'structure', 'members' => [ 'suites' => [ 'shape' => 'Suites', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListTestsRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListTestsResult' => [ 'type' => 'structure', 'members' => [ 'tests' => [ 'shape' => 'Tests', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListUniqueProblemsRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListUniqueProblemsResult' => [ 'type' => 'structure', 'members' => [ 'uniqueProblems' => [ 'shape' => 'UniqueProblemsByExecutionResultMap', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListUploadsRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'ListUploadsResult' => [ 'type' => 'structure', 'members' => [ 'uploads' => [ 'shape' => 'Uploads', ], 'nextToken' => [ 'shape' => 'PaginationToken', ], ], ], 'Location' => [ 'type' => 'structure', 'required' => [ 'latitude', 'longitude', ], 'members' => [ 'latitude' => [ 'shape' => 'Double', ], 'longitude' => [ 'shape' => 'Double', ], ], ], 'Long' => [ 'type' => 'long', ], 'Message' => [ 'type' => 'string', 'max' => 16384, 'min' => 0, ], 'Metadata' => [ 'type' => 'string', 'max' => 8192, 'min' => 0, ], 'MonetaryAmount' => [ 'type' => 'structure', 'members' => [ 'amount' => [ 'shape' => 'Double', ], 'currencyCode' => [ 'shape' => 'CurrencyCode', ], ], ], 'Name' => [ 'type' => 'string', 'max' => 256, 'min' => 0, ], 'NotEligibleException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'Message', ], ], 'exception' => true, ], 'NotFoundException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'Message', ], ], 'exception' => true, ], 'Offering' => [ 'type' => 'structure', 'members' => [ 'id' => [ 'shape' => 'OfferingIdentifier', ], 'description' => [ 'shape' => 'Message', ], 'type' => [ 'shape' => 'OfferingType', ], 'platform' => [ 'shape' => 'DevicePlatform', ], 'recurringCharges' => [ 'shape' => 'RecurringCharges', ], ], ], 'OfferingIdentifier' => [ 'type' => 'string', 'min' => 32, ], 'OfferingStatus' => [ 'type' => 'structure', 'members' => [ 'type' => [ 'shape' => 'OfferingTransactionType', ], 'offering' => [ 'shape' => 'Offering', ], 'quantity' => [ 'shape' => 'Integer', ], 'effectiveOn' => [ 'shape' => 'DateTime', ], ], ], 'OfferingStatusMap' => [ 'type' => 'map', 'key' => [ 'shape' => 'OfferingIdentifier', ], 'value' => [ 'shape' => 'OfferingStatus', ], ], 'OfferingTransaction' => [ 'type' => 'structure', 'members' => [ 'offeringStatus' => [ 'shape' => 'OfferingStatus', ], 'transactionId' => [ 'shape' => 'TransactionIdentifier', ], 'createdOn' => [ 'shape' => 'DateTime', ], 'cost' => [ 'shape' => 'MonetaryAmount', ], ], ], 'OfferingTransactionType' => [ 'type' => 'string', 'enum' => [ 'PURCHASE', 'RENEW', 'SYSTEM', ], ], 'OfferingTransactions' => [ 'type' => 'list', 'member' => [ 'shape' => 'OfferingTransaction', ], ], 'OfferingType' => [ 'type' => 'string', 'enum' => [ 'RECURRING', ], ], 'Offerings' => [ 'type' => 'list', 'member' => [ 'shape' => 'Offering', ], ], 'PaginationToken' => [ 'type' => 'string', 'max' => 1024, 'min' => 4, ], 'Problem' => [ 'type' => 'structure', 'members' => [ 'run' => [ 'shape' => 'ProblemDetail', ], 'job' => [ 'shape' => 'ProblemDetail', ], 'suite' => [ 'shape' => 'ProblemDetail', ], 'test' => [ 'shape' => 'ProblemDetail', ], 'device' => [ 'shape' => 'Device', ], 'result' => [ 'shape' => 'ExecutionResult', ], 'message' => [ 'shape' => 'Message', ], ], ], 'ProblemDetail' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], ], ], 'Problems' => [ 'type' => 'list', 'member' => [ 'shape' => 'Problem', ], ], 'Project' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'created' => [ 'shape' => 'DateTime', ], ], ], 'Projects' => [ 'type' => 'list', 'member' => [ 'shape' => 'Project', ], ], 'PurchaseOfferingRequest' => [ 'type' => 'structure', 'members' => [ 'offeringId' => [ 'shape' => 'OfferingIdentifier', ], 'quantity' => [ 'shape' => 'Integer', ], ], ], 'PurchaseOfferingResult' => [ 'type' => 'structure', 'members' => [ 'offeringTransaction' => [ 'shape' => 'OfferingTransaction', ], ], ], 'PurchasedDevicesMap' => [ 'type' => 'map', 'key' => [ 'shape' => 'DevicePlatform', ], 'value' => [ 'shape' => 'Integer', ], ], 'Radios' => [ 'type' => 'structure', 'members' => [ 'wifi' => [ 'shape' => 'Boolean', ], 'bluetooth' => [ 'shape' => 'Boolean', ], 'nfc' => [ 'shape' => 'Boolean', ], 'gps' => [ 'shape' => 'Boolean', ], ], ], 'RecurringCharge' => [ 'type' => 'structure', 'members' => [ 'cost' => [ 'shape' => 'MonetaryAmount', ], 'frequency' => [ 'shape' => 'RecurringChargeFrequency', ], ], ], 'RecurringChargeFrequency' => [ 'type' => 'string', 'enum' => [ 'MONTHLY', ], ], 'RecurringCharges' => [ 'type' => 'list', 'member' => [ 'shape' => 'RecurringCharge', ], ], 'RenewOfferingRequest' => [ 'type' => 'structure', 'members' => [ 'offeringId' => [ 'shape' => 'OfferingIdentifier', ], 'quantity' => [ 'shape' => 'Integer', ], ], ], 'RenewOfferingResult' => [ 'type' => 'structure', 'members' => [ 'offeringTransaction' => [ 'shape' => 'OfferingTransaction', ], ], ], 'Resolution' => [ 'type' => 'structure', 'members' => [ 'width' => [ 'shape' => 'Integer', ], 'height' => [ 'shape' => 'Integer', ], ], ], 'Rule' => [ 'type' => 'structure', 'members' => [ 'attribute' => [ 'shape' => 'DeviceAttribute', ], 'operator' => [ 'shape' => 'RuleOperator', ], 'value' => [ 'shape' => 'String', ], ], ], 'RuleOperator' => [ 'type' => 'string', 'enum' => [ 'EQUALS', 'LESS_THAN', 'GREATER_THAN', 'IN', 'NOT_IN', ], ], 'Rules' => [ 'type' => 'list', 'member' => [ 'shape' => 'Rule', ], ], 'Run' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'type' => [ 'shape' => 'TestType', ], 'platform' => [ 'shape' => 'DevicePlatform', ], 'created' => [ 'shape' => 'DateTime', ], 'status' => [ 'shape' => 'ExecutionStatus', ], 'result' => [ 'shape' => 'ExecutionResult', ], 'started' => [ 'shape' => 'DateTime', ], 'stopped' => [ 'shape' => 'DateTime', ], 'counters' => [ 'shape' => 'Counters', ], 'message' => [ 'shape' => 'Message', ], 'totalJobs' => [ 'shape' => 'Integer', ], 'completedJobs' => [ 'shape' => 'Integer', ], 'billingMethod' => [ 'shape' => 'BillingMethod', ], 'deviceMinutes' => [ 'shape' => 'DeviceMinutes', ], ], ], 'Runs' => [ 'type' => 'list', 'member' => [ 'shape' => 'Run', ], ], 'Sample' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'type' => [ 'shape' => 'SampleType', ], 'url' => [ 'shape' => 'URL', ], ], ], 'SampleType' => [ 'type' => 'string', 'enum' => [ 'CPU', 'MEMORY', 'THREADS', 'RX_RATE', 'TX_RATE', 'RX', 'TX', 'NATIVE_FRAMES', 'NATIVE_FPS', 'NATIVE_MIN_DRAWTIME', 'NATIVE_AVG_DRAWTIME', 'NATIVE_MAX_DRAWTIME', 'OPENGL_FRAMES', 'OPENGL_FPS', 'OPENGL_MIN_DRAWTIME', 'OPENGL_AVG_DRAWTIME', 'OPENGL_MAX_DRAWTIME', ], ], 'Samples' => [ 'type' => 'list', 'member' => [ 'shape' => 'Sample', ], ], 'ScheduleRunConfiguration' => [ 'type' => 'structure', 'members' => [ 'extraDataPackageArn' => [ 'shape' => 'AmazonResourceName', ], 'networkProfileArn' => [ 'shape' => 'AmazonResourceName', ], 'locale' => [ 'shape' => 'String', ], 'location' => [ 'shape' => 'Location', ], 'radios' => [ 'shape' => 'Radios', ], 'auxiliaryApps' => [ 'shape' => 'AmazonResourceNames', ], 'billingMethod' => [ 'shape' => 'BillingMethod', ], ], ], 'ScheduleRunRequest' => [ 'type' => 'structure', 'required' => [ 'projectArn', 'devicePoolArn', 'test', ], 'members' => [ 'projectArn' => [ 'shape' => 'AmazonResourceName', ], 'appArn' => [ 'shape' => 'AmazonResourceName', ], 'devicePoolArn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'test' => [ 'shape' => 'ScheduleRunTest', ], 'configuration' => [ 'shape' => 'ScheduleRunConfiguration', ], ], ], 'ScheduleRunResult' => [ 'type' => 'structure', 'members' => [ 'run' => [ 'shape' => 'Run', ], ], ], 'ScheduleRunTest' => [ 'type' => 'structure', 'required' => [ 'type', ], 'members' => [ 'type' => [ 'shape' => 'TestType', ], 'testPackageArn' => [ 'shape' => 'AmazonResourceName', ], 'filter' => [ 'shape' => 'Filter', ], 'parameters' => [ 'shape' => 'TestParameters', ], ], ], 'ServiceAccountException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'Message', ], ], 'exception' => true, ], 'StopRunRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], ], ], 'StopRunResult' => [ 'type' => 'structure', 'members' => [ 'run' => [ 'shape' => 'Run', ], ], ], 'String' => [ 'type' => 'string', ], 'Suite' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'type' => [ 'shape' => 'TestType', ], 'created' => [ 'shape' => 'DateTime', ], 'status' => [ 'shape' => 'ExecutionStatus', ], 'result' => [ 'shape' => 'ExecutionResult', ], 'started' => [ 'shape' => 'DateTime', ], 'stopped' => [ 'shape' => 'DateTime', ], 'counters' => [ 'shape' => 'Counters', ], 'message' => [ 'shape' => 'Message', ], 'deviceMinutes' => [ 'shape' => 'DeviceMinutes', ], ], ], 'Suites' => [ 'type' => 'list', 'member' => [ 'shape' => 'Suite', ], ], 'Test' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'type' => [ 'shape' => 'TestType', ], 'created' => [ 'shape' => 'DateTime', ], 'status' => [ 'shape' => 'ExecutionStatus', ], 'result' => [ 'shape' => 'ExecutionResult', ], 'started' => [ 'shape' => 'DateTime', ], 'stopped' => [ 'shape' => 'DateTime', ], 'counters' => [ 'shape' => 'Counters', ], 'message' => [ 'shape' => 'Message', ], 'deviceMinutes' => [ 'shape' => 'DeviceMinutes', ], ], ], 'TestParameters' => [ 'type' => 'map', 'key' => [ 'shape' => 'String', ], 'value' => [ 'shape' => 'String', ], ], 'TestType' => [ 'type' => 'string', 'enum' => [ 'BUILTIN_FUZZ', 'BUILTIN_EXPLORER', 'APPIUM_JAVA_JUNIT', 'APPIUM_JAVA_TESTNG', 'APPIUM_PYTHON', 'APPIUM_WEB_JAVA_JUNIT', 'APPIUM_WEB_JAVA_TESTNG', 'APPIUM_WEB_PYTHON', 'CALABASH', 'INSTRUMENTATION', 'UIAUTOMATION', 'UIAUTOMATOR', 'XCTEST', 'XCTEST_UI', ], ], 'Tests' => [ 'type' => 'list', 'member' => [ 'shape' => 'Test', ], ], 'TransactionIdentifier' => [ 'type' => 'string', 'min' => 32, ], 'URL' => [ 'type' => 'string', 'max' => 2048, 'min' => 0, ], 'UniqueProblem' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'Message', ], 'problems' => [ 'shape' => 'Problems', ], ], ], 'UniqueProblems' => [ 'type' => 'list', 'member' => [ 'shape' => 'UniqueProblem', ], ], 'UniqueProblemsByExecutionResultMap' => [ 'type' => 'map', 'key' => [ 'shape' => 'ExecutionResult', ], 'value' => [ 'shape' => 'UniqueProblems', ], ], 'UpdateDevicePoolRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'description' => [ 'shape' => 'Message', ], 'rules' => [ 'shape' => 'Rules', ], ], ], 'UpdateDevicePoolResult' => [ 'type' => 'structure', 'members' => [ 'devicePool' => [ 'shape' => 'DevicePool', ], ], ], 'UpdateProjectRequest' => [ 'type' => 'structure', 'required' => [ 'arn', ], 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], ], ], 'UpdateProjectResult' => [ 'type' => 'structure', 'members' => [ 'project' => [ 'shape' => 'Project', ], ], ], 'Upload' => [ 'type' => 'structure', 'members' => [ 'arn' => [ 'shape' => 'AmazonResourceName', ], 'name' => [ 'shape' => 'Name', ], 'created' => [ 'shape' => 'DateTime', ], 'type' => [ 'shape' => 'UploadType', ], 'status' => [ 'shape' => 'UploadStatus', ], 'url' => [ 'shape' => 'URL', ], 'metadata' => [ 'shape' => 'Metadata', ], 'contentType' => [ 'shape' => 'ContentType', ], 'message' => [ 'shape' => 'Message', ], ], ], 'UploadStatus' => [ 'type' => 'string', 'enum' => [ 'INITIALIZED', 'PROCESSING', 'SUCCEEDED', 'FAILED', ], ], 'UploadType' => [ 'type' => 'string', 'enum' => [ 'ANDROID_APP', 'IOS_APP', 'WEB_APP', 'EXTERNAL_DATA', 'APPIUM_JAVA_JUNIT_TEST_PACKAGE', 'APPIUM_JAVA_TESTNG_TEST_PACKAGE', 'APPIUM_PYTHON_TEST_PACKAGE', 'APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE', 'APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE', 'APPIUM_WEB_PYTHON_TEST_PACKAGE', 'CALABASH_TEST_PACKAGE', 'INSTRUMENTATION_TEST_PACKAGE', 'UIAUTOMATION_TEST_PACKAGE', 'UIAUTOMATOR_TEST_PACKAGE', 'XCTEST_TEST_PACKAGE', 'XCTEST_UI_TEST_PACKAGE', ], ], 'Uploads' => [ 'type' => 'list', 'member' => [ 'shape' => 'Upload', ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/sts/2011-06-15/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2011-06-15', 'endpointPrefix' => 'sts', 'globalEndpoint' => 'sts.amazonaws.com', 'protocol' => 'query', 'serviceAbbreviation' => 'AWS STS', 'serviceFullName' => 'AWS Security Token Service', 'signatureVersion' => 'v4', 'xmlNamespace' => 'https://sts.amazonaws.com/doc/2011-06-15/', ], 'operations' => [ 'AssumeRole' => [ 'name' => 'AssumeRole', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AssumeRoleRequest', ], 'output' => [ 'shape' => 'AssumeRoleResponse', 'resultWrapper' => 'AssumeRoleResult', ], 'errors' => [ [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'PackedPolicyTooLargeException', ], [ 'shape' => 'RegionDisabledException', ], ], ], 'AssumeRoleWithSAML' => [ 'name' => 'AssumeRoleWithSAML', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AssumeRoleWithSAMLRequest', ], 'output' => [ 'shape' => 'AssumeRoleWithSAMLResponse', 'resultWrapper' => 'AssumeRoleWithSAMLResult', ], 'errors' => [ [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'PackedPolicyTooLargeException', ], [ 'shape' => 'IDPRejectedClaimException', ], [ 'shape' => 'InvalidIdentityTokenException', ], [ 'shape' => 'ExpiredTokenException', ], [ 'shape' => 'RegionDisabledException', ], ], ], 'AssumeRoleWithWebIdentity' => [ 'name' => 'AssumeRoleWithWebIdentity', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AssumeRoleWithWebIdentityRequest', ], 'output' => [ 'shape' => 'AssumeRoleWithWebIdentityResponse', 'resultWrapper' => 'AssumeRoleWithWebIdentityResult', ], 'errors' => [ [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'PackedPolicyTooLargeException', ], [ 'shape' => 'IDPRejectedClaimException', ], [ 'shape' => 'IDPCommunicationErrorException', ], [ 'shape' => 'InvalidIdentityTokenException', ], [ 'shape' => 'ExpiredTokenException', ], [ 'shape' => 'RegionDisabledException', ], ], ], 'DecodeAuthorizationMessage' => [ 'name' => 'DecodeAuthorizationMessage', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DecodeAuthorizationMessageRequest', ], 'output' => [ 'shape' => 'DecodeAuthorizationMessageResponse', 'resultWrapper' => 'DecodeAuthorizationMessageResult', ], 'errors' => [ [ 'shape' => 'InvalidAuthorizationMessageException', ], ], ], 'GetCallerIdentity' => [ 'name' => 'GetCallerIdentity', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetCallerIdentityRequest', ], 'output' => [ 'shape' => 'GetCallerIdentityResponse', 'resultWrapper' => 'GetCallerIdentityResult', ], ], 'GetFederationToken' => [ 'name' => 'GetFederationToken', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetFederationTokenRequest', ], 'output' => [ 'shape' => 'GetFederationTokenResponse', 'resultWrapper' => 'GetFederationTokenResult', ], 'errors' => [ [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'PackedPolicyTooLargeException', ], [ 'shape' => 'RegionDisabledException', ], ], ], 'GetSessionToken' => [ 'name' => 'GetSessionToken', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetSessionTokenRequest', ], 'output' => [ 'shape' => 'GetSessionTokenResponse', 'resultWrapper' => 'GetSessionTokenResult', ], 'errors' => [ [ 'shape' => 'RegionDisabledException', ], ], ], ], 'shapes' => [ 'AssumeRoleRequest' => [ 'type' => 'structure', 'required' => [ 'RoleArn', 'RoleSessionName', ], 'members' => [ 'RoleArn' => [ 'shape' => 'arnType', ], 'RoleSessionName' => [ 'shape' => 'roleSessionNameType', ], 'Policy' => [ 'shape' => 'sessionPolicyDocumentType', ], 'DurationSeconds' => [ 'shape' => 'roleDurationSecondsType', ], 'ExternalId' => [ 'shape' => 'externalIdType', ], 'SerialNumber' => [ 'shape' => 'serialNumberType', ], 'TokenCode' => [ 'shape' => 'tokenCodeType', ], ], ], 'AssumeRoleResponse' => [ 'type' => 'structure', 'members' => [ 'Credentials' => [ 'shape' => 'Credentials', ], 'AssumedRoleUser' => [ 'shape' => 'AssumedRoleUser', ], 'PackedPolicySize' => [ 'shape' => 'nonNegativeIntegerType', ], ], ], 'AssumeRoleWithSAMLRequest' => [ 'type' => 'structure', 'required' => [ 'RoleArn', 'PrincipalArn', 'SAMLAssertion', ], 'members' => [ 'RoleArn' => [ 'shape' => 'arnType', ], 'PrincipalArn' => [ 'shape' => 'arnType', ], 'SAMLAssertion' => [ 'shape' => 'SAMLAssertionType', ], 'Policy' => [ 'shape' => 'sessionPolicyDocumentType', ], 'DurationSeconds' => [ 'shape' => 'roleDurationSecondsType', ], ], ], 'AssumeRoleWithSAMLResponse' => [ 'type' => 'structure', 'members' => [ 'Credentials' => [ 'shape' => 'Credentials', ], 'AssumedRoleUser' => [ 'shape' => 'AssumedRoleUser', ], 'PackedPolicySize' => [ 'shape' => 'nonNegativeIntegerType', ], 'Subject' => [ 'shape' => 'Subject', ], 'SubjectType' => [ 'shape' => 'SubjectType', ], 'Issuer' => [ 'shape' => 'Issuer', ], 'Audience' => [ 'shape' => 'Audience', ], 'NameQualifier' => [ 'shape' => 'NameQualifier', ], ], ], 'AssumeRoleWithWebIdentityRequest' => [ 'type' => 'structure', 'required' => [ 'RoleArn', 'RoleSessionName', 'WebIdentityToken', ], 'members' => [ 'RoleArn' => [ 'shape' => 'arnType', ], 'RoleSessionName' => [ 'shape' => 'roleSessionNameType', ], 'WebIdentityToken' => [ 'shape' => 'clientTokenType', ], 'ProviderId' => [ 'shape' => 'urlType', ], 'Policy' => [ 'shape' => 'sessionPolicyDocumentType', ], 'DurationSeconds' => [ 'shape' => 'roleDurationSecondsType', ], ], ], 'AssumeRoleWithWebIdentityResponse' => [ 'type' => 'structure', 'members' => [ 'Credentials' => [ 'shape' => 'Credentials', ], 'SubjectFromWebIdentityToken' => [ 'shape' => 'webIdentitySubjectType', ], 'AssumedRoleUser' => [ 'shape' => 'AssumedRoleUser', ], 'PackedPolicySize' => [ 'shape' => 'nonNegativeIntegerType', ], 'Provider' => [ 'shape' => 'Issuer', ], 'Audience' => [ 'shape' => 'Audience', ], ], ], 'AssumedRoleUser' => [ 'type' => 'structure', 'required' => [ 'AssumedRoleId', 'Arn', ], 'members' => [ 'AssumedRoleId' => [ 'shape' => 'assumedRoleIdType', ], 'Arn' => [ 'shape' => 'arnType', ], ], ], 'Audience' => [ 'type' => 'string', ], 'Credentials' => [ 'type' => 'structure', 'required' => [ 'AccessKeyId', 'SecretAccessKey', 'SessionToken', 'Expiration', ], 'members' => [ 'AccessKeyId' => [ 'shape' => 'accessKeyIdType', ], 'SecretAccessKey' => [ 'shape' => 'accessKeySecretType', ], 'SessionToken' => [ 'shape' => 'tokenType', ], 'Expiration' => [ 'shape' => 'dateType', ], ], ], 'DecodeAuthorizationMessageRequest' => [ 'type' => 'structure', 'required' => [ 'EncodedMessage', ], 'members' => [ 'EncodedMessage' => [ 'shape' => 'encodedMessageType', ], ], ], 'DecodeAuthorizationMessageResponse' => [ 'type' => 'structure', 'members' => [ 'DecodedMessage' => [ 'shape' => 'decodedMessageType', ], ], ], 'ExpiredTokenException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'expiredIdentityTokenMessage', ], ], 'error' => [ 'code' => 'ExpiredTokenException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'FederatedUser' => [ 'type' => 'structure', 'required' => [ 'FederatedUserId', 'Arn', ], 'members' => [ 'FederatedUserId' => [ 'shape' => 'federatedIdType', ], 'Arn' => [ 'shape' => 'arnType', ], ], ], 'GetCallerIdentityRequest' => [ 'type' => 'structure', 'members' => [], ], 'GetCallerIdentityResponse' => [ 'type' => 'structure', 'members' => [ 'UserId' => [ 'shape' => 'userIdType', ], 'Account' => [ 'shape' => 'accountType', ], 'Arn' => [ 'shape' => 'arnType', ], ], ], 'GetFederationTokenRequest' => [ 'type' => 'structure', 'required' => [ 'Name', ], 'members' => [ 'Name' => [ 'shape' => 'userNameType', ], 'Policy' => [ 'shape' => 'sessionPolicyDocumentType', ], 'DurationSeconds' => [ 'shape' => 'durationSecondsType', ], ], ], 'GetFederationTokenResponse' => [ 'type' => 'structure', 'members' => [ 'Credentials' => [ 'shape' => 'Credentials', ], 'FederatedUser' => [ 'shape' => 'FederatedUser', ], 'PackedPolicySize' => [ 'shape' => 'nonNegativeIntegerType', ], ], ], 'GetSessionTokenRequest' => [ 'type' => 'structure', 'members' => [ 'DurationSeconds' => [ 'shape' => 'durationSecondsType', ], 'SerialNumber' => [ 'shape' => 'serialNumberType', ], 'TokenCode' => [ 'shape' => 'tokenCodeType', ], ], ], 'GetSessionTokenResponse' => [ 'type' => 'structure', 'members' => [ 'Credentials' => [ 'shape' => 'Credentials', ], ], ], 'IDPCommunicationErrorException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'idpCommunicationErrorMessage', ], ], 'error' => [ 'code' => 'IDPCommunicationError', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'IDPRejectedClaimException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'idpRejectedClaimMessage', ], ], 'error' => [ 'code' => 'IDPRejectedClaim', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], 'InvalidAuthorizationMessageException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'invalidAuthorizationMessage', ], ], 'error' => [ 'code' => 'InvalidAuthorizationMessageException', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'InvalidIdentityTokenException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'invalidIdentityTokenMessage', ], ], 'error' => [ 'code' => 'InvalidIdentityToken', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'Issuer' => [ 'type' => 'string', ], 'MalformedPolicyDocumentException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'malformedPolicyDocumentMessage', ], ], 'error' => [ 'code' => 'MalformedPolicyDocument', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'NameQualifier' => [ 'type' => 'string', ], 'PackedPolicyTooLargeException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'packedPolicyTooLargeMessage', ], ], 'error' => [ 'code' => 'PackedPolicyTooLarge', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'RegionDisabledException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'regionDisabledMessage', ], ], 'error' => [ 'code' => 'RegionDisabledException', 'httpStatusCode' => 403, 'senderFault' => true, ], 'exception' => true, ], 'SAMLAssertionType' => [ 'type' => 'string', 'max' => 50000, 'min' => 4, ], 'Subject' => [ 'type' => 'string', ], 'SubjectType' => [ 'type' => 'string', ], 'accessKeyIdType' => [ 'type' => 'string', 'max' => 32, 'min' => 16, 'pattern' => '[\\w]*', ], 'accessKeySecretType' => [ 'type' => 'string', ], 'accountType' => [ 'type' => 'string', ], 'arnType' => [ 'type' => 'string', 'max' => 2048, 'min' => 20, 'pattern' => '[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]+', ], 'assumedRoleIdType' => [ 'type' => 'string', 'max' => 96, 'min' => 2, 'pattern' => '[\\w+=,.@:-]*', ], 'clientTokenType' => [ 'type' => 'string', 'max' => 2048, 'min' => 4, ], 'dateType' => [ 'type' => 'timestamp', ], 'decodedMessageType' => [ 'type' => 'string', ], 'durationSecondsType' => [ 'type' => 'integer', 'max' => 129600, 'min' => 900, ], 'encodedMessageType' => [ 'type' => 'string', 'max' => 10240, 'min' => 1, ], 'expiredIdentityTokenMessage' => [ 'type' => 'string', ], 'externalIdType' => [ 'type' => 'string', 'max' => 1224, 'min' => 2, 'pattern' => '[\\w+=,.@:\\/-]*', ], 'federatedIdType' => [ 'type' => 'string', 'max' => 96, 'min' => 2, 'pattern' => '[\\w+=,.@\\:-]*', ], 'idpCommunicationErrorMessage' => [ 'type' => 'string', ], 'idpRejectedClaimMessage' => [ 'type' => 'string', ], 'invalidAuthorizationMessage' => [ 'type' => 'string', ], 'invalidIdentityTokenMessage' => [ 'type' => 'string', ], 'malformedPolicyDocumentMessage' => [ 'type' => 'string', ], 'nonNegativeIntegerType' => [ 'type' => 'integer', 'min' => 0, ], 'packedPolicyTooLargeMessage' => [ 'type' => 'string', ], 'regionDisabledMessage' => [ 'type' => 'string', ], 'roleDurationSecondsType' => [ 'type' => 'integer', 'max' => 3600, 'min' => 900, ], 'roleSessionNameType' => [ 'type' => 'string', 'max' => 64, 'min' => 2, 'pattern' => '[\\w+=,.@-]*', ], 'serialNumberType' => [ 'type' => 'string', 'max' => 256, 'min' => 9, 'pattern' => '[\\w+=/:,.@-]*', ], 'sessionPolicyDocumentType' => [ 'type' => 'string', 'max' => 2048, 'min' => 1, 'pattern' => '[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+', ], 'tokenCodeType' => [ 'type' => 'string', 'max' => 6, 'min' => 6, 'pattern' => '[\\d]*', ], 'tokenType' => [ 'type' => 'string', ], 'urlType' => [ 'type' => 'string', 'max' => 2048, 'min' => 4, ], 'userIdType' => [ 'type' => 'string', ], 'userNameType' => [ 'type' => 'string', 'max' => 32, 'min' => 2, 'pattern' => '[\\w+=,.@-]*', ], 'webIdentitySubjectType' => [ 'type' => 'string', 'max' => 255, 'min' => 6, ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/acm/2015-12-08/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2015-12-08', 'endpointPrefix' => 'acm', 'jsonVersion' => '1.1', 'protocol' => 'json', 'serviceAbbreviation' => 'ACM', 'serviceFullName' => 'AWS Certificate Manager', 'signatureVersion' => 'v4', 'targetPrefix' => 'CertificateManager', ], 'operations' => [ 'AddTagsToCertificate' => [ 'name' => 'AddTagsToCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddTagsToCertificateRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'InvalidTagException', ], [ 'shape' => 'TooManyTagsException', ], ], ], 'DeleteCertificate' => [ 'name' => 'DeleteCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteCertificateRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'ResourceInUseException', ], [ 'shape' => 'InvalidArnException', ], ], ], 'DescribeCertificate' => [ 'name' => 'DescribeCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeCertificateRequest', ], 'output' => [ 'shape' => 'DescribeCertificateResponse', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'InvalidArnException', ], ], ], 'GetCertificate' => [ 'name' => 'GetCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetCertificateRequest', ], 'output' => [ 'shape' => 'GetCertificateResponse', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'RequestInProgressException', ], [ 'shape' => 'InvalidArnException', ], ], ], 'ListCertificates' => [ 'name' => 'ListCertificates', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListCertificatesRequest', ], 'output' => [ 'shape' => 'ListCertificatesResponse', ], ], 'ListTagsForCertificate' => [ 'name' => 'ListTagsForCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListTagsForCertificateRequest', ], 'output' => [ 'shape' => 'ListTagsForCertificateResponse', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'InvalidArnException', ], ], ], 'RemoveTagsFromCertificate' => [ 'name' => 'RemoveTagsFromCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RemoveTagsFromCertificateRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'InvalidTagException', ], ], ], 'RequestCertificate' => [ 'name' => 'RequestCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RequestCertificateRequest', ], 'output' => [ 'shape' => 'RequestCertificateResponse', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidDomainValidationOptionsException', ], ], ], 'ResendValidationEmail' => [ 'name' => 'ResendValidationEmail', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ResendValidationEmailRequest', ], 'errors' => [ [ 'shape' => 'ResourceNotFoundException', ], [ 'shape' => 'InvalidStateException', ], [ 'shape' => 'InvalidArnException', ], [ 'shape' => 'InvalidDomainValidationOptionsException', ], ], ], ], 'shapes' => [ 'AddTagsToCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'CertificateArn', 'Tags', ], 'members' => [ 'CertificateArn' => [ 'shape' => 'Arn', ], 'Tags' => [ 'shape' => 'TagList', ], ], ], 'Arn' => [ 'type' => 'string', 'max' => 2048, 'min' => 20, 'pattern' => 'arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*', ], 'CertificateBody' => [ 'type' => 'string', 'max' => 524288, 'min' => 1, 'pattern' => '-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?', ], 'CertificateChain' => [ 'type' => 'string', 'max' => 2097152, 'min' => 1, 'pattern' => '(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?', ], 'CertificateDetail' => [ 'type' => 'structure', 'members' => [ 'CertificateArn' => [ 'shape' => 'Arn', ], 'DomainName' => [ 'shape' => 'DomainNameString', ], 'SubjectAlternativeNames' => [ 'shape' => 'DomainList', ], 'DomainValidationOptions' => [ 'shape' => 'DomainValidationList', ], 'Serial' => [ 'shape' => 'String', ], 'Subject' => [ 'shape' => 'String', ], 'Issuer' => [ 'shape' => 'String', ], 'CreatedAt' => [ 'shape' => 'TStamp', ], 'IssuedAt' => [ 'shape' => 'TStamp', ], 'Status' => [ 'shape' => 'CertificateStatus', ], 'RevokedAt' => [ 'shape' => 'TStamp', ], 'RevocationReason' => [ 'shape' => 'RevocationReason', ], 'NotBefore' => [ 'shape' => 'TStamp', ], 'NotAfter' => [ 'shape' => 'TStamp', ], 'KeyAlgorithm' => [ 'shape' => 'KeyAlgorithm', ], 'SignatureAlgorithm' => [ 'shape' => 'String', ], 'InUseBy' => [ 'shape' => 'InUseList', ], ], ], 'CertificateStatus' => [ 'type' => 'string', 'enum' => [ 'PENDING_VALIDATION', 'ISSUED', 'INACTIVE', 'EXPIRED', 'VALIDATION_TIMED_OUT', 'REVOKED', 'FAILED', ], ], 'CertificateStatuses' => [ 'type' => 'list', 'member' => [ 'shape' => 'CertificateStatus', ], ], 'CertificateSummary' => [ 'type' => 'structure', 'members' => [ 'CertificateArn' => [ 'shape' => 'Arn', ], 'DomainName' => [ 'shape' => 'DomainNameString', ], ], ], 'CertificateSummaryList' => [ 'type' => 'list', 'member' => [ 'shape' => 'CertificateSummary', ], ], 'DeleteCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'CertificateArn', ], 'members' => [ 'CertificateArn' => [ 'shape' => 'Arn', ], ], ], 'DescribeCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'CertificateArn', ], 'members' => [ 'CertificateArn' => [ 'shape' => 'Arn', ], ], ], 'DescribeCertificateResponse' => [ 'type' => 'structure', 'members' => [ 'Certificate' => [ 'shape' => 'CertificateDetail', ], ], ], 'DomainList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DomainNameString', ], 'max' => 1000, 'min' => 1, ], 'DomainNameString' => [ 'type' => 'string', 'max' => 253, 'min' => 1, 'pattern' => '^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$', ], 'DomainValidation' => [ 'type' => 'structure', 'required' => [ 'DomainName', ], 'members' => [ 'DomainName' => [ 'shape' => 'DomainNameString', ], 'ValidationEmails' => [ 'shape' => 'ValidationEmailList', ], 'ValidationDomain' => [ 'shape' => 'DomainNameString', ], ], ], 'DomainValidationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DomainValidation', ], 'max' => 1000, 'min' => 1, ], 'DomainValidationOption' => [ 'type' => 'structure', 'required' => [ 'DomainName', 'ValidationDomain', ], 'members' => [ 'DomainName' => [ 'shape' => 'DomainNameString', ], 'ValidationDomain' => [ 'shape' => 'DomainNameString', ], ], ], 'DomainValidationOptionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DomainValidationOption', ], 'max' => 1000, 'min' => 1, ], 'GetCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'CertificateArn', ], 'members' => [ 'CertificateArn' => [ 'shape' => 'Arn', ], ], ], 'GetCertificateResponse' => [ 'type' => 'structure', 'members' => [ 'Certificate' => [ 'shape' => 'CertificateBody', ], 'CertificateChain' => [ 'shape' => 'CertificateChain', ], ], ], 'IdempotencyToken' => [ 'type' => 'string', 'max' => 32, 'min' => 1, 'pattern' => '\\w+', ], 'InUseList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], 'InvalidArnException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'InvalidDomainValidationOptionsException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'InvalidStateException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'InvalidTagException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'KeyAlgorithm' => [ 'type' => 'string', 'enum' => [ 'RSA_2048', 'EC_prime256v1', ], ], 'LimitExceededException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'ListCertificatesRequest' => [ 'type' => 'structure', 'members' => [ 'CertificateStatuses' => [ 'shape' => 'CertificateStatuses', ], 'NextToken' => [ 'shape' => 'NextToken', ], 'MaxItems' => [ 'shape' => 'MaxItems', ], ], ], 'ListCertificatesResponse' => [ 'type' => 'structure', 'members' => [ 'NextToken' => [ 'shape' => 'NextToken', ], 'CertificateSummaryList' => [ 'shape' => 'CertificateSummaryList', ], ], ], 'ListTagsForCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'CertificateArn', ], 'members' => [ 'CertificateArn' => [ 'shape' => 'Arn', ], ], ], 'ListTagsForCertificateResponse' => [ 'type' => 'structure', 'members' => [ 'Tags' => [ 'shape' => 'TagList', ], ], ], 'MaxItems' => [ 'type' => 'integer', 'max' => 1000, 'min' => 1, ], 'NextToken' => [ 'type' => 'string', 'max' => 320, 'min' => 1, 'pattern' => '[\\u0009\\u000A\\u000D\\u0020-\\u00FF]*', ], 'RemoveTagsFromCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'CertificateArn', 'Tags', ], 'members' => [ 'CertificateArn' => [ 'shape' => 'Arn', ], 'Tags' => [ 'shape' => 'TagList', ], ], ], 'RequestCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'DomainName', ], 'members' => [ 'DomainName' => [ 'shape' => 'DomainNameString', ], 'SubjectAlternativeNames' => [ 'shape' => 'DomainList', ], 'IdempotencyToken' => [ 'shape' => 'IdempotencyToken', ], 'DomainValidationOptions' => [ 'shape' => 'DomainValidationOptionList', ], ], ], 'RequestCertificateResponse' => [ 'type' => 'structure', 'members' => [ 'CertificateArn' => [ 'shape' => 'Arn', ], ], ], 'RequestInProgressException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'ResendValidationEmailRequest' => [ 'type' => 'structure', 'required' => [ 'CertificateArn', 'Domain', 'ValidationDomain', ], 'members' => [ 'CertificateArn' => [ 'shape' => 'Arn', ], 'Domain' => [ 'shape' => 'DomainNameString', ], 'ValidationDomain' => [ 'shape' => 'DomainNameString', ], ], ], 'ResourceInUseException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'ResourceNotFoundException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'RevocationReason' => [ 'type' => 'string', 'enum' => [ 'UNSPECIFIED', 'KEY_COMPROMISE', 'CA_COMPROMISE', 'AFFILIATION_CHANGED', 'SUPERCEDED', 'CESSATION_OF_OPERATION', 'CERTIFICATE_HOLD', 'REMOVE_FROM_CRL', 'PRIVILEGE_WITHDRAWN', 'A_A_COMPROMISE', ], ], 'String' => [ 'type' => 'string', ], 'TStamp' => [ 'type' => 'timestamp', ], 'Tag' => [ 'type' => 'structure', 'required' => [ 'Key', ], 'members' => [ 'Key' => [ 'shape' => 'TagKey', ], 'Value' => [ 'shape' => 'TagValue', ], ], ], 'TagKey' => [ 'type' => 'string', 'max' => 128, 'min' => 1, 'pattern' => '[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*', ], 'TagList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Tag', ], 'max' => 10, 'min' => 1, ], 'TagValue' => [ 'type' => 'string', 'max' => 256, 'min' => 0, 'pattern' => '[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*', ], 'TooManyTagsException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'String', ], ], 'exception' => true, ], 'ValidationEmailList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/ec2/2015-10-01/waiters-1.json.php:return [ 'waiters' => [ '__default__' => [ 'interval' => 15, 'max_attempts' => 40, 'acceptor_type' => 'output', ], '__InstanceState' => [ 'operation' => 'DescribeInstances', 'acceptor_path' => 'Reservations[].Instances[].State.Name', ], '__InstanceStatus' => [ 'operation' => 'DescribeInstanceStatus', 'success_value' => 'ok', ], 'SystemStatusOk' => [ 'extends' => '__InstanceStatus', 'acceptor_path' => 'InstanceStatuses[].SystemStatus.Status', ], 'InstanceStatusOk' => [ 'extends' => '__InstanceStatus', 'acceptor_path' => 'InstanceStatuses[].InstanceStatus.Status', ], 'ImageAvailable' => [ 'operation' => 'DescribeImages', 'acceptor_path' => 'Images[].State', 'success_value' => 'available', 'failure_value' => [ 'failed', ], ], 'InstanceRunning' => [ 'extends' => '__InstanceState', 'success_value' => 'running', 'failure_value' => [ 'shutting-down', 'terminated', 'stopping', ], ], 'InstanceStopped' => [ 'extends' => '__InstanceState', 'success_value' => 'stopped', 'failure_value' => [ 'pending', 'terminated', ], ], 'InstanceTerminated' => [ 'extends' => '__InstanceState', 'success_value' => 'terminated', 'failure_value' => [ 'pending', 'stopping', ], ], '__ExportTaskState' => [ 'operation' => 'DescribeExportTasks', 'acceptor_path' => 'ExportTasks[].State', ], 'ExportTaskCompleted' => [ 'extends' => '__ExportTaskState', 'success_value' => 'completed', ], 'ExportTaskCancelled' => [ 'extends' => '__ExportTaskState', 'success_value' => 'cancelled', ], 'SnapshotCompleted' => [ 'operation' => 'DescribeSnapshots', 'success_path' => 'Snapshots[].State', 'success_value' => 'completed', ], 'SubnetAvailable' => [ 'operation' => 'DescribeSubnets', 'success_path' => 'Subnets[].State', 'success_value' => 'available', ], '__VolumeStatus' => [ 'operation' => 'DescribeVolumes', 'acceptor_path' => 'Volumes[].State', ], 'VolumeAvailable' => [ 'extends' => '__VolumeStatus', 'success_value' => 'available', 'failure_value' => [ 'deleted', ], ], 'VolumeInUse' => [ 'extends' => '__VolumeStatus', 'success_value' => 'in-use', 'failure_value' => [ 'deleted', ], ], 'VolumeDeleted' => [ 'extends' => '__VolumeStatus', 'success_type' => 'error', 'success_value' => 'InvalidVolume.NotFound', ], 'VpcAvailable' => [ 'operation' => 'DescribeVpcs', 'success_path' => 'Vpcs[].State', 'success_value' => 'available', ], '__VpnConnectionState' => [ 'operation' => 'DescribeVpnConnections', 'acceptor_path' => 'VpnConnections[].State', ], 'VpnConnectionAvailable' => [ 'extends' => '__VpnConnectionState', 'success_value' => 'available', 'failure_value' => [ 'deleting', 'deleted', ], ], 'VpnConnectionDeleted' => [ 'extends' => '__VpnConnectionState', 'success_value' => 'deleted', 'failure_value' => [ 'pending', ], ], 'BundleTaskComplete' => [ 'operation' => 'DescribeBundleTasks', 'acceptor_path' => 'BundleTasks[].State', 'success_value' => 'complete', 'failure_value' => [ 'failed', ], ], '__ConversionTaskState' => [ 'operation' => 'DescribeConversionTasks', 'acceptor_path' => 'ConversionTasks[].State', ], 'ConversionTaskCompleted' => [ 'extends' => '__ConversionTaskState', 'success_value' => 'completed', 'failure_value' => [ 'cancelled', 'cancelling', ], ], 'ConversionTaskCancelled' => [ 'extends' => '__ConversionTaskState', 'success_value' => 'cancelled', ], '__CustomerGatewayState' => [ 'operation' => 'DescribeCustomerGateways', 'acceptor_path' => 'CustomerGateways[].State', ], 'CustomerGatewayAvailable' => [ 'extends' => '__CustomerGatewayState', 'success_value' => 'available', 'failure_value' => [ 'deleted', 'deleting', ], ], 'ConversionTaskDeleted' => [ 'extends' => '__CustomerGatewayState', 'success_value' => 'deleted', ], '__SpotInstanceRequestState' => [ 'operation' => 'DescribeSpotInstanceRequests', 'acceptor_path' => 'SpotInstanceRequests[].Status.Code', ], 'SpotInstanceRequestFulfilled' => [ 'extends' => '__SpotInstanceRequestState', 'success_value' => 'fulfilled', 'failure_value' => [ 'schedule-expired', 'canceled-before-fulfillment', 'bad-parameters', 'system-error', ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/ec2/2015-10-01/api-2.json.php:return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2015-10-01', 'endpointPrefix' => 'ec2', 'protocol' => 'ec2', 'serviceAbbreviation' => 'Amazon EC2', 'serviceFullName' => 'Amazon Elastic Compute Cloud', 'signatureVersion' => 'v4', 'xmlNamespace' => 'http://ec2.amazonaws.com/doc/2015-10-01', ], 'operations' => [ 'AcceptVpcPeeringConnection' => [ 'name' => 'AcceptVpcPeeringConnection', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AcceptVpcPeeringConnectionRequest', ], 'output' => [ 'shape' => 'AcceptVpcPeeringConnectionResult', ], ], 'AllocateAddress' => [ 'name' => 'AllocateAddress', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AllocateAddressRequest', ], 'output' => [ 'shape' => 'AllocateAddressResult', ], ], 'AllocateHosts' => [ 'name' => 'AllocateHosts', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AllocateHostsRequest', ], 'output' => [ 'shape' => 'AllocateHostsResult', ], ], 'AssignPrivateIpAddresses' => [ 'name' => 'AssignPrivateIpAddresses', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AssignPrivateIpAddressesRequest', ], ], 'AssociateAddress' => [ 'name' => 'AssociateAddress', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AssociateAddressRequest', ], 'output' => [ 'shape' => 'AssociateAddressResult', ], ], 'AssociateDhcpOptions' => [ 'name' => 'AssociateDhcpOptions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AssociateDhcpOptionsRequest', ], ], 'AssociateRouteTable' => [ 'name' => 'AssociateRouteTable', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AssociateRouteTableRequest', ], 'output' => [ 'shape' => 'AssociateRouteTableResult', ], ], 'AttachClassicLinkVpc' => [ 'name' => 'AttachClassicLinkVpc', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AttachClassicLinkVpcRequest', ], 'output' => [ 'shape' => 'AttachClassicLinkVpcResult', ], ], 'AttachInternetGateway' => [ 'name' => 'AttachInternetGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AttachInternetGatewayRequest', ], ], 'AttachNetworkInterface' => [ 'name' => 'AttachNetworkInterface', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AttachNetworkInterfaceRequest', ], 'output' => [ 'shape' => 'AttachNetworkInterfaceResult', ], ], 'AttachVolume' => [ 'name' => 'AttachVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AttachVolumeRequest', ], 'output' => [ 'shape' => 'VolumeAttachment', ], ], 'AttachVpnGateway' => [ 'name' => 'AttachVpnGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AttachVpnGatewayRequest', ], 'output' => [ 'shape' => 'AttachVpnGatewayResult', ], ], 'AuthorizeSecurityGroupEgress' => [ 'name' => 'AuthorizeSecurityGroupEgress', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AuthorizeSecurityGroupEgressRequest', ], ], 'AuthorizeSecurityGroupIngress' => [ 'name' => 'AuthorizeSecurityGroupIngress', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AuthorizeSecurityGroupIngressRequest', ], ], 'BundleInstance' => [ 'name' => 'BundleInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'BundleInstanceRequest', ], 'output' => [ 'shape' => 'BundleInstanceResult', ], ], 'CancelBundleTask' => [ 'name' => 'CancelBundleTask', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelBundleTaskRequest', ], 'output' => [ 'shape' => 'CancelBundleTaskResult', ], ], 'CancelConversionTask' => [ 'name' => 'CancelConversionTask', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelConversionRequest', ], ], 'CancelExportTask' => [ 'name' => 'CancelExportTask', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelExportTaskRequest', ], ], 'CancelImportTask' => [ 'name' => 'CancelImportTask', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelImportTaskRequest', ], 'output' => [ 'shape' => 'CancelImportTaskResult', ], ], 'CancelReservedInstancesListing' => [ 'name' => 'CancelReservedInstancesListing', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelReservedInstancesListingRequest', ], 'output' => [ 'shape' => 'CancelReservedInstancesListingResult', ], ], 'CancelSpotFleetRequests' => [ 'name' => 'CancelSpotFleetRequests', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelSpotFleetRequestsRequest', ], 'output' => [ 'shape' => 'CancelSpotFleetRequestsResponse', ], ], 'CancelSpotInstanceRequests' => [ 'name' => 'CancelSpotInstanceRequests', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CancelSpotInstanceRequestsRequest', ], 'output' => [ 'shape' => 'CancelSpotInstanceRequestsResult', ], ], 'ConfirmProductInstance' => [ 'name' => 'ConfirmProductInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ConfirmProductInstanceRequest', ], 'output' => [ 'shape' => 'ConfirmProductInstanceResult', ], ], 'CopyImage' => [ 'name' => 'CopyImage', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CopyImageRequest', ], 'output' => [ 'shape' => 'CopyImageResult', ], ], 'CopySnapshot' => [ 'name' => 'CopySnapshot', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CopySnapshotRequest', ], 'output' => [ 'shape' => 'CopySnapshotResult', ], ], 'CreateCustomerGateway' => [ 'name' => 'CreateCustomerGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateCustomerGatewayRequest', ], 'output' => [ 'shape' => 'CreateCustomerGatewayResult', ], ], 'CreateDhcpOptions' => [ 'name' => 'CreateDhcpOptions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateDhcpOptionsRequest', ], 'output' => [ 'shape' => 'CreateDhcpOptionsResult', ], ], 'CreateFlowLogs' => [ 'name' => 'CreateFlowLogs', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateFlowLogsRequest', ], 'output' => [ 'shape' => 'CreateFlowLogsResult', ], ], 'CreateImage' => [ 'name' => 'CreateImage', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateImageRequest', ], 'output' => [ 'shape' => 'CreateImageResult', ], ], 'CreateInstanceExportTask' => [ 'name' => 'CreateInstanceExportTask', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateInstanceExportTaskRequest', ], 'output' => [ 'shape' => 'CreateInstanceExportTaskResult', ], ], 'CreateInternetGateway' => [ 'name' => 'CreateInternetGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateInternetGatewayRequest', ], 'output' => [ 'shape' => 'CreateInternetGatewayResult', ], ], 'CreateKeyPair' => [ 'name' => 'CreateKeyPair', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateKeyPairRequest', ], 'output' => [ 'shape' => 'KeyPair', ], ], 'CreateNatGateway' => [ 'name' => 'CreateNatGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateNatGatewayRequest', ], 'output' => [ 'shape' => 'CreateNatGatewayResult', ], ], 'CreateNetworkAcl' => [ 'name' => 'CreateNetworkAcl', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateNetworkAclRequest', ], 'output' => [ 'shape' => 'CreateNetworkAclResult', ], ], 'CreateNetworkAclEntry' => [ 'name' => 'CreateNetworkAclEntry', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateNetworkAclEntryRequest', ], ], 'CreateNetworkInterface' => [ 'name' => 'CreateNetworkInterface', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateNetworkInterfaceRequest', ], 'output' => [ 'shape' => 'CreateNetworkInterfaceResult', ], ], 'CreatePlacementGroup' => [ 'name' => 'CreatePlacementGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreatePlacementGroupRequest', ], ], 'CreateReservedInstancesListing' => [ 'name' => 'CreateReservedInstancesListing', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateReservedInstancesListingRequest', ], 'output' => [ 'shape' => 'CreateReservedInstancesListingResult', ], ], 'CreateRoute' => [ 'name' => 'CreateRoute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateRouteRequest', ], 'output' => [ 'shape' => 'CreateRouteResult', ], ], 'CreateRouteTable' => [ 'name' => 'CreateRouteTable', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateRouteTableRequest', ], 'output' => [ 'shape' => 'CreateRouteTableResult', ], ], 'CreateSecurityGroup' => [ 'name' => 'CreateSecurityGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateSecurityGroupRequest', ], 'output' => [ 'shape' => 'CreateSecurityGroupResult', ], ], 'CreateSnapshot' => [ 'name' => 'CreateSnapshot', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateSnapshotRequest', ], 'output' => [ 'shape' => 'Snapshot', ], ], 'CreateSpotDatafeedSubscription' => [ 'name' => 'CreateSpotDatafeedSubscription', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateSpotDatafeedSubscriptionRequest', ], 'output' => [ 'shape' => 'CreateSpotDatafeedSubscriptionResult', ], ], 'CreateSubnet' => [ 'name' => 'CreateSubnet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateSubnetRequest', ], 'output' => [ 'shape' => 'CreateSubnetResult', ], ], 'CreateTags' => [ 'name' => 'CreateTags', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateTagsRequest', ], ], 'CreateVolume' => [ 'name' => 'CreateVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateVolumeRequest', ], 'output' => [ 'shape' => 'Volume', ], ], 'CreateVpc' => [ 'name' => 'CreateVpc', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateVpcRequest', ], 'output' => [ 'shape' => 'CreateVpcResult', ], ], 'CreateVpcEndpoint' => [ 'name' => 'CreateVpcEndpoint', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateVpcEndpointRequest', ], 'output' => [ 'shape' => 'CreateVpcEndpointResult', ], ], 'CreateVpcPeeringConnection' => [ 'name' => 'CreateVpcPeeringConnection', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateVpcPeeringConnectionRequest', ], 'output' => [ 'shape' => 'CreateVpcPeeringConnectionResult', ], ], 'CreateVpnConnection' => [ 'name' => 'CreateVpnConnection', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateVpnConnectionRequest', ], 'output' => [ 'shape' => 'CreateVpnConnectionResult', ], ], 'CreateVpnConnectionRoute' => [ 'name' => 'CreateVpnConnectionRoute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateVpnConnectionRouteRequest', ], ], 'CreateVpnGateway' => [ 'name' => 'CreateVpnGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateVpnGatewayRequest', ], 'output' => [ 'shape' => 'CreateVpnGatewayResult', ], ], 'DeleteCustomerGateway' => [ 'name' => 'DeleteCustomerGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteCustomerGatewayRequest', ], ], 'DeleteDhcpOptions' => [ 'name' => 'DeleteDhcpOptions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteDhcpOptionsRequest', ], ], 'DeleteFlowLogs' => [ 'name' => 'DeleteFlowLogs', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteFlowLogsRequest', ], 'output' => [ 'shape' => 'DeleteFlowLogsResult', ], ], 'DeleteInternetGateway' => [ 'name' => 'DeleteInternetGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteInternetGatewayRequest', ], ], 'DeleteKeyPair' => [ 'name' => 'DeleteKeyPair', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteKeyPairRequest', ], ], 'DeleteNatGateway' => [ 'name' => 'DeleteNatGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteNatGatewayRequest', ], 'output' => [ 'shape' => 'DeleteNatGatewayResult', ], ], 'DeleteNetworkAcl' => [ 'name' => 'DeleteNetworkAcl', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteNetworkAclRequest', ], ], 'DeleteNetworkAclEntry' => [ 'name' => 'DeleteNetworkAclEntry', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteNetworkAclEntryRequest', ], ], 'DeleteNetworkInterface' => [ 'name' => 'DeleteNetworkInterface', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteNetworkInterfaceRequest', ], ], 'DeletePlacementGroup' => [ 'name' => 'DeletePlacementGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeletePlacementGroupRequest', ], ], 'DeleteRoute' => [ 'name' => 'DeleteRoute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteRouteRequest', ], ], 'DeleteRouteTable' => [ 'name' => 'DeleteRouteTable', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteRouteTableRequest', ], ], 'DeleteSecurityGroup' => [ 'name' => 'DeleteSecurityGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSecurityGroupRequest', ], ], 'DeleteSnapshot' => [ 'name' => 'DeleteSnapshot', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSnapshotRequest', ], ], 'DeleteSpotDatafeedSubscription' => [ 'name' => 'DeleteSpotDatafeedSubscription', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSpotDatafeedSubscriptionRequest', ], ], 'DeleteSubnet' => [ 'name' => 'DeleteSubnet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSubnetRequest', ], ], 'DeleteTags' => [ 'name' => 'DeleteTags', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteTagsRequest', ], ], 'DeleteVolume' => [ 'name' => 'DeleteVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteVolumeRequest', ], ], 'DeleteVpc' => [ 'name' => 'DeleteVpc', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteVpcRequest', ], ], 'DeleteVpcEndpoints' => [ 'name' => 'DeleteVpcEndpoints', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteVpcEndpointsRequest', ], 'output' => [ 'shape' => 'DeleteVpcEndpointsResult', ], ], 'DeleteVpcPeeringConnection' => [ 'name' => 'DeleteVpcPeeringConnection', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteVpcPeeringConnectionRequest', ], 'output' => [ 'shape' => 'DeleteVpcPeeringConnectionResult', ], ], 'DeleteVpnConnection' => [ 'name' => 'DeleteVpnConnection', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteVpnConnectionRequest', ], ], 'DeleteVpnConnectionRoute' => [ 'name' => 'DeleteVpnConnectionRoute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteVpnConnectionRouteRequest', ], ], 'DeleteVpnGateway' => [ 'name' => 'DeleteVpnGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteVpnGatewayRequest', ], ], 'DeregisterImage' => [ 'name' => 'DeregisterImage', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeregisterImageRequest', ], ], 'DescribeAccountAttributes' => [ 'name' => 'DescribeAccountAttributes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeAccountAttributesRequest', ], 'output' => [ 'shape' => 'DescribeAccountAttributesResult', ], ], 'DescribeAddresses' => [ 'name' => 'DescribeAddresses', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeAddressesRequest', ], 'output' => [ 'shape' => 'DescribeAddressesResult', ], ], 'DescribeAvailabilityZones' => [ 'name' => 'DescribeAvailabilityZones', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeAvailabilityZonesRequest', ], 'output' => [ 'shape' => 'DescribeAvailabilityZonesResult', ], ], 'DescribeBundleTasks' => [ 'name' => 'DescribeBundleTasks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeBundleTasksRequest', ], 'output' => [ 'shape' => 'DescribeBundleTasksResult', ], ], 'DescribeClassicLinkInstances' => [ 'name' => 'DescribeClassicLinkInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeClassicLinkInstancesRequest', ], 'output' => [ 'shape' => 'DescribeClassicLinkInstancesResult', ], ], 'DescribeConversionTasks' => [ 'name' => 'DescribeConversionTasks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeConversionTasksRequest', ], 'output' => [ 'shape' => 'DescribeConversionTasksResult', ], ], 'DescribeCustomerGateways' => [ 'name' => 'DescribeCustomerGateways', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeCustomerGatewaysRequest', ], 'output' => [ 'shape' => 'DescribeCustomerGatewaysResult', ], ], 'DescribeDhcpOptions' => [ 'name' => 'DescribeDhcpOptions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeDhcpOptionsRequest', ], 'output' => [ 'shape' => 'DescribeDhcpOptionsResult', ], ], 'DescribeExportTasks' => [ 'name' => 'DescribeExportTasks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeExportTasksRequest', ], 'output' => [ 'shape' => 'DescribeExportTasksResult', ], ], 'DescribeFlowLogs' => [ 'name' => 'DescribeFlowLogs', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeFlowLogsRequest', ], 'output' => [ 'shape' => 'DescribeFlowLogsResult', ], ], 'DescribeHosts' => [ 'name' => 'DescribeHosts', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeHostsRequest', ], 'output' => [ 'shape' => 'DescribeHostsResult', ], ], 'DescribeIdFormat' => [ 'name' => 'DescribeIdFormat', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeIdFormatRequest', ], 'output' => [ 'shape' => 'DescribeIdFormatResult', ], ], 'DescribeImageAttribute' => [ 'name' => 'DescribeImageAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeImageAttributeRequest', ], 'output' => [ 'shape' => 'ImageAttribute', ], ], 'DescribeImages' => [ 'name' => 'DescribeImages', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeImagesRequest', ], 'output' => [ 'shape' => 'DescribeImagesResult', ], ], 'DescribeImportImageTasks' => [ 'name' => 'DescribeImportImageTasks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeImportImageTasksRequest', ], 'output' => [ 'shape' => 'DescribeImportImageTasksResult', ], ], 'DescribeImportSnapshotTasks' => [ 'name' => 'DescribeImportSnapshotTasks', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeImportSnapshotTasksRequest', ], 'output' => [ 'shape' => 'DescribeImportSnapshotTasksResult', ], ], 'DescribeInstanceAttribute' => [ 'name' => 'DescribeInstanceAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeInstanceAttributeRequest', ], 'output' => [ 'shape' => 'InstanceAttribute', ], ], 'DescribeInstanceStatus' => [ 'name' => 'DescribeInstanceStatus', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeInstanceStatusRequest', ], 'output' => [ 'shape' => 'DescribeInstanceStatusResult', ], ], 'DescribeInstances' => [ 'name' => 'DescribeInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeInstancesRequest', ], 'output' => [ 'shape' => 'DescribeInstancesResult', ], ], 'DescribeInternetGateways' => [ 'name' => 'DescribeInternetGateways', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeInternetGatewaysRequest', ], 'output' => [ 'shape' => 'DescribeInternetGatewaysResult', ], ], 'DescribeKeyPairs' => [ 'name' => 'DescribeKeyPairs', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeKeyPairsRequest', ], 'output' => [ 'shape' => 'DescribeKeyPairsResult', ], ], 'DescribeMovingAddresses' => [ 'name' => 'DescribeMovingAddresses', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeMovingAddressesRequest', ], 'output' => [ 'shape' => 'DescribeMovingAddressesResult', ], ], 'DescribeNatGateways' => [ 'name' => 'DescribeNatGateways', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeNatGatewaysRequest', ], 'output' => [ 'shape' => 'DescribeNatGatewaysResult', ], ], 'DescribeNetworkAcls' => [ 'name' => 'DescribeNetworkAcls', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeNetworkAclsRequest', ], 'output' => [ 'shape' => 'DescribeNetworkAclsResult', ], ], 'DescribeNetworkInterfaceAttribute' => [ 'name' => 'DescribeNetworkInterfaceAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeNetworkInterfaceAttributeRequest', ], 'output' => [ 'shape' => 'DescribeNetworkInterfaceAttributeResult', ], ], 'DescribeNetworkInterfaces' => [ 'name' => 'DescribeNetworkInterfaces', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeNetworkInterfacesRequest', ], 'output' => [ 'shape' => 'DescribeNetworkInterfacesResult', ], ], 'DescribePlacementGroups' => [ 'name' => 'DescribePlacementGroups', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribePlacementGroupsRequest', ], 'output' => [ 'shape' => 'DescribePlacementGroupsResult', ], ], 'DescribePrefixLists' => [ 'name' => 'DescribePrefixLists', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribePrefixListsRequest', ], 'output' => [ 'shape' => 'DescribePrefixListsResult', ], ], 'DescribeRegions' => [ 'name' => 'DescribeRegions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeRegionsRequest', ], 'output' => [ 'shape' => 'DescribeRegionsResult', ], ], 'DescribeReservedInstances' => [ 'name' => 'DescribeReservedInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeReservedInstancesRequest', ], 'output' => [ 'shape' => 'DescribeReservedInstancesResult', ], ], 'DescribeReservedInstancesListings' => [ 'name' => 'DescribeReservedInstancesListings', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeReservedInstancesListingsRequest', ], 'output' => [ 'shape' => 'DescribeReservedInstancesListingsResult', ], ], 'DescribeReservedInstancesModifications' => [ 'name' => 'DescribeReservedInstancesModifications', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeReservedInstancesModificationsRequest', ], 'output' => [ 'shape' => 'DescribeReservedInstancesModificationsResult', ], ], 'DescribeReservedInstancesOfferings' => [ 'name' => 'DescribeReservedInstancesOfferings', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeReservedInstancesOfferingsRequest', ], 'output' => [ 'shape' => 'DescribeReservedInstancesOfferingsResult', ], ], 'DescribeRouteTables' => [ 'name' => 'DescribeRouteTables', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeRouteTablesRequest', ], 'output' => [ 'shape' => 'DescribeRouteTablesResult', ], ], 'DescribeScheduledInstanceAvailability' => [ 'name' => 'DescribeScheduledInstanceAvailability', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeScheduledInstanceAvailabilityRequest', ], 'output' => [ 'shape' => 'DescribeScheduledInstanceAvailabilityResult', ], ], 'DescribeScheduledInstances' => [ 'name' => 'DescribeScheduledInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeScheduledInstancesRequest', ], 'output' => [ 'shape' => 'DescribeScheduledInstancesResult', ], ], 'DescribeSecurityGroupReferences' => [ 'name' => 'DescribeSecurityGroupReferences', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSecurityGroupReferencesRequest', ], 'output' => [ 'shape' => 'DescribeSecurityGroupReferencesResult', ], ], 'DescribeSecurityGroups' => [ 'name' => 'DescribeSecurityGroups', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSecurityGroupsRequest', ], 'output' => [ 'shape' => 'DescribeSecurityGroupsResult', ], ], 'DescribeSnapshotAttribute' => [ 'name' => 'DescribeSnapshotAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSnapshotAttributeRequest', ], 'output' => [ 'shape' => 'DescribeSnapshotAttributeResult', ], ], 'DescribeSnapshots' => [ 'name' => 'DescribeSnapshots', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSnapshotsRequest', ], 'output' => [ 'shape' => 'DescribeSnapshotsResult', ], ], 'DescribeSpotDatafeedSubscription' => [ 'name' => 'DescribeSpotDatafeedSubscription', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSpotDatafeedSubscriptionRequest', ], 'output' => [ 'shape' => 'DescribeSpotDatafeedSubscriptionResult', ], ], 'DescribeSpotFleetInstances' => [ 'name' => 'DescribeSpotFleetInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSpotFleetInstancesRequest', ], 'output' => [ 'shape' => 'DescribeSpotFleetInstancesResponse', ], ], 'DescribeSpotFleetRequestHistory' => [ 'name' => 'DescribeSpotFleetRequestHistory', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSpotFleetRequestHistoryRequest', ], 'output' => [ 'shape' => 'DescribeSpotFleetRequestHistoryResponse', ], ], 'DescribeSpotFleetRequests' => [ 'name' => 'DescribeSpotFleetRequests', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSpotFleetRequestsRequest', ], 'output' => [ 'shape' => 'DescribeSpotFleetRequestsResponse', ], ], 'DescribeSpotInstanceRequests' => [ 'name' => 'DescribeSpotInstanceRequests', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSpotInstanceRequestsRequest', ], 'output' => [ 'shape' => 'DescribeSpotInstanceRequestsResult', ], ], 'DescribeSpotPriceHistory' => [ 'name' => 'DescribeSpotPriceHistory', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSpotPriceHistoryRequest', ], 'output' => [ 'shape' => 'DescribeSpotPriceHistoryResult', ], ], 'DescribeStaleSecurityGroups' => [ 'name' => 'DescribeStaleSecurityGroups', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeStaleSecurityGroupsRequest', ], 'output' => [ 'shape' => 'DescribeStaleSecurityGroupsResult', ], ], 'DescribeSubnets' => [ 'name' => 'DescribeSubnets', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeSubnetsRequest', ], 'output' => [ 'shape' => 'DescribeSubnetsResult', ], ], 'DescribeTags' => [ 'name' => 'DescribeTags', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeTagsRequest', ], 'output' => [ 'shape' => 'DescribeTagsResult', ], ], 'DescribeVolumeAttribute' => [ 'name' => 'DescribeVolumeAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVolumeAttributeRequest', ], 'output' => [ 'shape' => 'DescribeVolumeAttributeResult', ], ], 'DescribeVolumeStatus' => [ 'name' => 'DescribeVolumeStatus', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVolumeStatusRequest', ], 'output' => [ 'shape' => 'DescribeVolumeStatusResult', ], ], 'DescribeVolumes' => [ 'name' => 'DescribeVolumes', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVolumesRequest', ], 'output' => [ 'shape' => 'DescribeVolumesResult', ], ], 'DescribeVpcAttribute' => [ 'name' => 'DescribeVpcAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVpcAttributeRequest', ], 'output' => [ 'shape' => 'DescribeVpcAttributeResult', ], ], 'DescribeVpcClassicLink' => [ 'name' => 'DescribeVpcClassicLink', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVpcClassicLinkRequest', ], 'output' => [ 'shape' => 'DescribeVpcClassicLinkResult', ], ], 'DescribeVpcClassicLinkDnsSupport' => [ 'name' => 'DescribeVpcClassicLinkDnsSupport', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVpcClassicLinkDnsSupportRequest', ], 'output' => [ 'shape' => 'DescribeVpcClassicLinkDnsSupportResult', ], ], 'DescribeVpcEndpointServices' => [ 'name' => 'DescribeVpcEndpointServices', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVpcEndpointServicesRequest', ], 'output' => [ 'shape' => 'DescribeVpcEndpointServicesResult', ], ], 'DescribeVpcEndpoints' => [ 'name' => 'DescribeVpcEndpoints', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVpcEndpointsRequest', ], 'output' => [ 'shape' => 'DescribeVpcEndpointsResult', ], ], 'DescribeVpcPeeringConnections' => [ 'name' => 'DescribeVpcPeeringConnections', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVpcPeeringConnectionsRequest', ], 'output' => [ 'shape' => 'DescribeVpcPeeringConnectionsResult', ], ], 'DescribeVpcs' => [ 'name' => 'DescribeVpcs', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVpcsRequest', ], 'output' => [ 'shape' => 'DescribeVpcsResult', ], ], 'DescribeVpnConnections' => [ 'name' => 'DescribeVpnConnections', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVpnConnectionsRequest', ], 'output' => [ 'shape' => 'DescribeVpnConnectionsResult', ], ], 'DescribeVpnGateways' => [ 'name' => 'DescribeVpnGateways', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DescribeVpnGatewaysRequest', ], 'output' => [ 'shape' => 'DescribeVpnGatewaysResult', ], ], 'DetachClassicLinkVpc' => [ 'name' => 'DetachClassicLinkVpc', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DetachClassicLinkVpcRequest', ], 'output' => [ 'shape' => 'DetachClassicLinkVpcResult', ], ], 'DetachInternetGateway' => [ 'name' => 'DetachInternetGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DetachInternetGatewayRequest', ], ], 'DetachNetworkInterface' => [ 'name' => 'DetachNetworkInterface', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DetachNetworkInterfaceRequest', ], ], 'DetachVolume' => [ 'name' => 'DetachVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DetachVolumeRequest', ], 'output' => [ 'shape' => 'VolumeAttachment', ], ], 'DetachVpnGateway' => [ 'name' => 'DetachVpnGateway', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DetachVpnGatewayRequest', ], ], 'DisableVgwRoutePropagation' => [ 'name' => 'DisableVgwRoutePropagation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DisableVgwRoutePropagationRequest', ], ], 'DisableVpcClassicLink' => [ 'name' => 'DisableVpcClassicLink', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DisableVpcClassicLinkRequest', ], 'output' => [ 'shape' => 'DisableVpcClassicLinkResult', ], ], 'DisableVpcClassicLinkDnsSupport' => [ 'name' => 'DisableVpcClassicLinkDnsSupport', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DisableVpcClassicLinkDnsSupportRequest', ], 'output' => [ 'shape' => 'DisableVpcClassicLinkDnsSupportResult', ], ], 'DisassociateAddress' => [ 'name' => 'DisassociateAddress', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DisassociateAddressRequest', ], ], 'DisassociateRouteTable' => [ 'name' => 'DisassociateRouteTable', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DisassociateRouteTableRequest', ], ], 'EnableVgwRoutePropagation' => [ 'name' => 'EnableVgwRoutePropagation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'EnableVgwRoutePropagationRequest', ], ], 'EnableVolumeIO' => [ 'name' => 'EnableVolumeIO', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'EnableVolumeIORequest', ], ], 'EnableVpcClassicLink' => [ 'name' => 'EnableVpcClassicLink', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'EnableVpcClassicLinkRequest', ], 'output' => [ 'shape' => 'EnableVpcClassicLinkResult', ], ], 'EnableVpcClassicLinkDnsSupport' => [ 'name' => 'EnableVpcClassicLinkDnsSupport', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'EnableVpcClassicLinkDnsSupportRequest', ], 'output' => [ 'shape' => 'EnableVpcClassicLinkDnsSupportResult', ], ], 'GetConsoleOutput' => [ 'name' => 'GetConsoleOutput', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetConsoleOutputRequest', ], 'output' => [ 'shape' => 'GetConsoleOutputResult', ], ], 'GetConsoleScreenshot' => [ 'name' => 'GetConsoleScreenshot', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetConsoleScreenshotRequest', ], 'output' => [ 'shape' => 'GetConsoleScreenshotResult', ], ], 'GetPasswordData' => [ 'name' => 'GetPasswordData', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetPasswordDataRequest', ], 'output' => [ 'shape' => 'GetPasswordDataResult', ], ], 'ImportImage' => [ 'name' => 'ImportImage', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ImportImageRequest', ], 'output' => [ 'shape' => 'ImportImageResult', ], ], 'ImportInstance' => [ 'name' => 'ImportInstance', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ImportInstanceRequest', ], 'output' => [ 'shape' => 'ImportInstanceResult', ], ], 'ImportKeyPair' => [ 'name' => 'ImportKeyPair', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ImportKeyPairRequest', ], 'output' => [ 'shape' => 'ImportKeyPairResult', ], ], 'ImportSnapshot' => [ 'name' => 'ImportSnapshot', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ImportSnapshotRequest', ], 'output' => [ 'shape' => 'ImportSnapshotResult', ], ], 'ImportVolume' => [ 'name' => 'ImportVolume', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ImportVolumeRequest', ], 'output' => [ 'shape' => 'ImportVolumeResult', ], ], 'ModifyHosts' => [ 'name' => 'ModifyHosts', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyHostsRequest', ], 'output' => [ 'shape' => 'ModifyHostsResult', ], ], 'ModifyIdFormat' => [ 'name' => 'ModifyIdFormat', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyIdFormatRequest', ], ], 'ModifyImageAttribute' => [ 'name' => 'ModifyImageAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyImageAttributeRequest', ], ], 'ModifyInstanceAttribute' => [ 'name' => 'ModifyInstanceAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyInstanceAttributeRequest', ], ], 'ModifyInstancePlacement' => [ 'name' => 'ModifyInstancePlacement', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyInstancePlacementRequest', ], 'output' => [ 'shape' => 'ModifyInstancePlacementResult', ], ], 'ModifyNetworkInterfaceAttribute' => [ 'name' => 'ModifyNetworkInterfaceAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyNetworkInterfaceAttributeRequest', ], ], 'ModifyReservedInstances' => [ 'name' => 'ModifyReservedInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyReservedInstancesRequest', ], 'output' => [ 'shape' => 'ModifyReservedInstancesResult', ], ], 'ModifySnapshotAttribute' => [ 'name' => 'ModifySnapshotAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifySnapshotAttributeRequest', ], ], 'ModifySpotFleetRequest' => [ 'name' => 'ModifySpotFleetRequest', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifySpotFleetRequestRequest', ], 'output' => [ 'shape' => 'ModifySpotFleetRequestResponse', ], ], 'ModifySubnetAttribute' => [ 'name' => 'ModifySubnetAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifySubnetAttributeRequest', ], ], 'ModifyVolumeAttribute' => [ 'name' => 'ModifyVolumeAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyVolumeAttributeRequest', ], ], 'ModifyVpcAttribute' => [ 'name' => 'ModifyVpcAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyVpcAttributeRequest', ], ], 'ModifyVpcEndpoint' => [ 'name' => 'ModifyVpcEndpoint', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyVpcEndpointRequest', ], 'output' => [ 'shape' => 'ModifyVpcEndpointResult', ], ], 'ModifyVpcPeeringConnectionOptions' => [ 'name' => 'ModifyVpcPeeringConnectionOptions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ModifyVpcPeeringConnectionOptionsRequest', ], 'output' => [ 'shape' => 'ModifyVpcPeeringConnectionOptionsResult', ], ], 'MonitorInstances' => [ 'name' => 'MonitorInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'MonitorInstancesRequest', ], 'output' => [ 'shape' => 'MonitorInstancesResult', ], ], 'MoveAddressToVpc' => [ 'name' => 'MoveAddressToVpc', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'MoveAddressToVpcRequest', ], 'output' => [ 'shape' => 'MoveAddressToVpcResult', ], ], 'PurchaseReservedInstancesOffering' => [ 'name' => 'PurchaseReservedInstancesOffering', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PurchaseReservedInstancesOfferingRequest', ], 'output' => [ 'shape' => 'PurchaseReservedInstancesOfferingResult', ], ], 'PurchaseScheduledInstances' => [ 'name' => 'PurchaseScheduledInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PurchaseScheduledInstancesRequest', ], 'output' => [ 'shape' => 'PurchaseScheduledInstancesResult', ], ], 'RebootInstances' => [ 'name' => 'RebootInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RebootInstancesRequest', ], ], 'RegisterImage' => [ 'name' => 'RegisterImage', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RegisterImageRequest', ], 'output' => [ 'shape' => 'RegisterImageResult', ], ], 'RejectVpcPeeringConnection' => [ 'name' => 'RejectVpcPeeringConnection', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RejectVpcPeeringConnectionRequest', ], 'output' => [ 'shape' => 'RejectVpcPeeringConnectionResult', ], ], 'ReleaseAddress' => [ 'name' => 'ReleaseAddress', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ReleaseAddressRequest', ], ], 'ReleaseHosts' => [ 'name' => 'ReleaseHosts', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ReleaseHostsRequest', ], 'output' => [ 'shape' => 'ReleaseHostsResult', ], ], 'ReplaceNetworkAclAssociation' => [ 'name' => 'ReplaceNetworkAclAssociation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ReplaceNetworkAclAssociationRequest', ], 'output' => [ 'shape' => 'ReplaceNetworkAclAssociationResult', ], ], 'ReplaceNetworkAclEntry' => [ 'name' => 'ReplaceNetworkAclEntry', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ReplaceNetworkAclEntryRequest', ], ], 'ReplaceRoute' => [ 'name' => 'ReplaceRoute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ReplaceRouteRequest', ], ], 'ReplaceRouteTableAssociation' => [ 'name' => 'ReplaceRouteTableAssociation', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ReplaceRouteTableAssociationRequest', ], 'output' => [ 'shape' => 'ReplaceRouteTableAssociationResult', ], ], 'ReportInstanceStatus' => [ 'name' => 'ReportInstanceStatus', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ReportInstanceStatusRequest', ], ], 'RequestSpotFleet' => [ 'name' => 'RequestSpotFleet', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RequestSpotFleetRequest', ], 'output' => [ 'shape' => 'RequestSpotFleetResponse', ], ], 'RequestSpotInstances' => [ 'name' => 'RequestSpotInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RequestSpotInstancesRequest', ], 'output' => [ 'shape' => 'RequestSpotInstancesResult', ], ], 'ResetImageAttribute' => [ 'name' => 'ResetImageAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ResetImageAttributeRequest', ], ], 'ResetInstanceAttribute' => [ 'name' => 'ResetInstanceAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ResetInstanceAttributeRequest', ], ], 'ResetNetworkInterfaceAttribute' => [ 'name' => 'ResetNetworkInterfaceAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ResetNetworkInterfaceAttributeRequest', ], ], 'ResetSnapshotAttribute' => [ 'name' => 'ResetSnapshotAttribute', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ResetSnapshotAttributeRequest', ], ], 'RestoreAddressToClassic' => [ 'name' => 'RestoreAddressToClassic', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RestoreAddressToClassicRequest', ], 'output' => [ 'shape' => 'RestoreAddressToClassicResult', ], ], 'RevokeSecurityGroupEgress' => [ 'name' => 'RevokeSecurityGroupEgress', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RevokeSecurityGroupEgressRequest', ], ], 'RevokeSecurityGroupIngress' => [ 'name' => 'RevokeSecurityGroupIngress', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RevokeSecurityGroupIngressRequest', ], ], 'RunInstances' => [ 'name' => 'RunInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RunInstancesRequest', ], 'output' => [ 'shape' => 'Reservation', ], ], 'RunScheduledInstances' => [ 'name' => 'RunScheduledInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RunScheduledInstancesRequest', ], 'output' => [ 'shape' => 'RunScheduledInstancesResult', ], ], 'StartInstances' => [ 'name' => 'StartInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StartInstancesRequest', ], 'output' => [ 'shape' => 'StartInstancesResult', ], ], 'StopInstances' => [ 'name' => 'StopInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'StopInstancesRequest', ], 'output' => [ 'shape' => 'StopInstancesResult', ], ], 'TerminateInstances' => [ 'name' => 'TerminateInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'TerminateInstancesRequest', ], 'output' => [ 'shape' => 'TerminateInstancesResult', ], ], 'UnassignPrivateIpAddresses' => [ 'name' => 'UnassignPrivateIpAddresses', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UnassignPrivateIpAddressesRequest', ], ], 'UnmonitorInstances' => [ 'name' => 'UnmonitorInstances', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UnmonitorInstancesRequest', ], 'output' => [ 'shape' => 'UnmonitorInstancesResult', ], ], ], 'shapes' => [ 'AcceptVpcPeeringConnectionRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcPeeringConnectionId' => [ 'shape' => 'String', 'locationName' => 'vpcPeeringConnectionId', ], ], ], 'AcceptVpcPeeringConnectionResult' => [ 'type' => 'structure', 'members' => [ 'VpcPeeringConnection' => [ 'shape' => 'VpcPeeringConnection', 'locationName' => 'vpcPeeringConnection', ], ], ], 'AccountAttribute' => [ 'type' => 'structure', 'members' => [ 'AttributeName' => [ 'shape' => 'String', 'locationName' => 'attributeName', ], 'AttributeValues' => [ 'shape' => 'AccountAttributeValueList', 'locationName' => 'attributeValueSet', ], ], ], 'AccountAttributeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AccountAttribute', 'locationName' => 'item', ], ], 'AccountAttributeName' => [ 'type' => 'string', 'enum' => [ 'supported-platforms', 'default-vpc', ], ], 'AccountAttributeNameStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AccountAttributeName', 'locationName' => 'attributeName', ], ], 'AccountAttributeValue' => [ 'type' => 'structure', 'members' => [ 'AttributeValue' => [ 'shape' => 'String', 'locationName' => 'attributeValue', ], ], ], 'AccountAttributeValueList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AccountAttributeValue', 'locationName' => 'item', ], ], 'ActiveInstance' => [ 'type' => 'structure', 'members' => [ 'InstanceType' => [ 'shape' => 'String', 'locationName' => 'instanceType', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'SpotInstanceRequestId' => [ 'shape' => 'String', 'locationName' => 'spotInstanceRequestId', ], ], ], 'ActiveInstanceSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'ActiveInstance', 'locationName' => 'item', ], ], 'Address' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'PublicIp' => [ 'shape' => 'String', 'locationName' => 'publicIp', ], 'AllocationId' => [ 'shape' => 'String', 'locationName' => 'allocationId', ], 'AssociationId' => [ 'shape' => 'String', 'locationName' => 'associationId', ], 'Domain' => [ 'shape' => 'DomainType', 'locationName' => 'domain', ], 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'NetworkInterfaceOwnerId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceOwnerId', ], 'PrivateIpAddress' => [ 'shape' => 'String', 'locationName' => 'privateIpAddress', ], ], ], 'AddressList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Address', 'locationName' => 'item', ], ], 'Affinity' => [ 'type' => 'string', 'enum' => [ 'default', 'host', ], ], 'AllocateAddressRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'Domain' => [ 'shape' => 'DomainType', ], ], ], 'AllocateAddressResult' => [ 'type' => 'structure', 'members' => [ 'PublicIp' => [ 'shape' => 'String', 'locationName' => 'publicIp', ], 'Domain' => [ 'shape' => 'DomainType', 'locationName' => 'domain', ], 'AllocationId' => [ 'shape' => 'String', 'locationName' => 'allocationId', ], ], ], 'AllocateHostsRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceType', 'Quantity', 'AvailabilityZone', ], 'members' => [ 'AutoPlacement' => [ 'shape' => 'AutoPlacement', 'locationName' => 'autoPlacement', ], 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], 'InstanceType' => [ 'shape' => 'String', 'locationName' => 'instanceType', ], 'Quantity' => [ 'shape' => 'Integer', 'locationName' => 'quantity', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], ], ], 'AllocateHostsResult' => [ 'type' => 'structure', 'members' => [ 'HostIds' => [ 'shape' => 'ResponseHostIdList', 'locationName' => 'hostIdSet', ], ], ], 'AllocationIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'AllocationId', ], ], 'AllocationState' => [ 'type' => 'string', 'enum' => [ 'available', 'under-assessment', 'permanent-failure', 'released', 'released-permanent-failure', ], ], 'AllocationStrategy' => [ 'type' => 'string', 'enum' => [ 'lowestPrice', 'diversified', ], ], 'ArchitectureValues' => [ 'type' => 'string', 'enum' => [ 'i386', 'x86_64', ], ], 'AssignPrivateIpAddressesRequest' => [ 'type' => 'structure', 'required' => [ 'NetworkInterfaceId', ], 'members' => [ 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'PrivateIpAddresses' => [ 'shape' => 'PrivateIpAddressStringList', 'locationName' => 'privateIpAddress', ], 'SecondaryPrivateIpAddressCount' => [ 'shape' => 'Integer', 'locationName' => 'secondaryPrivateIpAddressCount', ], 'AllowReassignment' => [ 'shape' => 'Boolean', 'locationName' => 'allowReassignment', ], ], ], 'AssociateAddressRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceId' => [ 'shape' => 'String', ], 'PublicIp' => [ 'shape' => 'String', ], 'AllocationId' => [ 'shape' => 'String', ], 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'PrivateIpAddress' => [ 'shape' => 'String', 'locationName' => 'privateIpAddress', ], 'AllowReassociation' => [ 'shape' => 'Boolean', 'locationName' => 'allowReassociation', ], ], ], 'AssociateAddressResult' => [ 'type' => 'structure', 'members' => [ 'AssociationId' => [ 'shape' => 'String', 'locationName' => 'associationId', ], ], ], 'AssociateDhcpOptionsRequest' => [ 'type' => 'structure', 'required' => [ 'DhcpOptionsId', 'VpcId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'DhcpOptionsId' => [ 'shape' => 'String', ], 'VpcId' => [ 'shape' => 'String', ], ], ], 'AssociateRouteTableRequest' => [ 'type' => 'structure', 'required' => [ 'SubnetId', 'RouteTableId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'RouteTableId' => [ 'shape' => 'String', 'locationName' => 'routeTableId', ], ], ], 'AssociateRouteTableResult' => [ 'type' => 'structure', 'members' => [ 'AssociationId' => [ 'shape' => 'String', 'locationName' => 'associationId', ], ], ], 'AttachClassicLinkVpcRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', 'VpcId', 'Groups', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'Groups' => [ 'shape' => 'GroupIdStringList', 'locationName' => 'SecurityGroupId', ], ], ], 'AttachClassicLinkVpcResult' => [ 'type' => 'structure', 'members' => [ 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'AttachInternetGatewayRequest' => [ 'type' => 'structure', 'required' => [ 'InternetGatewayId', 'VpcId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InternetGatewayId' => [ 'shape' => 'String', 'locationName' => 'internetGatewayId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], ], ], 'AttachNetworkInterfaceRequest' => [ 'type' => 'structure', 'required' => [ 'NetworkInterfaceId', 'InstanceId', 'DeviceIndex', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'DeviceIndex' => [ 'shape' => 'Integer', 'locationName' => 'deviceIndex', ], ], ], 'AttachNetworkInterfaceResult' => [ 'type' => 'structure', 'members' => [ 'AttachmentId' => [ 'shape' => 'String', 'locationName' => 'attachmentId', ], ], ], 'AttachVolumeRequest' => [ 'type' => 'structure', 'required' => [ 'VolumeId', 'InstanceId', 'Device', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VolumeId' => [ 'shape' => 'String', ], 'InstanceId' => [ 'shape' => 'String', ], 'Device' => [ 'shape' => 'String', ], ], ], 'AttachVpnGatewayRequest' => [ 'type' => 'structure', 'required' => [ 'VpnGatewayId', 'VpcId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpnGatewayId' => [ 'shape' => 'String', ], 'VpcId' => [ 'shape' => 'String', ], ], ], 'AttachVpnGatewayResult' => [ 'type' => 'structure', 'members' => [ 'VpcAttachment' => [ 'shape' => 'VpcAttachment', 'locationName' => 'attachment', ], ], ], 'AttachmentStatus' => [ 'type' => 'string', 'enum' => [ 'attaching', 'attached', 'detaching', 'detached', ], ], 'AttributeBooleanValue' => [ 'type' => 'structure', 'members' => [ 'Value' => [ 'shape' => 'Boolean', 'locationName' => 'value', ], ], ], 'AttributeValue' => [ 'type' => 'structure', 'members' => [ 'Value' => [ 'shape' => 'String', 'locationName' => 'value', ], ], ], 'AuthorizeSecurityGroupEgressRequest' => [ 'type' => 'structure', 'required' => [ 'GroupId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'GroupId' => [ 'shape' => 'String', 'locationName' => 'groupId', ], 'SourceSecurityGroupName' => [ 'shape' => 'String', 'locationName' => 'sourceSecurityGroupName', ], 'SourceSecurityGroupOwnerId' => [ 'shape' => 'String', 'locationName' => 'sourceSecurityGroupOwnerId', ], 'IpProtocol' => [ 'shape' => 'String', 'locationName' => 'ipProtocol', ], 'FromPort' => [ 'shape' => 'Integer', 'locationName' => 'fromPort', ], 'ToPort' => [ 'shape' => 'Integer', 'locationName' => 'toPort', ], 'CidrIp' => [ 'shape' => 'String', 'locationName' => 'cidrIp', ], 'IpPermissions' => [ 'shape' => 'IpPermissionList', 'locationName' => 'ipPermissions', ], ], ], 'AuthorizeSecurityGroupIngressRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'GroupName' => [ 'shape' => 'String', ], 'GroupId' => [ 'shape' => 'String', ], 'SourceSecurityGroupName' => [ 'shape' => 'String', ], 'SourceSecurityGroupOwnerId' => [ 'shape' => 'String', ], 'IpProtocol' => [ 'shape' => 'String', ], 'FromPort' => [ 'shape' => 'Integer', ], 'ToPort' => [ 'shape' => 'Integer', ], 'CidrIp' => [ 'shape' => 'String', ], 'IpPermissions' => [ 'shape' => 'IpPermissionList', ], ], ], 'AutoPlacement' => [ 'type' => 'string', 'enum' => [ 'on', 'off', ], ], 'AvailabilityZone' => [ 'type' => 'structure', 'members' => [ 'ZoneName' => [ 'shape' => 'String', 'locationName' => 'zoneName', ], 'State' => [ 'shape' => 'AvailabilityZoneState', 'locationName' => 'zoneState', ], 'RegionName' => [ 'shape' => 'String', 'locationName' => 'regionName', ], 'Messages' => [ 'shape' => 'AvailabilityZoneMessageList', 'locationName' => 'messageSet', ], ], ], 'AvailabilityZoneList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AvailabilityZone', 'locationName' => 'item', ], ], 'AvailabilityZoneMessage' => [ 'type' => 'structure', 'members' => [ 'Message' => [ 'shape' => 'String', 'locationName' => 'message', ], ], ], 'AvailabilityZoneMessageList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AvailabilityZoneMessage', 'locationName' => 'item', ], ], 'AvailabilityZoneState' => [ 'type' => 'string', 'enum' => [ 'available', 'information', 'impaired', 'unavailable', ], ], 'AvailableCapacity' => [ 'type' => 'structure', 'members' => [ 'AvailableInstanceCapacity' => [ 'shape' => 'AvailableInstanceCapacityList', 'locationName' => 'availableInstanceCapacity', ], 'AvailableVCpus' => [ 'shape' => 'Integer', 'locationName' => 'availableVCpus', ], ], ], 'AvailableInstanceCapacityList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceCapacity', 'locationName' => 'item', ], ], 'BatchState' => [ 'type' => 'string', 'enum' => [ 'submitted', 'active', 'cancelled', 'failed', 'cancelled_running', 'cancelled_terminating', 'modifying', ], ], 'Blob' => [ 'type' => 'blob', ], 'BlobAttributeValue' => [ 'type' => 'structure', 'members' => [ 'Value' => [ 'shape' => 'Blob', 'locationName' => 'value', ], ], ], 'BlockDeviceMapping' => [ 'type' => 'structure', 'members' => [ 'VirtualName' => [ 'shape' => 'String', 'locationName' => 'virtualName', ], 'DeviceName' => [ 'shape' => 'String', 'locationName' => 'deviceName', ], 'Ebs' => [ 'shape' => 'EbsBlockDevice', 'locationName' => 'ebs', ], 'NoDevice' => [ 'shape' => 'String', 'locationName' => 'noDevice', ], ], ], 'BlockDeviceMappingList' => [ 'type' => 'list', 'member' => [ 'shape' => 'BlockDeviceMapping', 'locationName' => 'item', ], ], 'BlockDeviceMappingRequestList' => [ 'type' => 'list', 'member' => [ 'shape' => 'BlockDeviceMapping', 'locationName' => 'BlockDeviceMapping', ], ], 'Boolean' => [ 'type' => 'boolean', ], 'BundleIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'BundleId', ], ], 'BundleInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', 'Storage', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceId' => [ 'shape' => 'String', ], 'Storage' => [ 'shape' => 'Storage', ], ], ], 'BundleInstanceResult' => [ 'type' => 'structure', 'members' => [ 'BundleTask' => [ 'shape' => 'BundleTask', 'locationName' => 'bundleInstanceTask', ], ], ], 'BundleTask' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'BundleId' => [ 'shape' => 'String', 'locationName' => 'bundleId', ], 'State' => [ 'shape' => 'BundleTaskState', 'locationName' => 'state', ], 'StartTime' => [ 'shape' => 'DateTime', 'locationName' => 'startTime', ], 'UpdateTime' => [ 'shape' => 'DateTime', 'locationName' => 'updateTime', ], 'Storage' => [ 'shape' => 'Storage', 'locationName' => 'storage', ], 'Progress' => [ 'shape' => 'String', 'locationName' => 'progress', ], 'BundleTaskError' => [ 'shape' => 'BundleTaskError', 'locationName' => 'error', ], ], ], 'BundleTaskError' => [ 'type' => 'structure', 'members' => [ 'Code' => [ 'shape' => 'String', 'locationName' => 'code', ], 'Message' => [ 'shape' => 'String', 'locationName' => 'message', ], ], ], 'BundleTaskList' => [ 'type' => 'list', 'member' => [ 'shape' => 'BundleTask', 'locationName' => 'item', ], ], 'BundleTaskState' => [ 'type' => 'string', 'enum' => [ 'pending', 'waiting-for-shutdown', 'bundling', 'storing', 'cancelling', 'complete', 'failed', ], ], 'CancelBatchErrorCode' => [ 'type' => 'string', 'enum' => [ 'fleetRequestIdDoesNotExist', 'fleetRequestIdMalformed', 'fleetRequestNotInCancellableState', 'unexpectedError', ], ], 'CancelBundleTaskRequest' => [ 'type' => 'structure', 'required' => [ 'BundleId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'BundleId' => [ 'shape' => 'String', ], ], ], 'CancelBundleTaskResult' => [ 'type' => 'structure', 'members' => [ 'BundleTask' => [ 'shape' => 'BundleTask', 'locationName' => 'bundleInstanceTask', ], ], ], 'CancelConversionRequest' => [ 'type' => 'structure', 'required' => [ 'ConversionTaskId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ConversionTaskId' => [ 'shape' => 'String', 'locationName' => 'conversionTaskId', ], 'ReasonMessage' => [ 'shape' => 'String', 'locationName' => 'reasonMessage', ], ], ], 'CancelExportTaskRequest' => [ 'type' => 'structure', 'required' => [ 'ExportTaskId', ], 'members' => [ 'ExportTaskId' => [ 'shape' => 'String', 'locationName' => 'exportTaskId', ], ], ], 'CancelImportTaskRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'ImportTaskId' => [ 'shape' => 'String', ], 'CancelReason' => [ 'shape' => 'String', ], ], ], 'CancelImportTaskResult' => [ 'type' => 'structure', 'members' => [ 'ImportTaskId' => [ 'shape' => 'String', 'locationName' => 'importTaskId', ], 'State' => [ 'shape' => 'String', 'locationName' => 'state', ], 'PreviousState' => [ 'shape' => 'String', 'locationName' => 'previousState', ], ], ], 'CancelReservedInstancesListingRequest' => [ 'type' => 'structure', 'required' => [ 'ReservedInstancesListingId', ], 'members' => [ 'ReservedInstancesListingId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesListingId', ], ], ], 'CancelReservedInstancesListingResult' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesListings' => [ 'shape' => 'ReservedInstancesListingList', 'locationName' => 'reservedInstancesListingsSet', ], ], ], 'CancelSpotFleetRequestsError' => [ 'type' => 'structure', 'required' => [ 'Code', 'Message', ], 'members' => [ 'Code' => [ 'shape' => 'CancelBatchErrorCode', 'locationName' => 'code', ], 'Message' => [ 'shape' => 'String', 'locationName' => 'message', ], ], ], 'CancelSpotFleetRequestsErrorItem' => [ 'type' => 'structure', 'required' => [ 'SpotFleetRequestId', 'Error', ], 'members' => [ 'SpotFleetRequestId' => [ 'shape' => 'String', 'locationName' => 'spotFleetRequestId', ], 'Error' => [ 'shape' => 'CancelSpotFleetRequestsError', 'locationName' => 'error', ], ], ], 'CancelSpotFleetRequestsErrorSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'CancelSpotFleetRequestsErrorItem', 'locationName' => 'item', ], ], 'CancelSpotFleetRequestsRequest' => [ 'type' => 'structure', 'required' => [ 'SpotFleetRequestIds', 'TerminateInstances', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SpotFleetRequestIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'spotFleetRequestId', ], 'TerminateInstances' => [ 'shape' => 'Boolean', 'locationName' => 'terminateInstances', ], ], ], 'CancelSpotFleetRequestsResponse' => [ 'type' => 'structure', 'members' => [ 'UnsuccessfulFleetRequests' => [ 'shape' => 'CancelSpotFleetRequestsErrorSet', 'locationName' => 'unsuccessfulFleetRequestSet', ], 'SuccessfulFleetRequests' => [ 'shape' => 'CancelSpotFleetRequestsSuccessSet', 'locationName' => 'successfulFleetRequestSet', ], ], ], 'CancelSpotFleetRequestsSuccessItem' => [ 'type' => 'structure', 'required' => [ 'SpotFleetRequestId', 'CurrentSpotFleetRequestState', 'PreviousSpotFleetRequestState', ], 'members' => [ 'SpotFleetRequestId' => [ 'shape' => 'String', 'locationName' => 'spotFleetRequestId', ], 'CurrentSpotFleetRequestState' => [ 'shape' => 'BatchState', 'locationName' => 'currentSpotFleetRequestState', ], 'PreviousSpotFleetRequestState' => [ 'shape' => 'BatchState', 'locationName' => 'previousSpotFleetRequestState', ], ], ], 'CancelSpotFleetRequestsSuccessSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'CancelSpotFleetRequestsSuccessItem', 'locationName' => 'item', ], ], 'CancelSpotInstanceRequestState' => [ 'type' => 'string', 'enum' => [ 'active', 'open', 'closed', 'cancelled', 'completed', ], ], 'CancelSpotInstanceRequestsRequest' => [ 'type' => 'structure', 'required' => [ 'SpotInstanceRequestIds', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SpotInstanceRequestIds' => [ 'shape' => 'SpotInstanceRequestIdList', 'locationName' => 'SpotInstanceRequestId', ], ], ], 'CancelSpotInstanceRequestsResult' => [ 'type' => 'structure', 'members' => [ 'CancelledSpotInstanceRequests' => [ 'shape' => 'CancelledSpotInstanceRequestList', 'locationName' => 'spotInstanceRequestSet', ], ], ], 'CancelledSpotInstanceRequest' => [ 'type' => 'structure', 'members' => [ 'SpotInstanceRequestId' => [ 'shape' => 'String', 'locationName' => 'spotInstanceRequestId', ], 'State' => [ 'shape' => 'CancelSpotInstanceRequestState', 'locationName' => 'state', ], ], ], 'CancelledSpotInstanceRequestList' => [ 'type' => 'list', 'member' => [ 'shape' => 'CancelledSpotInstanceRequest', 'locationName' => 'item', ], ], 'ClassicLinkDnsSupport' => [ 'type' => 'structure', 'members' => [ 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'ClassicLinkDnsSupported' => [ 'shape' => 'Boolean', 'locationName' => 'classicLinkDnsSupported', ], ], ], 'ClassicLinkDnsSupportList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ClassicLinkDnsSupport', 'locationName' => 'item', ], ], 'ClassicLinkInstance' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'Groups' => [ 'shape' => 'GroupIdentifierList', 'locationName' => 'groupSet', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], ], ], 'ClassicLinkInstanceList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ClassicLinkInstance', 'locationName' => 'item', ], ], 'ClientData' => [ 'type' => 'structure', 'members' => [ 'UploadStart' => [ 'shape' => 'DateTime', ], 'UploadEnd' => [ 'shape' => 'DateTime', ], 'UploadSize' => [ 'shape' => 'Double', ], 'Comment' => [ 'shape' => 'String', ], ], ], 'ConfirmProductInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'ProductCode', 'InstanceId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ProductCode' => [ 'shape' => 'String', ], 'InstanceId' => [ 'shape' => 'String', ], ], ], 'ConfirmProductInstanceResult' => [ 'type' => 'structure', 'members' => [ 'OwnerId' => [ 'shape' => 'String', 'locationName' => 'ownerId', ], 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'ContainerFormat' => [ 'type' => 'string', 'enum' => [ 'ova', ], ], 'ConversionIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'item', ], ], 'ConversionTask' => [ 'type' => 'structure', 'required' => [ 'ConversionTaskId', 'State', ], 'members' => [ 'ConversionTaskId' => [ 'shape' => 'String', 'locationName' => 'conversionTaskId', ], 'ExpirationTime' => [ 'shape' => 'String', 'locationName' => 'expirationTime', ], 'ImportInstance' => [ 'shape' => 'ImportInstanceTaskDetails', 'locationName' => 'importInstance', ], 'ImportVolume' => [ 'shape' => 'ImportVolumeTaskDetails', 'locationName' => 'importVolume', ], 'State' => [ 'shape' => 'ConversionTaskState', 'locationName' => 'state', ], 'StatusMessage' => [ 'shape' => 'String', 'locationName' => 'statusMessage', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], ], ], 'ConversionTaskState' => [ 'type' => 'string', 'enum' => [ 'active', 'cancelling', 'cancelled', 'completed', ], ], 'CopyImageRequest' => [ 'type' => 'structure', 'required' => [ 'SourceRegion', 'SourceImageId', 'Name', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SourceRegion' => [ 'shape' => 'String', ], 'SourceImageId' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], 'Description' => [ 'shape' => 'String', ], 'ClientToken' => [ 'shape' => 'String', ], 'Encrypted' => [ 'shape' => 'Boolean', 'locationName' => 'encrypted', ], 'KmsKeyId' => [ 'shape' => 'String', 'locationName' => 'kmsKeyId', ], ], ], 'CopyImageResult' => [ 'type' => 'structure', 'members' => [ 'ImageId' => [ 'shape' => 'String', 'locationName' => 'imageId', ], ], ], 'CopySnapshotRequest' => [ 'type' => 'structure', 'required' => [ 'SourceRegion', 'SourceSnapshotId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SourceRegion' => [ 'shape' => 'String', ], 'SourceSnapshotId' => [ 'shape' => 'String', ], 'Description' => [ 'shape' => 'String', ], 'DestinationRegion' => [ 'shape' => 'String', 'locationName' => 'destinationRegion', ], 'PresignedUrl' => [ 'shape' => 'String', 'locationName' => 'presignedUrl', ], 'Encrypted' => [ 'shape' => 'Boolean', 'locationName' => 'encrypted', ], 'KmsKeyId' => [ 'shape' => 'String', 'locationName' => 'kmsKeyId', ], ], ], 'CopySnapshotResult' => [ 'type' => 'structure', 'members' => [ 'SnapshotId' => [ 'shape' => 'String', 'locationName' => 'snapshotId', ], ], ], 'CreateCustomerGatewayRequest' => [ 'type' => 'structure', 'required' => [ 'Type', 'PublicIp', 'BgpAsn', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'Type' => [ 'shape' => 'GatewayType', ], 'PublicIp' => [ 'shape' => 'String', 'locationName' => 'IpAddress', ], 'BgpAsn' => [ 'shape' => 'Integer', ], ], ], 'CreateCustomerGatewayResult' => [ 'type' => 'structure', 'members' => [ 'CustomerGateway' => [ 'shape' => 'CustomerGateway', 'locationName' => 'customerGateway', ], ], ], 'CreateDhcpOptionsRequest' => [ 'type' => 'structure', 'required' => [ 'DhcpConfigurations', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'DhcpConfigurations' => [ 'shape' => 'NewDhcpConfigurationList', 'locationName' => 'dhcpConfiguration', ], ], ], 'CreateDhcpOptionsResult' => [ 'type' => 'structure', 'members' => [ 'DhcpOptions' => [ 'shape' => 'DhcpOptions', 'locationName' => 'dhcpOptions', ], ], ], 'CreateFlowLogsRequest' => [ 'type' => 'structure', 'required' => [ 'ResourceIds', 'ResourceType', 'TrafficType', 'LogGroupName', 'DeliverLogsPermissionArn', ], 'members' => [ 'ResourceIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'ResourceId', ], 'ResourceType' => [ 'shape' => 'FlowLogsResourceType', ], 'TrafficType' => [ 'shape' => 'TrafficType', ], 'LogGroupName' => [ 'shape' => 'String', ], 'DeliverLogsPermissionArn' => [ 'shape' => 'String', ], 'ClientToken' => [ 'shape' => 'String', ], ], ], 'CreateFlowLogsResult' => [ 'type' => 'structure', 'members' => [ 'FlowLogIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'flowLogIdSet', ], 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], 'Unsuccessful' => [ 'shape' => 'UnsuccessfulItemSet', 'locationName' => 'unsuccessful', ], ], ], 'CreateImageRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', 'Name', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'Name' => [ 'shape' => 'String', 'locationName' => 'name', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'NoReboot' => [ 'shape' => 'Boolean', 'locationName' => 'noReboot', ], 'BlockDeviceMappings' => [ 'shape' => 'BlockDeviceMappingRequestList', 'locationName' => 'blockDeviceMapping', ], ], ], 'CreateImageResult' => [ 'type' => 'structure', 'members' => [ 'ImageId' => [ 'shape' => 'String', 'locationName' => 'imageId', ], ], ], 'CreateInstanceExportTaskRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'TargetEnvironment' => [ 'shape' => 'ExportEnvironment', 'locationName' => 'targetEnvironment', ], 'ExportToS3Task' => [ 'shape' => 'ExportToS3TaskSpecification', 'locationName' => 'exportToS3', ], ], ], 'CreateInstanceExportTaskResult' => [ 'type' => 'structure', 'members' => [ 'ExportTask' => [ 'shape' => 'ExportTask', 'locationName' => 'exportTask', ], ], ], 'CreateInternetGatewayRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], ], ], 'CreateInternetGatewayResult' => [ 'type' => 'structure', 'members' => [ 'InternetGateway' => [ 'shape' => 'InternetGateway', 'locationName' => 'internetGateway', ], ], ], 'CreateKeyPairRequest' => [ 'type' => 'structure', 'required' => [ 'KeyName', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'KeyName' => [ 'shape' => 'String', ], ], ], 'CreateNatGatewayRequest' => [ 'type' => 'structure', 'required' => [ 'SubnetId', 'AllocationId', ], 'members' => [ 'SubnetId' => [ 'shape' => 'String', ], 'AllocationId' => [ 'shape' => 'String', ], 'ClientToken' => [ 'shape' => 'String', ], ], ], 'CreateNatGatewayResult' => [ 'type' => 'structure', 'members' => [ 'NatGateway' => [ 'shape' => 'NatGateway', 'locationName' => 'natGateway', ], 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], ], ], 'CreateNetworkAclEntryRequest' => [ 'type' => 'structure', 'required' => [ 'NetworkAclId', 'RuleNumber', 'Protocol', 'RuleAction', 'Egress', 'CidrBlock', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'NetworkAclId' => [ 'shape' => 'String', 'locationName' => 'networkAclId', ], 'RuleNumber' => [ 'shape' => 'Integer', 'locationName' => 'ruleNumber', ], 'Protocol' => [ 'shape' => 'String', 'locationName' => 'protocol', ], 'RuleAction' => [ 'shape' => 'RuleAction', 'locationName' => 'ruleAction', ], 'Egress' => [ 'shape' => 'Boolean', 'locationName' => 'egress', ], 'CidrBlock' => [ 'shape' => 'String', 'locationName' => 'cidrBlock', ], 'IcmpTypeCode' => [ 'shape' => 'IcmpTypeCode', 'locationName' => 'Icmp', ], 'PortRange' => [ 'shape' => 'PortRange', 'locationName' => 'portRange', ], ], ], 'CreateNetworkAclRequest' => [ 'type' => 'structure', 'required' => [ 'VpcId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], ], ], 'CreateNetworkAclResult' => [ 'type' => 'structure', 'members' => [ 'NetworkAcl' => [ 'shape' => 'NetworkAcl', 'locationName' => 'networkAcl', ], ], ], 'CreateNetworkInterfaceRequest' => [ 'type' => 'structure', 'required' => [ 'SubnetId', ], 'members' => [ 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'PrivateIpAddress' => [ 'shape' => 'String', 'locationName' => 'privateIpAddress', ], 'Groups' => [ 'shape' => 'SecurityGroupIdStringList', 'locationName' => 'SecurityGroupId', ], 'PrivateIpAddresses' => [ 'shape' => 'PrivateIpAddressSpecificationList', 'locationName' => 'privateIpAddresses', ], 'SecondaryPrivateIpAddressCount' => [ 'shape' => 'Integer', 'locationName' => 'secondaryPrivateIpAddressCount', ], 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], ], ], 'CreateNetworkInterfaceResult' => [ 'type' => 'structure', 'members' => [ 'NetworkInterface' => [ 'shape' => 'NetworkInterface', 'locationName' => 'networkInterface', ], ], ], 'CreatePlacementGroupRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'Strategy', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'GroupName' => [ 'shape' => 'String', 'locationName' => 'groupName', ], 'Strategy' => [ 'shape' => 'PlacementStrategy', 'locationName' => 'strategy', ], ], ], 'CreateReservedInstancesListingRequest' => [ 'type' => 'structure', 'required' => [ 'ReservedInstancesId', 'InstanceCount', 'PriceSchedules', 'ClientToken', ], 'members' => [ 'ReservedInstancesId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesId', ], 'InstanceCount' => [ 'shape' => 'Integer', 'locationName' => 'instanceCount', ], 'PriceSchedules' => [ 'shape' => 'PriceScheduleSpecificationList', 'locationName' => 'priceSchedules', ], 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], ], ], 'CreateReservedInstancesListingResult' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesListings' => [ 'shape' => 'ReservedInstancesListingList', 'locationName' => 'reservedInstancesListingsSet', ], ], ], 'CreateRouteRequest' => [ 'type' => 'structure', 'required' => [ 'RouteTableId', 'DestinationCidrBlock', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'RouteTableId' => [ 'shape' => 'String', 'locationName' => 'routeTableId', ], 'DestinationCidrBlock' => [ 'shape' => 'String', 'locationName' => 'destinationCidrBlock', ], 'GatewayId' => [ 'shape' => 'String', 'locationName' => 'gatewayId', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'VpcPeeringConnectionId' => [ 'shape' => 'String', 'locationName' => 'vpcPeeringConnectionId', ], 'NatGatewayId' => [ 'shape' => 'String', 'locationName' => 'natGatewayId', ], ], ], 'CreateRouteResult' => [ 'type' => 'structure', 'members' => [ 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'CreateRouteTableRequest' => [ 'type' => 'structure', 'required' => [ 'VpcId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], ], ], 'CreateRouteTableResult' => [ 'type' => 'structure', 'members' => [ 'RouteTable' => [ 'shape' => 'RouteTable', 'locationName' => 'routeTable', ], ], ], 'CreateSecurityGroupRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'Description', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'GroupName' => [ 'shape' => 'String', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'GroupDescription', ], 'VpcId' => [ 'shape' => 'String', ], ], ], 'CreateSecurityGroupResult' => [ 'type' => 'structure', 'members' => [ 'GroupId' => [ 'shape' => 'String', 'locationName' => 'groupId', ], ], ], 'CreateSnapshotRequest' => [ 'type' => 'structure', 'required' => [ 'VolumeId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VolumeId' => [ 'shape' => 'String', ], 'Description' => [ 'shape' => 'String', ], ], ], 'CreateSpotDatafeedSubscriptionRequest' => [ 'type' => 'structure', 'required' => [ 'Bucket', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'Bucket' => [ 'shape' => 'String', 'locationName' => 'bucket', ], 'Prefix' => [ 'shape' => 'String', 'locationName' => 'prefix', ], ], ], 'CreateSpotDatafeedSubscriptionResult' => [ 'type' => 'structure', 'members' => [ 'SpotDatafeedSubscription' => [ 'shape' => 'SpotDatafeedSubscription', 'locationName' => 'spotDatafeedSubscription', ], ], ], 'CreateSubnetRequest' => [ 'type' => 'structure', 'required' => [ 'VpcId', 'CidrBlock', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcId' => [ 'shape' => 'String', ], 'CidrBlock' => [ 'shape' => 'String', ], 'AvailabilityZone' => [ 'shape' => 'String', ], ], ], 'CreateSubnetResult' => [ 'type' => 'structure', 'members' => [ 'Subnet' => [ 'shape' => 'Subnet', 'locationName' => 'subnet', ], ], ], 'CreateTagsRequest' => [ 'type' => 'structure', 'required' => [ 'Resources', 'Tags', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'Resources' => [ 'shape' => 'ResourceIdList', 'locationName' => 'ResourceId', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'Tag', ], ], ], 'CreateVolumePermission' => [ 'type' => 'structure', 'members' => [ 'UserId' => [ 'shape' => 'String', 'locationName' => 'userId', ], 'Group' => [ 'shape' => 'PermissionGroup', 'locationName' => 'group', ], ], ], 'CreateVolumePermissionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'CreateVolumePermission', 'locationName' => 'item', ], ], 'CreateVolumePermissionModifications' => [ 'type' => 'structure', 'members' => [ 'Add' => [ 'shape' => 'CreateVolumePermissionList', ], 'Remove' => [ 'shape' => 'CreateVolumePermissionList', ], ], ], 'CreateVolumeRequest' => [ 'type' => 'structure', 'required' => [ 'AvailabilityZone', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'Size' => [ 'shape' => 'Integer', ], 'SnapshotId' => [ 'shape' => 'String', ], 'AvailabilityZone' => [ 'shape' => 'String', ], 'VolumeType' => [ 'shape' => 'VolumeType', ], 'Iops' => [ 'shape' => 'Integer', ], 'Encrypted' => [ 'shape' => 'Boolean', 'locationName' => 'encrypted', ], 'KmsKeyId' => [ 'shape' => 'String', ], ], ], 'CreateVpcEndpointRequest' => [ 'type' => 'structure', 'required' => [ 'VpcId', 'ServiceName', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'VpcId' => [ 'shape' => 'String', ], 'ServiceName' => [ 'shape' => 'String', ], 'PolicyDocument' => [ 'shape' => 'String', ], 'RouteTableIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'RouteTableId', ], 'ClientToken' => [ 'shape' => 'String', ], ], ], 'CreateVpcEndpointResult' => [ 'type' => 'structure', 'members' => [ 'VpcEndpoint' => [ 'shape' => 'VpcEndpoint', 'locationName' => 'vpcEndpoint', ], 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], ], ], 'CreateVpcPeeringConnectionRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'PeerVpcId' => [ 'shape' => 'String', 'locationName' => 'peerVpcId', ], 'PeerOwnerId' => [ 'shape' => 'String', 'locationName' => 'peerOwnerId', ], ], ], 'CreateVpcPeeringConnectionResult' => [ 'type' => 'structure', 'members' => [ 'VpcPeeringConnection' => [ 'shape' => 'VpcPeeringConnection', 'locationName' => 'vpcPeeringConnection', ], ], ], 'CreateVpcRequest' => [ 'type' => 'structure', 'required' => [ 'CidrBlock', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'CidrBlock' => [ 'shape' => 'String', ], 'InstanceTenancy' => [ 'shape' => 'Tenancy', 'locationName' => 'instanceTenancy', ], ], ], 'CreateVpcResult' => [ 'type' => 'structure', 'members' => [ 'Vpc' => [ 'shape' => 'Vpc', 'locationName' => 'vpc', ], ], ], 'CreateVpnConnectionRequest' => [ 'type' => 'structure', 'required' => [ 'Type', 'CustomerGatewayId', 'VpnGatewayId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'Type' => [ 'shape' => 'String', ], 'CustomerGatewayId' => [ 'shape' => 'String', ], 'VpnGatewayId' => [ 'shape' => 'String', ], 'Options' => [ 'shape' => 'VpnConnectionOptionsSpecification', 'locationName' => 'options', ], ], ], 'CreateVpnConnectionResult' => [ 'type' => 'structure', 'members' => [ 'VpnConnection' => [ 'shape' => 'VpnConnection', 'locationName' => 'vpnConnection', ], ], ], 'CreateVpnConnectionRouteRequest' => [ 'type' => 'structure', 'required' => [ 'VpnConnectionId', 'DestinationCidrBlock', ], 'members' => [ 'VpnConnectionId' => [ 'shape' => 'String', ], 'DestinationCidrBlock' => [ 'shape' => 'String', ], ], ], 'CreateVpnGatewayRequest' => [ 'type' => 'structure', 'required' => [ 'Type', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'Type' => [ 'shape' => 'GatewayType', ], 'AvailabilityZone' => [ 'shape' => 'String', ], ], ], 'CreateVpnGatewayResult' => [ 'type' => 'structure', 'members' => [ 'VpnGateway' => [ 'shape' => 'VpnGateway', 'locationName' => 'vpnGateway', ], ], ], 'CurrencyCodeValues' => [ 'type' => 'string', 'enum' => [ 'USD', ], ], 'CustomerGateway' => [ 'type' => 'structure', 'members' => [ 'CustomerGatewayId' => [ 'shape' => 'String', 'locationName' => 'customerGatewayId', ], 'State' => [ 'shape' => 'String', 'locationName' => 'state', ], 'Type' => [ 'shape' => 'String', 'locationName' => 'type', ], 'IpAddress' => [ 'shape' => 'String', 'locationName' => 'ipAddress', ], 'BgpAsn' => [ 'shape' => 'String', 'locationName' => 'bgpAsn', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], ], ], 'CustomerGatewayIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'CustomerGatewayId', ], ], 'CustomerGatewayList' => [ 'type' => 'list', 'member' => [ 'shape' => 'CustomerGateway', 'locationName' => 'item', ], ], 'DatafeedSubscriptionState' => [ 'type' => 'string', 'enum' => [ 'Active', 'Inactive', ], ], 'DateTime' => [ 'type' => 'timestamp', ], 'DeleteCustomerGatewayRequest' => [ 'type' => 'structure', 'required' => [ 'CustomerGatewayId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'CustomerGatewayId' => [ 'shape' => 'String', ], ], ], 'DeleteDhcpOptionsRequest' => [ 'type' => 'structure', 'required' => [ 'DhcpOptionsId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'DhcpOptionsId' => [ 'shape' => 'String', ], ], ], 'DeleteFlowLogsRequest' => [ 'type' => 'structure', 'required' => [ 'FlowLogIds', ], 'members' => [ 'FlowLogIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'FlowLogId', ], ], ], 'DeleteFlowLogsResult' => [ 'type' => 'structure', 'members' => [ 'Unsuccessful' => [ 'shape' => 'UnsuccessfulItemSet', 'locationName' => 'unsuccessful', ], ], ], 'DeleteInternetGatewayRequest' => [ 'type' => 'structure', 'required' => [ 'InternetGatewayId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InternetGatewayId' => [ 'shape' => 'String', 'locationName' => 'internetGatewayId', ], ], ], 'DeleteKeyPairRequest' => [ 'type' => 'structure', 'required' => [ 'KeyName', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'KeyName' => [ 'shape' => 'String', ], ], ], 'DeleteNatGatewayRequest' => [ 'type' => 'structure', 'required' => [ 'NatGatewayId', ], 'members' => [ 'NatGatewayId' => [ 'shape' => 'String', ], ], ], 'DeleteNatGatewayResult' => [ 'type' => 'structure', 'members' => [ 'NatGatewayId' => [ 'shape' => 'String', 'locationName' => 'natGatewayId', ], ], ], 'DeleteNetworkAclEntryRequest' => [ 'type' => 'structure', 'required' => [ 'NetworkAclId', 'RuleNumber', 'Egress', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'NetworkAclId' => [ 'shape' => 'String', 'locationName' => 'networkAclId', ], 'RuleNumber' => [ 'shape' => 'Integer', 'locationName' => 'ruleNumber', ], 'Egress' => [ 'shape' => 'Boolean', 'locationName' => 'egress', ], ], ], 'DeleteNetworkAclRequest' => [ 'type' => 'structure', 'required' => [ 'NetworkAclId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'NetworkAclId' => [ 'shape' => 'String', 'locationName' => 'networkAclId', ], ], ], 'DeleteNetworkInterfaceRequest' => [ 'type' => 'structure', 'required' => [ 'NetworkInterfaceId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], ], ], 'DeletePlacementGroupRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'GroupName' => [ 'shape' => 'String', 'locationName' => 'groupName', ], ], ], 'DeleteRouteRequest' => [ 'type' => 'structure', 'required' => [ 'RouteTableId', 'DestinationCidrBlock', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'RouteTableId' => [ 'shape' => 'String', 'locationName' => 'routeTableId', ], 'DestinationCidrBlock' => [ 'shape' => 'String', 'locationName' => 'destinationCidrBlock', ], ], ], 'DeleteRouteTableRequest' => [ 'type' => 'structure', 'required' => [ 'RouteTableId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'RouteTableId' => [ 'shape' => 'String', 'locationName' => 'routeTableId', ], ], ], 'DeleteSecurityGroupRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'GroupName' => [ 'shape' => 'String', ], 'GroupId' => [ 'shape' => 'String', ], ], ], 'DeleteSnapshotRequest' => [ 'type' => 'structure', 'required' => [ 'SnapshotId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SnapshotId' => [ 'shape' => 'String', ], ], ], 'DeleteSpotDatafeedSubscriptionRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], ], ], 'DeleteSubnetRequest' => [ 'type' => 'structure', 'required' => [ 'SubnetId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SubnetId' => [ 'shape' => 'String', ], ], ], 'DeleteTagsRequest' => [ 'type' => 'structure', 'required' => [ 'Resources', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'Resources' => [ 'shape' => 'ResourceIdList', 'locationName' => 'resourceId', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tag', ], ], ], 'DeleteVolumeRequest' => [ 'type' => 'structure', 'required' => [ 'VolumeId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VolumeId' => [ 'shape' => 'String', ], ], ], 'DeleteVpcEndpointsRequest' => [ 'type' => 'structure', 'required' => [ 'VpcEndpointIds', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'VpcEndpointIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'VpcEndpointId', ], ], ], 'DeleteVpcEndpointsResult' => [ 'type' => 'structure', 'members' => [ 'Unsuccessful' => [ 'shape' => 'UnsuccessfulItemSet', 'locationName' => 'unsuccessful', ], ], ], 'DeleteVpcPeeringConnectionRequest' => [ 'type' => 'structure', 'required' => [ 'VpcPeeringConnectionId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcPeeringConnectionId' => [ 'shape' => 'String', 'locationName' => 'vpcPeeringConnectionId', ], ], ], 'DeleteVpcPeeringConnectionResult' => [ 'type' => 'structure', 'members' => [ 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'DeleteVpcRequest' => [ 'type' => 'structure', 'required' => [ 'VpcId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcId' => [ 'shape' => 'String', ], ], ], 'DeleteVpnConnectionRequest' => [ 'type' => 'structure', 'required' => [ 'VpnConnectionId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpnConnectionId' => [ 'shape' => 'String', ], ], ], 'DeleteVpnConnectionRouteRequest' => [ 'type' => 'structure', 'required' => [ 'VpnConnectionId', 'DestinationCidrBlock', ], 'members' => [ 'VpnConnectionId' => [ 'shape' => 'String', ], 'DestinationCidrBlock' => [ 'shape' => 'String', ], ], ], 'DeleteVpnGatewayRequest' => [ 'type' => 'structure', 'required' => [ 'VpnGatewayId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpnGatewayId' => [ 'shape' => 'String', ], ], ], 'DeregisterImageRequest' => [ 'type' => 'structure', 'required' => [ 'ImageId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ImageId' => [ 'shape' => 'String', ], ], ], 'DescribeAccountAttributesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'AttributeNames' => [ 'shape' => 'AccountAttributeNameStringList', 'locationName' => 'attributeName', ], ], ], 'DescribeAccountAttributesResult' => [ 'type' => 'structure', 'members' => [ 'AccountAttributes' => [ 'shape' => 'AccountAttributeList', 'locationName' => 'accountAttributeSet', ], ], ], 'DescribeAddressesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'PublicIps' => [ 'shape' => 'PublicIpStringList', 'locationName' => 'PublicIp', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'AllocationIds' => [ 'shape' => 'AllocationIdList', 'locationName' => 'AllocationId', ], ], ], 'DescribeAddressesResult' => [ 'type' => 'structure', 'members' => [ 'Addresses' => [ 'shape' => 'AddressList', 'locationName' => 'addressesSet', ], ], ], 'DescribeAvailabilityZonesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ZoneNames' => [ 'shape' => 'ZoneNameStringList', 'locationName' => 'ZoneName', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeAvailabilityZonesResult' => [ 'type' => 'structure', 'members' => [ 'AvailabilityZones' => [ 'shape' => 'AvailabilityZoneList', 'locationName' => 'availabilityZoneInfo', ], ], ], 'DescribeBundleTasksRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'BundleIds' => [ 'shape' => 'BundleIdStringList', 'locationName' => 'BundleId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeBundleTasksResult' => [ 'type' => 'structure', 'members' => [ 'BundleTasks' => [ 'shape' => 'BundleTaskList', 'locationName' => 'bundleInstanceTasksSet', ], ], ], 'DescribeClassicLinkInstancesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceIds' => [ 'shape' => 'InstanceIdStringList', 'locationName' => 'InstanceId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], 'MaxResults' => [ 'shape' => 'Integer', 'locationName' => 'maxResults', ], ], ], 'DescribeClassicLinkInstancesResult' => [ 'type' => 'structure', 'members' => [ 'Instances' => [ 'shape' => 'ClassicLinkInstanceList', 'locationName' => 'instancesSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeConversionTaskList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ConversionTask', 'locationName' => 'item', ], ], 'DescribeConversionTasksRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'filter', ], 'ConversionTaskIds' => [ 'shape' => 'ConversionIdStringList', 'locationName' => 'conversionTaskId', ], ], ], 'DescribeConversionTasksResult' => [ 'type' => 'structure', 'members' => [ 'ConversionTasks' => [ 'shape' => 'DescribeConversionTaskList', 'locationName' => 'conversionTasks', ], ], ], 'DescribeCustomerGatewaysRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'CustomerGatewayIds' => [ 'shape' => 'CustomerGatewayIdStringList', 'locationName' => 'CustomerGatewayId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeCustomerGatewaysResult' => [ 'type' => 'structure', 'members' => [ 'CustomerGateways' => [ 'shape' => 'CustomerGatewayList', 'locationName' => 'customerGatewaySet', ], ], ], 'DescribeDhcpOptionsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'DhcpOptionsIds' => [ 'shape' => 'DhcpOptionsIdStringList', 'locationName' => 'DhcpOptionsId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeDhcpOptionsResult' => [ 'type' => 'structure', 'members' => [ 'DhcpOptions' => [ 'shape' => 'DhcpOptionsList', 'locationName' => 'dhcpOptionsSet', ], ], ], 'DescribeExportTasksRequest' => [ 'type' => 'structure', 'members' => [ 'ExportTaskIds' => [ 'shape' => 'ExportTaskIdStringList', 'locationName' => 'exportTaskId', ], ], ], 'DescribeExportTasksResult' => [ 'type' => 'structure', 'members' => [ 'ExportTasks' => [ 'shape' => 'ExportTaskList', 'locationName' => 'exportTaskSet', ], ], ], 'DescribeFlowLogsRequest' => [ 'type' => 'structure', 'members' => [ 'FlowLogIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'FlowLogId', ], 'Filter' => [ 'shape' => 'FilterList', ], 'NextToken' => [ 'shape' => 'String', ], 'MaxResults' => [ 'shape' => 'Integer', ], ], ], 'DescribeFlowLogsResult' => [ 'type' => 'structure', 'members' => [ 'FlowLogs' => [ 'shape' => 'FlowLogSet', 'locationName' => 'flowLogSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeHostsRequest' => [ 'type' => 'structure', 'members' => [ 'HostIds' => [ 'shape' => 'RequestHostIdList', 'locationName' => 'hostId', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], 'MaxResults' => [ 'shape' => 'Integer', 'locationName' => 'maxResults', ], 'Filter' => [ 'shape' => 'FilterList', 'locationName' => 'filter', ], ], ], 'DescribeHostsResult' => [ 'type' => 'structure', 'members' => [ 'Hosts' => [ 'shape' => 'HostList', 'locationName' => 'hostSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeIdFormatRequest' => [ 'type' => 'structure', 'members' => [ 'Resource' => [ 'shape' => 'String', ], ], ], 'DescribeIdFormatResult' => [ 'type' => 'structure', 'members' => [ 'Statuses' => [ 'shape' => 'IdFormatList', 'locationName' => 'statusSet', ], ], ], 'DescribeImageAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'ImageId', 'Attribute', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ImageId' => [ 'shape' => 'String', ], 'Attribute' => [ 'shape' => 'ImageAttributeName', ], ], ], 'DescribeImagesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ImageIds' => [ 'shape' => 'ImageIdStringList', 'locationName' => 'ImageId', ], 'Owners' => [ 'shape' => 'OwnerStringList', 'locationName' => 'Owner', ], 'ExecutableUsers' => [ 'shape' => 'ExecutableByStringList', 'locationName' => 'ExecutableBy', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeImagesResult' => [ 'type' => 'structure', 'members' => [ 'Images' => [ 'shape' => 'ImageList', 'locationName' => 'imagesSet', ], ], ], 'DescribeImportImageTasksRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'ImportTaskIds' => [ 'shape' => 'ImportTaskIdList', 'locationName' => 'ImportTaskId', ], 'NextToken' => [ 'shape' => 'String', ], 'MaxResults' => [ 'shape' => 'Integer', ], 'Filters' => [ 'shape' => 'FilterList', ], ], ], 'DescribeImportImageTasksResult' => [ 'type' => 'structure', 'members' => [ 'ImportImageTasks' => [ 'shape' => 'ImportImageTaskList', 'locationName' => 'importImageTaskSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeImportSnapshotTasksRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'ImportTaskIds' => [ 'shape' => 'ImportTaskIdList', 'locationName' => 'ImportTaskId', ], 'NextToken' => [ 'shape' => 'String', ], 'MaxResults' => [ 'shape' => 'Integer', ], 'Filters' => [ 'shape' => 'FilterList', ], ], ], 'DescribeImportSnapshotTasksResult' => [ 'type' => 'structure', 'members' => [ 'ImportSnapshotTasks' => [ 'shape' => 'ImportSnapshotTaskList', 'locationName' => 'importSnapshotTaskSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeInstanceAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', 'Attribute', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'Attribute' => [ 'shape' => 'InstanceAttributeName', 'locationName' => 'attribute', ], ], ], 'DescribeInstanceStatusRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceIds' => [ 'shape' => 'InstanceIdStringList', 'locationName' => 'InstanceId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'NextToken' => [ 'shape' => 'String', ], 'MaxResults' => [ 'shape' => 'Integer', ], 'IncludeAllInstances' => [ 'shape' => 'Boolean', 'locationName' => 'includeAllInstances', ], ], ], 'DescribeInstanceStatusResult' => [ 'type' => 'structure', 'members' => [ 'InstanceStatuses' => [ 'shape' => 'InstanceStatusList', 'locationName' => 'instanceStatusSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeInstancesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceIds' => [ 'shape' => 'InstanceIdStringList', 'locationName' => 'InstanceId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], 'MaxResults' => [ 'shape' => 'Integer', 'locationName' => 'maxResults', ], ], ], 'DescribeInstancesResult' => [ 'type' => 'structure', 'members' => [ 'Reservations' => [ 'shape' => 'ReservationList', 'locationName' => 'reservationSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeInternetGatewaysRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InternetGatewayIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'internetGatewayId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeInternetGatewaysResult' => [ 'type' => 'structure', 'members' => [ 'InternetGateways' => [ 'shape' => 'InternetGatewayList', 'locationName' => 'internetGatewaySet', ], ], ], 'DescribeKeyPairsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'KeyNames' => [ 'shape' => 'KeyNameStringList', 'locationName' => 'KeyName', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeKeyPairsResult' => [ 'type' => 'structure', 'members' => [ 'KeyPairs' => [ 'shape' => 'KeyPairList', 'locationName' => 'keySet', ], ], ], 'DescribeMovingAddressesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'PublicIps' => [ 'shape' => 'ValueStringList', 'locationName' => 'publicIp', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'filter', ], 'MaxResults' => [ 'shape' => 'Integer', 'locationName' => 'maxResults', ], ], ], 'DescribeMovingAddressesResult' => [ 'type' => 'structure', 'members' => [ 'MovingAddressStatuses' => [ 'shape' => 'MovingAddressStatusSet', 'locationName' => 'movingAddressStatusSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeNatGatewaysRequest' => [ 'type' => 'structure', 'members' => [ 'NatGatewayIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'NatGatewayId', ], 'Filter' => [ 'shape' => 'FilterList', ], 'MaxResults' => [ 'shape' => 'Integer', ], 'NextToken' => [ 'shape' => 'String', ], ], ], 'DescribeNatGatewaysResult' => [ 'type' => 'structure', 'members' => [ 'NatGateways' => [ 'shape' => 'NatGatewayList', 'locationName' => 'natGatewaySet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeNetworkAclsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'NetworkAclIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'NetworkAclId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeNetworkAclsResult' => [ 'type' => 'structure', 'members' => [ 'NetworkAcls' => [ 'shape' => 'NetworkAclList', 'locationName' => 'networkAclSet', ], ], ], 'DescribeNetworkInterfaceAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'NetworkInterfaceId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'Attribute' => [ 'shape' => 'NetworkInterfaceAttribute', 'locationName' => 'attribute', ], ], ], 'DescribeNetworkInterfaceAttributeResult' => [ 'type' => 'structure', 'members' => [ 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'Description' => [ 'shape' => 'AttributeValue', 'locationName' => 'description', ], 'SourceDestCheck' => [ 'shape' => 'AttributeBooleanValue', 'locationName' => 'sourceDestCheck', ], 'Groups' => [ 'shape' => 'GroupIdentifierList', 'locationName' => 'groupSet', ], 'Attachment' => [ 'shape' => 'NetworkInterfaceAttachment', 'locationName' => 'attachment', ], ], ], 'DescribeNetworkInterfacesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'NetworkInterfaceIds' => [ 'shape' => 'NetworkInterfaceIdList', 'locationName' => 'NetworkInterfaceId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'filter', ], ], ], 'DescribeNetworkInterfacesResult' => [ 'type' => 'structure', 'members' => [ 'NetworkInterfaces' => [ 'shape' => 'NetworkInterfaceList', 'locationName' => 'networkInterfaceSet', ], ], ], 'DescribePlacementGroupsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'GroupNames' => [ 'shape' => 'PlacementGroupStringList', 'locationName' => 'groupName', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribePlacementGroupsResult' => [ 'type' => 'structure', 'members' => [ 'PlacementGroups' => [ 'shape' => 'PlacementGroupList', 'locationName' => 'placementGroupSet', ], ], ], 'DescribePrefixListsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'PrefixListIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'PrefixListId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'MaxResults' => [ 'shape' => 'Integer', ], 'NextToken' => [ 'shape' => 'String', ], ], ], 'DescribePrefixListsResult' => [ 'type' => 'structure', 'members' => [ 'PrefixLists' => [ 'shape' => 'PrefixListSet', 'locationName' => 'prefixListSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeRegionsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'RegionNames' => [ 'shape' => 'RegionNameStringList', 'locationName' => 'RegionName', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeRegionsResult' => [ 'type' => 'structure', 'members' => [ 'Regions' => [ 'shape' => 'RegionList', 'locationName' => 'regionInfo', ], ], ], 'DescribeReservedInstancesListingsRequest' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesId', ], 'ReservedInstancesListingId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesListingId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'filters', ], ], ], 'DescribeReservedInstancesListingsResult' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesListings' => [ 'shape' => 'ReservedInstancesListingList', 'locationName' => 'reservedInstancesListingsSet', ], ], ], 'DescribeReservedInstancesModificationsRequest' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesModificationIds' => [ 'shape' => 'ReservedInstancesModificationIdStringList', 'locationName' => 'ReservedInstancesModificationId', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeReservedInstancesModificationsResult' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesModifications' => [ 'shape' => 'ReservedInstancesModificationList', 'locationName' => 'reservedInstancesModificationsSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeReservedInstancesOfferingsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ReservedInstancesOfferingIds' => [ 'shape' => 'ReservedInstancesOfferingIdStringList', 'locationName' => 'ReservedInstancesOfferingId', ], 'InstanceType' => [ 'shape' => 'InstanceType', ], 'AvailabilityZone' => [ 'shape' => 'String', ], 'ProductDescription' => [ 'shape' => 'RIProductDescription', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'InstanceTenancy' => [ 'shape' => 'Tenancy', 'locationName' => 'instanceTenancy', ], 'OfferingType' => [ 'shape' => 'OfferingTypeValues', 'locationName' => 'offeringType', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], 'MaxResults' => [ 'shape' => 'Integer', 'locationName' => 'maxResults', ], 'IncludeMarketplace' => [ 'shape' => 'Boolean', ], 'MinDuration' => [ 'shape' => 'Long', ], 'MaxDuration' => [ 'shape' => 'Long', ], 'MaxInstanceCount' => [ 'shape' => 'Integer', ], ], ], 'DescribeReservedInstancesOfferingsResult' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesOfferings' => [ 'shape' => 'ReservedInstancesOfferingList', 'locationName' => 'reservedInstancesOfferingsSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeReservedInstancesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ReservedInstancesIds' => [ 'shape' => 'ReservedInstancesIdStringList', 'locationName' => 'ReservedInstancesId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'OfferingType' => [ 'shape' => 'OfferingTypeValues', 'locationName' => 'offeringType', ], ], ], 'DescribeReservedInstancesResult' => [ 'type' => 'structure', 'members' => [ 'ReservedInstances' => [ 'shape' => 'ReservedInstancesList', 'locationName' => 'reservedInstancesSet', ], ], ], 'DescribeRouteTablesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'RouteTableIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'RouteTableId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeRouteTablesResult' => [ 'type' => 'structure', 'members' => [ 'RouteTables' => [ 'shape' => 'RouteTableList', 'locationName' => 'routeTableSet', ], ], ], 'DescribeScheduledInstanceAvailabilityRequest' => [ 'type' => 'structure', 'required' => [ 'Recurrence', 'FirstSlotStartTimeRange', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'Recurrence' => [ 'shape' => 'ScheduledInstanceRecurrenceRequest', ], 'FirstSlotStartTimeRange' => [ 'shape' => 'SlotDateTimeRangeRequest', ], 'MinSlotDurationInHours' => [ 'shape' => 'Integer', ], 'MaxSlotDurationInHours' => [ 'shape' => 'Integer', ], 'NextToken' => [ 'shape' => 'String', ], 'MaxResults' => [ 'shape' => 'Integer', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeScheduledInstanceAvailabilityResult' => [ 'type' => 'structure', 'members' => [ 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], 'ScheduledInstanceAvailabilitySet' => [ 'shape' => 'ScheduledInstanceAvailabilitySet', 'locationName' => 'scheduledInstanceAvailabilitySet', ], ], ], 'DescribeScheduledInstancesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'ScheduledInstanceIds' => [ 'shape' => 'ScheduledInstanceIdRequestSet', 'locationName' => 'ScheduledInstanceId', ], 'SlotStartTimeRange' => [ 'shape' => 'SlotStartTimeRangeRequest', ], 'NextToken' => [ 'shape' => 'String', ], 'MaxResults' => [ 'shape' => 'Integer', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeScheduledInstancesResult' => [ 'type' => 'structure', 'members' => [ 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], 'ScheduledInstanceSet' => [ 'shape' => 'ScheduledInstanceSet', 'locationName' => 'scheduledInstanceSet', ], ], ], 'DescribeSecurityGroupReferencesRequest' => [ 'type' => 'structure', 'required' => [ 'GroupId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'GroupId' => [ 'shape' => 'GroupIds', ], ], ], 'DescribeSecurityGroupReferencesResult' => [ 'type' => 'structure', 'members' => [ 'SecurityGroupReferenceSet' => [ 'shape' => 'SecurityGroupReferences', 'locationName' => 'securityGroupReferenceSet', ], ], ], 'DescribeSecurityGroupsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'GroupNames' => [ 'shape' => 'GroupNameStringList', 'locationName' => 'GroupName', ], 'GroupIds' => [ 'shape' => 'GroupIdStringList', 'locationName' => 'GroupId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeSecurityGroupsResult' => [ 'type' => 'structure', 'members' => [ 'SecurityGroups' => [ 'shape' => 'SecurityGroupList', 'locationName' => 'securityGroupInfo', ], ], ], 'DescribeSnapshotAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'SnapshotId', 'Attribute', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SnapshotId' => [ 'shape' => 'String', ], 'Attribute' => [ 'shape' => 'SnapshotAttributeName', ], ], ], 'DescribeSnapshotAttributeResult' => [ 'type' => 'structure', 'members' => [ 'SnapshotId' => [ 'shape' => 'String', 'locationName' => 'snapshotId', ], 'CreateVolumePermissions' => [ 'shape' => 'CreateVolumePermissionList', 'locationName' => 'createVolumePermission', ], 'ProductCodes' => [ 'shape' => 'ProductCodeList', 'locationName' => 'productCodes', ], ], ], 'DescribeSnapshotsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SnapshotIds' => [ 'shape' => 'SnapshotIdStringList', 'locationName' => 'SnapshotId', ], 'OwnerIds' => [ 'shape' => 'OwnerStringList', 'locationName' => 'Owner', ], 'RestorableByUserIds' => [ 'shape' => 'RestorableByStringList', 'locationName' => 'RestorableBy', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'NextToken' => [ 'shape' => 'String', ], 'MaxResults' => [ 'shape' => 'Integer', ], ], ], 'DescribeSnapshotsResult' => [ 'type' => 'structure', 'members' => [ 'Snapshots' => [ 'shape' => 'SnapshotList', 'locationName' => 'snapshotSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeSpotDatafeedSubscriptionRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], ], ], 'DescribeSpotDatafeedSubscriptionResult' => [ 'type' => 'structure', 'members' => [ 'SpotDatafeedSubscription' => [ 'shape' => 'SpotDatafeedSubscription', 'locationName' => 'spotDatafeedSubscription', ], ], ], 'DescribeSpotFleetInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'SpotFleetRequestId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SpotFleetRequestId' => [ 'shape' => 'String', 'locationName' => 'spotFleetRequestId', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], 'MaxResults' => [ 'shape' => 'Integer', 'locationName' => 'maxResults', ], ], ], 'DescribeSpotFleetInstancesResponse' => [ 'type' => 'structure', 'required' => [ 'SpotFleetRequestId', 'ActiveInstances', ], 'members' => [ 'SpotFleetRequestId' => [ 'shape' => 'String', 'locationName' => 'spotFleetRequestId', ], 'ActiveInstances' => [ 'shape' => 'ActiveInstanceSet', 'locationName' => 'activeInstanceSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeSpotFleetRequestHistoryRequest' => [ 'type' => 'structure', 'required' => [ 'SpotFleetRequestId', 'StartTime', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SpotFleetRequestId' => [ 'shape' => 'String', 'locationName' => 'spotFleetRequestId', ], 'EventType' => [ 'shape' => 'EventType', 'locationName' => 'eventType', ], 'StartTime' => [ 'shape' => 'DateTime', 'locationName' => 'startTime', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], 'MaxResults' => [ 'shape' => 'Integer', 'locationName' => 'maxResults', ], ], ], 'DescribeSpotFleetRequestHistoryResponse' => [ 'type' => 'structure', 'required' => [ 'SpotFleetRequestId', 'StartTime', 'LastEvaluatedTime', 'HistoryRecords', ], 'members' => [ 'SpotFleetRequestId' => [ 'shape' => 'String', 'locationName' => 'spotFleetRequestId', ], 'StartTime' => [ 'shape' => 'DateTime', 'locationName' => 'startTime', ], 'LastEvaluatedTime' => [ 'shape' => 'DateTime', 'locationName' => 'lastEvaluatedTime', ], 'HistoryRecords' => [ 'shape' => 'HistoryRecords', 'locationName' => 'historyRecordSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeSpotFleetRequestsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SpotFleetRequestIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'spotFleetRequestId', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], 'MaxResults' => [ 'shape' => 'Integer', 'locationName' => 'maxResults', ], ], ], 'DescribeSpotFleetRequestsResponse' => [ 'type' => 'structure', 'required' => [ 'SpotFleetRequestConfigs', ], 'members' => [ 'SpotFleetRequestConfigs' => [ 'shape' => 'SpotFleetRequestConfigSet', 'locationName' => 'spotFleetRequestConfigSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeSpotInstanceRequestsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SpotInstanceRequestIds' => [ 'shape' => 'SpotInstanceRequestIdList', 'locationName' => 'SpotInstanceRequestId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeSpotInstanceRequestsResult' => [ 'type' => 'structure', 'members' => [ 'SpotInstanceRequests' => [ 'shape' => 'SpotInstanceRequestList', 'locationName' => 'spotInstanceRequestSet', ], ], ], 'DescribeSpotPriceHistoryRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'StartTime' => [ 'shape' => 'DateTime', 'locationName' => 'startTime', ], 'EndTime' => [ 'shape' => 'DateTime', 'locationName' => 'endTime', ], 'InstanceTypes' => [ 'shape' => 'InstanceTypeList', 'locationName' => 'InstanceType', ], 'ProductDescriptions' => [ 'shape' => 'ProductDescriptionList', 'locationName' => 'ProductDescription', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'MaxResults' => [ 'shape' => 'Integer', 'locationName' => 'maxResults', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeSpotPriceHistoryResult' => [ 'type' => 'structure', 'members' => [ 'SpotPriceHistory' => [ 'shape' => 'SpotPriceHistoryList', 'locationName' => 'spotPriceHistorySet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeStaleSecurityGroupsRequest' => [ 'type' => 'structure', 'required' => [ 'VpcId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'VpcId' => [ 'shape' => 'String', ], 'MaxResults' => [ 'shape' => 'MaxResults', ], 'NextToken' => [ 'shape' => 'NextToken', ], ], ], 'DescribeStaleSecurityGroupsResult' => [ 'type' => 'structure', 'members' => [ 'StaleSecurityGroupSet' => [ 'shape' => 'StaleSecurityGroupSet', 'locationName' => 'staleSecurityGroupSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeSubnetsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SubnetIds' => [ 'shape' => 'SubnetIdStringList', 'locationName' => 'SubnetId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeSubnetsResult' => [ 'type' => 'structure', 'members' => [ 'Subnets' => [ 'shape' => 'SubnetList', 'locationName' => 'subnetSet', ], ], ], 'DescribeTagsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'MaxResults' => [ 'shape' => 'Integer', 'locationName' => 'maxResults', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeTagsResult' => [ 'type' => 'structure', 'members' => [ 'Tags' => [ 'shape' => 'TagDescriptionList', 'locationName' => 'tagSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeVolumeAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'VolumeId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VolumeId' => [ 'shape' => 'String', ], 'Attribute' => [ 'shape' => 'VolumeAttributeName', ], ], ], 'DescribeVolumeAttributeResult' => [ 'type' => 'structure', 'members' => [ 'VolumeId' => [ 'shape' => 'String', 'locationName' => 'volumeId', ], 'AutoEnableIO' => [ 'shape' => 'AttributeBooleanValue', 'locationName' => 'autoEnableIO', ], 'ProductCodes' => [ 'shape' => 'ProductCodeList', 'locationName' => 'productCodes', ], ], ], 'DescribeVolumeStatusRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VolumeIds' => [ 'shape' => 'VolumeIdStringList', 'locationName' => 'VolumeId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'NextToken' => [ 'shape' => 'String', ], 'MaxResults' => [ 'shape' => 'Integer', ], ], ], 'DescribeVolumeStatusResult' => [ 'type' => 'structure', 'members' => [ 'VolumeStatuses' => [ 'shape' => 'VolumeStatusList', 'locationName' => 'volumeStatusSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeVolumesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VolumeIds' => [ 'shape' => 'VolumeIdStringList', 'locationName' => 'VolumeId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], 'MaxResults' => [ 'shape' => 'Integer', 'locationName' => 'maxResults', ], ], ], 'DescribeVolumesResult' => [ 'type' => 'structure', 'members' => [ 'Volumes' => [ 'shape' => 'VolumeList', 'locationName' => 'volumeSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeVpcAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'VpcId', 'Attribute', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcId' => [ 'shape' => 'String', ], 'Attribute' => [ 'shape' => 'VpcAttributeName', ], ], ], 'DescribeVpcAttributeResult' => [ 'type' => 'structure', 'members' => [ 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'EnableDnsSupport' => [ 'shape' => 'AttributeBooleanValue', 'locationName' => 'enableDnsSupport', ], 'EnableDnsHostnames' => [ 'shape' => 'AttributeBooleanValue', 'locationName' => 'enableDnsHostnames', ], ], ], 'DescribeVpcClassicLinkDnsSupportRequest' => [ 'type' => 'structure', 'members' => [ 'VpcIds' => [ 'shape' => 'VpcClassicLinkIdList', ], 'MaxResults' => [ 'shape' => 'MaxResults', 'locationName' => 'maxResults', ], 'NextToken' => [ 'shape' => 'NextToken', 'locationName' => 'nextToken', ], ], ], 'DescribeVpcClassicLinkDnsSupportResult' => [ 'type' => 'structure', 'members' => [ 'Vpcs' => [ 'shape' => 'ClassicLinkDnsSupportList', 'locationName' => 'vpcs', ], 'NextToken' => [ 'shape' => 'NextToken', 'locationName' => 'nextToken', ], ], ], 'DescribeVpcClassicLinkRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcIds' => [ 'shape' => 'VpcClassicLinkIdList', 'locationName' => 'VpcId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeVpcClassicLinkResult' => [ 'type' => 'structure', 'members' => [ 'Vpcs' => [ 'shape' => 'VpcClassicLinkList', 'locationName' => 'vpcSet', ], ], ], 'DescribeVpcEndpointServicesRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'MaxResults' => [ 'shape' => 'Integer', ], 'NextToken' => [ 'shape' => 'String', ], ], ], 'DescribeVpcEndpointServicesResult' => [ 'type' => 'structure', 'members' => [ 'ServiceNames' => [ 'shape' => 'ValueStringList', 'locationName' => 'serviceNameSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeVpcEndpointsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'VpcEndpointIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'VpcEndpointId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], 'MaxResults' => [ 'shape' => 'Integer', ], 'NextToken' => [ 'shape' => 'String', ], ], ], 'DescribeVpcEndpointsResult' => [ 'type' => 'structure', 'members' => [ 'VpcEndpoints' => [ 'shape' => 'VpcEndpointSet', 'locationName' => 'vpcEndpointSet', ], 'NextToken' => [ 'shape' => 'String', 'locationName' => 'nextToken', ], ], ], 'DescribeVpcPeeringConnectionsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcPeeringConnectionIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'VpcPeeringConnectionId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeVpcPeeringConnectionsResult' => [ 'type' => 'structure', 'members' => [ 'VpcPeeringConnections' => [ 'shape' => 'VpcPeeringConnectionList', 'locationName' => 'vpcPeeringConnectionSet', ], ], ], 'DescribeVpcsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcIds' => [ 'shape' => 'VpcIdStringList', 'locationName' => 'VpcId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeVpcsResult' => [ 'type' => 'structure', 'members' => [ 'Vpcs' => [ 'shape' => 'VpcList', 'locationName' => 'vpcSet', ], ], ], 'DescribeVpnConnectionsRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpnConnectionIds' => [ 'shape' => 'VpnConnectionIdStringList', 'locationName' => 'VpnConnectionId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeVpnConnectionsResult' => [ 'type' => 'structure', 'members' => [ 'VpnConnections' => [ 'shape' => 'VpnConnectionList', 'locationName' => 'vpnConnectionSet', ], ], ], 'DescribeVpnGatewaysRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpnGatewayIds' => [ 'shape' => 'VpnGatewayIdStringList', 'locationName' => 'VpnGatewayId', ], 'Filters' => [ 'shape' => 'FilterList', 'locationName' => 'Filter', ], ], ], 'DescribeVpnGatewaysResult' => [ 'type' => 'structure', 'members' => [ 'VpnGateways' => [ 'shape' => 'VpnGatewayList', 'locationName' => 'vpnGatewaySet', ], ], ], 'DetachClassicLinkVpcRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', 'VpcId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], ], ], 'DetachClassicLinkVpcResult' => [ 'type' => 'structure', 'members' => [ 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'DetachInternetGatewayRequest' => [ 'type' => 'structure', 'required' => [ 'InternetGatewayId', 'VpcId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InternetGatewayId' => [ 'shape' => 'String', 'locationName' => 'internetGatewayId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], ], ], 'DetachNetworkInterfaceRequest' => [ 'type' => 'structure', 'required' => [ 'AttachmentId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'AttachmentId' => [ 'shape' => 'String', 'locationName' => 'attachmentId', ], 'Force' => [ 'shape' => 'Boolean', 'locationName' => 'force', ], ], ], 'DetachVolumeRequest' => [ 'type' => 'structure', 'required' => [ 'VolumeId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VolumeId' => [ 'shape' => 'String', ], 'InstanceId' => [ 'shape' => 'String', ], 'Device' => [ 'shape' => 'String', ], 'Force' => [ 'shape' => 'Boolean', ], ], ], 'DetachVpnGatewayRequest' => [ 'type' => 'structure', 'required' => [ 'VpnGatewayId', 'VpcId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpnGatewayId' => [ 'shape' => 'String', ], 'VpcId' => [ 'shape' => 'String', ], ], ], 'DeviceType' => [ 'type' => 'string', 'enum' => [ 'ebs', 'instance-store', ], ], 'DhcpConfiguration' => [ 'type' => 'structure', 'members' => [ 'Key' => [ 'shape' => 'String', 'locationName' => 'key', ], 'Values' => [ 'shape' => 'DhcpConfigurationValueList', 'locationName' => 'valueSet', ], ], ], 'DhcpConfigurationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DhcpConfiguration', 'locationName' => 'item', ], ], 'DhcpConfigurationValueList' => [ 'type' => 'list', 'member' => [ 'shape' => 'AttributeValue', 'locationName' => 'item', ], ], 'DhcpOptions' => [ 'type' => 'structure', 'members' => [ 'DhcpOptionsId' => [ 'shape' => 'String', 'locationName' => 'dhcpOptionsId', ], 'DhcpConfigurations' => [ 'shape' => 'DhcpConfigurationList', 'locationName' => 'dhcpConfigurationSet', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], ], ], 'DhcpOptionsIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'DhcpOptionsId', ], ], 'DhcpOptionsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DhcpOptions', 'locationName' => 'item', ], ], 'DisableVgwRoutePropagationRequest' => [ 'type' => 'structure', 'required' => [ 'RouteTableId', 'GatewayId', ], 'members' => [ 'RouteTableId' => [ 'shape' => 'String', ], 'GatewayId' => [ 'shape' => 'String', ], ], ], 'DisableVpcClassicLinkDnsSupportRequest' => [ 'type' => 'structure', 'members' => [ 'VpcId' => [ 'shape' => 'String', ], ], ], 'DisableVpcClassicLinkDnsSupportResult' => [ 'type' => 'structure', 'members' => [ 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'DisableVpcClassicLinkRequest' => [ 'type' => 'structure', 'required' => [ 'VpcId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], ], ], 'DisableVpcClassicLinkResult' => [ 'type' => 'structure', 'members' => [ 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'DisassociateAddressRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'PublicIp' => [ 'shape' => 'String', ], 'AssociationId' => [ 'shape' => 'String', ], ], ], 'DisassociateRouteTableRequest' => [ 'type' => 'structure', 'required' => [ 'AssociationId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'AssociationId' => [ 'shape' => 'String', 'locationName' => 'associationId', ], ], ], 'DiskImage' => [ 'type' => 'structure', 'members' => [ 'Image' => [ 'shape' => 'DiskImageDetail', ], 'Description' => [ 'shape' => 'String', ], 'Volume' => [ 'shape' => 'VolumeDetail', ], ], ], 'DiskImageDescription' => [ 'type' => 'structure', 'required' => [ 'Format', 'Size', 'ImportManifestUrl', ], 'members' => [ 'Format' => [ 'shape' => 'DiskImageFormat', 'locationName' => 'format', ], 'Size' => [ 'shape' => 'Long', 'locationName' => 'size', ], 'ImportManifestUrl' => [ 'shape' => 'String', 'locationName' => 'importManifestUrl', ], 'Checksum' => [ 'shape' => 'String', 'locationName' => 'checksum', ], ], ], 'DiskImageDetail' => [ 'type' => 'structure', 'required' => [ 'Format', 'Bytes', 'ImportManifestUrl', ], 'members' => [ 'Format' => [ 'shape' => 'DiskImageFormat', 'locationName' => 'format', ], 'Bytes' => [ 'shape' => 'Long', 'locationName' => 'bytes', ], 'ImportManifestUrl' => [ 'shape' => 'String', 'locationName' => 'importManifestUrl', ], ], ], 'DiskImageFormat' => [ 'type' => 'string', 'enum' => [ 'VMDK', 'RAW', 'VHD', ], ], 'DiskImageList' => [ 'type' => 'list', 'member' => [ 'shape' => 'DiskImage', ], ], 'DiskImageVolumeDescription' => [ 'type' => 'structure', 'required' => [ 'Id', ], 'members' => [ 'Size' => [ 'shape' => 'Long', 'locationName' => 'size', ], 'Id' => [ 'shape' => 'String', 'locationName' => 'id', ], ], ], 'DomainType' => [ 'type' => 'string', 'enum' => [ 'vpc', 'standard', ], ], 'Double' => [ 'type' => 'double', ], 'EbsBlockDevice' => [ 'type' => 'structure', 'members' => [ 'SnapshotId' => [ 'shape' => 'String', 'locationName' => 'snapshotId', ], 'VolumeSize' => [ 'shape' => 'Integer', 'locationName' => 'volumeSize', ], 'DeleteOnTermination' => [ 'shape' => 'Boolean', 'locationName' => 'deleteOnTermination', ], 'VolumeType' => [ 'shape' => 'VolumeType', 'locationName' => 'volumeType', ], 'Iops' => [ 'shape' => 'Integer', 'locationName' => 'iops', ], 'Encrypted' => [ 'shape' => 'Boolean', 'locationName' => 'encrypted', ], ], ], 'EbsInstanceBlockDevice' => [ 'type' => 'structure', 'members' => [ 'VolumeId' => [ 'shape' => 'String', 'locationName' => 'volumeId', ], 'Status' => [ 'shape' => 'AttachmentStatus', 'locationName' => 'status', ], 'AttachTime' => [ 'shape' => 'DateTime', 'locationName' => 'attachTime', ], 'DeleteOnTermination' => [ 'shape' => 'Boolean', 'locationName' => 'deleteOnTermination', ], ], ], 'EbsInstanceBlockDeviceSpecification' => [ 'type' => 'structure', 'members' => [ 'VolumeId' => [ 'shape' => 'String', 'locationName' => 'volumeId', ], 'DeleteOnTermination' => [ 'shape' => 'Boolean', 'locationName' => 'deleteOnTermination', ], ], ], 'EnableVgwRoutePropagationRequest' => [ 'type' => 'structure', 'required' => [ 'RouteTableId', 'GatewayId', ], 'members' => [ 'RouteTableId' => [ 'shape' => 'String', ], 'GatewayId' => [ 'shape' => 'String', ], ], ], 'EnableVolumeIORequest' => [ 'type' => 'structure', 'required' => [ 'VolumeId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VolumeId' => [ 'shape' => 'String', 'locationName' => 'volumeId', ], ], ], 'EnableVpcClassicLinkDnsSupportRequest' => [ 'type' => 'structure', 'members' => [ 'VpcId' => [ 'shape' => 'String', ], ], ], 'EnableVpcClassicLinkDnsSupportResult' => [ 'type' => 'structure', 'members' => [ 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'EnableVpcClassicLinkRequest' => [ 'type' => 'structure', 'required' => [ 'VpcId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], ], ], 'EnableVpcClassicLinkResult' => [ 'type' => 'structure', 'members' => [ 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'EventCode' => [ 'type' => 'string', 'enum' => [ 'instance-reboot', 'system-reboot', 'system-maintenance', 'instance-retirement', 'instance-stop', ], ], 'EventInformation' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'EventSubType' => [ 'shape' => 'String', 'locationName' => 'eventSubType', ], 'EventDescription' => [ 'shape' => 'String', 'locationName' => 'eventDescription', ], ], ], 'EventType' => [ 'type' => 'string', 'enum' => [ 'instanceChange', 'fleetRequestChange', 'error', ], ], 'ExcessCapacityTerminationPolicy' => [ 'type' => 'string', 'enum' => [ 'noTermination', 'default', ], ], 'ExecutableByStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'ExecutableBy', ], ], 'ExportEnvironment' => [ 'type' => 'string', 'enum' => [ 'citrix', 'vmware', 'microsoft', ], ], 'ExportTask' => [ 'type' => 'structure', 'members' => [ 'ExportTaskId' => [ 'shape' => 'String', 'locationName' => 'exportTaskId', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'State' => [ 'shape' => 'ExportTaskState', 'locationName' => 'state', ], 'StatusMessage' => [ 'shape' => 'String', 'locationName' => 'statusMessage', ], 'InstanceExportDetails' => [ 'shape' => 'InstanceExportDetails', 'locationName' => 'instanceExport', ], 'ExportToS3Task' => [ 'shape' => 'ExportToS3Task', 'locationName' => 'exportToS3', ], ], ], 'ExportTaskIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'ExportTaskId', ], ], 'ExportTaskList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ExportTask', 'locationName' => 'item', ], ], 'ExportTaskState' => [ 'type' => 'string', 'enum' => [ 'active', 'cancelling', 'cancelled', 'completed', ], ], 'ExportToS3Task' => [ 'type' => 'structure', 'members' => [ 'DiskImageFormat' => [ 'shape' => 'DiskImageFormat', 'locationName' => 'diskImageFormat', ], 'ContainerFormat' => [ 'shape' => 'ContainerFormat', 'locationName' => 'containerFormat', ], 'S3Bucket' => [ 'shape' => 'String', 'locationName' => 's3Bucket', ], 'S3Key' => [ 'shape' => 'String', 'locationName' => 's3Key', ], ], ], 'ExportToS3TaskSpecification' => [ 'type' => 'structure', 'members' => [ 'DiskImageFormat' => [ 'shape' => 'DiskImageFormat', 'locationName' => 'diskImageFormat', ], 'ContainerFormat' => [ 'shape' => 'ContainerFormat', 'locationName' => 'containerFormat', ], 'S3Bucket' => [ 'shape' => 'String', 'locationName' => 's3Bucket', ], 'S3Prefix' => [ 'shape' => 'String', 'locationName' => 's3Prefix', ], ], ], 'Filter' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'String', ], 'Values' => [ 'shape' => 'ValueStringList', 'locationName' => 'Value', ], ], ], 'FilterList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Filter', 'locationName' => 'Filter', ], ], 'Float' => [ 'type' => 'float', ], 'FlowLog' => [ 'type' => 'structure', 'members' => [ 'CreationTime' => [ 'shape' => 'DateTime', 'locationName' => 'creationTime', ], 'FlowLogId' => [ 'shape' => 'String', 'locationName' => 'flowLogId', ], 'FlowLogStatus' => [ 'shape' => 'String', 'locationName' => 'flowLogStatus', ], 'ResourceId' => [ 'shape' => 'String', 'locationName' => 'resourceId', ], 'TrafficType' => [ 'shape' => 'TrafficType', 'locationName' => 'trafficType', ], 'LogGroupName' => [ 'shape' => 'String', 'locationName' => 'logGroupName', ], 'DeliverLogsStatus' => [ 'shape' => 'String', 'locationName' => 'deliverLogsStatus', ], 'DeliverLogsErrorMessage' => [ 'shape' => 'String', 'locationName' => 'deliverLogsErrorMessage', ], 'DeliverLogsPermissionArn' => [ 'shape' => 'String', 'locationName' => 'deliverLogsPermissionArn', ], ], ], 'FlowLogSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'FlowLog', 'locationName' => 'item', ], ], 'FlowLogsResourceType' => [ 'type' => 'string', 'enum' => [ 'VPC', 'Subnet', 'NetworkInterface', ], ], 'GatewayType' => [ 'type' => 'string', 'enum' => [ 'ipsec.1', ], ], 'GetConsoleOutputRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceId' => [ 'shape' => 'String', ], ], ], 'GetConsoleOutputResult' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'Timestamp' => [ 'shape' => 'DateTime', 'locationName' => 'timestamp', ], 'Output' => [ 'shape' => 'String', 'locationName' => 'output', ], ], ], 'GetConsoleScreenshotRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'InstanceId' => [ 'shape' => 'String', ], 'WakeUp' => [ 'shape' => 'Boolean', ], ], ], 'GetConsoleScreenshotResult' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'ImageData' => [ 'shape' => 'String', 'locationName' => 'imageData', ], ], ], 'GetPasswordDataRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceId' => [ 'shape' => 'String', ], ], ], 'GetPasswordDataResult' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'Timestamp' => [ 'shape' => 'DateTime', 'locationName' => 'timestamp', ], 'PasswordData' => [ 'shape' => 'String', 'locationName' => 'passwordData', ], ], ], 'GroupIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'groupId', ], ], 'GroupIdentifier' => [ 'type' => 'structure', 'members' => [ 'GroupName' => [ 'shape' => 'String', 'locationName' => 'groupName', ], 'GroupId' => [ 'shape' => 'String', 'locationName' => 'groupId', ], ], ], 'GroupIdentifierList' => [ 'type' => 'list', 'member' => [ 'shape' => 'GroupIdentifier', 'locationName' => 'item', ], ], 'GroupIds' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'item', ], ], 'GroupNameStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'GroupName', ], ], 'HistoryRecord' => [ 'type' => 'structure', 'required' => [ 'Timestamp', 'EventType', 'EventInformation', ], 'members' => [ 'Timestamp' => [ 'shape' => 'DateTime', 'locationName' => 'timestamp', ], 'EventType' => [ 'shape' => 'EventType', 'locationName' => 'eventType', ], 'EventInformation' => [ 'shape' => 'EventInformation', 'locationName' => 'eventInformation', ], ], ], 'HistoryRecords' => [ 'type' => 'list', 'member' => [ 'shape' => 'HistoryRecord', 'locationName' => 'item', ], ], 'Host' => [ 'type' => 'structure', 'members' => [ 'HostId' => [ 'shape' => 'String', 'locationName' => 'hostId', ], 'AutoPlacement' => [ 'shape' => 'AutoPlacement', 'locationName' => 'autoPlacement', ], 'HostReservationId' => [ 'shape' => 'String', 'locationName' => 'hostReservationId', ], 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], 'HostProperties' => [ 'shape' => 'HostProperties', 'locationName' => 'hostProperties', ], 'State' => [ 'shape' => 'AllocationState', 'locationName' => 'state', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'Instances' => [ 'shape' => 'HostInstanceList', 'locationName' => 'instances', ], 'AvailableCapacity' => [ 'shape' => 'AvailableCapacity', 'locationName' => 'availableCapacity', ], ], ], 'HostInstance' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'InstanceType' => [ 'shape' => 'String', 'locationName' => 'instanceType', ], ], ], 'HostInstanceList' => [ 'type' => 'list', 'member' => [ 'shape' => 'HostInstance', 'locationName' => 'item', ], ], 'HostList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Host', 'locationName' => 'item', ], ], 'HostProperties' => [ 'type' => 'structure', 'members' => [ 'Sockets' => [ 'shape' => 'Integer', 'locationName' => 'sockets', ], 'Cores' => [ 'shape' => 'Integer', 'locationName' => 'cores', ], 'TotalVCpus' => [ 'shape' => 'Integer', 'locationName' => 'totalVCpus', ], 'InstanceType' => [ 'shape' => 'String', 'locationName' => 'instanceType', ], ], ], 'HostTenancy' => [ 'type' => 'string', 'enum' => [ 'dedicated', 'host', ], ], 'HypervisorType' => [ 'type' => 'string', 'enum' => [ 'ovm', 'xen', ], ], 'IamInstanceProfile' => [ 'type' => 'structure', 'members' => [ 'Arn' => [ 'shape' => 'String', 'locationName' => 'arn', ], 'Id' => [ 'shape' => 'String', 'locationName' => 'id', ], ], ], 'IamInstanceProfileSpecification' => [ 'type' => 'structure', 'members' => [ 'Arn' => [ 'shape' => 'String', 'locationName' => 'arn', ], 'Name' => [ 'shape' => 'String', 'locationName' => 'name', ], ], ], 'IcmpTypeCode' => [ 'type' => 'structure', 'members' => [ 'Type' => [ 'shape' => 'Integer', 'locationName' => 'type', ], 'Code' => [ 'shape' => 'Integer', 'locationName' => 'code', ], ], ], 'IdFormat' => [ 'type' => 'structure', 'members' => [ 'Resource' => [ 'shape' => 'String', 'locationName' => 'resource', ], 'UseLongIds' => [ 'shape' => 'Boolean', 'locationName' => 'useLongIds', ], 'Deadline' => [ 'shape' => 'DateTime', 'locationName' => 'deadline', ], ], ], 'IdFormatList' => [ 'type' => 'list', 'member' => [ 'shape' => 'IdFormat', 'locationName' => 'item', ], ], 'Image' => [ 'type' => 'structure', 'members' => [ 'ImageId' => [ 'shape' => 'String', 'locationName' => 'imageId', ], 'ImageLocation' => [ 'shape' => 'String', 'locationName' => 'imageLocation', ], 'State' => [ 'shape' => 'ImageState', 'locationName' => 'imageState', ], 'OwnerId' => [ 'shape' => 'String', 'locationName' => 'imageOwnerId', ], 'CreationDate' => [ 'shape' => 'String', 'locationName' => 'creationDate', ], 'Public' => [ 'shape' => 'Boolean', 'locationName' => 'isPublic', ], 'ProductCodes' => [ 'shape' => 'ProductCodeList', 'locationName' => 'productCodes', ], 'Architecture' => [ 'shape' => 'ArchitectureValues', 'locationName' => 'architecture', ], 'ImageType' => [ 'shape' => 'ImageTypeValues', 'locationName' => 'imageType', ], 'KernelId' => [ 'shape' => 'String', 'locationName' => 'kernelId', ], 'RamdiskId' => [ 'shape' => 'String', 'locationName' => 'ramdiskId', ], 'Platform' => [ 'shape' => 'PlatformValues', 'locationName' => 'platform', ], 'SriovNetSupport' => [ 'shape' => 'String', 'locationName' => 'sriovNetSupport', ], 'StateReason' => [ 'shape' => 'StateReason', 'locationName' => 'stateReason', ], 'ImageOwnerAlias' => [ 'shape' => 'String', 'locationName' => 'imageOwnerAlias', ], 'Name' => [ 'shape' => 'String', 'locationName' => 'name', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'RootDeviceType' => [ 'shape' => 'DeviceType', 'locationName' => 'rootDeviceType', ], 'RootDeviceName' => [ 'shape' => 'String', 'locationName' => 'rootDeviceName', ], 'BlockDeviceMappings' => [ 'shape' => 'BlockDeviceMappingList', 'locationName' => 'blockDeviceMapping', ], 'VirtualizationType' => [ 'shape' => 'VirtualizationType', 'locationName' => 'virtualizationType', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], 'Hypervisor' => [ 'shape' => 'HypervisorType', 'locationName' => 'hypervisor', ], ], ], 'ImageAttribute' => [ 'type' => 'structure', 'members' => [ 'ImageId' => [ 'shape' => 'String', 'locationName' => 'imageId', ], 'LaunchPermissions' => [ 'shape' => 'LaunchPermissionList', 'locationName' => 'launchPermission', ], 'ProductCodes' => [ 'shape' => 'ProductCodeList', 'locationName' => 'productCodes', ], 'KernelId' => [ 'shape' => 'AttributeValue', 'locationName' => 'kernel', ], 'RamdiskId' => [ 'shape' => 'AttributeValue', 'locationName' => 'ramdisk', ], 'Description' => [ 'shape' => 'AttributeValue', 'locationName' => 'description', ], 'SriovNetSupport' => [ 'shape' => 'AttributeValue', 'locationName' => 'sriovNetSupport', ], 'BlockDeviceMappings' => [ 'shape' => 'BlockDeviceMappingList', 'locationName' => 'blockDeviceMapping', ], ], ], 'ImageAttributeName' => [ 'type' => 'string', 'enum' => [ 'description', 'kernel', 'ramdisk', 'launchPermission', 'productCodes', 'blockDeviceMapping', 'sriovNetSupport', ], ], 'ImageDiskContainer' => [ 'type' => 'structure', 'members' => [ 'Description' => [ 'shape' => 'String', ], 'Format' => [ 'shape' => 'String', ], 'Url' => [ 'shape' => 'String', ], 'UserBucket' => [ 'shape' => 'UserBucket', ], 'DeviceName' => [ 'shape' => 'String', ], 'SnapshotId' => [ 'shape' => 'String', ], ], ], 'ImageDiskContainerList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ImageDiskContainer', 'locationName' => 'item', ], ], 'ImageIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'ImageId', ], ], 'ImageList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Image', 'locationName' => 'item', ], ], 'ImageState' => [ 'type' => 'string', 'enum' => [ 'pending', 'available', 'invalid', 'deregistered', 'transient', 'failed', 'error', ], ], 'ImageTypeValues' => [ 'type' => 'string', 'enum' => [ 'machine', 'kernel', 'ramdisk', ], ], 'ImportImageRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'Description' => [ 'shape' => 'String', ], 'DiskContainers' => [ 'shape' => 'ImageDiskContainerList', 'locationName' => 'DiskContainer', ], 'LicenseType' => [ 'shape' => 'String', ], 'Hypervisor' => [ 'shape' => 'String', ], 'Architecture' => [ 'shape' => 'String', ], 'Platform' => [ 'shape' => 'String', ], 'ClientData' => [ 'shape' => 'ClientData', ], 'ClientToken' => [ 'shape' => 'String', ], 'RoleName' => [ 'shape' => 'String', ], ], ], 'ImportImageResult' => [ 'type' => 'structure', 'members' => [ 'ImportTaskId' => [ 'shape' => 'String', 'locationName' => 'importTaskId', ], 'Architecture' => [ 'shape' => 'String', 'locationName' => 'architecture', ], 'LicenseType' => [ 'shape' => 'String', 'locationName' => 'licenseType', ], 'Platform' => [ 'shape' => 'String', 'locationName' => 'platform', ], 'Hypervisor' => [ 'shape' => 'String', 'locationName' => 'hypervisor', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'SnapshotDetails' => [ 'shape' => 'SnapshotDetailList', 'locationName' => 'snapshotDetailSet', ], 'ImageId' => [ 'shape' => 'String', 'locationName' => 'imageId', ], 'Progress' => [ 'shape' => 'String', 'locationName' => 'progress', ], 'StatusMessage' => [ 'shape' => 'String', 'locationName' => 'statusMessage', ], 'Status' => [ 'shape' => 'String', 'locationName' => 'status', ], ], ], 'ImportImageTask' => [ 'type' => 'structure', 'members' => [ 'ImportTaskId' => [ 'shape' => 'String', 'locationName' => 'importTaskId', ], 'Architecture' => [ 'shape' => 'String', 'locationName' => 'architecture', ], 'LicenseType' => [ 'shape' => 'String', 'locationName' => 'licenseType', ], 'Platform' => [ 'shape' => 'String', 'locationName' => 'platform', ], 'Hypervisor' => [ 'shape' => 'String', 'locationName' => 'hypervisor', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'SnapshotDetails' => [ 'shape' => 'SnapshotDetailList', 'locationName' => 'snapshotDetailSet', ], 'ImageId' => [ 'shape' => 'String', 'locationName' => 'imageId', ], 'Progress' => [ 'shape' => 'String', 'locationName' => 'progress', ], 'StatusMessage' => [ 'shape' => 'String', 'locationName' => 'statusMessage', ], 'Status' => [ 'shape' => 'String', 'locationName' => 'status', ], ], ], 'ImportImageTaskList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ImportImageTask', 'locationName' => 'item', ], ], 'ImportInstanceLaunchSpecification' => [ 'type' => 'structure', 'members' => [ 'Architecture' => [ 'shape' => 'ArchitectureValues', 'locationName' => 'architecture', ], 'GroupNames' => [ 'shape' => 'SecurityGroupStringList', 'locationName' => 'GroupName', ], 'GroupIds' => [ 'shape' => 'SecurityGroupIdStringList', 'locationName' => 'GroupId', ], 'AdditionalInfo' => [ 'shape' => 'String', 'locationName' => 'additionalInfo', ], 'UserData' => [ 'shape' => 'UserData', 'locationName' => 'userData', ], 'InstanceType' => [ 'shape' => 'InstanceType', 'locationName' => 'instanceType', ], 'Placement' => [ 'shape' => 'Placement', 'locationName' => 'placement', ], 'Monitoring' => [ 'shape' => 'Boolean', 'locationName' => 'monitoring', ], 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'InstanceInitiatedShutdownBehavior' => [ 'shape' => 'ShutdownBehavior', 'locationName' => 'instanceInitiatedShutdownBehavior', ], 'PrivateIpAddress' => [ 'shape' => 'String', 'locationName' => 'privateIpAddress', ], ], ], 'ImportInstanceRequest' => [ 'type' => 'structure', 'required' => [ 'Platform', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'LaunchSpecification' => [ 'shape' => 'ImportInstanceLaunchSpecification', 'locationName' => 'launchSpecification', ], 'DiskImages' => [ 'shape' => 'DiskImageList', 'locationName' => 'diskImage', ], 'Platform' => [ 'shape' => 'PlatformValues', 'locationName' => 'platform', ], ], ], 'ImportInstanceResult' => [ 'type' => 'structure', 'members' => [ 'ConversionTask' => [ 'shape' => 'ConversionTask', 'locationName' => 'conversionTask', ], ], ], 'ImportInstanceTaskDetails' => [ 'type' => 'structure', 'required' => [ 'Volumes', ], 'members' => [ 'Volumes' => [ 'shape' => 'ImportInstanceVolumeDetailSet', 'locationName' => 'volumes', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'Platform' => [ 'shape' => 'PlatformValues', 'locationName' => 'platform', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], ], ], 'ImportInstanceVolumeDetailItem' => [ 'type' => 'structure', 'required' => [ 'BytesConverted', 'AvailabilityZone', 'Image', 'Volume', 'Status', ], 'members' => [ 'BytesConverted' => [ 'shape' => 'Long', 'locationName' => 'bytesConverted', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'Image' => [ 'shape' => 'DiskImageDescription', 'locationName' => 'image', ], 'Volume' => [ 'shape' => 'DiskImageVolumeDescription', 'locationName' => 'volume', ], 'Status' => [ 'shape' => 'String', 'locationName' => 'status', ], 'StatusMessage' => [ 'shape' => 'String', 'locationName' => 'statusMessage', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], ], ], 'ImportInstanceVolumeDetailSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'ImportInstanceVolumeDetailItem', 'locationName' => 'item', ], ], 'ImportKeyPairRequest' => [ 'type' => 'structure', 'required' => [ 'KeyName', 'PublicKeyMaterial', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'KeyName' => [ 'shape' => 'String', 'locationName' => 'keyName', ], 'PublicKeyMaterial' => [ 'shape' => 'Blob', 'locationName' => 'publicKeyMaterial', ], ], ], 'ImportKeyPairResult' => [ 'type' => 'structure', 'members' => [ 'KeyName' => [ 'shape' => 'String', 'locationName' => 'keyName', ], 'KeyFingerprint' => [ 'shape' => 'String', 'locationName' => 'keyFingerprint', ], ], ], 'ImportSnapshotRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'Description' => [ 'shape' => 'String', ], 'DiskContainer' => [ 'shape' => 'SnapshotDiskContainer', ], 'ClientData' => [ 'shape' => 'ClientData', ], 'ClientToken' => [ 'shape' => 'String', ], 'RoleName' => [ 'shape' => 'String', ], ], ], 'ImportSnapshotResult' => [ 'type' => 'structure', 'members' => [ 'ImportTaskId' => [ 'shape' => 'String', 'locationName' => 'importTaskId', ], 'SnapshotTaskDetail' => [ 'shape' => 'SnapshotTaskDetail', 'locationName' => 'snapshotTaskDetail', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], ], ], 'ImportSnapshotTask' => [ 'type' => 'structure', 'members' => [ 'ImportTaskId' => [ 'shape' => 'String', 'locationName' => 'importTaskId', ], 'SnapshotTaskDetail' => [ 'shape' => 'SnapshotTaskDetail', 'locationName' => 'snapshotTaskDetail', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], ], ], 'ImportSnapshotTaskList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ImportSnapshotTask', 'locationName' => 'item', ], ], 'ImportTaskIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'ImportTaskId', ], ], 'ImportVolumeRequest' => [ 'type' => 'structure', 'required' => [ 'AvailabilityZone', 'Image', 'Volume', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'Image' => [ 'shape' => 'DiskImageDetail', 'locationName' => 'image', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'Volume' => [ 'shape' => 'VolumeDetail', 'locationName' => 'volume', ], ], ], 'ImportVolumeResult' => [ 'type' => 'structure', 'members' => [ 'ConversionTask' => [ 'shape' => 'ConversionTask', 'locationName' => 'conversionTask', ], ], ], 'ImportVolumeTaskDetails' => [ 'type' => 'structure', 'required' => [ 'BytesConverted', 'AvailabilityZone', 'Image', 'Volume', ], 'members' => [ 'BytesConverted' => [ 'shape' => 'Long', 'locationName' => 'bytesConverted', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'Image' => [ 'shape' => 'DiskImageDescription', 'locationName' => 'image', ], 'Volume' => [ 'shape' => 'DiskImageVolumeDescription', 'locationName' => 'volume', ], ], ], 'Instance' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'ImageId' => [ 'shape' => 'String', 'locationName' => 'imageId', ], 'State' => [ 'shape' => 'InstanceState', 'locationName' => 'instanceState', ], 'PrivateDnsName' => [ 'shape' => 'String', 'locationName' => 'privateDnsName', ], 'PublicDnsName' => [ 'shape' => 'String', 'locationName' => 'dnsName', ], 'StateTransitionReason' => [ 'shape' => 'String', 'locationName' => 'reason', ], 'KeyName' => [ 'shape' => 'String', 'locationName' => 'keyName', ], 'AmiLaunchIndex' => [ 'shape' => 'Integer', 'locationName' => 'amiLaunchIndex', ], 'ProductCodes' => [ 'shape' => 'ProductCodeList', 'locationName' => 'productCodes', ], 'InstanceType' => [ 'shape' => 'InstanceType', 'locationName' => 'instanceType', ], 'LaunchTime' => [ 'shape' => 'DateTime', 'locationName' => 'launchTime', ], 'Placement' => [ 'shape' => 'Placement', 'locationName' => 'placement', ], 'KernelId' => [ 'shape' => 'String', 'locationName' => 'kernelId', ], 'RamdiskId' => [ 'shape' => 'String', 'locationName' => 'ramdiskId', ], 'Platform' => [ 'shape' => 'PlatformValues', 'locationName' => 'platform', ], 'Monitoring' => [ 'shape' => 'Monitoring', 'locationName' => 'monitoring', ], 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'PrivateIpAddress' => [ 'shape' => 'String', 'locationName' => 'privateIpAddress', ], 'PublicIpAddress' => [ 'shape' => 'String', 'locationName' => 'ipAddress', ], 'StateReason' => [ 'shape' => 'StateReason', 'locationName' => 'stateReason', ], 'Architecture' => [ 'shape' => 'ArchitectureValues', 'locationName' => 'architecture', ], 'RootDeviceType' => [ 'shape' => 'DeviceType', 'locationName' => 'rootDeviceType', ], 'RootDeviceName' => [ 'shape' => 'String', 'locationName' => 'rootDeviceName', ], 'BlockDeviceMappings' => [ 'shape' => 'InstanceBlockDeviceMappingList', 'locationName' => 'blockDeviceMapping', ], 'VirtualizationType' => [ 'shape' => 'VirtualizationType', 'locationName' => 'virtualizationType', ], 'InstanceLifecycle' => [ 'shape' => 'InstanceLifecycleType', 'locationName' => 'instanceLifecycle', ], 'SpotInstanceRequestId' => [ 'shape' => 'String', 'locationName' => 'spotInstanceRequestId', ], 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], 'SecurityGroups' => [ 'shape' => 'GroupIdentifierList', 'locationName' => 'groupSet', ], 'SourceDestCheck' => [ 'shape' => 'Boolean', 'locationName' => 'sourceDestCheck', ], 'Hypervisor' => [ 'shape' => 'HypervisorType', 'locationName' => 'hypervisor', ], 'NetworkInterfaces' => [ 'shape' => 'InstanceNetworkInterfaceList', 'locationName' => 'networkInterfaceSet', ], 'IamInstanceProfile' => [ 'shape' => 'IamInstanceProfile', 'locationName' => 'iamInstanceProfile', ], 'EbsOptimized' => [ 'shape' => 'Boolean', 'locationName' => 'ebsOptimized', ], 'SriovNetSupport' => [ 'shape' => 'String', 'locationName' => 'sriovNetSupport', ], ], ], 'InstanceAttribute' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'InstanceType' => [ 'shape' => 'AttributeValue', 'locationName' => 'instanceType', ], 'KernelId' => [ 'shape' => 'AttributeValue', 'locationName' => 'kernel', ], 'RamdiskId' => [ 'shape' => 'AttributeValue', 'locationName' => 'ramdisk', ], 'UserData' => [ 'shape' => 'AttributeValue', 'locationName' => 'userData', ], 'DisableApiTermination' => [ 'shape' => 'AttributeBooleanValue', 'locationName' => 'disableApiTermination', ], 'InstanceInitiatedShutdownBehavior' => [ 'shape' => 'AttributeValue', 'locationName' => 'instanceInitiatedShutdownBehavior', ], 'RootDeviceName' => [ 'shape' => 'AttributeValue', 'locationName' => 'rootDeviceName', ], 'BlockDeviceMappings' => [ 'shape' => 'InstanceBlockDeviceMappingList', 'locationName' => 'blockDeviceMapping', ], 'ProductCodes' => [ 'shape' => 'ProductCodeList', 'locationName' => 'productCodes', ], 'EbsOptimized' => [ 'shape' => 'AttributeBooleanValue', 'locationName' => 'ebsOptimized', ], 'SriovNetSupport' => [ 'shape' => 'AttributeValue', 'locationName' => 'sriovNetSupport', ], 'SourceDestCheck' => [ 'shape' => 'AttributeBooleanValue', 'locationName' => 'sourceDestCheck', ], 'Groups' => [ 'shape' => 'GroupIdentifierList', 'locationName' => 'groupSet', ], ], ], 'InstanceAttributeName' => [ 'type' => 'string', 'enum' => [ 'instanceType', 'kernel', 'ramdisk', 'userData', 'disableApiTermination', 'instanceInitiatedShutdownBehavior', 'rootDeviceName', 'blockDeviceMapping', 'productCodes', 'sourceDestCheck', 'groupSet', 'ebsOptimized', 'sriovNetSupport', ], ], 'InstanceBlockDeviceMapping' => [ 'type' => 'structure', 'members' => [ 'DeviceName' => [ 'shape' => 'String', 'locationName' => 'deviceName', ], 'Ebs' => [ 'shape' => 'EbsInstanceBlockDevice', 'locationName' => 'ebs', ], ], ], 'InstanceBlockDeviceMappingList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceBlockDeviceMapping', 'locationName' => 'item', ], ], 'InstanceBlockDeviceMappingSpecification' => [ 'type' => 'structure', 'members' => [ 'DeviceName' => [ 'shape' => 'String', 'locationName' => 'deviceName', ], 'Ebs' => [ 'shape' => 'EbsInstanceBlockDeviceSpecification', 'locationName' => 'ebs', ], 'VirtualName' => [ 'shape' => 'String', 'locationName' => 'virtualName', ], 'NoDevice' => [ 'shape' => 'String', 'locationName' => 'noDevice', ], ], ], 'InstanceBlockDeviceMappingSpecificationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceBlockDeviceMappingSpecification', 'locationName' => 'item', ], ], 'InstanceCapacity' => [ 'type' => 'structure', 'members' => [ 'InstanceType' => [ 'shape' => 'String', 'locationName' => 'instanceType', ], 'AvailableCapacity' => [ 'shape' => 'Integer', 'locationName' => 'availableCapacity', ], 'TotalCapacity' => [ 'shape' => 'Integer', 'locationName' => 'totalCapacity', ], ], ], 'InstanceCount' => [ 'type' => 'structure', 'members' => [ 'State' => [ 'shape' => 'ListingState', 'locationName' => 'state', ], 'InstanceCount' => [ 'shape' => 'Integer', 'locationName' => 'instanceCount', ], ], ], 'InstanceCountList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceCount', 'locationName' => 'item', ], ], 'InstanceExportDetails' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'TargetEnvironment' => [ 'shape' => 'ExportEnvironment', 'locationName' => 'targetEnvironment', ], ], ], 'InstanceIdSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'item', ], ], 'InstanceIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'InstanceId', ], ], 'InstanceLifecycleType' => [ 'type' => 'string', 'enum' => [ 'spot', 'scheduled', ], ], 'InstanceList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Instance', 'locationName' => 'item', ], ], 'InstanceMonitoring' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'Monitoring' => [ 'shape' => 'Monitoring', 'locationName' => 'monitoring', ], ], ], 'InstanceMonitoringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceMonitoring', 'locationName' => 'item', ], ], 'InstanceNetworkInterface' => [ 'type' => 'structure', 'members' => [ 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'OwnerId' => [ 'shape' => 'String', 'locationName' => 'ownerId', ], 'Status' => [ 'shape' => 'NetworkInterfaceStatus', 'locationName' => 'status', ], 'MacAddress' => [ 'shape' => 'String', 'locationName' => 'macAddress', ], 'PrivateIpAddress' => [ 'shape' => 'String', 'locationName' => 'privateIpAddress', ], 'PrivateDnsName' => [ 'shape' => 'String', 'locationName' => 'privateDnsName', ], 'SourceDestCheck' => [ 'shape' => 'Boolean', 'locationName' => 'sourceDestCheck', ], 'Groups' => [ 'shape' => 'GroupIdentifierList', 'locationName' => 'groupSet', ], 'Attachment' => [ 'shape' => 'InstanceNetworkInterfaceAttachment', 'locationName' => 'attachment', ], 'Association' => [ 'shape' => 'InstanceNetworkInterfaceAssociation', 'locationName' => 'association', ], 'PrivateIpAddresses' => [ 'shape' => 'InstancePrivateIpAddressList', 'locationName' => 'privateIpAddressesSet', ], ], ], 'InstanceNetworkInterfaceAssociation' => [ 'type' => 'structure', 'members' => [ 'PublicIp' => [ 'shape' => 'String', 'locationName' => 'publicIp', ], 'PublicDnsName' => [ 'shape' => 'String', 'locationName' => 'publicDnsName', ], 'IpOwnerId' => [ 'shape' => 'String', 'locationName' => 'ipOwnerId', ], ], ], 'InstanceNetworkInterfaceAttachment' => [ 'type' => 'structure', 'members' => [ 'AttachmentId' => [ 'shape' => 'String', 'locationName' => 'attachmentId', ], 'DeviceIndex' => [ 'shape' => 'Integer', 'locationName' => 'deviceIndex', ], 'Status' => [ 'shape' => 'AttachmentStatus', 'locationName' => 'status', ], 'AttachTime' => [ 'shape' => 'DateTime', 'locationName' => 'attachTime', ], 'DeleteOnTermination' => [ 'shape' => 'Boolean', 'locationName' => 'deleteOnTermination', ], ], ], 'InstanceNetworkInterfaceList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceNetworkInterface', 'locationName' => 'item', ], ], 'InstanceNetworkInterfaceSpecification' => [ 'type' => 'structure', 'members' => [ 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'DeviceIndex' => [ 'shape' => 'Integer', 'locationName' => 'deviceIndex', ], 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'PrivateIpAddress' => [ 'shape' => 'String', 'locationName' => 'privateIpAddress', ], 'Groups' => [ 'shape' => 'SecurityGroupIdStringList', 'locationName' => 'SecurityGroupId', ], 'DeleteOnTermination' => [ 'shape' => 'Boolean', 'locationName' => 'deleteOnTermination', ], 'PrivateIpAddresses' => [ 'shape' => 'PrivateIpAddressSpecificationList', 'locationName' => 'privateIpAddressesSet', 'queryName' => 'PrivateIpAddresses', ], 'SecondaryPrivateIpAddressCount' => [ 'shape' => 'Integer', 'locationName' => 'secondaryPrivateIpAddressCount', ], 'AssociatePublicIpAddress' => [ 'shape' => 'Boolean', 'locationName' => 'associatePublicIpAddress', ], ], ], 'InstanceNetworkInterfaceSpecificationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceNetworkInterfaceSpecification', 'locationName' => 'item', ], ], 'InstancePrivateIpAddress' => [ 'type' => 'structure', 'members' => [ 'PrivateIpAddress' => [ 'shape' => 'String', 'locationName' => 'privateIpAddress', ], 'PrivateDnsName' => [ 'shape' => 'String', 'locationName' => 'privateDnsName', ], 'Primary' => [ 'shape' => 'Boolean', 'locationName' => 'primary', ], 'Association' => [ 'shape' => 'InstanceNetworkInterfaceAssociation', 'locationName' => 'association', ], ], ], 'InstancePrivateIpAddressList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstancePrivateIpAddress', 'locationName' => 'item', ], ], 'InstanceState' => [ 'type' => 'structure', 'members' => [ 'Code' => [ 'shape' => 'Integer', 'locationName' => 'code', ], 'Name' => [ 'shape' => 'InstanceStateName', 'locationName' => 'name', ], ], ], 'InstanceStateChange' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'CurrentState' => [ 'shape' => 'InstanceState', 'locationName' => 'currentState', ], 'PreviousState' => [ 'shape' => 'InstanceState', 'locationName' => 'previousState', ], ], ], 'InstanceStateChangeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceStateChange', 'locationName' => 'item', ], ], 'InstanceStateName' => [ 'type' => 'string', 'enum' => [ 'pending', 'running', 'shutting-down', 'terminated', 'stopping', 'stopped', ], ], 'InstanceStatus' => [ 'type' => 'structure', 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'Events' => [ 'shape' => 'InstanceStatusEventList', 'locationName' => 'eventsSet', ], 'InstanceState' => [ 'shape' => 'InstanceState', 'locationName' => 'instanceState', ], 'SystemStatus' => [ 'shape' => 'InstanceStatusSummary', 'locationName' => 'systemStatus', ], 'InstanceStatus' => [ 'shape' => 'InstanceStatusSummary', 'locationName' => 'instanceStatus', ], ], ], 'InstanceStatusDetails' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'StatusName', 'locationName' => 'name', ], 'Status' => [ 'shape' => 'StatusType', 'locationName' => 'status', ], 'ImpairedSince' => [ 'shape' => 'DateTime', 'locationName' => 'impairedSince', ], ], ], 'InstanceStatusDetailsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceStatusDetails', 'locationName' => 'item', ], ], 'InstanceStatusEvent' => [ 'type' => 'structure', 'members' => [ 'Code' => [ 'shape' => 'EventCode', 'locationName' => 'code', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'NotBefore' => [ 'shape' => 'DateTime', 'locationName' => 'notBefore', ], 'NotAfter' => [ 'shape' => 'DateTime', 'locationName' => 'notAfter', ], ], ], 'InstanceStatusEventList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceStatusEvent', 'locationName' => 'item', ], ], 'InstanceStatusList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceStatus', 'locationName' => 'item', ], ], 'InstanceStatusSummary' => [ 'type' => 'structure', 'members' => [ 'Status' => [ 'shape' => 'SummaryStatus', 'locationName' => 'status', ], 'Details' => [ 'shape' => 'InstanceStatusDetailsList', 'locationName' => 'details', ], ], ], 'InstanceType' => [ 'type' => 'string', 'enum' => [ 't1.micro', 'm1.small', 'm1.medium', 'm1.large', 'm1.xlarge', 'm3.medium', 'm3.large', 'm3.xlarge', 'm3.2xlarge', 'm4.large', 'm4.xlarge', 'm4.2xlarge', 'm4.4xlarge', 'm4.10xlarge', 't2.nano', 't2.micro', 't2.small', 't2.medium', 't2.large', 'm2.xlarge', 'm2.2xlarge', 'm2.4xlarge', 'cr1.8xlarge', 'x1.4xlarge', 'x1.8xlarge', 'x1.16xlarge', 'x1.32xlarge', 'i2.xlarge', 'i2.2xlarge', 'i2.4xlarge', 'i2.8xlarge', 'hi1.4xlarge', 'hs1.8xlarge', 'c1.medium', 'c1.xlarge', 'c3.large', 'c3.xlarge', 'c3.2xlarge', 'c3.4xlarge', 'c3.8xlarge', 'c4.large', 'c4.xlarge', 'c4.2xlarge', 'c4.4xlarge', 'c4.8xlarge', 'cc1.4xlarge', 'cc2.8xlarge', 'g2.2xlarge', 'g2.8xlarge', 'cg1.4xlarge', 'r3.large', 'r3.xlarge', 'r3.2xlarge', 'r3.4xlarge', 'r3.8xlarge', 'd2.xlarge', 'd2.2xlarge', 'd2.4xlarge', 'd2.8xlarge', ], ], 'InstanceTypeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InstanceType', ], ], 'Integer' => [ 'type' => 'integer', ], 'InternetGateway' => [ 'type' => 'structure', 'members' => [ 'InternetGatewayId' => [ 'shape' => 'String', 'locationName' => 'internetGatewayId', ], 'Attachments' => [ 'shape' => 'InternetGatewayAttachmentList', 'locationName' => 'attachmentSet', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], ], ], 'InternetGatewayAttachment' => [ 'type' => 'structure', 'members' => [ 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'State' => [ 'shape' => 'AttachmentStatus', 'locationName' => 'state', ], ], ], 'InternetGatewayAttachmentList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InternetGatewayAttachment', 'locationName' => 'item', ], ], 'InternetGatewayList' => [ 'type' => 'list', 'member' => [ 'shape' => 'InternetGateway', 'locationName' => 'item', ], ], 'IpPermission' => [ 'type' => 'structure', 'members' => [ 'IpProtocol' => [ 'shape' => 'String', 'locationName' => 'ipProtocol', ], 'FromPort' => [ 'shape' => 'Integer', 'locationName' => 'fromPort', ], 'ToPort' => [ 'shape' => 'Integer', 'locationName' => 'toPort', ], 'UserIdGroupPairs' => [ 'shape' => 'UserIdGroupPairList', 'locationName' => 'groups', ], 'IpRanges' => [ 'shape' => 'IpRangeList', 'locationName' => 'ipRanges', ], 'PrefixListIds' => [ 'shape' => 'PrefixListIdList', 'locationName' => 'prefixListIds', ], ], ], 'IpPermissionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'IpPermission', 'locationName' => 'item', ], ], 'IpRange' => [ 'type' => 'structure', 'members' => [ 'CidrIp' => [ 'shape' => 'String', 'locationName' => 'cidrIp', ], ], ], 'IpRangeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'IpRange', 'locationName' => 'item', ], ], 'IpRanges' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'item', ], ], 'KeyNameStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'KeyName', ], ], 'KeyPair' => [ 'type' => 'structure', 'members' => [ 'KeyName' => [ 'shape' => 'String', 'locationName' => 'keyName', ], 'KeyFingerprint' => [ 'shape' => 'String', 'locationName' => 'keyFingerprint', ], 'KeyMaterial' => [ 'shape' => 'String', 'locationName' => 'keyMaterial', ], ], ], 'KeyPairInfo' => [ 'type' => 'structure', 'members' => [ 'KeyName' => [ 'shape' => 'String', 'locationName' => 'keyName', ], 'KeyFingerprint' => [ 'shape' => 'String', 'locationName' => 'keyFingerprint', ], ], ], 'KeyPairList' => [ 'type' => 'list', 'member' => [ 'shape' => 'KeyPairInfo', 'locationName' => 'item', ], ], 'LaunchPermission' => [ 'type' => 'structure', 'members' => [ 'UserId' => [ 'shape' => 'String', 'locationName' => 'userId', ], 'Group' => [ 'shape' => 'PermissionGroup', 'locationName' => 'group', ], ], ], 'LaunchPermissionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'LaunchPermission', 'locationName' => 'item', ], ], 'LaunchPermissionModifications' => [ 'type' => 'structure', 'members' => [ 'Add' => [ 'shape' => 'LaunchPermissionList', ], 'Remove' => [ 'shape' => 'LaunchPermissionList', ], ], ], 'LaunchSpecification' => [ 'type' => 'structure', 'members' => [ 'ImageId' => [ 'shape' => 'String', 'locationName' => 'imageId', ], 'KeyName' => [ 'shape' => 'String', 'locationName' => 'keyName', ], 'SecurityGroups' => [ 'shape' => 'GroupIdentifierList', 'locationName' => 'groupSet', ], 'UserData' => [ 'shape' => 'String', 'locationName' => 'userData', ], 'AddressingType' => [ 'shape' => 'String', 'locationName' => 'addressingType', ], 'InstanceType' => [ 'shape' => 'InstanceType', 'locationName' => 'instanceType', ], 'Placement' => [ 'shape' => 'SpotPlacement', 'locationName' => 'placement', ], 'KernelId' => [ 'shape' => 'String', 'locationName' => 'kernelId', ], 'RamdiskId' => [ 'shape' => 'String', 'locationName' => 'ramdiskId', ], 'BlockDeviceMappings' => [ 'shape' => 'BlockDeviceMappingList', 'locationName' => 'blockDeviceMapping', ], 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'NetworkInterfaces' => [ 'shape' => 'InstanceNetworkInterfaceSpecificationList', 'locationName' => 'networkInterfaceSet', ], 'IamInstanceProfile' => [ 'shape' => 'IamInstanceProfileSpecification', 'locationName' => 'iamInstanceProfile', ], 'EbsOptimized' => [ 'shape' => 'Boolean', 'locationName' => 'ebsOptimized', ], 'Monitoring' => [ 'shape' => 'RunInstancesMonitoringEnabled', 'locationName' => 'monitoring', ], ], ], 'LaunchSpecsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'SpotFleetLaunchSpecification', 'locationName' => 'item', ], 'min' => 1, ], 'ListingState' => [ 'type' => 'string', 'enum' => [ 'available', 'sold', 'cancelled', 'pending', ], ], 'ListingStatus' => [ 'type' => 'string', 'enum' => [ 'active', 'pending', 'cancelled', 'closed', ], ], 'Long' => [ 'type' => 'long', ], 'MaxResults' => [ 'type' => 'integer', 'max' => 255, 'min' => 5, ], 'ModifyHostsRequest' => [ 'type' => 'structure', 'required' => [ 'HostIds', 'AutoPlacement', ], 'members' => [ 'HostIds' => [ 'shape' => 'RequestHostIdList', 'locationName' => 'hostId', ], 'AutoPlacement' => [ 'shape' => 'AutoPlacement', 'locationName' => 'autoPlacement', ], ], ], 'ModifyHostsResult' => [ 'type' => 'structure', 'members' => [ 'Successful' => [ 'shape' => 'ResponseHostIdList', 'locationName' => 'successful', ], 'Unsuccessful' => [ 'shape' => 'UnsuccessfulItemList', 'locationName' => 'unsuccessful', ], ], ], 'ModifyIdFormatRequest' => [ 'type' => 'structure', 'required' => [ 'Resource', 'UseLongIds', ], 'members' => [ 'Resource' => [ 'shape' => 'String', ], 'UseLongIds' => [ 'shape' => 'Boolean', ], ], ], 'ModifyImageAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'ImageId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ImageId' => [ 'shape' => 'String', ], 'Attribute' => [ 'shape' => 'String', ], 'OperationType' => [ 'shape' => 'OperationType', ], 'UserIds' => [ 'shape' => 'UserIdStringList', 'locationName' => 'UserId', ], 'UserGroups' => [ 'shape' => 'UserGroupStringList', 'locationName' => 'UserGroup', ], 'ProductCodes' => [ 'shape' => 'ProductCodeStringList', 'locationName' => 'ProductCode', ], 'Value' => [ 'shape' => 'String', ], 'LaunchPermission' => [ 'shape' => 'LaunchPermissionModifications', ], 'Description' => [ 'shape' => 'AttributeValue', ], ], ], 'ModifyInstanceAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'Attribute' => [ 'shape' => 'InstanceAttributeName', 'locationName' => 'attribute', ], 'Value' => [ 'shape' => 'String', 'locationName' => 'value', ], 'BlockDeviceMappings' => [ 'shape' => 'InstanceBlockDeviceMappingSpecificationList', 'locationName' => 'blockDeviceMapping', ], 'SourceDestCheck' => [ 'shape' => 'AttributeBooleanValue', ], 'DisableApiTermination' => [ 'shape' => 'AttributeBooleanValue', 'locationName' => 'disableApiTermination', ], 'InstanceType' => [ 'shape' => 'AttributeValue', 'locationName' => 'instanceType', ], 'Kernel' => [ 'shape' => 'AttributeValue', 'locationName' => 'kernel', ], 'Ramdisk' => [ 'shape' => 'AttributeValue', 'locationName' => 'ramdisk', ], 'UserData' => [ 'shape' => 'BlobAttributeValue', 'locationName' => 'userData', ], 'InstanceInitiatedShutdownBehavior' => [ 'shape' => 'AttributeValue', 'locationName' => 'instanceInitiatedShutdownBehavior', ], 'Groups' => [ 'shape' => 'GroupIdStringList', 'locationName' => 'GroupId', ], 'EbsOptimized' => [ 'shape' => 'AttributeBooleanValue', 'locationName' => 'ebsOptimized', ], 'SriovNetSupport' => [ 'shape' => 'AttributeValue', 'locationName' => 'sriovNetSupport', ], ], ], 'ModifyInstancePlacementRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', ], 'members' => [ 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'Tenancy' => [ 'shape' => 'HostTenancy', 'locationName' => 'tenancy', ], 'Affinity' => [ 'shape' => 'Affinity', 'locationName' => 'affinity', ], 'HostId' => [ 'shape' => 'String', 'locationName' => 'hostId', ], ], ], 'ModifyInstancePlacementResult' => [ 'type' => 'structure', 'members' => [ 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'ModifyNetworkInterfaceAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'NetworkInterfaceId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'Description' => [ 'shape' => 'AttributeValue', 'locationName' => 'description', ], 'SourceDestCheck' => [ 'shape' => 'AttributeBooleanValue', 'locationName' => 'sourceDestCheck', ], 'Groups' => [ 'shape' => 'SecurityGroupIdStringList', 'locationName' => 'SecurityGroupId', ], 'Attachment' => [ 'shape' => 'NetworkInterfaceAttachmentChanges', 'locationName' => 'attachment', ], ], ], 'ModifyReservedInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'ReservedInstancesIds', 'TargetConfigurations', ], 'members' => [ 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], 'ReservedInstancesIds' => [ 'shape' => 'ReservedInstancesIdStringList', 'locationName' => 'ReservedInstancesId', ], 'TargetConfigurations' => [ 'shape' => 'ReservedInstancesConfigurationList', 'locationName' => 'ReservedInstancesConfigurationSetItemType', ], ], ], 'ModifyReservedInstancesResult' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesModificationId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesModificationId', ], ], ], 'ModifySnapshotAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'SnapshotId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SnapshotId' => [ 'shape' => 'String', ], 'Attribute' => [ 'shape' => 'SnapshotAttributeName', ], 'OperationType' => [ 'shape' => 'OperationType', ], 'UserIds' => [ 'shape' => 'UserIdStringList', 'locationName' => 'UserId', ], 'GroupNames' => [ 'shape' => 'GroupNameStringList', 'locationName' => 'UserGroup', ], 'CreateVolumePermission' => [ 'shape' => 'CreateVolumePermissionModifications', ], ], ], 'ModifySpotFleetRequestRequest' => [ 'type' => 'structure', 'required' => [ 'SpotFleetRequestId', ], 'members' => [ 'SpotFleetRequestId' => [ 'shape' => 'String', 'locationName' => 'spotFleetRequestId', ], 'TargetCapacity' => [ 'shape' => 'Integer', 'locationName' => 'targetCapacity', ], 'ExcessCapacityTerminationPolicy' => [ 'shape' => 'ExcessCapacityTerminationPolicy', 'locationName' => 'excessCapacityTerminationPolicy', ], ], ], 'ModifySpotFleetRequestResponse' => [ 'type' => 'structure', 'members' => [ 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'ModifySubnetAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'SubnetId', ], 'members' => [ 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'MapPublicIpOnLaunch' => [ 'shape' => 'AttributeBooleanValue', ], ], ], 'ModifyVolumeAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'VolumeId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VolumeId' => [ 'shape' => 'String', ], 'AutoEnableIO' => [ 'shape' => 'AttributeBooleanValue', ], ], ], 'ModifyVpcAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'VpcId', ], 'members' => [ 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'EnableDnsSupport' => [ 'shape' => 'AttributeBooleanValue', ], 'EnableDnsHostnames' => [ 'shape' => 'AttributeBooleanValue', ], ], ], 'ModifyVpcEndpointRequest' => [ 'type' => 'structure', 'required' => [ 'VpcEndpointId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'VpcEndpointId' => [ 'shape' => 'String', ], 'ResetPolicy' => [ 'shape' => 'Boolean', ], 'PolicyDocument' => [ 'shape' => 'String', ], 'AddRouteTableIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'AddRouteTableId', ], 'RemoveRouteTableIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'RemoveRouteTableId', ], ], ], 'ModifyVpcEndpointResult' => [ 'type' => 'structure', 'members' => [ 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'ModifyVpcPeeringConnectionOptionsRequest' => [ 'type' => 'structure', 'required' => [ 'VpcPeeringConnectionId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'VpcPeeringConnectionId' => [ 'shape' => 'String', ], 'RequesterPeeringConnectionOptions' => [ 'shape' => 'PeeringConnectionOptionsRequest', ], 'AccepterPeeringConnectionOptions' => [ 'shape' => 'PeeringConnectionOptionsRequest', ], ], ], 'ModifyVpcPeeringConnectionOptionsResult' => [ 'type' => 'structure', 'members' => [ 'RequesterPeeringConnectionOptions' => [ 'shape' => 'PeeringConnectionOptions', 'locationName' => 'requesterPeeringConnectionOptions', ], 'AccepterPeeringConnectionOptions' => [ 'shape' => 'PeeringConnectionOptions', 'locationName' => 'accepterPeeringConnectionOptions', ], ], ], 'MonitorInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceIds', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceIds' => [ 'shape' => 'InstanceIdStringList', 'locationName' => 'InstanceId', ], ], ], 'MonitorInstancesResult' => [ 'type' => 'structure', 'members' => [ 'InstanceMonitorings' => [ 'shape' => 'InstanceMonitoringList', 'locationName' => 'instancesSet', ], ], ], 'Monitoring' => [ 'type' => 'structure', 'members' => [ 'State' => [ 'shape' => 'MonitoringState', 'locationName' => 'state', ], ], ], 'MonitoringState' => [ 'type' => 'string', 'enum' => [ 'disabled', 'disabling', 'enabled', 'pending', ], ], 'MoveAddressToVpcRequest' => [ 'type' => 'structure', 'required' => [ 'PublicIp', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'PublicIp' => [ 'shape' => 'String', 'locationName' => 'publicIp', ], ], ], 'MoveAddressToVpcResult' => [ 'type' => 'structure', 'members' => [ 'AllocationId' => [ 'shape' => 'String', 'locationName' => 'allocationId', ], 'Status' => [ 'shape' => 'Status', 'locationName' => 'status', ], ], ], 'MoveStatus' => [ 'type' => 'string', 'enum' => [ 'movingToVpc', 'restoringToClassic', ], ], 'MovingAddressStatus' => [ 'type' => 'structure', 'members' => [ 'PublicIp' => [ 'shape' => 'String', 'locationName' => 'publicIp', ], 'MoveStatus' => [ 'shape' => 'MoveStatus', 'locationName' => 'moveStatus', ], ], ], 'MovingAddressStatusSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'MovingAddressStatus', 'locationName' => 'item', ], ], 'NatGateway' => [ 'type' => 'structure', 'members' => [ 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'NatGatewayId' => [ 'shape' => 'String', 'locationName' => 'natGatewayId', ], 'CreateTime' => [ 'shape' => 'DateTime', 'locationName' => 'createTime', ], 'DeleteTime' => [ 'shape' => 'DateTime', 'locationName' => 'deleteTime', ], 'NatGatewayAddresses' => [ 'shape' => 'NatGatewayAddressList', 'locationName' => 'natGatewayAddressSet', ], 'State' => [ 'shape' => 'NatGatewayState', 'locationName' => 'state', ], 'FailureCode' => [ 'shape' => 'String', 'locationName' => 'failureCode', ], 'FailureMessage' => [ 'shape' => 'String', 'locationName' => 'failureMessage', ], 'ProvisionedBandwidth' => [ 'shape' => 'ProvisionedBandwidth', 'locationName' => 'provisionedBandwidth', ], ], ], 'NatGatewayAddress' => [ 'type' => 'structure', 'members' => [ 'PublicIp' => [ 'shape' => 'String', 'locationName' => 'publicIp', ], 'AllocationId' => [ 'shape' => 'String', 'locationName' => 'allocationId', ], 'PrivateIp' => [ 'shape' => 'String', 'locationName' => 'privateIp', ], 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], ], ], 'NatGatewayAddressList' => [ 'type' => 'list', 'member' => [ 'shape' => 'NatGatewayAddress', 'locationName' => 'item', ], ], 'NatGatewayList' => [ 'type' => 'list', 'member' => [ 'shape' => 'NatGateway', 'locationName' => 'item', ], ], 'NatGatewayState' => [ 'type' => 'string', 'enum' => [ 'pending', 'failed', 'available', 'deleting', 'deleted', ], ], 'NetworkAcl' => [ 'type' => 'structure', 'members' => [ 'NetworkAclId' => [ 'shape' => 'String', 'locationName' => 'networkAclId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'IsDefault' => [ 'shape' => 'Boolean', 'locationName' => 'default', ], 'Entries' => [ 'shape' => 'NetworkAclEntryList', 'locationName' => 'entrySet', ], 'Associations' => [ 'shape' => 'NetworkAclAssociationList', 'locationName' => 'associationSet', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], ], ], 'NetworkAclAssociation' => [ 'type' => 'structure', 'members' => [ 'NetworkAclAssociationId' => [ 'shape' => 'String', 'locationName' => 'networkAclAssociationId', ], 'NetworkAclId' => [ 'shape' => 'String', 'locationName' => 'networkAclId', ], 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], ], ], 'NetworkAclAssociationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'NetworkAclAssociation', 'locationName' => 'item', ], ], 'NetworkAclEntry' => [ 'type' => 'structure', 'members' => [ 'RuleNumber' => [ 'shape' => 'Integer', 'locationName' => 'ruleNumber', ], 'Protocol' => [ 'shape' => 'String', 'locationName' => 'protocol', ], 'RuleAction' => [ 'shape' => 'RuleAction', 'locationName' => 'ruleAction', ], 'Egress' => [ 'shape' => 'Boolean', 'locationName' => 'egress', ], 'CidrBlock' => [ 'shape' => 'String', 'locationName' => 'cidrBlock', ], 'IcmpTypeCode' => [ 'shape' => 'IcmpTypeCode', 'locationName' => 'icmpTypeCode', ], 'PortRange' => [ 'shape' => 'PortRange', 'locationName' => 'portRange', ], ], ], 'NetworkAclEntryList' => [ 'type' => 'list', 'member' => [ 'shape' => 'NetworkAclEntry', 'locationName' => 'item', ], ], 'NetworkAclList' => [ 'type' => 'list', 'member' => [ 'shape' => 'NetworkAcl', 'locationName' => 'item', ], ], 'NetworkInterface' => [ 'type' => 'structure', 'members' => [ 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'OwnerId' => [ 'shape' => 'String', 'locationName' => 'ownerId', ], 'RequesterId' => [ 'shape' => 'String', 'locationName' => 'requesterId', ], 'RequesterManaged' => [ 'shape' => 'Boolean', 'locationName' => 'requesterManaged', ], 'Status' => [ 'shape' => 'NetworkInterfaceStatus', 'locationName' => 'status', ], 'MacAddress' => [ 'shape' => 'String', 'locationName' => 'macAddress', ], 'PrivateIpAddress' => [ 'shape' => 'String', 'locationName' => 'privateIpAddress', ], 'PrivateDnsName' => [ 'shape' => 'String', 'locationName' => 'privateDnsName', ], 'SourceDestCheck' => [ 'shape' => 'Boolean', 'locationName' => 'sourceDestCheck', ], 'Groups' => [ 'shape' => 'GroupIdentifierList', 'locationName' => 'groupSet', ], 'Attachment' => [ 'shape' => 'NetworkInterfaceAttachment', 'locationName' => 'attachment', ], 'Association' => [ 'shape' => 'NetworkInterfaceAssociation', 'locationName' => 'association', ], 'TagSet' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], 'PrivateIpAddresses' => [ 'shape' => 'NetworkInterfacePrivateIpAddressList', 'locationName' => 'privateIpAddressesSet', ], 'InterfaceType' => [ 'shape' => 'NetworkInterfaceType', 'locationName' => 'interfaceType', ], ], ], 'NetworkInterfaceAssociation' => [ 'type' => 'structure', 'members' => [ 'PublicIp' => [ 'shape' => 'String', 'locationName' => 'publicIp', ], 'PublicDnsName' => [ 'shape' => 'String', 'locationName' => 'publicDnsName', ], 'IpOwnerId' => [ 'shape' => 'String', 'locationName' => 'ipOwnerId', ], 'AllocationId' => [ 'shape' => 'String', 'locationName' => 'allocationId', ], 'AssociationId' => [ 'shape' => 'String', 'locationName' => 'associationId', ], ], ], 'NetworkInterfaceAttachment' => [ 'type' => 'structure', 'members' => [ 'AttachmentId' => [ 'shape' => 'String', 'locationName' => 'attachmentId', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'InstanceOwnerId' => [ 'shape' => 'String', 'locationName' => 'instanceOwnerId', ], 'DeviceIndex' => [ 'shape' => 'Integer', 'locationName' => 'deviceIndex', ], 'Status' => [ 'shape' => 'AttachmentStatus', 'locationName' => 'status', ], 'AttachTime' => [ 'shape' => 'DateTime', 'locationName' => 'attachTime', ], 'DeleteOnTermination' => [ 'shape' => 'Boolean', 'locationName' => 'deleteOnTermination', ], ], ], 'NetworkInterfaceAttachmentChanges' => [ 'type' => 'structure', 'members' => [ 'AttachmentId' => [ 'shape' => 'String', 'locationName' => 'attachmentId', ], 'DeleteOnTermination' => [ 'shape' => 'Boolean', 'locationName' => 'deleteOnTermination', ], ], ], 'NetworkInterfaceAttribute' => [ 'type' => 'string', 'enum' => [ 'description', 'groupSet', 'sourceDestCheck', 'attachment', ], ], 'NetworkInterfaceIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'item', ], ], 'NetworkInterfaceList' => [ 'type' => 'list', 'member' => [ 'shape' => 'NetworkInterface', 'locationName' => 'item', ], ], 'NetworkInterfacePrivateIpAddress' => [ 'type' => 'structure', 'members' => [ 'PrivateIpAddress' => [ 'shape' => 'String', 'locationName' => 'privateIpAddress', ], 'PrivateDnsName' => [ 'shape' => 'String', 'locationName' => 'privateDnsName', ], 'Primary' => [ 'shape' => 'Boolean', 'locationName' => 'primary', ], 'Association' => [ 'shape' => 'NetworkInterfaceAssociation', 'locationName' => 'association', ], ], ], 'NetworkInterfacePrivateIpAddressList' => [ 'type' => 'list', 'member' => [ 'shape' => 'NetworkInterfacePrivateIpAddress', 'locationName' => 'item', ], ], 'NetworkInterfaceStatus' => [ 'type' => 'string', 'enum' => [ 'available', 'attaching', 'in-use', 'detaching', ], ], 'NetworkInterfaceType' => [ 'type' => 'string', 'enum' => [ 'interface', 'natGateway', ], ], 'NewDhcpConfiguration' => [ 'type' => 'structure', 'members' => [ 'Key' => [ 'shape' => 'String', 'locationName' => 'key', ], 'Values' => [ 'shape' => 'ValueStringList', 'locationName' => 'Value', ], ], ], 'NewDhcpConfigurationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'NewDhcpConfiguration', 'locationName' => 'item', ], ], 'NextToken' => [ 'type' => 'string', 'max' => 1024, 'min' => 1, ], 'OccurrenceDayRequestSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'Integer', 'locationName' => 'OccurenceDay', ], ], 'OccurrenceDaySet' => [ 'type' => 'list', 'member' => [ 'shape' => 'Integer', 'locationName' => 'item', ], ], 'OfferingTypeValues' => [ 'type' => 'string', 'enum' => [ 'Heavy Utilization', 'Medium Utilization', 'Light Utilization', 'No Upfront', 'Partial Upfront', 'All Upfront', ], ], 'OperationType' => [ 'type' => 'string', 'enum' => [ 'add', 'remove', ], ], 'OwnerStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'Owner', ], ], 'PeeringConnectionOptions' => [ 'type' => 'structure', 'members' => [ 'AllowEgressFromLocalClassicLinkToRemoteVpc' => [ 'shape' => 'Boolean', 'locationName' => 'allowEgressFromLocalClassicLinkToRemoteVpc', ], 'AllowEgressFromLocalVpcToRemoteClassicLink' => [ 'shape' => 'Boolean', 'locationName' => 'allowEgressFromLocalVpcToRemoteClassicLink', ], ], ], 'PeeringConnectionOptionsRequest' => [ 'type' => 'structure', 'required' => [ 'AllowEgressFromLocalClassicLinkToRemoteVpc', 'AllowEgressFromLocalVpcToRemoteClassicLink', ], 'members' => [ 'AllowEgressFromLocalClassicLinkToRemoteVpc' => [ 'shape' => 'Boolean', ], 'AllowEgressFromLocalVpcToRemoteClassicLink' => [ 'shape' => 'Boolean', ], ], ], 'PermissionGroup' => [ 'type' => 'string', 'enum' => [ 'all', ], ], 'Placement' => [ 'type' => 'structure', 'members' => [ 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'GroupName' => [ 'shape' => 'String', 'locationName' => 'groupName', ], 'Tenancy' => [ 'shape' => 'Tenancy', 'locationName' => 'tenancy', ], 'HostId' => [ 'shape' => 'String', 'locationName' => 'hostId', ], 'Affinity' => [ 'shape' => 'String', 'locationName' => 'affinity', ], ], ], 'PlacementGroup' => [ 'type' => 'structure', 'members' => [ 'GroupName' => [ 'shape' => 'String', 'locationName' => 'groupName', ], 'Strategy' => [ 'shape' => 'PlacementStrategy', 'locationName' => 'strategy', ], 'State' => [ 'shape' => 'PlacementGroupState', 'locationName' => 'state', ], ], ], 'PlacementGroupList' => [ 'type' => 'list', 'member' => [ 'shape' => 'PlacementGroup', 'locationName' => 'item', ], ], 'PlacementGroupState' => [ 'type' => 'string', 'enum' => [ 'pending', 'available', 'deleting', 'deleted', ], ], 'PlacementGroupStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], 'PlacementStrategy' => [ 'type' => 'string', 'enum' => [ 'cluster', ], ], 'PlatformValues' => [ 'type' => 'string', 'enum' => [ 'Windows', ], ], 'PortRange' => [ 'type' => 'structure', 'members' => [ 'From' => [ 'shape' => 'Integer', 'locationName' => 'from', ], 'To' => [ 'shape' => 'Integer', 'locationName' => 'to', ], ], ], 'PrefixList' => [ 'type' => 'structure', 'members' => [ 'PrefixListId' => [ 'shape' => 'String', 'locationName' => 'prefixListId', ], 'PrefixListName' => [ 'shape' => 'String', 'locationName' => 'prefixListName', ], 'Cidrs' => [ 'shape' => 'ValueStringList', 'locationName' => 'cidrSet', ], ], ], 'PrefixListId' => [ 'type' => 'structure', 'members' => [ 'PrefixListId' => [ 'shape' => 'String', 'locationName' => 'prefixListId', ], ], ], 'PrefixListIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'PrefixListId', 'locationName' => 'item', ], ], 'PrefixListIdSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'item', ], ], 'PrefixListSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'PrefixList', 'locationName' => 'item', ], ], 'PriceSchedule' => [ 'type' => 'structure', 'members' => [ 'Term' => [ 'shape' => 'Long', 'locationName' => 'term', ], 'Price' => [ 'shape' => 'Double', 'locationName' => 'price', ], 'CurrencyCode' => [ 'shape' => 'CurrencyCodeValues', 'locationName' => 'currencyCode', ], 'Active' => [ 'shape' => 'Boolean', 'locationName' => 'active', ], ], ], 'PriceScheduleList' => [ 'type' => 'list', 'member' => [ 'shape' => 'PriceSchedule', 'locationName' => 'item', ], ], 'PriceScheduleSpecification' => [ 'type' => 'structure', 'members' => [ 'Term' => [ 'shape' => 'Long', 'locationName' => 'term', ], 'Price' => [ 'shape' => 'Double', 'locationName' => 'price', ], 'CurrencyCode' => [ 'shape' => 'CurrencyCodeValues', 'locationName' => 'currencyCode', ], ], ], 'PriceScheduleSpecificationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'PriceScheduleSpecification', 'locationName' => 'item', ], ], 'PricingDetail' => [ 'type' => 'structure', 'members' => [ 'Price' => [ 'shape' => 'Double', 'locationName' => 'price', ], 'Count' => [ 'shape' => 'Integer', 'locationName' => 'count', ], ], ], 'PricingDetailsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'PricingDetail', 'locationName' => 'item', ], ], 'PrivateIpAddressConfigSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'ScheduledInstancesPrivateIpAddressConfig', 'locationName' => 'PrivateIpAddressConfigSet', ], ], 'PrivateIpAddressSpecification' => [ 'type' => 'structure', 'required' => [ 'PrivateIpAddress', ], 'members' => [ 'PrivateIpAddress' => [ 'shape' => 'String', 'locationName' => 'privateIpAddress', ], 'Primary' => [ 'shape' => 'Boolean', 'locationName' => 'primary', ], ], ], 'PrivateIpAddressSpecificationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'PrivateIpAddressSpecification', 'locationName' => 'item', ], ], 'PrivateIpAddressStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'PrivateIpAddress', ], ], 'ProductCode' => [ 'type' => 'structure', 'members' => [ 'ProductCodeId' => [ 'shape' => 'String', 'locationName' => 'productCode', ], 'ProductCodeType' => [ 'shape' => 'ProductCodeValues', 'locationName' => 'type', ], ], ], 'ProductCodeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ProductCode', 'locationName' => 'item', ], ], 'ProductCodeStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'ProductCode', ], ], 'ProductCodeValues' => [ 'type' => 'string', 'enum' => [ 'devpay', 'marketplace', ], ], 'ProductDescriptionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], 'PropagatingVgw' => [ 'type' => 'structure', 'members' => [ 'GatewayId' => [ 'shape' => 'String', 'locationName' => 'gatewayId', ], ], ], 'PropagatingVgwList' => [ 'type' => 'list', 'member' => [ 'shape' => 'PropagatingVgw', 'locationName' => 'item', ], ], 'ProvisionedBandwidth' => [ 'type' => 'structure', 'members' => [ 'Provisioned' => [ 'shape' => 'String', 'locationName' => 'provisioned', ], 'Requested' => [ 'shape' => 'String', 'locationName' => 'requested', ], 'RequestTime' => [ 'shape' => 'DateTime', 'locationName' => 'requestTime', ], 'ProvisionTime' => [ 'shape' => 'DateTime', 'locationName' => 'provisionTime', ], 'Status' => [ 'shape' => 'String', 'locationName' => 'status', ], ], ], 'PublicIpStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'PublicIp', ], ], 'PurchaseRequest' => [ 'type' => 'structure', 'required' => [ 'PurchaseToken', 'InstanceCount', ], 'members' => [ 'PurchaseToken' => [ 'shape' => 'String', ], 'InstanceCount' => [ 'shape' => 'Integer', ], ], ], 'PurchaseRequestSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'PurchaseRequest', 'locationName' => 'PurchaseRequest', ], 'min' => 1, ], 'PurchaseReservedInstancesOfferingRequest' => [ 'type' => 'structure', 'required' => [ 'ReservedInstancesOfferingId', 'InstanceCount', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ReservedInstancesOfferingId' => [ 'shape' => 'String', ], 'InstanceCount' => [ 'shape' => 'Integer', ], 'LimitPrice' => [ 'shape' => 'ReservedInstanceLimitPrice', 'locationName' => 'limitPrice', ], ], ], 'PurchaseReservedInstancesOfferingResult' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesId', ], ], ], 'PurchaseScheduledInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'PurchaseRequests', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'ClientToken' => [ 'shape' => 'String', 'idempotencyToken' => true, ], 'PurchaseRequests' => [ 'shape' => 'PurchaseRequestSet', 'locationName' => 'PurchaseRequest', ], ], ], 'PurchaseScheduledInstancesResult' => [ 'type' => 'structure', 'members' => [ 'ScheduledInstanceSet' => [ 'shape' => 'PurchasedScheduledInstanceSet', 'locationName' => 'scheduledInstanceSet', ], ], ], 'PurchasedScheduledInstanceSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'ScheduledInstance', 'locationName' => 'item', ], ], 'RIProductDescription' => [ 'type' => 'string', 'enum' => [ 'Linux/UNIX', 'Linux/UNIX (Amazon VPC)', 'Windows', 'Windows (Amazon VPC)', ], ], 'ReasonCodesList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ReportInstanceReasonCodes', 'locationName' => 'item', ], ], 'RebootInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceIds', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceIds' => [ 'shape' => 'InstanceIdStringList', 'locationName' => 'InstanceId', ], ], ], 'RecurringCharge' => [ 'type' => 'structure', 'members' => [ 'Frequency' => [ 'shape' => 'RecurringChargeFrequency', 'locationName' => 'frequency', ], 'Amount' => [ 'shape' => 'Double', 'locationName' => 'amount', ], ], ], 'RecurringChargeFrequency' => [ 'type' => 'string', 'enum' => [ 'Hourly', ], ], 'RecurringChargesList' => [ 'type' => 'list', 'member' => [ 'shape' => 'RecurringCharge', 'locationName' => 'item', ], ], 'Region' => [ 'type' => 'structure', 'members' => [ 'RegionName' => [ 'shape' => 'String', 'locationName' => 'regionName', ], 'Endpoint' => [ 'shape' => 'String', 'locationName' => 'regionEndpoint', ], ], ], 'RegionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Region', 'locationName' => 'item', ], ], 'RegionNameStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'RegionName', ], ], 'RegisterImageRequest' => [ 'type' => 'structure', 'required' => [ 'Name', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ImageLocation' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', 'locationName' => 'name', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'Architecture' => [ 'shape' => 'ArchitectureValues', 'locationName' => 'architecture', ], 'KernelId' => [ 'shape' => 'String', 'locationName' => 'kernelId', ], 'RamdiskId' => [ 'shape' => 'String', 'locationName' => 'ramdiskId', ], 'RootDeviceName' => [ 'shape' => 'String', 'locationName' => 'rootDeviceName', ], 'BlockDeviceMappings' => [ 'shape' => 'BlockDeviceMappingRequestList', 'locationName' => 'BlockDeviceMapping', ], 'VirtualizationType' => [ 'shape' => 'String', 'locationName' => 'virtualizationType', ], 'SriovNetSupport' => [ 'shape' => 'String', 'locationName' => 'sriovNetSupport', ], ], ], 'RegisterImageResult' => [ 'type' => 'structure', 'members' => [ 'ImageId' => [ 'shape' => 'String', 'locationName' => 'imageId', ], ], ], 'RejectVpcPeeringConnectionRequest' => [ 'type' => 'structure', 'required' => [ 'VpcPeeringConnectionId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'VpcPeeringConnectionId' => [ 'shape' => 'String', 'locationName' => 'vpcPeeringConnectionId', ], ], ], 'RejectVpcPeeringConnectionResult' => [ 'type' => 'structure', 'members' => [ 'Return' => [ 'shape' => 'Boolean', 'locationName' => 'return', ], ], ], 'ReleaseAddressRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'PublicIp' => [ 'shape' => 'String', ], 'AllocationId' => [ 'shape' => 'String', ], ], ], 'ReleaseHostsRequest' => [ 'type' => 'structure', 'required' => [ 'HostIds', ], 'members' => [ 'HostIds' => [ 'shape' => 'RequestHostIdList', 'locationName' => 'hostId', ], ], ], 'ReleaseHostsResult' => [ 'type' => 'structure', 'members' => [ 'Successful' => [ 'shape' => 'ResponseHostIdList', 'locationName' => 'successful', ], 'Unsuccessful' => [ 'shape' => 'UnsuccessfulItemList', 'locationName' => 'unsuccessful', ], ], ], 'ReplaceNetworkAclAssociationRequest' => [ 'type' => 'structure', 'required' => [ 'AssociationId', 'NetworkAclId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'AssociationId' => [ 'shape' => 'String', 'locationName' => 'associationId', ], 'NetworkAclId' => [ 'shape' => 'String', 'locationName' => 'networkAclId', ], ], ], 'ReplaceNetworkAclAssociationResult' => [ 'type' => 'structure', 'members' => [ 'NewAssociationId' => [ 'shape' => 'String', 'locationName' => 'newAssociationId', ], ], ], 'ReplaceNetworkAclEntryRequest' => [ 'type' => 'structure', 'required' => [ 'NetworkAclId', 'RuleNumber', 'Protocol', 'RuleAction', 'Egress', 'CidrBlock', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'NetworkAclId' => [ 'shape' => 'String', 'locationName' => 'networkAclId', ], 'RuleNumber' => [ 'shape' => 'Integer', 'locationName' => 'ruleNumber', ], 'Protocol' => [ 'shape' => 'String', 'locationName' => 'protocol', ], 'RuleAction' => [ 'shape' => 'RuleAction', 'locationName' => 'ruleAction', ], 'Egress' => [ 'shape' => 'Boolean', 'locationName' => 'egress', ], 'CidrBlock' => [ 'shape' => 'String', 'locationName' => 'cidrBlock', ], 'IcmpTypeCode' => [ 'shape' => 'IcmpTypeCode', 'locationName' => 'Icmp', ], 'PortRange' => [ 'shape' => 'PortRange', 'locationName' => 'portRange', ], ], ], 'ReplaceRouteRequest' => [ 'type' => 'structure', 'required' => [ 'RouteTableId', 'DestinationCidrBlock', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'RouteTableId' => [ 'shape' => 'String', 'locationName' => 'routeTableId', ], 'DestinationCidrBlock' => [ 'shape' => 'String', 'locationName' => 'destinationCidrBlock', ], 'GatewayId' => [ 'shape' => 'String', 'locationName' => 'gatewayId', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'VpcPeeringConnectionId' => [ 'shape' => 'String', 'locationName' => 'vpcPeeringConnectionId', ], 'NatGatewayId' => [ 'shape' => 'String', 'locationName' => 'natGatewayId', ], ], ], 'ReplaceRouteTableAssociationRequest' => [ 'type' => 'structure', 'required' => [ 'AssociationId', 'RouteTableId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'AssociationId' => [ 'shape' => 'String', 'locationName' => 'associationId', ], 'RouteTableId' => [ 'shape' => 'String', 'locationName' => 'routeTableId', ], ], ], 'ReplaceRouteTableAssociationResult' => [ 'type' => 'structure', 'members' => [ 'NewAssociationId' => [ 'shape' => 'String', 'locationName' => 'newAssociationId', ], ], ], 'ReportInstanceReasonCodes' => [ 'type' => 'string', 'enum' => [ 'instance-stuck-in-state', 'unresponsive', 'not-accepting-credentials', 'password-not-available', 'performance-network', 'performance-instance-store', 'performance-ebs-volume', 'performance-other', 'other', ], ], 'ReportInstanceStatusRequest' => [ 'type' => 'structure', 'required' => [ 'Instances', 'Status', 'ReasonCodes', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'Instances' => [ 'shape' => 'InstanceIdStringList', 'locationName' => 'instanceId', ], 'Status' => [ 'shape' => 'ReportStatusType', 'locationName' => 'status', ], 'StartTime' => [ 'shape' => 'DateTime', 'locationName' => 'startTime', ], 'EndTime' => [ 'shape' => 'DateTime', 'locationName' => 'endTime', ], 'ReasonCodes' => [ 'shape' => 'ReasonCodesList', 'locationName' => 'reasonCode', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], ], ], 'ReportStatusType' => [ 'type' => 'string', 'enum' => [ 'ok', 'impaired', ], ], 'RequestHostIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'item', ], ], 'RequestSpotFleetRequest' => [ 'type' => 'structure', 'required' => [ 'SpotFleetRequestConfig', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SpotFleetRequestConfig' => [ 'shape' => 'SpotFleetRequestConfigData', 'locationName' => 'spotFleetRequestConfig', ], ], ], 'RequestSpotFleetResponse' => [ 'type' => 'structure', 'required' => [ 'SpotFleetRequestId', ], 'members' => [ 'SpotFleetRequestId' => [ 'shape' => 'String', 'locationName' => 'spotFleetRequestId', ], ], ], 'RequestSpotInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'SpotPrice', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SpotPrice' => [ 'shape' => 'String', 'locationName' => 'spotPrice', ], 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], 'InstanceCount' => [ 'shape' => 'Integer', 'locationName' => 'instanceCount', ], 'Type' => [ 'shape' => 'SpotInstanceType', 'locationName' => 'type', ], 'ValidFrom' => [ 'shape' => 'DateTime', 'locationName' => 'validFrom', ], 'ValidUntil' => [ 'shape' => 'DateTime', 'locationName' => 'validUntil', ], 'LaunchGroup' => [ 'shape' => 'String', 'locationName' => 'launchGroup', ], 'AvailabilityZoneGroup' => [ 'shape' => 'String', 'locationName' => 'availabilityZoneGroup', ], 'BlockDurationMinutes' => [ 'shape' => 'Integer', 'locationName' => 'blockDurationMinutes', ], 'LaunchSpecification' => [ 'shape' => 'RequestSpotLaunchSpecification', ], ], ], 'RequestSpotInstancesResult' => [ 'type' => 'structure', 'members' => [ 'SpotInstanceRequests' => [ 'shape' => 'SpotInstanceRequestList', 'locationName' => 'spotInstanceRequestSet', ], ], ], 'RequestSpotLaunchSpecification' => [ 'type' => 'structure', 'members' => [ 'ImageId' => [ 'shape' => 'String', 'locationName' => 'imageId', ], 'KeyName' => [ 'shape' => 'String', 'locationName' => 'keyName', ], 'SecurityGroups' => [ 'shape' => 'ValueStringList', 'locationName' => 'SecurityGroup', ], 'UserData' => [ 'shape' => 'String', 'locationName' => 'userData', ], 'AddressingType' => [ 'shape' => 'String', 'locationName' => 'addressingType', ], 'InstanceType' => [ 'shape' => 'InstanceType', 'locationName' => 'instanceType', ], 'Placement' => [ 'shape' => 'SpotPlacement', 'locationName' => 'placement', ], 'KernelId' => [ 'shape' => 'String', 'locationName' => 'kernelId', ], 'RamdiskId' => [ 'shape' => 'String', 'locationName' => 'ramdiskId', ], 'BlockDeviceMappings' => [ 'shape' => 'BlockDeviceMappingList', 'locationName' => 'blockDeviceMapping', ], 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'NetworkInterfaces' => [ 'shape' => 'InstanceNetworkInterfaceSpecificationList', 'locationName' => 'NetworkInterface', ], 'IamInstanceProfile' => [ 'shape' => 'IamInstanceProfileSpecification', 'locationName' => 'iamInstanceProfile', ], 'EbsOptimized' => [ 'shape' => 'Boolean', 'locationName' => 'ebsOptimized', ], 'Monitoring' => [ 'shape' => 'RunInstancesMonitoringEnabled', 'locationName' => 'monitoring', ], 'SecurityGroupIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'SecurityGroupId', ], ], ], 'Reservation' => [ 'type' => 'structure', 'members' => [ 'ReservationId' => [ 'shape' => 'String', 'locationName' => 'reservationId', ], 'OwnerId' => [ 'shape' => 'String', 'locationName' => 'ownerId', ], 'RequesterId' => [ 'shape' => 'String', 'locationName' => 'requesterId', ], 'Groups' => [ 'shape' => 'GroupIdentifierList', 'locationName' => 'groupSet', ], 'Instances' => [ 'shape' => 'InstanceList', 'locationName' => 'instancesSet', ], ], ], 'ReservationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Reservation', 'locationName' => 'item', ], ], 'ReservedInstanceLimitPrice' => [ 'type' => 'structure', 'members' => [ 'Amount' => [ 'shape' => 'Double', 'locationName' => 'amount', ], 'CurrencyCode' => [ 'shape' => 'CurrencyCodeValues', 'locationName' => 'currencyCode', ], ], ], 'ReservedInstanceState' => [ 'type' => 'string', 'enum' => [ 'payment-pending', 'active', 'payment-failed', 'retired', ], ], 'ReservedInstances' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesId', ], 'InstanceType' => [ 'shape' => 'InstanceType', 'locationName' => 'instanceType', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'Start' => [ 'shape' => 'DateTime', 'locationName' => 'start', ], 'End' => [ 'shape' => 'DateTime', 'locationName' => 'end', ], 'Duration' => [ 'shape' => 'Long', 'locationName' => 'duration', ], 'UsagePrice' => [ 'shape' => 'Float', 'locationName' => 'usagePrice', ], 'FixedPrice' => [ 'shape' => 'Float', 'locationName' => 'fixedPrice', ], 'InstanceCount' => [ 'shape' => 'Integer', 'locationName' => 'instanceCount', ], 'ProductDescription' => [ 'shape' => 'RIProductDescription', 'locationName' => 'productDescription', ], 'State' => [ 'shape' => 'ReservedInstanceState', 'locationName' => 'state', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], 'InstanceTenancy' => [ 'shape' => 'Tenancy', 'locationName' => 'instanceTenancy', ], 'CurrencyCode' => [ 'shape' => 'CurrencyCodeValues', 'locationName' => 'currencyCode', ], 'OfferingType' => [ 'shape' => 'OfferingTypeValues', 'locationName' => 'offeringType', ], 'RecurringCharges' => [ 'shape' => 'RecurringChargesList', 'locationName' => 'recurringCharges', ], ], ], 'ReservedInstancesConfiguration' => [ 'type' => 'structure', 'members' => [ 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'Platform' => [ 'shape' => 'String', 'locationName' => 'platform', ], 'InstanceCount' => [ 'shape' => 'Integer', 'locationName' => 'instanceCount', ], 'InstanceType' => [ 'shape' => 'InstanceType', 'locationName' => 'instanceType', ], ], ], 'ReservedInstancesConfigurationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ReservedInstancesConfiguration', 'locationName' => 'item', ], ], 'ReservedInstancesId' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesId', ], ], ], 'ReservedInstancesIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'ReservedInstancesId', ], ], 'ReservedInstancesList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ReservedInstances', 'locationName' => 'item', ], ], 'ReservedInstancesListing' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesListingId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesListingId', ], 'ReservedInstancesId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesId', ], 'CreateDate' => [ 'shape' => 'DateTime', 'locationName' => 'createDate', ], 'UpdateDate' => [ 'shape' => 'DateTime', 'locationName' => 'updateDate', ], 'Status' => [ 'shape' => 'ListingStatus', 'locationName' => 'status', ], 'StatusMessage' => [ 'shape' => 'String', 'locationName' => 'statusMessage', ], 'InstanceCounts' => [ 'shape' => 'InstanceCountList', 'locationName' => 'instanceCounts', ], 'PriceSchedules' => [ 'shape' => 'PriceScheduleList', 'locationName' => 'priceSchedules', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], ], ], 'ReservedInstancesListingList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ReservedInstancesListing', 'locationName' => 'item', ], ], 'ReservedInstancesModification' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesModificationId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesModificationId', ], 'ReservedInstancesIds' => [ 'shape' => 'ReservedIntancesIds', 'locationName' => 'reservedInstancesSet', ], 'ModificationResults' => [ 'shape' => 'ReservedInstancesModificationResultList', 'locationName' => 'modificationResultSet', ], 'CreateDate' => [ 'shape' => 'DateTime', 'locationName' => 'createDate', ], 'UpdateDate' => [ 'shape' => 'DateTime', 'locationName' => 'updateDate', ], 'EffectiveDate' => [ 'shape' => 'DateTime', 'locationName' => 'effectiveDate', ], 'Status' => [ 'shape' => 'String', 'locationName' => 'status', ], 'StatusMessage' => [ 'shape' => 'String', 'locationName' => 'statusMessage', ], 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], ], ], 'ReservedInstancesModificationIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'ReservedInstancesModificationId', ], ], 'ReservedInstancesModificationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ReservedInstancesModification', 'locationName' => 'item', ], ], 'ReservedInstancesModificationResult' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesId', ], 'TargetConfiguration' => [ 'shape' => 'ReservedInstancesConfiguration', 'locationName' => 'targetConfiguration', ], ], ], 'ReservedInstancesModificationResultList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ReservedInstancesModificationResult', 'locationName' => 'item', ], ], 'ReservedInstancesOffering' => [ 'type' => 'structure', 'members' => [ 'ReservedInstancesOfferingId' => [ 'shape' => 'String', 'locationName' => 'reservedInstancesOfferingId', ], 'InstanceType' => [ 'shape' => 'InstanceType', 'locationName' => 'instanceType', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'Duration' => [ 'shape' => 'Long', 'locationName' => 'duration', ], 'UsagePrice' => [ 'shape' => 'Float', 'locationName' => 'usagePrice', ], 'FixedPrice' => [ 'shape' => 'Float', 'locationName' => 'fixedPrice', ], 'ProductDescription' => [ 'shape' => 'RIProductDescription', 'locationName' => 'productDescription', ], 'InstanceTenancy' => [ 'shape' => 'Tenancy', 'locationName' => 'instanceTenancy', ], 'CurrencyCode' => [ 'shape' => 'CurrencyCodeValues', 'locationName' => 'currencyCode', ], 'OfferingType' => [ 'shape' => 'OfferingTypeValues', 'locationName' => 'offeringType', ], 'RecurringCharges' => [ 'shape' => 'RecurringChargesList', 'locationName' => 'recurringCharges', ], 'Marketplace' => [ 'shape' => 'Boolean', 'locationName' => 'marketplace', ], 'PricingDetails' => [ 'shape' => 'PricingDetailsList', 'locationName' => 'pricingDetailsSet', ], ], ], 'ReservedInstancesOfferingIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], 'ReservedInstancesOfferingList' => [ 'type' => 'list', 'member' => [ 'shape' => 'ReservedInstancesOffering', 'locationName' => 'item', ], ], 'ReservedIntancesIds' => [ 'type' => 'list', 'member' => [ 'shape' => 'ReservedInstancesId', 'locationName' => 'item', ], ], 'ResetImageAttributeName' => [ 'type' => 'string', 'enum' => [ 'launchPermission', ], ], 'ResetImageAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'ImageId', 'Attribute', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ImageId' => [ 'shape' => 'String', ], 'Attribute' => [ 'shape' => 'ResetImageAttributeName', ], ], ], 'ResetInstanceAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceId', 'Attribute', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'Attribute' => [ 'shape' => 'InstanceAttributeName', 'locationName' => 'attribute', ], ], ], 'ResetNetworkInterfaceAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'NetworkInterfaceId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'SourceDestCheck' => [ 'shape' => 'String', 'locationName' => 'sourceDestCheck', ], ], ], 'ResetSnapshotAttributeRequest' => [ 'type' => 'structure', 'required' => [ 'SnapshotId', 'Attribute', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'SnapshotId' => [ 'shape' => 'String', ], 'Attribute' => [ 'shape' => 'SnapshotAttributeName', ], ], ], 'ResourceIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], 'ResourceType' => [ 'type' => 'string', 'enum' => [ 'customer-gateway', 'dhcp-options', 'image', 'instance', 'internet-gateway', 'network-acl', 'network-interface', 'reserved-instances', 'route-table', 'snapshot', 'spot-instances-request', 'subnet', 'security-group', 'volume', 'vpc', 'vpn-connection', 'vpn-gateway', ], ], 'ResponseHostIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'item', ], ], 'RestorableByStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', ], ], 'RestoreAddressToClassicRequest' => [ 'type' => 'structure', 'required' => [ 'PublicIp', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'PublicIp' => [ 'shape' => 'String', 'locationName' => 'publicIp', ], ], ], 'RestoreAddressToClassicResult' => [ 'type' => 'structure', 'members' => [ 'Status' => [ 'shape' => 'Status', 'locationName' => 'status', ], 'PublicIp' => [ 'shape' => 'String', 'locationName' => 'publicIp', ], ], ], 'RevokeSecurityGroupEgressRequest' => [ 'type' => 'structure', 'required' => [ 'GroupId', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'GroupId' => [ 'shape' => 'String', 'locationName' => 'groupId', ], 'SourceSecurityGroupName' => [ 'shape' => 'String', 'locationName' => 'sourceSecurityGroupName', ], 'SourceSecurityGroupOwnerId' => [ 'shape' => 'String', 'locationName' => 'sourceSecurityGroupOwnerId', ], 'IpProtocol' => [ 'shape' => 'String', 'locationName' => 'ipProtocol', ], 'FromPort' => [ 'shape' => 'Integer', 'locationName' => 'fromPort', ], 'ToPort' => [ 'shape' => 'Integer', 'locationName' => 'toPort', ], 'CidrIp' => [ 'shape' => 'String', 'locationName' => 'cidrIp', ], 'IpPermissions' => [ 'shape' => 'IpPermissionList', 'locationName' => 'ipPermissions', ], ], ], 'RevokeSecurityGroupIngressRequest' => [ 'type' => 'structure', 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'GroupName' => [ 'shape' => 'String', ], 'GroupId' => [ 'shape' => 'String', ], 'SourceSecurityGroupName' => [ 'shape' => 'String', ], 'SourceSecurityGroupOwnerId' => [ 'shape' => 'String', ], 'IpProtocol' => [ 'shape' => 'String', ], 'FromPort' => [ 'shape' => 'Integer', ], 'ToPort' => [ 'shape' => 'Integer', ], 'CidrIp' => [ 'shape' => 'String', ], 'IpPermissions' => [ 'shape' => 'IpPermissionList', ], ], ], 'Route' => [ 'type' => 'structure', 'members' => [ 'DestinationCidrBlock' => [ 'shape' => 'String', 'locationName' => 'destinationCidrBlock', ], 'DestinationPrefixListId' => [ 'shape' => 'String', 'locationName' => 'destinationPrefixListId', ], 'GatewayId' => [ 'shape' => 'String', 'locationName' => 'gatewayId', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'InstanceOwnerId' => [ 'shape' => 'String', 'locationName' => 'instanceOwnerId', ], 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'VpcPeeringConnectionId' => [ 'shape' => 'String', 'locationName' => 'vpcPeeringConnectionId', ], 'NatGatewayId' => [ 'shape' => 'String', 'locationName' => 'natGatewayId', ], 'State' => [ 'shape' => 'RouteState', 'locationName' => 'state', ], 'Origin' => [ 'shape' => 'RouteOrigin', 'locationName' => 'origin', ], ], ], 'RouteList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Route', 'locationName' => 'item', ], ], 'RouteOrigin' => [ 'type' => 'string', 'enum' => [ 'CreateRouteTable', 'CreateRoute', 'EnableVgwRoutePropagation', ], ], 'RouteState' => [ 'type' => 'string', 'enum' => [ 'active', 'blackhole', ], ], 'RouteTable' => [ 'type' => 'structure', 'members' => [ 'RouteTableId' => [ 'shape' => 'String', 'locationName' => 'routeTableId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'Routes' => [ 'shape' => 'RouteList', 'locationName' => 'routeSet', ], 'Associations' => [ 'shape' => 'RouteTableAssociationList', 'locationName' => 'associationSet', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], 'PropagatingVgws' => [ 'shape' => 'PropagatingVgwList', 'locationName' => 'propagatingVgwSet', ], ], ], 'RouteTableAssociation' => [ 'type' => 'structure', 'members' => [ 'RouteTableAssociationId' => [ 'shape' => 'String', 'locationName' => 'routeTableAssociationId', ], 'RouteTableId' => [ 'shape' => 'String', 'locationName' => 'routeTableId', ], 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'Main' => [ 'shape' => 'Boolean', 'locationName' => 'main', ], ], ], 'RouteTableAssociationList' => [ 'type' => 'list', 'member' => [ 'shape' => 'RouteTableAssociation', 'locationName' => 'item', ], ], 'RouteTableList' => [ 'type' => 'list', 'member' => [ 'shape' => 'RouteTable', 'locationName' => 'item', ], ], 'RuleAction' => [ 'type' => 'string', 'enum' => [ 'allow', 'deny', ], ], 'RunInstancesMonitoringEnabled' => [ 'type' => 'structure', 'required' => [ 'Enabled', ], 'members' => [ 'Enabled' => [ 'shape' => 'Boolean', 'locationName' => 'enabled', ], ], ], 'RunInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'ImageId', 'MinCount', 'MaxCount', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'ImageId' => [ 'shape' => 'String', ], 'MinCount' => [ 'shape' => 'Integer', ], 'MaxCount' => [ 'shape' => 'Integer', ], 'KeyName' => [ 'shape' => 'String', ], 'SecurityGroups' => [ 'shape' => 'SecurityGroupStringList', 'locationName' => 'SecurityGroup', ], 'SecurityGroupIds' => [ 'shape' => 'SecurityGroupIdStringList', 'locationName' => 'SecurityGroupId', ], 'UserData' => [ 'shape' => 'String', ], 'InstanceType' => [ 'shape' => 'InstanceType', ], 'Placement' => [ 'shape' => 'Placement', ], 'KernelId' => [ 'shape' => 'String', ], 'RamdiskId' => [ 'shape' => 'String', ], 'BlockDeviceMappings' => [ 'shape' => 'BlockDeviceMappingRequestList', 'locationName' => 'BlockDeviceMapping', ], 'Monitoring' => [ 'shape' => 'RunInstancesMonitoringEnabled', ], 'SubnetId' => [ 'shape' => 'String', ], 'DisableApiTermination' => [ 'shape' => 'Boolean', 'locationName' => 'disableApiTermination', ], 'InstanceInitiatedShutdownBehavior' => [ 'shape' => 'ShutdownBehavior', 'locationName' => 'instanceInitiatedShutdownBehavior', ], 'PrivateIpAddress' => [ 'shape' => 'String', 'locationName' => 'privateIpAddress', ], 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], 'AdditionalInfo' => [ 'shape' => 'String', 'locationName' => 'additionalInfo', ], 'NetworkInterfaces' => [ 'shape' => 'InstanceNetworkInterfaceSpecificationList', 'locationName' => 'networkInterface', ], 'IamInstanceProfile' => [ 'shape' => 'IamInstanceProfileSpecification', 'locationName' => 'iamInstanceProfile', ], 'EbsOptimized' => [ 'shape' => 'Boolean', 'locationName' => 'ebsOptimized', ], ], ], 'RunScheduledInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'ScheduledInstanceId', 'LaunchSpecification', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', ], 'ClientToken' => [ 'shape' => 'String', 'idempotencyToken' => true, ], 'InstanceCount' => [ 'shape' => 'Integer', ], 'ScheduledInstanceId' => [ 'shape' => 'String', ], 'LaunchSpecification' => [ 'shape' => 'ScheduledInstancesLaunchSpecification', ], ], ], 'RunScheduledInstancesResult' => [ 'type' => 'structure', 'members' => [ 'InstanceIdSet' => [ 'shape' => 'InstanceIdSet', 'locationName' => 'instanceIdSet', ], ], ], 'S3Storage' => [ 'type' => 'structure', 'members' => [ 'Bucket' => [ 'shape' => 'String', 'locationName' => 'bucket', ], 'Prefix' => [ 'shape' => 'String', 'locationName' => 'prefix', ], 'AWSAccessKeyId' => [ 'shape' => 'String', ], 'UploadPolicy' => [ 'shape' => 'Blob', 'locationName' => 'uploadPolicy', ], 'UploadPolicySignature' => [ 'shape' => 'String', 'locationName' => 'uploadPolicySignature', ], ], ], 'ScheduledInstance' => [ 'type' => 'structure', 'members' => [ 'ScheduledInstanceId' => [ 'shape' => 'String', 'locationName' => 'scheduledInstanceId', ], 'InstanceType' => [ 'shape' => 'String', 'locationName' => 'instanceType', ], 'Platform' => [ 'shape' => 'String', 'locationName' => 'platform', ], 'NetworkPlatform' => [ 'shape' => 'String', 'locationName' => 'networkPlatform', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'SlotDurationInHours' => [ 'shape' => 'Integer', 'locationName' => 'slotDurationInHours', ], 'Recurrence' => [ 'shape' => 'ScheduledInstanceRecurrence', 'locationName' => 'recurrence', ], 'PreviousSlotEndTime' => [ 'shape' => 'DateTime', 'locationName' => 'previousSlotEndTime', ], 'NextSlotStartTime' => [ 'shape' => 'DateTime', 'locationName' => 'nextSlotStartTime', ], 'HourlyPrice' => [ 'shape' => 'String', 'locationName' => 'hourlyPrice', ], 'TotalScheduledInstanceHours' => [ 'shape' => 'Integer', 'locationName' => 'totalScheduledInstanceHours', ], 'InstanceCount' => [ 'shape' => 'Integer', 'locationName' => 'instanceCount', ], 'TermStartDate' => [ 'shape' => 'DateTime', 'locationName' => 'termStartDate', ], 'TermEndDate' => [ 'shape' => 'DateTime', 'locationName' => 'termEndDate', ], 'CreateDate' => [ 'shape' => 'DateTime', 'locationName' => 'createDate', ], ], ], 'ScheduledInstanceAvailability' => [ 'type' => 'structure', 'members' => [ 'InstanceType' => [ 'shape' => 'String', 'locationName' => 'instanceType', ], 'Platform' => [ 'shape' => 'String', 'locationName' => 'platform', ], 'NetworkPlatform' => [ 'shape' => 'String', 'locationName' => 'networkPlatform', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'PurchaseToken' => [ 'shape' => 'String', 'locationName' => 'purchaseToken', ], 'SlotDurationInHours' => [ 'shape' => 'Integer', 'locationName' => 'slotDurationInHours', ], 'Recurrence' => [ 'shape' => 'ScheduledInstanceRecurrence', 'locationName' => 'recurrence', ], 'FirstSlotStartTime' => [ 'shape' => 'DateTime', 'locationName' => 'firstSlotStartTime', ], 'HourlyPrice' => [ 'shape' => 'String', 'locationName' => 'hourlyPrice', ], 'TotalScheduledInstanceHours' => [ 'shape' => 'Integer', 'locationName' => 'totalScheduledInstanceHours', ], 'AvailableInstanceCount' => [ 'shape' => 'Integer', 'locationName' => 'availableInstanceCount', ], 'MinTermDurationInDays' => [ 'shape' => 'Integer', 'locationName' => 'minTermDurationInDays', ], 'MaxTermDurationInDays' => [ 'shape' => 'Integer', 'locationName' => 'maxTermDurationInDays', ], ], ], 'ScheduledInstanceAvailabilitySet' => [ 'type' => 'list', 'member' => [ 'shape' => 'ScheduledInstanceAvailability', 'locationName' => 'item', ], ], 'ScheduledInstanceIdRequestSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'ScheduledInstanceId', ], ], 'ScheduledInstanceRecurrence' => [ 'type' => 'structure', 'members' => [ 'Frequency' => [ 'shape' => 'String', 'locationName' => 'frequency', ], 'Interval' => [ 'shape' => 'Integer', 'locationName' => 'interval', ], 'OccurrenceDaySet' => [ 'shape' => 'OccurrenceDaySet', 'locationName' => 'occurrenceDaySet', ], 'OccurrenceRelativeToEnd' => [ 'shape' => 'Boolean', 'locationName' => 'occurrenceRelativeToEnd', ], 'OccurrenceUnit' => [ 'shape' => 'String', 'locationName' => 'occurrenceUnit', ], ], ], 'ScheduledInstanceRecurrenceRequest' => [ 'type' => 'structure', 'members' => [ 'Frequency' => [ 'shape' => 'String', ], 'Interval' => [ 'shape' => 'Integer', ], 'OccurrenceDays' => [ 'shape' => 'OccurrenceDayRequestSet', 'locationName' => 'OccurrenceDay', ], 'OccurrenceRelativeToEnd' => [ 'shape' => 'Boolean', ], 'OccurrenceUnit' => [ 'shape' => 'String', ], ], ], 'ScheduledInstanceSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'ScheduledInstance', 'locationName' => 'item', ], ], 'ScheduledInstancesBlockDeviceMapping' => [ 'type' => 'structure', 'members' => [ 'DeviceName' => [ 'shape' => 'String', ], 'NoDevice' => [ 'shape' => 'String', ], 'VirtualName' => [ 'shape' => 'String', ], 'Ebs' => [ 'shape' => 'ScheduledInstancesEbs', ], ], ], 'ScheduledInstancesBlockDeviceMappingSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'ScheduledInstancesBlockDeviceMapping', 'locationName' => 'BlockDeviceMapping', ], ], 'ScheduledInstancesEbs' => [ 'type' => 'structure', 'members' => [ 'SnapshotId' => [ 'shape' => 'String', ], 'VolumeSize' => [ 'shape' => 'Integer', ], 'DeleteOnTermination' => [ 'shape' => 'Boolean', ], 'VolumeType' => [ 'shape' => 'String', ], 'Iops' => [ 'shape' => 'Integer', ], 'Encrypted' => [ 'shape' => 'Boolean', ], ], ], 'ScheduledInstancesIamInstanceProfile' => [ 'type' => 'structure', 'members' => [ 'Arn' => [ 'shape' => 'String', ], 'Name' => [ 'shape' => 'String', ], ], ], 'ScheduledInstancesLaunchSpecification' => [ 'type' => 'structure', 'required' => [ 'ImageId', ], 'members' => [ 'ImageId' => [ 'shape' => 'String', ], 'KeyName' => [ 'shape' => 'String', ], 'SecurityGroupIds' => [ 'shape' => 'ScheduledInstancesSecurityGroupIdSet', 'locationName' => 'SecurityGroupId', ], 'UserData' => [ 'shape' => 'String', ], 'Placement' => [ 'shape' => 'ScheduledInstancesPlacement', ], 'KernelId' => [ 'shape' => 'String', ], 'InstanceType' => [ 'shape' => 'String', ], 'RamdiskId' => [ 'shape' => 'String', ], 'BlockDeviceMappings' => [ 'shape' => 'ScheduledInstancesBlockDeviceMappingSet', 'locationName' => 'BlockDeviceMapping', ], 'Monitoring' => [ 'shape' => 'ScheduledInstancesMonitoring', ], 'SubnetId' => [ 'shape' => 'String', ], 'NetworkInterfaces' => [ 'shape' => 'ScheduledInstancesNetworkInterfaceSet', 'locationName' => 'NetworkInterface', ], 'IamInstanceProfile' => [ 'shape' => 'ScheduledInstancesIamInstanceProfile', ], 'EbsOptimized' => [ 'shape' => 'Boolean', ], ], ], 'ScheduledInstancesMonitoring' => [ 'type' => 'structure', 'members' => [ 'Enabled' => [ 'shape' => 'Boolean', ], ], ], 'ScheduledInstancesNetworkInterface' => [ 'type' => 'structure', 'members' => [ 'NetworkInterfaceId' => [ 'shape' => 'String', ], 'DeviceIndex' => [ 'shape' => 'Integer', ], 'SubnetId' => [ 'shape' => 'String', ], 'Description' => [ 'shape' => 'String', ], 'PrivateIpAddress' => [ 'shape' => 'String', ], 'PrivateIpAddressConfigs' => [ 'shape' => 'PrivateIpAddressConfigSet', 'locationName' => 'PrivateIpAddressConfig', ], 'SecondaryPrivateIpAddressCount' => [ 'shape' => 'Integer', ], 'AssociatePublicIpAddress' => [ 'shape' => 'Boolean', ], 'Groups' => [ 'shape' => 'ScheduledInstancesSecurityGroupIdSet', 'locationName' => 'Group', ], 'DeleteOnTermination' => [ 'shape' => 'Boolean', ], ], ], 'ScheduledInstancesNetworkInterfaceSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'ScheduledInstancesNetworkInterface', 'locationName' => 'NetworkInterface', ], ], 'ScheduledInstancesPlacement' => [ 'type' => 'structure', 'members' => [ 'AvailabilityZone' => [ 'shape' => 'String', ], 'GroupName' => [ 'shape' => 'String', ], ], ], 'ScheduledInstancesPrivateIpAddressConfig' => [ 'type' => 'structure', 'members' => [ 'PrivateIpAddress' => [ 'shape' => 'String', ], 'Primary' => [ 'shape' => 'Boolean', ], ], ], 'ScheduledInstancesSecurityGroupIdSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'SecurityGroupId', ], ], 'SecurityGroup' => [ 'type' => 'structure', 'members' => [ 'OwnerId' => [ 'shape' => 'String', 'locationName' => 'ownerId', ], 'GroupName' => [ 'shape' => 'String', 'locationName' => 'groupName', ], 'GroupId' => [ 'shape' => 'String', 'locationName' => 'groupId', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'groupDescription', ], 'IpPermissions' => [ 'shape' => 'IpPermissionList', 'locationName' => 'ipPermissions', ], 'IpPermissionsEgress' => [ 'shape' => 'IpPermissionList', 'locationName' => 'ipPermissionsEgress', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], ], ], 'SecurityGroupIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'SecurityGroupId', ], ], 'SecurityGroupList' => [ 'type' => 'list', 'member' => [ 'shape' => 'SecurityGroup', 'locationName' => 'item', ], ], 'SecurityGroupReference' => [ 'type' => 'structure', 'required' => [ 'GroupId', 'ReferencingVpcId', ], 'members' => [ 'GroupId' => [ 'shape' => 'String', 'locationName' => 'groupId', ], 'ReferencingVpcId' => [ 'shape' => 'String', 'locationName' => 'referencingVpcId', ], 'VpcPeeringConnectionId' => [ 'shape' => 'String', 'locationName' => 'vpcPeeringConnectionId', ], ], ], 'SecurityGroupReferences' => [ 'type' => 'list', 'member' => [ 'shape' => 'SecurityGroupReference', 'locationName' => 'item', ], ], 'SecurityGroupStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'SecurityGroup', ], ], 'ShutdownBehavior' => [ 'type' => 'string', 'enum' => [ 'stop', 'terminate', ], ], 'SlotDateTimeRangeRequest' => [ 'type' => 'structure', 'required' => [ 'EarliestTime', 'LatestTime', ], 'members' => [ 'EarliestTime' => [ 'shape' => 'DateTime', ], 'LatestTime' => [ 'shape' => 'DateTime', ], ], ], 'SlotStartTimeRangeRequest' => [ 'type' => 'structure', 'members' => [ 'EarliestTime' => [ 'shape' => 'DateTime', ], 'LatestTime' => [ 'shape' => 'DateTime', ], ], ], 'Snapshot' => [ 'type' => 'structure', 'members' => [ 'SnapshotId' => [ 'shape' => 'String', 'locationName' => 'snapshotId', ], 'VolumeId' => [ 'shape' => 'String', 'locationName' => 'volumeId', ], 'State' => [ 'shape' => 'SnapshotState', 'locationName' => 'status', ], 'StateMessage' => [ 'shape' => 'String', 'locationName' => 'statusMessage', ], 'StartTime' => [ 'shape' => 'DateTime', 'locationName' => 'startTime', ], 'Progress' => [ 'shape' => 'String', 'locationName' => 'progress', ], 'OwnerId' => [ 'shape' => 'String', 'locationName' => 'ownerId', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'VolumeSize' => [ 'shape' => 'Integer', 'locationName' => 'volumeSize', ], 'OwnerAlias' => [ 'shape' => 'String', 'locationName' => 'ownerAlias', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], 'Encrypted' => [ 'shape' => 'Boolean', 'locationName' => 'encrypted', ], 'KmsKeyId' => [ 'shape' => 'String', 'locationName' => 'kmsKeyId', ], 'DataEncryptionKeyId' => [ 'shape' => 'String', 'locationName' => 'dataEncryptionKeyId', ], ], ], 'SnapshotAttributeName' => [ 'type' => 'string', 'enum' => [ 'productCodes', 'createVolumePermission', ], ], 'SnapshotDetail' => [ 'type' => 'structure', 'members' => [ 'DiskImageSize' => [ 'shape' => 'Double', 'locationName' => 'diskImageSize', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'Format' => [ 'shape' => 'String', 'locationName' => 'format', ], 'Url' => [ 'shape' => 'String', 'locationName' => 'url', ], 'UserBucket' => [ 'shape' => 'UserBucketDetails', 'locationName' => 'userBucket', ], 'DeviceName' => [ 'shape' => 'String', 'locationName' => 'deviceName', ], 'SnapshotId' => [ 'shape' => 'String', 'locationName' => 'snapshotId', ], 'Progress' => [ 'shape' => 'String', 'locationName' => 'progress', ], 'StatusMessage' => [ 'shape' => 'String', 'locationName' => 'statusMessage', ], 'Status' => [ 'shape' => 'String', 'locationName' => 'status', ], ], ], 'SnapshotDetailList' => [ 'type' => 'list', 'member' => [ 'shape' => 'SnapshotDetail', 'locationName' => 'item', ], ], 'SnapshotDiskContainer' => [ 'type' => 'structure', 'members' => [ 'Description' => [ 'shape' => 'String', ], 'Format' => [ 'shape' => 'String', ], 'Url' => [ 'shape' => 'String', ], 'UserBucket' => [ 'shape' => 'UserBucket', ], ], ], 'SnapshotIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'SnapshotId', ], ], 'SnapshotList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Snapshot', 'locationName' => 'item', ], ], 'SnapshotState' => [ 'type' => 'string', 'enum' => [ 'pending', 'completed', 'error', ], ], 'SnapshotTaskDetail' => [ 'type' => 'structure', 'members' => [ 'DiskImageSize' => [ 'shape' => 'Double', 'locationName' => 'diskImageSize', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'Format' => [ 'shape' => 'String', 'locationName' => 'format', ], 'Url' => [ 'shape' => 'String', 'locationName' => 'url', ], 'UserBucket' => [ 'shape' => 'UserBucketDetails', 'locationName' => 'userBucket', ], 'SnapshotId' => [ 'shape' => 'String', 'locationName' => 'snapshotId', ], 'Progress' => [ 'shape' => 'String', 'locationName' => 'progress', ], 'StatusMessage' => [ 'shape' => 'String', 'locationName' => 'statusMessage', ], 'Status' => [ 'shape' => 'String', 'locationName' => 'status', ], ], ], 'SpotDatafeedSubscription' => [ 'type' => 'structure', 'members' => [ 'OwnerId' => [ 'shape' => 'String', 'locationName' => 'ownerId', ], 'Bucket' => [ 'shape' => 'String', 'locationName' => 'bucket', ], 'Prefix' => [ 'shape' => 'String', 'locationName' => 'prefix', ], 'State' => [ 'shape' => 'DatafeedSubscriptionState', 'locationName' => 'state', ], 'Fault' => [ 'shape' => 'SpotInstanceStateFault', 'locationName' => 'fault', ], ], ], 'SpotFleetLaunchSpecification' => [ 'type' => 'structure', 'members' => [ 'ImageId' => [ 'shape' => 'String', 'locationName' => 'imageId', ], 'KeyName' => [ 'shape' => 'String', 'locationName' => 'keyName', ], 'SecurityGroups' => [ 'shape' => 'GroupIdentifierList', 'locationName' => 'groupSet', ], 'UserData' => [ 'shape' => 'String', 'locationName' => 'userData', ], 'AddressingType' => [ 'shape' => 'String', 'locationName' => 'addressingType', ], 'InstanceType' => [ 'shape' => 'InstanceType', 'locationName' => 'instanceType', ], 'Placement' => [ 'shape' => 'SpotPlacement', 'locationName' => 'placement', ], 'KernelId' => [ 'shape' => 'String', 'locationName' => 'kernelId', ], 'RamdiskId' => [ 'shape' => 'String', 'locationName' => 'ramdiskId', ], 'BlockDeviceMappings' => [ 'shape' => 'BlockDeviceMappingList', 'locationName' => 'blockDeviceMapping', ], 'Monitoring' => [ 'shape' => 'SpotFleetMonitoring', 'locationName' => 'monitoring', ], 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'NetworkInterfaces' => [ 'shape' => 'InstanceNetworkInterfaceSpecificationList', 'locationName' => 'networkInterfaceSet', ], 'IamInstanceProfile' => [ 'shape' => 'IamInstanceProfileSpecification', 'locationName' => 'iamInstanceProfile', ], 'EbsOptimized' => [ 'shape' => 'Boolean', 'locationName' => 'ebsOptimized', ], 'WeightedCapacity' => [ 'shape' => 'Double', 'locationName' => 'weightedCapacity', ], 'SpotPrice' => [ 'shape' => 'String', 'locationName' => 'spotPrice', ], ], ], 'SpotFleetMonitoring' => [ 'type' => 'structure', 'members' => [ 'Enabled' => [ 'shape' => 'Boolean', 'locationName' => 'enabled', ], ], ], 'SpotFleetRequestConfig' => [ 'type' => 'structure', 'required' => [ 'SpotFleetRequestId', 'SpotFleetRequestState', 'SpotFleetRequestConfig', 'CreateTime', ], 'members' => [ 'SpotFleetRequestId' => [ 'shape' => 'String', 'locationName' => 'spotFleetRequestId', ], 'SpotFleetRequestState' => [ 'shape' => 'BatchState', 'locationName' => 'spotFleetRequestState', ], 'SpotFleetRequestConfig' => [ 'shape' => 'SpotFleetRequestConfigData', 'locationName' => 'spotFleetRequestConfig', ], 'CreateTime' => [ 'shape' => 'DateTime', 'locationName' => 'createTime', ], ], ], 'SpotFleetRequestConfigData' => [ 'type' => 'structure', 'required' => [ 'SpotPrice', 'TargetCapacity', 'IamFleetRole', 'LaunchSpecifications', ], 'members' => [ 'ClientToken' => [ 'shape' => 'String', 'locationName' => 'clientToken', ], 'SpotPrice' => [ 'shape' => 'String', 'locationName' => 'spotPrice', ], 'TargetCapacity' => [ 'shape' => 'Integer', 'locationName' => 'targetCapacity', ], 'ValidFrom' => [ 'shape' => 'DateTime', 'locationName' => 'validFrom', ], 'ValidUntil' => [ 'shape' => 'DateTime', 'locationName' => 'validUntil', ], 'TerminateInstancesWithExpiration' => [ 'shape' => 'Boolean', 'locationName' => 'terminateInstancesWithExpiration', ], 'IamFleetRole' => [ 'shape' => 'String', 'locationName' => 'iamFleetRole', ], 'LaunchSpecifications' => [ 'shape' => 'LaunchSpecsList', 'locationName' => 'launchSpecifications', ], 'ExcessCapacityTerminationPolicy' => [ 'shape' => 'ExcessCapacityTerminationPolicy', 'locationName' => 'excessCapacityTerminationPolicy', ], 'AllocationStrategy' => [ 'shape' => 'AllocationStrategy', 'locationName' => 'allocationStrategy', ], ], ], 'SpotFleetRequestConfigSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'SpotFleetRequestConfig', 'locationName' => 'item', ], ], 'SpotInstanceRequest' => [ 'type' => 'structure', 'members' => [ 'SpotInstanceRequestId' => [ 'shape' => 'String', 'locationName' => 'spotInstanceRequestId', ], 'SpotPrice' => [ 'shape' => 'String', 'locationName' => 'spotPrice', ], 'Type' => [ 'shape' => 'SpotInstanceType', 'locationName' => 'type', ], 'State' => [ 'shape' => 'SpotInstanceState', 'locationName' => 'state', ], 'Fault' => [ 'shape' => 'SpotInstanceStateFault', 'locationName' => 'fault', ], 'Status' => [ 'shape' => 'SpotInstanceStatus', 'locationName' => 'status', ], 'ValidFrom' => [ 'shape' => 'DateTime', 'locationName' => 'validFrom', ], 'ValidUntil' => [ 'shape' => 'DateTime', 'locationName' => 'validUntil', ], 'LaunchGroup' => [ 'shape' => 'String', 'locationName' => 'launchGroup', ], 'AvailabilityZoneGroup' => [ 'shape' => 'String', 'locationName' => 'availabilityZoneGroup', ], 'LaunchSpecification' => [ 'shape' => 'LaunchSpecification', 'locationName' => 'launchSpecification', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'CreateTime' => [ 'shape' => 'DateTime', 'locationName' => 'createTime', ], 'ProductDescription' => [ 'shape' => 'RIProductDescription', 'locationName' => 'productDescription', ], 'BlockDurationMinutes' => [ 'shape' => 'Integer', 'locationName' => 'blockDurationMinutes', ], 'ActualBlockHourlyPrice' => [ 'shape' => 'String', 'locationName' => 'actualBlockHourlyPrice', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], 'LaunchedAvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'launchedAvailabilityZone', ], ], ], 'SpotInstanceRequestIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'SpotInstanceRequestId', ], ], 'SpotInstanceRequestList' => [ 'type' => 'list', 'member' => [ 'shape' => 'SpotInstanceRequest', 'locationName' => 'item', ], ], 'SpotInstanceState' => [ 'type' => 'string', 'enum' => [ 'open', 'active', 'closed', 'cancelled', 'failed', ], ], 'SpotInstanceStateFault' => [ 'type' => 'structure', 'members' => [ 'Code' => [ 'shape' => 'String', 'locationName' => 'code', ], 'Message' => [ 'shape' => 'String', 'locationName' => 'message', ], ], ], 'SpotInstanceStatus' => [ 'type' => 'structure', 'members' => [ 'Code' => [ 'shape' => 'String', 'locationName' => 'code', ], 'UpdateTime' => [ 'shape' => 'DateTime', 'locationName' => 'updateTime', ], 'Message' => [ 'shape' => 'String', 'locationName' => 'message', ], ], ], 'SpotInstanceType' => [ 'type' => 'string', 'enum' => [ 'one-time', 'persistent', ], ], 'SpotPlacement' => [ 'type' => 'structure', 'members' => [ 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'GroupName' => [ 'shape' => 'String', 'locationName' => 'groupName', ], ], ], 'SpotPrice' => [ 'type' => 'structure', 'members' => [ 'InstanceType' => [ 'shape' => 'InstanceType', 'locationName' => 'instanceType', ], 'ProductDescription' => [ 'shape' => 'RIProductDescription', 'locationName' => 'productDescription', ], 'SpotPrice' => [ 'shape' => 'String', 'locationName' => 'spotPrice', ], 'Timestamp' => [ 'shape' => 'DateTime', 'locationName' => 'timestamp', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], ], ], 'SpotPriceHistoryList' => [ 'type' => 'list', 'member' => [ 'shape' => 'SpotPrice', 'locationName' => 'item', ], ], 'StaleIpPermission' => [ 'type' => 'structure', 'members' => [ 'FromPort' => [ 'shape' => 'Integer', 'locationName' => 'fromPort', ], 'IpProtocol' => [ 'shape' => 'String', 'locationName' => 'ipProtocol', ], 'IpRanges' => [ 'shape' => 'IpRanges', 'locationName' => 'ipRanges', ], 'PrefixListIds' => [ 'shape' => 'PrefixListIdSet', 'locationName' => 'prefixListIds', ], 'ToPort' => [ 'shape' => 'Integer', 'locationName' => 'toPort', ], 'UserIdGroupPairs' => [ 'shape' => 'UserIdGroupPairSet', 'locationName' => 'groups', ], ], ], 'StaleIpPermissionSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'StaleIpPermission', 'locationName' => 'item', ], ], 'StaleSecurityGroup' => [ 'type' => 'structure', 'required' => [ 'GroupId', ], 'members' => [ 'GroupId' => [ 'shape' => 'String', 'locationName' => 'groupId', ], 'GroupName' => [ 'shape' => 'String', 'locationName' => 'groupName', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'StaleIpPermissions' => [ 'shape' => 'StaleIpPermissionSet', 'locationName' => 'staleIpPermissions', ], 'StaleIpPermissionsEgress' => [ 'shape' => 'StaleIpPermissionSet', 'locationName' => 'staleIpPermissionsEgress', ], ], ], 'StaleSecurityGroupSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'StaleSecurityGroup', 'locationName' => 'item', ], ], 'StartInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceIds', ], 'members' => [ 'InstanceIds' => [ 'shape' => 'InstanceIdStringList', 'locationName' => 'InstanceId', ], 'AdditionalInfo' => [ 'shape' => 'String', 'locationName' => 'additionalInfo', ], 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], ], ], 'StartInstancesResult' => [ 'type' => 'structure', 'members' => [ 'StartingInstances' => [ 'shape' => 'InstanceStateChangeList', 'locationName' => 'instancesSet', ], ], ], 'State' => [ 'type' => 'string', 'enum' => [ 'Pending', 'Available', 'Deleting', 'Deleted', ], ], 'StateReason' => [ 'type' => 'structure', 'members' => [ 'Code' => [ 'shape' => 'String', 'locationName' => 'code', ], 'Message' => [ 'shape' => 'String', 'locationName' => 'message', ], ], ], 'Status' => [ 'type' => 'string', 'enum' => [ 'MoveInProgress', 'InVpc', 'InClassic', ], ], 'StatusName' => [ 'type' => 'string', 'enum' => [ 'reachability', ], ], 'StatusType' => [ 'type' => 'string', 'enum' => [ 'passed', 'failed', 'insufficient-data', 'initializing', ], ], 'StopInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceIds', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceIds' => [ 'shape' => 'InstanceIdStringList', 'locationName' => 'InstanceId', ], 'Force' => [ 'shape' => 'Boolean', 'locationName' => 'force', ], ], ], 'StopInstancesResult' => [ 'type' => 'structure', 'members' => [ 'StoppingInstances' => [ 'shape' => 'InstanceStateChangeList', 'locationName' => 'instancesSet', ], ], ], 'Storage' => [ 'type' => 'structure', 'members' => [ 'S3' => [ 'shape' => 'S3Storage', ], ], ], 'String' => [ 'type' => 'string', ], 'Subnet' => [ 'type' => 'structure', 'members' => [ 'SubnetId' => [ 'shape' => 'String', 'locationName' => 'subnetId', ], 'State' => [ 'shape' => 'SubnetState', 'locationName' => 'state', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'CidrBlock' => [ 'shape' => 'String', 'locationName' => 'cidrBlock', ], 'AvailableIpAddressCount' => [ 'shape' => 'Integer', 'locationName' => 'availableIpAddressCount', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'DefaultForAz' => [ 'shape' => 'Boolean', 'locationName' => 'defaultForAz', ], 'MapPublicIpOnLaunch' => [ 'shape' => 'Boolean', 'locationName' => 'mapPublicIpOnLaunch', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], ], ], 'SubnetIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'SubnetId', ], ], 'SubnetList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Subnet', 'locationName' => 'item', ], ], 'SubnetState' => [ 'type' => 'string', 'enum' => [ 'pending', 'available', ], ], 'SummaryStatus' => [ 'type' => 'string', 'enum' => [ 'ok', 'impaired', 'insufficient-data', 'not-applicable', 'initializing', ], ], 'Tag' => [ 'type' => 'structure', 'members' => [ 'Key' => [ 'shape' => 'String', 'locationName' => 'key', ], 'Value' => [ 'shape' => 'String', 'locationName' => 'value', ], ], ], 'TagDescription' => [ 'type' => 'structure', 'members' => [ 'ResourceId' => [ 'shape' => 'String', 'locationName' => 'resourceId', ], 'ResourceType' => [ 'shape' => 'ResourceType', 'locationName' => 'resourceType', ], 'Key' => [ 'shape' => 'String', 'locationName' => 'key', ], 'Value' => [ 'shape' => 'String', 'locationName' => 'value', ], ], ], 'TagDescriptionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'TagDescription', 'locationName' => 'item', ], ], 'TagList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Tag', 'locationName' => 'item', ], ], 'TelemetryStatus' => [ 'type' => 'string', 'enum' => [ 'UP', 'DOWN', ], ], 'Tenancy' => [ 'type' => 'string', 'enum' => [ 'default', 'dedicated', 'host', ], ], 'TerminateInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceIds', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceIds' => [ 'shape' => 'InstanceIdStringList', 'locationName' => 'InstanceId', ], ], ], 'TerminateInstancesResult' => [ 'type' => 'structure', 'members' => [ 'TerminatingInstances' => [ 'shape' => 'InstanceStateChangeList', 'locationName' => 'instancesSet', ], ], ], 'TrafficType' => [ 'type' => 'string', 'enum' => [ 'ACCEPT', 'REJECT', 'ALL', ], ], 'UnassignPrivateIpAddressesRequest' => [ 'type' => 'structure', 'required' => [ 'NetworkInterfaceId', 'PrivateIpAddresses', ], 'members' => [ 'NetworkInterfaceId' => [ 'shape' => 'String', 'locationName' => 'networkInterfaceId', ], 'PrivateIpAddresses' => [ 'shape' => 'PrivateIpAddressStringList', 'locationName' => 'privateIpAddress', ], ], ], 'UnmonitorInstancesRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceIds', ], 'members' => [ 'DryRun' => [ 'shape' => 'Boolean', 'locationName' => 'dryRun', ], 'InstanceIds' => [ 'shape' => 'InstanceIdStringList', 'locationName' => 'InstanceId', ], ], ], 'UnmonitorInstancesResult' => [ 'type' => 'structure', 'members' => [ 'InstanceMonitorings' => [ 'shape' => 'InstanceMonitoringList', 'locationName' => 'instancesSet', ], ], ], 'UnsuccessfulItem' => [ 'type' => 'structure', 'required' => [ 'Error', ], 'members' => [ 'Error' => [ 'shape' => 'UnsuccessfulItemError', 'locationName' => 'error', ], 'ResourceId' => [ 'shape' => 'String', 'locationName' => 'resourceId', ], ], ], 'UnsuccessfulItemError' => [ 'type' => 'structure', 'required' => [ 'Code', 'Message', ], 'members' => [ 'Code' => [ 'shape' => 'String', 'locationName' => 'code', ], 'Message' => [ 'shape' => 'String', 'locationName' => 'message', ], ], ], 'UnsuccessfulItemList' => [ 'type' => 'list', 'member' => [ 'shape' => 'UnsuccessfulItem', 'locationName' => 'item', ], ], 'UnsuccessfulItemSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'UnsuccessfulItem', 'locationName' => 'item', ], ], 'UserBucket' => [ 'type' => 'structure', 'members' => [ 'S3Bucket' => [ 'shape' => 'String', ], 'S3Key' => [ 'shape' => 'String', ], ], ], 'UserBucketDetails' => [ 'type' => 'structure', 'members' => [ 'S3Bucket' => [ 'shape' => 'String', 'locationName' => 's3Bucket', ], 'S3Key' => [ 'shape' => 'String', 'locationName' => 's3Key', ], ], ], 'UserData' => [ 'type' => 'structure', 'members' => [ 'Data' => [ 'shape' => 'String', 'locationName' => 'data', ], ], ], 'UserGroupStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'UserGroup', ], ], 'UserIdGroupPair' => [ 'type' => 'structure', 'members' => [ 'UserId' => [ 'shape' => 'String', 'locationName' => 'userId', ], 'GroupName' => [ 'shape' => 'String', 'locationName' => 'groupName', ], 'GroupId' => [ 'shape' => 'String', 'locationName' => 'groupId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'VpcPeeringConnectionId' => [ 'shape' => 'String', 'locationName' => 'vpcPeeringConnectionId', ], 'PeeringStatus' => [ 'shape' => 'String', 'locationName' => 'peeringStatus', ], ], ], 'UserIdGroupPairList' => [ 'type' => 'list', 'member' => [ 'shape' => 'UserIdGroupPair', 'locationName' => 'item', ], ], 'UserIdGroupPairSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'UserIdGroupPair', 'locationName' => 'item', ], ], 'UserIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'UserId', ], ], 'ValueStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'item', ], ], 'VgwTelemetry' => [ 'type' => 'structure', 'members' => [ 'OutsideIpAddress' => [ 'shape' => 'String', 'locationName' => 'outsideIpAddress', ], 'Status' => [ 'shape' => 'TelemetryStatus', 'locationName' => 'status', ], 'LastStatusChange' => [ 'shape' => 'DateTime', 'locationName' => 'lastStatusChange', ], 'StatusMessage' => [ 'shape' => 'String', 'locationName' => 'statusMessage', ], 'AcceptedRouteCount' => [ 'shape' => 'Integer', 'locationName' => 'acceptedRouteCount', ], ], ], 'VgwTelemetryList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VgwTelemetry', 'locationName' => 'item', ], ], 'VirtualizationType' => [ 'type' => 'string', 'enum' => [ 'hvm', 'paravirtual', ], ], 'Volume' => [ 'type' => 'structure', 'members' => [ 'VolumeId' => [ 'shape' => 'String', 'locationName' => 'volumeId', ], 'Size' => [ 'shape' => 'Integer', 'locationName' => 'size', ], 'SnapshotId' => [ 'shape' => 'String', 'locationName' => 'snapshotId', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'State' => [ 'shape' => 'VolumeState', 'locationName' => 'status', ], 'CreateTime' => [ 'shape' => 'DateTime', 'locationName' => 'createTime', ], 'Attachments' => [ 'shape' => 'VolumeAttachmentList', 'locationName' => 'attachmentSet', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], 'VolumeType' => [ 'shape' => 'VolumeType', 'locationName' => 'volumeType', ], 'Iops' => [ 'shape' => 'Integer', 'locationName' => 'iops', ], 'Encrypted' => [ 'shape' => 'Boolean', 'locationName' => 'encrypted', ], 'KmsKeyId' => [ 'shape' => 'String', 'locationName' => 'kmsKeyId', ], ], ], 'VolumeAttachment' => [ 'type' => 'structure', 'members' => [ 'VolumeId' => [ 'shape' => 'String', 'locationName' => 'volumeId', ], 'InstanceId' => [ 'shape' => 'String', 'locationName' => 'instanceId', ], 'Device' => [ 'shape' => 'String', 'locationName' => 'device', ], 'State' => [ 'shape' => 'VolumeAttachmentState', 'locationName' => 'status', ], 'AttachTime' => [ 'shape' => 'DateTime', 'locationName' => 'attachTime', ], 'DeleteOnTermination' => [ 'shape' => 'Boolean', 'locationName' => 'deleteOnTermination', ], ], ], 'VolumeAttachmentList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VolumeAttachment', 'locationName' => 'item', ], ], 'VolumeAttachmentState' => [ 'type' => 'string', 'enum' => [ 'attaching', 'attached', 'detaching', 'detached', ], ], 'VolumeAttributeName' => [ 'type' => 'string', 'enum' => [ 'autoEnableIO', 'productCodes', ], ], 'VolumeDetail' => [ 'type' => 'structure', 'required' => [ 'Size', ], 'members' => [ 'Size' => [ 'shape' => 'Long', 'locationName' => 'size', ], ], ], 'VolumeIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'VolumeId', ], ], 'VolumeList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Volume', 'locationName' => 'item', ], ], 'VolumeState' => [ 'type' => 'string', 'enum' => [ 'creating', 'available', 'in-use', 'deleting', 'deleted', 'error', ], ], 'VolumeStatusAction' => [ 'type' => 'structure', 'members' => [ 'Code' => [ 'shape' => 'String', 'locationName' => 'code', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'EventType' => [ 'shape' => 'String', 'locationName' => 'eventType', ], 'EventId' => [ 'shape' => 'String', 'locationName' => 'eventId', ], ], ], 'VolumeStatusActionsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VolumeStatusAction', 'locationName' => 'item', ], ], 'VolumeStatusDetails' => [ 'type' => 'structure', 'members' => [ 'Name' => [ 'shape' => 'VolumeStatusName', 'locationName' => 'name', ], 'Status' => [ 'shape' => 'String', 'locationName' => 'status', ], ], ], 'VolumeStatusDetailsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VolumeStatusDetails', 'locationName' => 'item', ], ], 'VolumeStatusEvent' => [ 'type' => 'structure', 'members' => [ 'EventType' => [ 'shape' => 'String', 'locationName' => 'eventType', ], 'Description' => [ 'shape' => 'String', 'locationName' => 'description', ], 'NotBefore' => [ 'shape' => 'DateTime', 'locationName' => 'notBefore', ], 'NotAfter' => [ 'shape' => 'DateTime', 'locationName' => 'notAfter', ], 'EventId' => [ 'shape' => 'String', 'locationName' => 'eventId', ], ], ], 'VolumeStatusEventsList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VolumeStatusEvent', 'locationName' => 'item', ], ], 'VolumeStatusInfo' => [ 'type' => 'structure', 'members' => [ 'Status' => [ 'shape' => 'VolumeStatusInfoStatus', 'locationName' => 'status', ], 'Details' => [ 'shape' => 'VolumeStatusDetailsList', 'locationName' => 'details', ], ], ], 'VolumeStatusInfoStatus' => [ 'type' => 'string', 'enum' => [ 'ok', 'impaired', 'insufficient-data', ], ], 'VolumeStatusItem' => [ 'type' => 'structure', 'members' => [ 'VolumeId' => [ 'shape' => 'String', 'locationName' => 'volumeId', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'VolumeStatus' => [ 'shape' => 'VolumeStatusInfo', 'locationName' => 'volumeStatus', ], 'Events' => [ 'shape' => 'VolumeStatusEventsList', 'locationName' => 'eventsSet', ], 'Actions' => [ 'shape' => 'VolumeStatusActionsList', 'locationName' => 'actionsSet', ], ], ], 'VolumeStatusList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VolumeStatusItem', 'locationName' => 'item', ], ], 'VolumeStatusName' => [ 'type' => 'string', 'enum' => [ 'io-enabled', 'io-performance', ], ], 'VolumeType' => [ 'type' => 'string', 'enum' => [ 'standard', 'io1', 'gp2', 'sc1', 'st1', ], ], 'Vpc' => [ 'type' => 'structure', 'members' => [ 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'State' => [ 'shape' => 'VpcState', 'locationName' => 'state', ], 'CidrBlock' => [ 'shape' => 'String', 'locationName' => 'cidrBlock', ], 'DhcpOptionsId' => [ 'shape' => 'String', 'locationName' => 'dhcpOptionsId', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], 'InstanceTenancy' => [ 'shape' => 'Tenancy', 'locationName' => 'instanceTenancy', ], 'IsDefault' => [ 'shape' => 'Boolean', 'locationName' => 'isDefault', ], ], ], 'VpcAttachment' => [ 'type' => 'structure', 'members' => [ 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'State' => [ 'shape' => 'AttachmentStatus', 'locationName' => 'state', ], ], ], 'VpcAttachmentList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VpcAttachment', 'locationName' => 'item', ], ], 'VpcAttributeName' => [ 'type' => 'string', 'enum' => [ 'enableDnsSupport', 'enableDnsHostnames', ], ], 'VpcClassicLink' => [ 'type' => 'structure', 'members' => [ 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'ClassicLinkEnabled' => [ 'shape' => 'Boolean', 'locationName' => 'classicLinkEnabled', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], ], ], 'VpcClassicLinkIdList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'VpcId', ], ], 'VpcClassicLinkList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VpcClassicLink', 'locationName' => 'item', ], ], 'VpcEndpoint' => [ 'type' => 'structure', 'members' => [ 'VpcEndpointId' => [ 'shape' => 'String', 'locationName' => 'vpcEndpointId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'ServiceName' => [ 'shape' => 'String', 'locationName' => 'serviceName', ], 'State' => [ 'shape' => 'State', 'locationName' => 'state', ], 'PolicyDocument' => [ 'shape' => 'String', 'locationName' => 'policyDocument', ], 'RouteTableIds' => [ 'shape' => 'ValueStringList', 'locationName' => 'routeTableIdSet', ], 'CreationTimestamp' => [ 'shape' => 'DateTime', 'locationName' => 'creationTimestamp', ], ], ], 'VpcEndpointSet' => [ 'type' => 'list', 'member' => [ 'shape' => 'VpcEndpoint', 'locationName' => 'item', ], ], 'VpcIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'VpcId', ], ], 'VpcList' => [ 'type' => 'list', 'member' => [ 'shape' => 'Vpc', 'locationName' => 'item', ], ], 'VpcPeeringConnection' => [ 'type' => 'structure', 'members' => [ 'AccepterVpcInfo' => [ 'shape' => 'VpcPeeringConnectionVpcInfo', 'locationName' => 'accepterVpcInfo', ], 'ExpirationTime' => [ 'shape' => 'DateTime', 'locationName' => 'expirationTime', ], 'RequesterVpcInfo' => [ 'shape' => 'VpcPeeringConnectionVpcInfo', 'locationName' => 'requesterVpcInfo', ], 'Status' => [ 'shape' => 'VpcPeeringConnectionStateReason', 'locationName' => 'status', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], 'VpcPeeringConnectionId' => [ 'shape' => 'String', 'locationName' => 'vpcPeeringConnectionId', ], ], ], 'VpcPeeringConnectionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VpcPeeringConnection', 'locationName' => 'item', ], ], 'VpcPeeringConnectionOptionsDescription' => [ 'type' => 'structure', 'members' => [ 'AllowEgressFromLocalClassicLinkToRemoteVpc' => [ 'shape' => 'Boolean', 'locationName' => 'allowEgressFromLocalClassicLinkToRemoteVpc', ], 'AllowEgressFromLocalVpcToRemoteClassicLink' => [ 'shape' => 'Boolean', 'locationName' => 'allowEgressFromLocalVpcToRemoteClassicLink', ], ], ], 'VpcPeeringConnectionStateReason' => [ 'type' => 'structure', 'members' => [ 'Code' => [ 'shape' => 'VpcPeeringConnectionStateReasonCode', 'locationName' => 'code', ], 'Message' => [ 'shape' => 'String', 'locationName' => 'message', ], ], ], 'VpcPeeringConnectionStateReasonCode' => [ 'type' => 'string', 'enum' => [ 'initiating-request', 'pending-acceptance', 'active', 'deleted', 'rejected', 'failed', 'expired', 'provisioning', 'deleting', ], ], 'VpcPeeringConnectionVpcInfo' => [ 'type' => 'structure', 'members' => [ 'CidrBlock' => [ 'shape' => 'String', 'locationName' => 'cidrBlock', ], 'OwnerId' => [ 'shape' => 'String', 'locationName' => 'ownerId', ], 'VpcId' => [ 'shape' => 'String', 'locationName' => 'vpcId', ], 'PeeringOptions' => [ 'shape' => 'VpcPeeringConnectionOptionsDescription', 'locationName' => 'peeringOptions', ], ], ], 'VpcState' => [ 'type' => 'string', 'enum' => [ 'pending', 'available', ], ], 'VpnConnection' => [ 'type' => 'structure', 'members' => [ 'VpnConnectionId' => [ 'shape' => 'String', 'locationName' => 'vpnConnectionId', ], 'State' => [ 'shape' => 'VpnState', 'locationName' => 'state', ], 'CustomerGatewayConfiguration' => [ 'shape' => 'String', 'locationName' => 'customerGatewayConfiguration', ], 'Type' => [ 'shape' => 'GatewayType', 'locationName' => 'type', ], 'CustomerGatewayId' => [ 'shape' => 'String', 'locationName' => 'customerGatewayId', ], 'VpnGatewayId' => [ 'shape' => 'String', 'locationName' => 'vpnGatewayId', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], 'VgwTelemetry' => [ 'shape' => 'VgwTelemetryList', 'locationName' => 'vgwTelemetry', ], 'Options' => [ 'shape' => 'VpnConnectionOptions', 'locationName' => 'options', ], 'Routes' => [ 'shape' => 'VpnStaticRouteList', 'locationName' => 'routes', ], ], ], 'VpnConnectionIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'VpnConnectionId', ], ], 'VpnConnectionList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VpnConnection', 'locationName' => 'item', ], ], 'VpnConnectionOptions' => [ 'type' => 'structure', 'members' => [ 'StaticRoutesOnly' => [ 'shape' => 'Boolean', 'locationName' => 'staticRoutesOnly', ], ], ], 'VpnConnectionOptionsSpecification' => [ 'type' => 'structure', 'members' => [ 'StaticRoutesOnly' => [ 'shape' => 'Boolean', 'locationName' => 'staticRoutesOnly', ], ], ], 'VpnGateway' => [ 'type' => 'structure', 'members' => [ 'VpnGatewayId' => [ 'shape' => 'String', 'locationName' => 'vpnGatewayId', ], 'State' => [ 'shape' => 'VpnState', 'locationName' => 'state', ], 'Type' => [ 'shape' => 'GatewayType', 'locationName' => 'type', ], 'AvailabilityZone' => [ 'shape' => 'String', 'locationName' => 'availabilityZone', ], 'VpcAttachments' => [ 'shape' => 'VpcAttachmentList', 'locationName' => 'attachments', ], 'Tags' => [ 'shape' => 'TagList', 'locationName' => 'tagSet', ], ], ], 'VpnGatewayIdStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'VpnGatewayId', ], ], 'VpnGatewayList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VpnGateway', 'locationName' => 'item', ], ], 'VpnState' => [ 'type' => 'string', 'enum' => [ 'pending', 'available', 'deleting', 'deleted', ], ], 'VpnStaticRoute' => [ 'type' => 'structure', 'members' => [ 'DestinationCidrBlock' => [ 'shape' => 'String', 'locationName' => 'destinationCidrBlock', ], 'Source' => [ 'shape' => 'VpnStaticRouteSource', 'locationName' => 'source', ], 'State' => [ 'shape' => 'VpnState', 'locationName' => 'state', ], ], ], 'VpnStaticRouteList' => [ 'type' => 'list', 'member' => [ 'shape' => 'VpnStaticRoute', 'locationName' => 'item', ], ], 'VpnStaticRouteSource' => [ 'type' => 'string', 'enum' => [ 'Static', ], ], 'ZoneNameStringList' => [ 'type' => 'list', 'member' => [ 'shape' => 'String', 'locationName' => 'ZoneName', ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/data/ec2/2015-10-01/waiters-2.json.php:return [ 'version' => 2, 'waiters' => [ 'InstanceExists' => [ 'delay' => 5, 'maxAttempts' => 40, 'operation' => 'DescribeInstances', 'acceptors' => [ [ 'matcher' => 'path', 'expected' => true, 'argument' => 'length(Reservations[]) > `0`', 'state' => 'success', ], [ 'matcher' => 'error', 'expected' => 'InvalidInstanceID.NotFound', 'state' => 'retry', ], ], ], 'BundleTaskComplete' => [ 'delay' => 15, 'operation' => 'DescribeBundleTasks', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'complete', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'BundleTasks[].State', ], [ 'expected' => 'failed', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'BundleTasks[].State', ], ], ], 'ConversionTaskCancelled' => [ 'delay' => 15, 'operation' => 'DescribeConversionTasks', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'cancelled', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'ConversionTasks[].State', ], ], ], 'ConversionTaskCompleted' => [ 'delay' => 15, 'operation' => 'DescribeConversionTasks', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'completed', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'ConversionTasks[].State', ], [ 'expected' => 'cancelled', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'ConversionTasks[].State', ], [ 'expected' => 'cancelling', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'ConversionTasks[].State', ], ], ], 'ConversionTaskDeleted' => [ 'delay' => 15, 'operation' => 'DescribeConversionTasks', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'deleted', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'ConversionTasks[].State', ], ], ], 'CustomerGatewayAvailable' => [ 'delay' => 15, 'operation' => 'DescribeCustomerGateways', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'available', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'CustomerGateways[].State', ], [ 'expected' => 'deleted', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'CustomerGateways[].State', ], [ 'expected' => 'deleting', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'CustomerGateways[].State', ], ], ], 'ExportTaskCancelled' => [ 'delay' => 15, 'operation' => 'DescribeExportTasks', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'cancelled', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'ExportTasks[].State', ], ], ], 'ExportTaskCompleted' => [ 'delay' => 15, 'operation' => 'DescribeExportTasks', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'completed', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'ExportTasks[].State', ], ], ], 'ImageExists' => [ 'operation' => 'DescribeImages', 'maxAttempts' => 40, 'delay' => 15, 'acceptors' => [ [ 'matcher' => 'path', 'expected' => true, 'argument' => 'length(Images[]) > `0`', 'state' => 'success', ], [ 'matcher' => 'error', 'expected' => 'InvalidAMIID.NotFound', 'state' => 'retry', ], ], ], 'ImageAvailable' => [ 'operation' => 'DescribeImages', 'maxAttempts' => 40, 'delay' => 15, 'acceptors' => [ [ 'state' => 'success', 'matcher' => 'pathAll', 'argument' => 'Images[].State', 'expected' => 'available', ], [ 'state' => 'failure', 'matcher' => 'pathAny', 'argument' => 'Images[].State', 'expected' => 'failed', ], ], ], 'InstanceRunning' => [ 'delay' => 15, 'operation' => 'DescribeInstances', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'running', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'Reservations[].Instances[].State.Name', ], [ 'expected' => 'shutting-down', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'Reservations[].Instances[].State.Name', ], [ 'expected' => 'terminated', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'Reservations[].Instances[].State.Name', ], [ 'expected' => 'stopping', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'Reservations[].Instances[].State.Name', ], [ 'matcher' => 'error', 'expected' => 'InvalidInstanceID.NotFound', 'state' => 'retry', ], ], ], 'InstanceStatusOk' => [ 'operation' => 'DescribeInstanceStatus', 'maxAttempts' => 40, 'delay' => 15, 'acceptors' => [ [ 'state' => 'success', 'matcher' => 'pathAll', 'argument' => 'InstanceStatuses[].InstanceStatus.Status', 'expected' => 'ok', ], [ 'matcher' => 'error', 'expected' => 'InvalidInstanceID.NotFound', 'state' => 'retry', ], ], ], 'InstanceStopped' => [ 'delay' => 15, 'operation' => 'DescribeInstances', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'stopped', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'Reservations[].Instances[].State.Name', ], [ 'expected' => 'pending', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'Reservations[].Instances[].State.Name', ], [ 'expected' => 'terminated', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'Reservations[].Instances[].State.Name', ], ], ], 'InstanceTerminated' => [ 'delay' => 15, 'operation' => 'DescribeInstances', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'terminated', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'Reservations[].Instances[].State.Name', ], [ 'expected' => 'pending', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'Reservations[].Instances[].State.Name', ], [ 'expected' => 'stopping', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'Reservations[].Instances[].State.Name', ], ], ], 'KeyPairExists' => [ 'operation' => 'DescribeKeyPairs', 'delay' => 5, 'maxAttempts' => 6, 'acceptors' => [ [ 'expected' => true, 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'length(KeyPairs[].KeyName) > `0`', ], [ 'expected' => 'InvalidKeyPair.NotFound', 'matcher' => 'error', 'state' => 'retry', ], ], ], 'NatGatewayAvailable' => [ 'operation' => 'DescribeNatGateways', 'delay' => 15, 'maxAttempts' => 40, 'acceptors' => [ [ 'state' => 'success', 'matcher' => 'pathAll', 'argument' => 'NatGateways[].State', 'expected' => 'available', ], [ 'state' => 'failure', 'matcher' => 'pathAny', 'argument' => 'NatGateways[].State', 'expected' => 'failed', ], [ 'state' => 'failure', 'matcher' => 'pathAny', 'argument' => 'NatGateways[].State', 'expected' => 'deleting', ], [ 'state' => 'failure', 'matcher' => 'pathAny', 'argument' => 'NatGateways[].State', 'expected' => 'deleted', ], [ 'state' => 'retry', 'matcher' => 'error', 'expected' => 'NatGatewayNotFound', ], ], ], 'NetworkInterfaceAvailable' => [ 'operation' => 'DescribeNetworkInterfaces', 'delay' => 20, 'maxAttempts' => 10, 'acceptors' => [ [ 'expected' => 'available', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'NetworkInterfaces[].Status', ], [ 'expected' => 'InvalidNetworkInterfaceID.NotFound', 'matcher' => 'error', 'state' => 'failure', ], ], ], 'PasswordDataAvailable' => [ 'operation' => 'GetPasswordData', 'maxAttempts' => 40, 'delay' => 15, 'acceptors' => [ [ 'state' => 'success', 'matcher' => 'path', 'argument' => 'length(PasswordData) > `0`', 'expected' => true, ], ], ], 'SnapshotCompleted' => [ 'delay' => 15, 'operation' => 'DescribeSnapshots', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'completed', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'Snapshots[].State', ], ], ], 'SpotInstanceRequestFulfilled' => [ 'operation' => 'DescribeSpotInstanceRequests', 'maxAttempts' => 40, 'delay' => 15, 'acceptors' => [ [ 'state' => 'success', 'matcher' => 'pathAll', 'argument' => 'SpotInstanceRequests[].Status.Code', 'expected' => 'fulfilled', ], [ 'state' => 'failure', 'matcher' => 'pathAny', 'argument' => 'SpotInstanceRequests[].Status.Code', 'expected' => 'schedule-expired', ], [ 'state' => 'failure', 'matcher' => 'pathAny', 'argument' => 'SpotInstanceRequests[].Status.Code', 'expected' => 'canceled-before-fulfillment', ], [ 'state' => 'failure', 'matcher' => 'pathAny', 'argument' => 'SpotInstanceRequests[].Status.Code', 'expected' => 'bad-parameters', ], [ 'state' => 'failure', 'matcher' => 'pathAny', 'argument' => 'SpotInstanceRequests[].Status.Code', 'expected' => 'system-error', ], ], ], 'SubnetAvailable' => [ 'delay' => 15, 'operation' => 'DescribeSubnets', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'available', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'Subnets[].State', ], ], ], 'SystemStatusOk' => [ 'operation' => 'DescribeInstanceStatus', 'maxAttempts' => 40, 'delay' => 15, 'acceptors' => [ [ 'state' => 'success', 'matcher' => 'pathAll', 'argument' => 'InstanceStatuses[].SystemStatus.Status', 'expected' => 'ok', ], ], ], 'VolumeAvailable' => [ 'delay' => 15, 'operation' => 'DescribeVolumes', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'available', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'Volumes[].State', ], [ 'expected' => 'deleted', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'Volumes[].State', ], ], ], 'VolumeDeleted' => [ 'delay' => 15, 'operation' => 'DescribeVolumes', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'deleted', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'Volumes[].State', ], [ 'matcher' => 'error', 'expected' => 'InvalidVolume.NotFound', 'state' => 'success', ], ], ], 'VolumeInUse' => [ 'delay' => 15, 'operation' => 'DescribeVolumes', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'in-use', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'Volumes[].State', ], [ 'expected' => 'deleted', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'Volumes[].State', ], ], ], 'VpcAvailable' => [ 'delay' => 15, 'operation' => 'DescribeVpcs', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'available', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'Vpcs[].State', ], ], ], 'VpnConnectionAvailable' => [ 'delay' => 15, 'operation' => 'DescribeVpnConnections', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'available', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'VpnConnections[].State', ], [ 'expected' => 'deleting', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'VpnConnections[].State', ], [ 'expected' => 'deleted', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'VpnConnections[].State', ], ], ], 'VpnConnectionDeleted' => [ 'delay' => 15, 'operation' => 'DescribeVpnConnections', 'maxAttempts' => 40, 'acceptors' => [ [ 'expected' => 'deleted', 'matcher' => 'pathAll', 'state' => 'success', 'argument' => 'VpnConnections[].State', ], [ 'expected' => 'pending', 'matcher' => 'pathAny', 'state' => 'failure', 'argument' => 'VpnConnections[].State', ], ], ], 'VpcPeeringConnectionExists' => [ 'delay' => 15, 'operation' => 'DescribeVpcPeeringConnections', 'maxAttempts' => 40, 'acceptors' => [ [ 'matcher' => 'status', 'expected' => 200, 'state' => 'success', ], [ 'matcher' => 'error', 'expected' => 'InvalidVpcPeeringConnectionID.NotFound', 'state' => 'retry', ], ], ], ],];
/Users/a01064483/desktop/current/exam/Aws/MultiRegionClient.php:     * Create a command for an operation name.
/Users/a01064483/desktop/current/exam/Aws/MultiRegionClient.php:     *   request that is serialized for this command. Available keys include
/Users/a01064483/desktop/current/exam/Aws/Exception/CouldNotCreateChecksumException.php:            . "calculated for the provided upload body, because it was not "
/Users/a01064483/desktop/current/exam/Aws/Exception/CouldNotCreateChecksumException.php:            . "use a seekable stream for the body, or 3) wrap the non-seekable "
/Users/a01064483/desktop/current/exam/Aws/Exception/AwsException.php:        // PHP strangely shows the innermost exception first before the outer
/Users/a01064483/desktop/current/exam/Aws/Exception/AwsException.php:        // exception message. It also has a default character limit for
/Users/a01064483/desktop/current/exam/Aws/Exception/AwsException.php:     * Get all transfer information as an associative array if no $name
/Users/a01064483/desktop/current/exam/Aws/Exception/AwsException.php:     * Replace the transfer information associated with an exception.
/Users/a01064483/desktop/current/exam/Aws/Exception/MultipartUploadException.php:        $msg = 'An exception occurred while performing a multipart upload';
/Users/a01064483/desktop/current/exam/Aws/Exception/MultipartUploadException.php:            $msg = strtr($msg, ['performing' => 'uploading parts to']);
/Users/a01064483/desktop/current/exam/Aws/Exception/MultipartUploadException.php:            foreach ($prev as $part => $error) {
/Users/a01064483/desktop/current/exam/Aws/Exception/MultipartUploadException.php:                $msg = strtr($msg, ['performing' => $action]);
/Users/a01064483/desktop/current/exam/Aws/Sts/StsClient.php:                ? (int) $c['Expiration']->format('U')
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialsInterface.php: * Provides access to the AWS credentials used for accessing AWS services: AWS
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialsInterface.php:     * Returns the AWS access key ID for this credentials object.
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialsInterface.php:     * Returns the AWS secret access key for this credentials object.
/Users/a01064483/desktop/current/exam/Aws/Credentials/Credentials.php:     * @param int    $expires UNIX timestamp for when credentials expire
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialProvider.php:     * Create a default credential provider that first checks for environment
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialProvider.php:     * variables, then checks for the "default" profile in ~/.aws/credentials,
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialProvider.php:     * and finally checks for credentials using EC2 instance profile
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialProvider.php:        $promise = Promise\promise_for($creds);
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialProvider.php:                    // Refresh the result and forward the promise.
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialProvider.php:                return Promise\promise_for($found);
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialProvider.php:                return Promise\promise_for(
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialProvider.php:     * @see Aws\Credentials\InstanceProfileProvider for $config details.
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialProvider.php:     *                              than looking in the home directory for the
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialProvider.php:            return Promise\promise_for(
/Users/a01064483/desktop/current/exam/Aws/Credentials/CredentialProvider.php:        // Get the HOMEDRIVE and HOMEPATH values for Windows hosts
/Users/a01064483/desktop/current/exam/Aws/Route53/Route53Client.php:                foreach (['Id', 'HostedZoneId', 'DelegationSetId'] as $clean) {
/Users/a01064483/desktop/current/exam/Aws/Ec2/CopySnapshotMiddleware.php:        // Serialize a request for the CopySnapshot operation.
/Users/a01064483/desktop/current/exam/Aws/Ec2/CopySnapshotMiddleware.php:        // Create the new endpoint for the target endpoint.
/Users/a01064483/desktop/current/exam/Aws/Ec2/CopySnapshotMiddleware.php:        // Create a presigned URL for our generated request.
/Users/a01064483/desktop/current/exam/Aws/Ec2/Ec2Client.php:            . 'for you on your behalf.</div>';
/Users/a01064483/desktop/current/exam/Aws/ResultInterface.php:     * Provides debug information about the result object
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ElastiCache` - Added support for exporting a Redis snapshot
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for accessing instance console screenshot
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Rds` - Added support for cross-account snapshot sharing
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ApplicationAutoScaling` - Added support for `Aws\ApplicationAutoScaling`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Firehose` - Added support for configurable retry window for
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ecs` - Added support for status of ListTaskDefinitionFamilies
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\WorkSpaces` - Added support for tagging to categorize `Amazon WorkSpaces`,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ApplicationDiscoveryService` - Added support for `Aws Discovery` service
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFormation` - Added support for `ExecutionStatus` in `ChangeSets`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for identifying stale security groups in VPC
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ssm` - Added support for document sharing feature
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\` - Added support for new region and endpoints
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Emr` - Added support for ListInstances API having filter on instance state
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ImportExport` - Added support for `Aws\ImportExport` service
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ApiGateway` - Added support for additional field on Integration to
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ecs` - Added support for non-comprehensive logDriver enum
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Kms` - Added support for "pro-lockout" flag
/Users/a01064483/desktop/current/exam/CHANGELOG.md: * `Aws\OpsWorks` - Added support for default tenancy selection
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\OpsWorks` - Added support for default tenancy selection.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Route53Domains` - Added support for getting contact reachability status
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for ClassicLink over VPC peering
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for Post Object Signature V4
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Fixed Content-MD5 header for PutBucketReplication
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Acm` - Added support for tagging.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Emr` - Added support for smart targeted resizing.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Iot` - Added support for specifying the SQL rules engine to be used.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CognitoIdentityProvider` - Added support for the **Amazon Cognito
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ElasticBeanstalk` - Added support for automatic platform version upgrades
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Firehose` - Added support for delivery to AWS Elasticsearch Service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Kinesis` - Added support for enhanced monitoring.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for S3 Accelerate.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Iot` - Added support for registering your own signing CA certificates and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DirectoryService` - Added support for conditional forwarders.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Lambda` - Added support for setting the function runtime as Node.js 4.3,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ApiGateway` - Added support for importing REST APIs.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Route53` - Added support for metric-based and regional health checks.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Sts` - Added support for getting the caller identity.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFormation` - Added support for change sets.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Redshift` - Added support for cluster IAM roles.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Waf` - Added support for XSS protection.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ElastiCache` - Added support for vertical scaling.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Rds` - Added support for joining SQL Server DB instances to Active
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\StorageGateway` - Added support for setting the local console password.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DeviceFarm` - Added support for managing and purchasing offerings.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Rds` - Added support for customizing failover order in Amazon Aurora
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudHsm` - Added support for adding tags to, removing tags from, and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  listing the tags for a given resource.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Iot` - Added support for new Amazon Elasticsearch Service and Amazon
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\MarketplaceMetering` - Added support for the **AWSMarketplace Metering**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for lifecycle expiration policy for incomplete
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  multipart upload and lifecycle expiration policy for expired object delete
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for automatically removing delete markers which have
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for multi-region clients.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CodeDeploy` - Added support for getting deployment groups in batches.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DatabaseMigrationService` - Added support for the **AWS Database
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ses` - Added support for custom MAIL FROM domains.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for collecting transfer statistics.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\GameLift` - Added support for new AutoScaling features.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Iam` - Added support for stable, unique identifying string identifiers on
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Redshift` - Added support for restoring a single table from an Amazon
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CodeCommit` - Added support for repository triggers.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DirectoryService` - Added support for SNS notifications.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for Cross VPC Security Group References with VPC
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ApiGateway` - Added support for flushing all authorizer cache entries on
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudSearchDomain` - Added support for returning field statistics in the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DynamoDb` - Added support for describing account limits.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\AutoScaling` - Added support for specifying an instance ID instead of an
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFormation` - Added support for retaining specific resources when
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFormation` - Added support for adding tags when updating stacks.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Sns` - Added support for specifying an encoding on an SNS action.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Route53` - Added support for SNI health checks.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\StorageGateway` - Added support for creating tapes with barcodes.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CodeDeploy` - Added support for setting up triggers for a deployment
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Emr` - Added support for adding EBS storage to an EMR instance.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Rds` - Added support for cross-account sharing of encrypted DB snapshots.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ApiGateway` - Added support for custom request authorizers.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\AutoScaling` - Added waiters for checking on a group's existence,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Lambda` - Added support for accessing resources in a VPC from a Lambda
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Api` - Added support for specifying what kinds of model constraints to
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\GameLift` - Added support for the **Amazon GameLift** service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\MarketplaceCommerceAnalytics` - Added support for customer defined values.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added an adapter for using an instance of  `Psr\Cache\CacheItemPoolInterface`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Waf` - Added support for size constraints.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ssm` - Added paginators for `ListAssociations`, `ListCommandInvocations`,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ACM` - Added support for the **AWS Certificate Manager** service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFormation` - Added support for continuing update rollbacks.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\IoT` - Added support for topic rules.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DeviceFarm` - Added support for running Appium tests written in Python
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Sts` - Added support for the `RegionDisabledException` (now returned
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFront` - Added support for new origin security features.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudWatchEvents` - Added support for the **Amazon CloudWatch Events**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for scheduled instances.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Fixed support for using `Iterator`s as a source for `Transfer`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for DNS resolution of public hostnames to private IP
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ecr` - Added support for the Amazon EC2 Container Registry.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Emr` - Added support for specifying a service security group when calling
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFront` - Added support for generating signed cookies.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFront` - Added support for GZip compression.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudTrail` - Added support for multi-region trails.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Config` - Added for IAM resource types.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for managed NATs.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Rds` - Added support for enhanced monitoring.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for specifying encryption on CopyImage commands.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\AutoScaling` - Added support for setting and describing instance
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Emr` - Added support for using release labels instead of version numbers.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Rds` - Added support for Aurora encryption at rest.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DirectoryService` - Added support for launching a fully managed Microsoft
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Rds` - Added support for specifying a port number when modifying database
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Route53` - Added support for Traffic Flow, a traffic management service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ses` - Added support for generating SMTP passwords from credentials.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for EC2 dedicated hosts.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ecs` - Added support for task stopped reasons and task start and stop
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ElasticBeanstalk` - Added support for composable web applications.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for the `aws-exec-read` canned ACL on objects.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Inspector` - Added support for client-side validation of required
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Rds` - Added support for snapshot attributes.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ApiGateway` - Added support for stage variables.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DeviceFarm` - Added support for managing projects, device pools, runs,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Sts` - Added support for 64-character role session names.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Iam` - Added support for service-aware policy simulation.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for asynchronous copy and upload.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for setting a location constraint other than the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  support kept for backwards compatibility, but "2015-06-01" should be
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ApiGateway` - Added support for the **AWS API Gateway** service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ssm` - Added support for EC2 Run Command, a new EC2 feature that enables
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\AutoScaling` - Added support for EBS encryption.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Iam` - Added support for resource-based policy simulations.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Kms` - Added support for scheduling and cancelling key deletions and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for specifying server side encryption on an when
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ecs` - Added support for more Docker options hostname, Docker labels,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  hosts (hosts to add to /etc/hosts), and security options (for MLS systems like
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Iot` - Added support for the **AWS IoT** service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\IotDataPlane` - Added support for the **AWS IoT Data Plane** service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Lambda` - Added support for function versioning.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ConfigService` - Added support for config rules, evaluation strategies,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Firehose` - Added support for the **Amazon Kinesis Firehose** service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Inspector` - Added support for the **Amazon Inspector** service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Kinesis` - Added support for increasing and decreasing stream retention
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\MarketplaceCommerceAnalytics` - Added support for the **AWS Marketplace
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFront` - Added support for WebACL identifiers and related
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for spot blocks.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Waf` - Added support for AWS WAF.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Cloudtrail` - Added support for log file integrity validation, log
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ElasticsearchService` - Added support for the Amazon Elasticsearch
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Rds` - Added support for resource tags.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for copying objects of any size.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Workspaces` - Added support for storage volume encryption with AWS KMS.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFormation` - Added support for specifying affected resource types
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFormation` - Added support for the `DescribeAccountLimits` API.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ses` - Added support for inbound email APIs.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed validation to allow using objects implementing `__toString` for string
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added performance tests to the acceptance test suite.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for reading the `aws_session_token` parameter from credentials
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudWatchLogs` - Added support for export task operations.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for new `STANDARD_IA` storage class.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for specifying storage class in cross-region
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for the "diversified" SpotFleet allocation strategy.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for reading `StateMessage` and `DataEncryptionKeyId`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Efs` - Added support for using a `MountTargetId` parameter instead of a
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Route53` - Added support for calculated and latency health checks.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Iam` - Added support for new policy simulation APIs.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Kinesis` - Added support for timestamped GetRecords call.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for retrying special error cases with the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\StorageGateway` - Added support for tagging and untagging resources.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for using instance weights with the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ConfigService` - Added support for the `ListDiscoveredResources`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CodePipeline` - Added support for using encryption keys with artifact
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for event notification filters.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for per-command retry count overrides.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for defining custom patterns for the client debug log to use
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ElasticBeanstalk` - Added support for enhanced health reporting.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Swf` - Added support for invoking AWS Lambda tasks from an Amazon SWF
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DeviceFarm` - Added support for the `GetAccountSettings` operation and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for custom user-agent additions.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\OpsWorks` - Added support for operations on ECS clusters.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Rds` - Added support for cluster operations for Amazon Aurora.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for receiving the storage class in the responses for
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudWatchLogs` - Added support for 4 new operations: `PutDestination`,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for SpotFleetLaunchSpecification.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Emr` - Added support for Amazon EMR release 4.0.0, which includes a new
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  Hadoop, Hive, and Spark, and now uses open source standards for ports and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Glacier` - Added support for the InitiateVaultLock, GetVaultLock,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DeviceFarm` - Added support for AWS DeviceFarm, an app testing service
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DynamoDb` - Added support for consistent scans and update streams.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DynamoDbStreams` - Added support for Amazon DynamoDB Streams, giving you
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CodeCommit` - Added support for AWS CodeCommit, a secure, highly
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CodePipeline` - Added support for AWS CodePipeline, a continuous delivery
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Iam` - Added support for uploading SSH public keys for authentication
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ses` - Added support for cross-account sending through the sending
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\AutoScaling` - Added support for step policies.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DynamoDb` - Improved performance when unmarshalling complex documents.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for encrypted snapshots.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for user-provided SHA256 checksums for S3 uploads.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for custom protocols in `Aws\S3\StreamWrapper`.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFront` - Added support for configurable `MaxTTL` and `DefaultTTL`.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ConfigService` - Added support for recording changes for specific
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ecs` - Added support for sorting, deregistering, and overriding
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  environment variables for task definitions.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Glacier` - Added support for the `AddTagsToVault`, `ListTagsForVault`,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\OpwWorks` - Added support for specifying agent versions to be used on
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Redshift` - Added support for the `CreateSnapshotCopyGrant`,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ecs` - Added support for sorting, deregistering, and overriding
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  environment variables for task definitions.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for the `SaveAs` parameter that was in V2.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\AutoScaling` - Added support for attaching and detaching load balancers.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudWatchLogs` - Added support for the PutSubscriptionFilter,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CognitoIdentity` - Added support for the DeleteIdentities operation,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for VPC flow logs and the M4 instance types.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ecs` - Added support for the UpdateContainerAgent operation.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\StorageGateway` - Added support for the ListVolumeInitiators operation.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:    * Improved performance of concurrent/batched requests via _command pools_.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Middleware system for customizing service client behavior.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Flexible _paginators_ for iterating through paginated results.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Strictly follows the [SemVer](http://semver.org/) standard going forward.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Efs` - Added support for the [Amazon Elastic File System (Amazon
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ElasticBeanstalk` - Added support for ResourceName configuration.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ElasticTranscoder` - Added support for configuring AudioPackingMode and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Kinesis` - Added support for MillisBehindLatest in the result of
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Kms` - Added support for the UpdateAlias operation.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2\Ec2Client` - Added support for the new spot fleet API operations.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\OpsWorks\OpsWorksClient` - Added support for custom auto-scaling based
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DirectoryService` - Added support for the AWS Directory Service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudWatchLogs` - Adds support for the FilterLogEvents operation.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Adds support for Amazon VPC endpoints for Amazon S3 and APIs for
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Glacier` - Added support for vault access policies.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Expiring instance metadata credentials 30 minutes in advance for more eager
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  refreshes before the credentials expire.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ec2` - Added support for new VM Import APIs, `including ImportImage`.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Iam` - Added support for the `GetAccessKeyLastUsed` operation.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CognitoSync` - Added support for events.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:for details about any changes you may need to make to your code for this upgrade.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\MachineLearning` - Added support for the Amazon Machine Learning service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\WorkSpaces` - Added support for the Amazon WorkSpaces service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ecs` - Added support for the ECS service scheduler operations.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for the `getBucketNotificationConfiguration` and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* [BC] `Aws\Lambda` - Added support for the new AWS Lambda API, which has been
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  methods to the `ServiceResponseException` to be forward-compatible with
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DataPipeline` - Added support for `DeactivatePipeline`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ElasticBeanstalk` - Added support for `AbortEnvironmentUpdate`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Rds` - Added support for the `DescribeCertificates` operation.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ElasticTranscoder` - Added support for protecting content with PlayReady
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ElasticTranscoder` - Added support for job timing.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for cross-region replication.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\S3` - Added support for ["Requester Pays" buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html).
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudTrail` - Added support for the `LookupEvents` operation.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CognitoSync` - Added support for Amazon Cognito Streams.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\DataPipeline` - Added support for pipeline tagging via the `AddTags` and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Route53` - Added support for the `GetHostedZoneCount` and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\CloudFront` - Added support for origin paths in web distributions.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ecs` - Added support for specifying volumes and mount points. Also
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\ElasticTranscoder` - Added support for cross-regional resource warnings.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Route53Domains` - Add iterators for `ListDomains` and `ListOperations`.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Ssm` - Added support for the **Amazon Simple Systems Management Service
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `Aws\Sts` - Added support for regional endpoints.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Changed our CHANGELOG format. ;-)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for named and managed policies to the IAM client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for tagging operations to the Route 53 Domains client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for tagging operations to the ElastiCache client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the Scan API for secondary indexes to the DynamoDB client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added forward compatibility for the `'credentials'`, `'endpoint'`, and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for `getShippingLabel` to the AWS Import/Export client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for online indexing to the DynamoDB client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for custom security groups to the Amazon EMR client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the latest APIs to the Amazon Cognito Identity client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for ClassicLink to the Auto Scaling client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added the ability to set a client's API version to "latest" for forwards
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for [HLS Content Protection](https://aws.amazon.com/releasenotes/3388917394239147)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for dynamic fields to the Amazon CloudSearch client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the ClassicLink feature to the Amazon EC2 client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for task priorities to Amazon Simple Workflow Service.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for for the new ResetCache API operation to AWS Storage Gateway.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for user data to Amazon Elastic Transcoder.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for data retrieval policies and audit logging to the Amazon
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* The Amazon Simple Queue Service client adds support for the PurgeQueue
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the `PutRecords` batch operation to `KinesisClient`.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the `GetAccountAuthorizationDetails` operation to the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the `UpdateHostedZoneComment` operation to `Route53Client`.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added iterators for `ListEventSources` and `ListFunctions` operations the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  or native PHP arrays to the format that DynamoDB requires. You can also
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for media file encryption to Amazon Elastic Transcoder.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using AWS Data Pipeline templates to create pipelines and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for AWS KMS integration to the Amazon Redshift Client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed cn-north-1 endpoint for AWS Identity and Access Management.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for AWS Lambda.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for event notifications to the Amazon S3 client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the AWS Key Management Service (AWS KMS).
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for AWS CodeDeploy.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for AWS Config.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for AWS KMS encryption to the Amazon S3 client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for AWS KMS encryption to the Amazon EC2 client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for Amazon CloudWatch Logs delivery to the AWS CloudTrail
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for private DNS for Amazon Virtual Private Clouds, health check
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for configuring push synchronization to the Cognito Sync client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* `version` and `region` are noww required parameter for each client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* More information to follow.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for advanced Japanese language processing to the Amazon
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  for the new data types (`L`, `M`, `BOOL`, and `NULL`), nested attributes, and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  `Aws\DynamoDb\DynamoDbClient::formatValue` and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  `Aws\DynamoDb\DynamoDbClient::formatAttribute` methods, since they do not
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for tagging to the Amazon Kinesis client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for setting environment variables to the AWS OpsWorks client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed issue #334 to allow the `before_upload` callback to work in the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for signing requests to the Amazon CloudSearch Domain client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for creating anonymous clients.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for tagging to the Elastic Load Balancing client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for configurable idle timeouts to the Elastic Load Balancing
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for Lifecycle Hooks, Detach Instances, and Standby to the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for creating Amazon ElastiCache for Memcached clusters with
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added minor fixes to the Amazon EC2 model for ImportVolume,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for getGeoLocation and listGeoLocations to the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for Amazon Route 53 Domains.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for adding attachments to support case communications to the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for credential reports and password rotation features to the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Cognito Identity**.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Cognito Sync**.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon CloudWatch Logs**.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for editing existing health checks and associating health checks
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the CloudSearchDomain client, which allows you to search and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for delivery notifications to the Amazon SES client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Merged PR #316 as a better solution for issue #309.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for closed captions to the Elastic Transcoder client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for IAM roles to the Elastic MapReduce client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for Amazon S3 server-side encryption using customer-provided
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the [Desired Partition Count scaling
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added cross-region support for the Amazon EC2 CopySnapshot operation.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for tagging environments to the AWS Elastic Beanstalk client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for lifecycles on versioning enabled buckets to the Amazon S3
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Corrected the `CopySourceIfMatch` and `CopySourceIfNoneMatch` parameter for
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the us-west-1, ap-southeast-2, and eu-west-1 regions to the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for Amazon SQS message attributes.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the `~/.aws/credentials` INI file and credential profiles (via the `profile` option) as a safer
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for query filters and improved conditional expressions to the Amazon DynamoDB client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the `ChefConfiguration` parameter to a few operations on the AWS OpsWorks Client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for Redis cache cluster snapshots to the Amazon ElastiCache client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the `PlacementTenancy` parameter to the `CreateLaunchConfiguration` operation of the Auto Scaling
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the new R3 instance types to the Amazon EC2 client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Improved the S3 Stream Wrapper by adding support for deleting pseudo directories (#264), updating error handling
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  (#276), and fixing `is_link()` for non-existent keys (#268).
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  [Upgrading Guide](https://github.com/aws/aws-sdk-php/blob/master/UPGRADING.md) for more details.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the VPC peering features to the Amazon EC2 client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for [resize progress data and the Cluster Revision Number
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for [access logs](http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/access-log-collection.html)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the `AWS_SECRET_ACCESS_KEY` environment variables.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Amazon S3 Stream Wrapper now implements `mkdir()` for nested folders similar to the AWS Management Console.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  destinations and that file key comparisons are accurately performed when determining which files to upload.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for HTTP and HTTPS string-match health checks and HTTPS health checks to the Amazon Route 53 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the UPSERT action for the Amazon Route 53 ChangeResourceRecordSets operation
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for SerialNumber and TokenCode to the AssumeRole operation of the IAM Security Token Service (STS).
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for RequestInterval and FailureThreshold to the Amazon Route53 client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for smooth streaming to the Amazon CloudFront client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Updated iterator configurations for all services to match our new iterator config spec (care was taken to continue
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  supporting manually-specified configurations in the old format to prevent BC)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed several iterator configurations for various services to better support existing operations and parameters
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for dead letter queues to Amazon SQS
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the new M3 medium and large instance types to the Amazon EC2 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using the `eu-west-1` and `us-west-2` regions to the Amazon SES client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Updated Signature V4 logic for Amazon S3 to throw an exception if you attempt to create a presigned URL that expires
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for attaching existing Amazon EC2 instances to an Auto Scaling group to the Auto Scaling client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for creating launch configurations from existing Amazon EC2 instances to the Auto Scaling client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for describing Auto Scaling account limits to the Auto Scaling client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added better support for block device mappings to the Amazon AutoScaling client when creating launch configurations
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for [ranged inventory retrieval](http://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html#api-initiate-job-post-vault-inventory-list-filtering)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the new **China (Beijing) Region** to various services. This region is currently in limited preview.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  Please see <http://www.amazonaws.cn> for more information
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for different audio compression schemes to the Elastic Transcoder client (includes AAC-LC, HE-AAC,
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for preset and pipeline pagination to the Elastic Transcoder client. You can now view more than the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for [geo restriction](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/WorkingWithDownloadDistributions.html#georestrictions)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* [SDK] Added Signature V4 support to the Amazon S3 and Amazon EC2 clients for the new China (Beijing) Region
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  forum](https://forums.aws.amazon.com/ann.jspa?annID=2286). We are calling this out as a breaking change now to
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  for the change
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Kinesis**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added the CloudTrail `LogRecordIterator`, `LogFileIterator`, and `LogFileReader` classes for reading log files
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for resource-level permissions to the AWS OpsWorks client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for worker environment tiers to the AWS Elastic Beanstalk client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the new I2 instance types to the Amazon EC2 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for resource tagging to the Amazon Elastic MapReduce client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for specifying a key encoding type to the Amazon S3 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for global secondary indexes to the Amazon DynamoDB client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed an issue in the waiter factory that caused an error when getting the factory for service clients without any
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for copying DB snapshots from one AWS region to another to the Amazon RDS client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for pagination of the `DescribeInstances` and `DescribeTags` operations to the Amazon EC2 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the new C3 instance types and the g2.2xlarge instance type to the Amazon EC2 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for enabling *Single Root I/O Virtualization* (SR-IOV) support for the new C3 instance types to the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **AWS CloudTrail**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for identity federation using SAML 2.0 to the AWS STS client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for configuring SAML-compliant identity providers to the AWS IAM client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for event notifications to the Amazon Redshift client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for HSM storage for encryption keys to the Amazon Redshift client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for encryption key rotation to the Amazon Redshift client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for database audit logging to the Amazon Redshift client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for [cross-zone load balancing](http://aws.amazon.com/about-aws/whats-new/2013/11/06/elastic-load-balancing-adds-cross-zone-load-balancing/)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for a [new gateway configuration](http://aws.amazon.com/about-aws/whats-new/2013/11/05/aws-storage-gateway-announces-gateway-virtual-tape-library/),
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for stack policies to the the AWS CloudFormation client.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Updated the Amazon Elastic MapReduce client to add support for new EMR APIs, termination of specific cluster
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for audio transcoding features to the Amazon Elastic Transcoder client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for modifying Reserved Instances in a region to the Amazon EC2 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for new resource management features to the AWS OpsWorks client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for additional HTTP methods to the Amazon CloudFront client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for custom error page configuration to the Amazon CloudFront client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the public IP address association of instances in Auto Scaling group via the Auto Scaling client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for tags and filters to various operations in the Amazon RDS client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using the `ap-southeast-2` region to the Amazon Glacier client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using the `ap-southeast-1` and `ap-southeast-2` regions to the Amazon Redshift client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for modifying EC2 Reserved Instances to the Amazon EC2 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for VPC features to the AWS OpsWorks client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed an issue in the S3 signature which ensures that parameters are sorted correctly for signing
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed an issue in the S3 client where the Sydney region was not allowed as a `LocationConstraint` for the
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for replication groups to the Amazon ElastiCache client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using the `us-gov-west-1` region to the AWS CloudFormation client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for assigning a public IP address to an instance at launch to the Amazon EC2 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Updated the Instance Metadata client to allow for higher and more customizable connection timeouts
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* [Docs] Updated the API docs to include sample code for each operation that indicates the parameter structure
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* [Docs] Updated the API docs to include more information in the descriptions of operations and parameters
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for mobile push notifications to the Amazon SNS client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for progress reporting on snapshot restore operations to the the Amazon Redshift client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for cross-account snapshot access control to the Amazon Redshift client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for decoding authorization messages to the AWS STS client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for checking for required permissions via the `DryRun` parameter to the Amazon EC2 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for custom Amazon Machine Images (AMIs) and Chef 11 to the AWS OpsWorks client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for setting watermarks and max framerates to the Amazon Elastic Transcoder client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  operations in a simpler form
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the `cr1.8xlarge` EC2 instance type. Use `Aws\Ec2\Enum\InstanceType::CR1_8XLARGE`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the suppression list SES mailbox simulator. Use `Aws\Ses\Enum\MailboxSimulator::SUPPRESSION_LIST`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* [SDK] Fixed an issue with data formats throughout the SDK due to a regression. Dates are now sent over the wire with
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  the correct format. This issue affected the Amazon EC2, Amazon ElastiCache, AWS Elastic Beanstalk, Amazon EMR, and
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added abstractions for uploading a local directory to an Amazon S3 bucket (`$s3->uploadDirectory()`)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added abstractions for downloading an Amazon S3 bucket to local directory (`$s3->downloadBucket()`)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* [SDK] Added facade classes for simple, static access to clients (e.g., `S3::putObject([...])`)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added the `Aws\S3\S3Client::getObjectUrl` convenience method for getting the URL of an Amazon S3 object. This works
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  for both public and pre-signed URLs
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using the `ap-northeast-1` region to the Amazon Redshift client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for configuring custom SSL certificates to the Amazon CloudFront client via the `ViewerCertificate`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for read replica status to the Amazon RDS client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed an issue so that the `CORSRules.AllowedHeaders` parameter is now available when configuring CORS for Amazon S3
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for web identity federation in the AWS Security Token Service (STS) API
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for doing parallel scans to the Amazon DynamoDB client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* [OpsWorks] Added support for using Elastic Load Balancer to the AWS OpsWorks client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using EBS-backed instances to the AWS OpsWorks client along with some other minor updates
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for finer-grained error messages to the AWS Data Pipeline client and updated the service description
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added a new [Zip Download](http://pear.amazonwebservices.com/get/aws.zip) for installing the SDK
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed the API version for the AWS Support client to be `2013-04-15`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed issue #78 by implementing `Aws\S3\StreamWrapper::stream_cast()` for the S3 stream wrapper
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed issue #80 where the `ETag` was incorrectly labeled as a header value instead of being in the XML body for
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **AWS Support**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using the `eu-west-1` region to the Amazon Redshift client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed an issue where the Amazon S3 class was not throwing an exception for a non-followable 301 redirect response
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed an issue where `fflush()` was called during the shutdown process of the stream handler for read-only streams
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for Local Secondary Indexes to the Amazon DynamoDB client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for automatically retrying *throttled* requests with exponential backoff to all service clients
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using the `us-west-2` region to the Amazon Redshift client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed an issue where service clients with a global endpoint could have their region for signing set incorrectly if a
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* [Docs] Added key information to the DynamoDB service description to provide more accurate API docs for some operations
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for viewing and downloading DB log files to the Amazon RDS client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using the `ap-southeast-2` region with the Amazon ElastiCache client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using the `us-gov-west-1` region with the Amazon SWF client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Elastic MapReduce (Amazon EMR)**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **AWS Direct Connect**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon ElastiCache**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **AWS Storage Gateway**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **AWS Import/Export**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **AWS CloudFormation**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon CloudSearch**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for [provisioned IOPS](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.ProvisionedIOPS.html)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for promoting [read replicas](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for [event notification subscriptions](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html)
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for enabling\disabling DNS Hostnames and DNS Resolution in Amazon VPC to the Amazon EC2 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for enumerating account attributes to the Amazon EC2 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for copying AMIs across regions to the Amazon EC2 client
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using the us-west-1, us-west-2, eu-west-1, and ap-southeast-1 regions with Amazon CloudSearch
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for using SecurityToken with signature version 2 services
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added the client User-Agent header to exception messages for easier debugging
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Updated the Amazon S3 client to parse the AcceptRanges header for HeadObject and GetObject output
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Updated the Amazon Glacier client to allow the `saveAs` parameter to be specified as an alias for `command.response_body`
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Various performance improvements throughout the SDK
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Removed endpoint providers and now placing service region information directly in service descriptions
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **AWS OpsWorks**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Redshift**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Simple Queue Service (Amazon SQS)**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Simple Notification Service (Amazon SNS)**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Simple Email Service (Amazon SES)**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Auto Scaling**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon CloudWatch**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Simple Workflow Service (Amazon SWF)**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Relational Database Service (Amazon RDS)**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for health checks and failover in Amazon Route 53
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Updated `AbstractWaiter` to dispatch `waiter.before_attempt` and `waiter.before_wait` events
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Updated `CallableWaiter` to allow for an array of context data to be passed to the callable
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed issue #29 so that the stat cache is cleared before performing multipart uploads
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed issue #42 to eliminate cURL error 65 for JSON services
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Waiters now require an associative array as input for the underlying operation performed by a waiter. See
/Users/a01064483/desktop/current/exam/CHANGELOG.md:  `UPGRADING.md` for details.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Elastic Compute Cloud (Amazon EC2)**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Elastic Transcoder**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon SimpleDB**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Elastic Load Balancing**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **AWS Elastic Beanstalk**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **AWS Identity and Access Management (IAM)**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for Amazon S3 website redirection rules
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the `RetrieveByteRange` parameter of the `InitiateJob` operation in Amazon Glacier
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for Signature Version 2
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Clients now gain more information from service descriptions rather than client factory methods
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Service descriptions are now versioned for clients
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **AWS Data Pipeline**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Route 53**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Fixed an issue with the service description for the Amazon S3 `UploadPart` operation so that it works correctly
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for the `AssumeRole` operation for AWS STS
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added Content-Type guessing for uploads
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added new region endpoints, including sa-east-1 and us-gov-west-1 for Amazon DynamoDB
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for archiving Amazon S3 objects to Amazon Glacier
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Initial release of the AWS SDK for PHP Version 2. See <http://aws.amazon.com/sdkforphp2/> for more information.
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Simple Storage Service (Amazon S3)**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon DynamoDB**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon Glacier**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **Amazon CloudFront**
/Users/a01064483/desktop/current/exam/CHANGELOG.md:* Added support for **AWS Security Token Service (AWS STS)**
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php: *                     format: "Name: Value"
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php:    foreach ($lines as $line) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php: * @return callable Returns the best handler for the given system.
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php: * Returns the default cacert bundle for the current system.
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php: * If those settings are not configured, then the common locations for
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php: * Note: the result of this function is cached for subsequent calls.
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php:    foreach ($cafiles as $filename) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php:request option. See http://curl.haxx.se/docs/sslcerts.html for more
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php:information.
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php:    foreach (array_keys($headers) as $key) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php:    foreach ($noProxyArray as $area) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php: * Wrapper for json_decode that throws when an error occurs.
/Users/a01064483/desktop/current/exam/GuzzleHttp/functions.php: * Wrapper for JSON encoding that throws when an error occurs.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlFactory.php:            // does not work for some reason, so removing each one
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlFactory.php:        // Get error information and release the handle to the factory.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlFactory.php:        foreach ($conf['_headers'] as $name => $values) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlFactory.php:            foreach ($values as $value) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlFactory.php:        foreach (array_keys($options['_headers']) as $key) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlFactory.php:                $sink = \GuzzleHttp\Psr7\stream_for($sink);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlFactory.php:                // Ensure that the directory exists before failing in curl.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlFactory.php:                    'Directory %s does not exist for sink value of %s',
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlFactory.php:            $easy->sink = Psr7\stream_for($conf[CURLOPT_FILE]);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlFactory.php:        // Retry no more than 3 times before giving up.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlFactory.php:                . 'and did not succeed. The most likely reason for the failure '
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlFactory.php:                . 'https://bugs.php.net/bug.php?id=47204 for more information.';
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlMultiHandler.php:     * - select_timeout: Optional timeout (in seconds) to block before timing
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlMultiHandler.php:            foreach ($this->delays as $id => $delay) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlMultiHandler.php:            // Perform a usleep if a select returns -1.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlMultiHandler.php:            // If there are no transfers, then sleep for the next delay
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/CurlMultiHandler.php:        foreach ($this->delays as $time) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/MockHandler.php:            : \GuzzleHttp\Promise\promise_for($response);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/MockHandler.php:        foreach (func_get_args() as $value) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/Proxy.php: * Provides basic proxies for handlers.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/Proxy.php:     * @param callable $default Handler used for normal responses
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/Proxy.php:     * @param callable $sync    Handler used for synchronous responses.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/Proxy.php:     * This, for example, could be useful for taking advantage of the
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/Proxy.php:     * performance benefits of curl while still supporting true streaming
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/Proxy.php:     * @param callable $default   Handler used for non-streaming responses
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/Proxy.php:     * @param callable $streaming Handler used for streaming responses
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/StreamHandler.php:        $stream = Psr7\stream_for($stream);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/StreamHandler.php:            : Psr7\stream_for($sink);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/StreamHandler.php:                        Psr7\stream_for($stream)
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/StreamHandler.php:            foreach ($errors as $err) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/StreamHandler.php:                foreach ($err as $key => $value) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/StreamHandler.php:            foreach ($options as $key => $value) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/StreamHandler.php:        foreach ($request->getHeaders() as $name => $value) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/StreamHandler.php:            foreach ($value as $val) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/StreamHandler.php:                foreach (array_filter($passed) as $i => $v) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Handler/StreamHandler.php:            foreach ($functions as $fn) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/UriTemplate.php:    /** @var array Hash for quick operator lookups */
/Users/a01064483/desktop/current/exam/GuzzleHttp/UriTemplate.php:        foreach (explode(',', $expression) as $value) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/UriTemplate.php:        foreach ($parsed['values'] as $value) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/UriTemplate.php:                foreach ($variable as $key => $var) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/UriTemplate.php:                                // Nested arrays must allow for deeply nested
/Users/a01064483/desktop/current/exam/GuzzleHttp/UriTemplate.php:                        foreach ($kvp as $k => &$v) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/UriTemplate.php:     * This assumption is a tradeoff for accuracy in favor of speed, but it
/Users/a01064483/desktop/current/exam/GuzzleHttp/UriTemplate.php:     * should work in almost every case where input is supplied for a URI
/Users/a01064483/desktop/current/exam/GuzzleHttp/RedirectMiddleware.php:        // not forcing RFC compliance, but rather emulating what all browsers
/Users/a01064483/desktop/current/exam/GuzzleHttp/Pool.php:        $iterable = \GuzzleHttp\Promise\iter_for($requests);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Pool.php:            foreach ($iterable as $key => $rfn) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Pool.php:     * @throws \InvalidArgumentException if the event format is incorrect.
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:     * appropriate default handler for you system. The returned HandlerStack has
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:     * support for cookies, redirects, HTTP error exceptions, and preparing a body
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:     * before sending.
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:     *                          handler is provided, the best handler for your
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:        foreach (array_reverse($this->stack) as $tuple) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:        foreach (array_keys($stack) as $k) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:     * @param string   $name       Name to register for this middleware.
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:     * @param string   $name       Name to register for this middleware.
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:     * Add a middleware before another middleware by name.
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:     * @param string   $withName   Name to register for this middleware.
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:    public function before($findName, callable $middleware, $withName = '')
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:     * @param string   $withName   Name to register for this middleware.
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:            foreach (array_reverse($this->stack) as $fn) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:        foreach ($this->stack as $k => $v) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:     * @param          $before
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:    private function splice($findName, $withName, callable $middleware, $before)
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:        if ($before) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/HandlerStack.php:     * Provides a debug string for a given callable.
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php: * More documentation for each option can be found at http://guzzlephp.org/.
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * for a request.
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * containing a PEM formatted SSL client side certificate. If a password
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * delay: (int) The amount of time to delay before sending in milliseconds.
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * Set to `true` to enable the "Expect: 100-Continue" header for all
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * "Expect: 100-Continue" header for all requests. Set to a number so that
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * the Expect header. Setting to a number will send the Expect header for
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * form_params: (array) Associative array of form field names to values
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * header to application/x-www-form-urlencoded when no Content-Type header
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:    const FORM_PARAMS = 'form_params';
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * exceptions will be thrown for 4xx and 5xx responses. This option only
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * required "name" key mapping to the form field, name, a required
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * array to specify different proxies for different protocols (where the
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * synchronous: (bool) Set to true to inform HTTP handlers that you intend
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * on waiting on the response. This can be useful for optimizations. Note
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * SSL key in PEM format. If a password is required, then set to an array
/Users/a01064483/desktop/current/exam/GuzzleHttp/RequestOptions.php:     * by the password required for the certificate in the second element.
/Users/a01064483/desktop/current/exam/GuzzleHttp/ClientInterface.php: * Client interface for sending HTTP requests.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php: * Get the global task queue used for promise resolution.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php: * This task queue MUST be run in an event loop in order for promises to be
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php: * Creates a promise for a value if the value is not a promise.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php:function promise_for($value)
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php: * Creates a rejected promise for a reason if the reason is not a promise. If
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php:function rejection_for($reason)
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php: * Create an exception for a rejected promise value.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php:function exception_for($reason)
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php: * Returns an iterator for the given value.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php:function iter_for($value)
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php: * @see GuzzleHttp\Promise\inspect for the inspection state array format.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php:    foreach ($promises as $key => $promise) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php:    foreach ($promises as $key => $promise) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php: * @see GuzzleHttp\Promise\inspect for the inspection state array format.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php: * pending promises and returns a numeric concurrency limit value to allow for
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php:    return promise_for($yielded)->then(
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions.php:            $nextYield = $generator->throw(exception_for($reason));
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/functions_include.php:if (!function_exists('GuzzleHttp\Promise\promise_for')) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/CancellationException.php: * Exception that is set as the reason for a promise that has been cancelled.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/TaskQueue.php:     * Note: This shutdown will occur before any destructors are triggered.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/Promise.php:                ? promise_for($this->result)->then($onFulfilled)
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/Promise.php:                : promise_for($this->result);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/Promise.php:        $rejection = rejection_for($this->result);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/Promise.php:                throw exception_for($inner);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/Promise.php:                foreach ($handlers as $handler) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/Promise.php:            // Resolve the handlers when the forwarded promise is resolved.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/Promise.php:                    foreach ($handlers as $handler) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/Promise.php:                    foreach ($handlers as $handler) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/Promise.php:        // The promise may have been cancelled or resolved before placing
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/Promise.php:        foreach ($waitList as $result) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/RejectedPromise.php:            throw exception_for($this->reason);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/EachPromise.php:        $this->iterable = iter_for($iterable);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/EachPromise.php:        // Note this is special handling for concurrency=1 so that we do
/Users/a01064483/desktop/current/exam/GuzzleHttp/Promise/EachPromise.php:        $promise = promise_for($this->iterable->current());
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/SessionCookieJar.php:        foreach ($this as $cookie) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/SessionCookieJar.php:            foreach ($data as $cookie) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/CookieJarInterface.php: * necessary. Subclasses are also responsible for storing and retrieving
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/SetCookie.php:        foreach ($pieces as $part) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/SetCookie.php:            // Only check for non-cookies when cookies have been found
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/SetCookie.php:                foreach (array_keys(self::$defaults) as $search) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/SetCookie.php:        foreach ($this->data as $k => $v) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/SetCookie.php:     * Set the unix timestamp for which the cookie will expire
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/FileCookieJar.php: * Persists non-session cookies using a JSON formatted file
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/FileCookieJar.php:        foreach ($this as $cookie) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/FileCookieJar.php:     * Load cookies from a JSON formatted file.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/FileCookieJar.php:            foreach (json_decode($json, true) as $cookie) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/CookieJar.php:        foreach ($cookieArray as $cookie) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/CookieJar.php:        foreach ($cookies as $name => $value) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/CookieJar.php:        foreach ($this->cookies as $i => $c) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/CookieJar.php:            foreach ($cookieHeader as $cookie) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Cookie/CookieJar.php:        foreach ($this->cookies as $cookie) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:     * cookies. This is typically handled for you by a client.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:     * Middleware that throws exceptions for 4xx or 5xx responses when the
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:     * Middleware that invokes a callback before and after sending a request.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:     * "taps" into the chain to be notified before returning the promise. The
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:     * before listener accepts a request and options array, and the after
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:     * @param callable $before Function to invoke before forwarding the request.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:     * @param callable $after  Function invoked after forwarding.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:    public static function tap(callable $before = null, callable $after = null)
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:        return function (callable $handler) use ($before, $after) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:            return function ($request, array $options) use ($handler, $before, $after) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:                if ($before) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:                    $before($request, $options);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:     * formatter.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:     * @param MessageFormatter $formatter Formatter used to create message strings.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:    public static function log(LoggerInterface $logger, MessageFormatter $formatter, $logLevel = LogLevel::INFO)
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:        return function (callable $handler) use ($logger, $formatter, $logLevel) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:            return function ($request, array $options) use ($handler, $logger, $formatter, $logLevel) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:                    function ($response) use ($logger, $request, $formatter, $logLevel) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:                        $message = $formatter->format($request, $response);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:                    function ($reason) use ($logger, $request, $formatter) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:                        $message = $formatter->format($request, $response, $reason);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:                        return \GuzzleHttp\Promise\rejection_for($reason);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Middleware.php:     * Middleware that applies a map function to the request before passing to
/Users/a01064483/desktop/current/exam/GuzzleHttp/MessageFormatter.php: * Formats log messages using variable substitutions for requests, responses,
/Users/a01064483/desktop/current/exam/GuzzleHttp/MessageFormatter.php:    /** @var string Template used to format log messages */
/Users/a01064483/desktop/current/exam/GuzzleHttp/MessageFormatter.php:     * Returns a formatted message string.
/Users/a01064483/desktop/current/exam/GuzzleHttp/MessageFormatter.php:    public function format(
/Users/a01064483/desktop/current/exam/GuzzleHttp/MessageFormatter.php:        foreach ($message->getHeaders() as $name => $values) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Exception/ConnectException.php: * Note that no response is present for a ConnectException
/Users/a01064483/desktop/current/exam/GuzzleHttp/Exception/RequestException.php:     * Get contextual information about the error from the underlying handler.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Exception/RequestException.php:     * couple you to a specific handler, but can give more debug information
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:    foreach ($message->getHeaders() as $name => $values) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php: * Returns a UriInterface for the given value.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php: * returns a UriInterface for the given value. If the value is already a
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:function uri_for($uri)
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:function stream_for($resource = '', array $options = [])
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:                return stream_for((string) $resource, $options);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:    foreach (normalize_header($header) as $val) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:        foreach (preg_split('/;(?=([^"]*"[^"]*")*[^"]*$)/', $val) as $kvp) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:    foreach ($header as $value) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:        foreach ((array) $value as $v) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:            foreach (preg_split('/,(?=([^"]*"[^"]*")*[^"]*$)/', $v) as $vv) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php: * error handler that checks for errors and throws an exception instead.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php: * @param StreamInterface $stream    Stream to calculate the hash for
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php: * If multiple values are found for the same key, the value of that key
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:    foreach (explode('&', $str) as $kvp) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:    foreach ($params as $k => $v) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:            foreach ($v as $vv) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:        'docx' => 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:        'pptx' => 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:        'xlsx' => 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:    // Iterate over each line in the message, accounting for line endings
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:    for ($i = 0, $totalLines = count($lines); $i < $totalLines; $i += 2) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php: * Constructs a URI for an HTTP request message.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:    foreach ($keys as &$key) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/functions.php:    foreach ($data as $k => $v) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/FnStream.php: * Allows for easy testing and extension of a provided stream without needing
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/FnStream.php: * to create a concrete class for a simple extension point.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/FnStream.php:        foreach ($methods as $name => $fn) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/FnStream.php:        foreach (array_diff(self::$slots, array_keys($methods)) as $diff) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MessageTrait.php:            foreach ($new->headers[$name] as &$v) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MessageTrait.php:        foreach (array_keys($new->headerLines) as $key) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MessageTrait.php:        foreach (array_keys($new->headerLines) as $key) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MessageTrait.php:            $this->stream = stream_for('');
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MessageTrait.php:        foreach ($headers as $header => $value) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MessageTrait.php:                foreach ($value as $v) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/CachingStream.php:        // Perform a regular read on any previously read data from the buffer
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Response.php:        203 => 'Non-Authoritative Information',
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Response.php:     * @param int    $status  Status code for the response, if any.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Response.php:     * @param array  $headers Headers for the response, if any.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Response.php:            $this->stream = stream_for($body);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/StreamWrapper.php:     * @param StreamInterface $stream The stream to get a resource for
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Stream.php:     *   size, but the size is known due to foreknowledge, then you can
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Stream.php:        throw new \BadMethodCallException('No value for ' . $name);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Request.php:     * @param null|string $method HTTP method for the request.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Request.php:     * @param null|string|UriInterface $uri URI for the request.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Request.php:     * @param array $headers Headers for the message.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Request.php:     * @throws InvalidArgumentException for an invalid URI
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Request.php:            $this->stream = stream_for($body);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/DroppingStream.php:     * @param int             $maxLength Maximum size before dropping data.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/LazyOpenStream.php:        return stream_for(try_fopen($this->filename, $this->mode));
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/BufferStream.php:     *                 but will return false to inform writers to slow down
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Uri.php:        foreach ($segments as $segment) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Uri.php:        foreach (explode('&', $current) as $part) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Uri.php:            foreach (explode('&', $current) as $part) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/Uri.php:     * Is a given port non-standard for the current scheme?
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/UploadedFile.php:                'Invalid stream or file provided for UploadedFile'
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/UploadedFile.php:                'Invalid error status for UploadedFile'
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/UploadedFile.php:                'Invalid path provided for move operation; must be a non-empty string'
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/AppendStream.php:        foreach ($streams as $stream) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/AppendStream.php:        foreach ($this->streams as $stream) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/AppendStream.php:        foreach ($this->streams as $stream) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/AppendStream.php:        foreach ($this->streams as $i => $stream) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/LimitStream.php:     *                                from the stream. Pass -1 for no limit.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/LimitStream.php:     * @param int|null        $offset Position to seek to before reading (only
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/LimitStream.php:     * Allow for a bounded seek on the read limited stream
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/LimitStream.php:     *                   Use -1 for no limit.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/ServerRequest.php: * Extends the Request definition to add methods for accessing incoming data,
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/ServerRequest.php: * string arguments, body parameters, and upload file information.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/ServerRequest.php:     * @param null|string $method HTTP method for the request
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/ServerRequest.php:     * @param null|string|UriInterface $uri URI for the request
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/ServerRequest.php:     * @param array $headers Headers for the message
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/ServerRequest.php:     * @throws InvalidArgumentException for an invalid URI
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/ServerRequest.php:     * @throws InvalidArgumentException for unrecognized values
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/ServerRequest.php:        foreach ($files as $key => $value) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/ServerRequest.php:        foreach (array_keys($files['tmp_name']) as $key) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php: * Stream that when read returns bytes for a streaming multipart or
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php: * multipart/form-data stream.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php:     *                         required "name" key mapping to the form field,
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php:     * Get the headers needed before transferring the content of a POST file
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php:        foreach ($headers as $key => $value) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php:        foreach ($elements as $element) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php:        $stream->addStream(stream_for("--{$this->boundary}--\r\n"));
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php:        foreach (['contents', 'name'] as $key) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php:        $element['contents'] = stream_for($element['contents']);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php:        $stream->addStream(stream_for($this->getHeaders($headers)));
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php:        $stream->addStream(stream_for("\r\n"));
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php:                ? sprintf('form-data; name="%s"; filename="%s"',
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php:                : "form-data; name=\"{$name}\"";
/Users/a01064483/desktop/current/exam/GuzzleHttp/Psr7/MultipartStream.php:        foreach ($headers as $k => $v) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:     * @see \GuzzleHttp\RequestOptions for a list of available request options.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            $config['base_uri'] = Psr7\uri_for($config['base_uri']);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:        return Psr7\Uri::resolve(Psr7\uri_for($config['base_uri']), $uri);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:     * Configures the default options for a client.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            foreach (array_keys($this->config['headers']) as $name) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:        // Special handling for headers is required as they are added as
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:        foreach ($result as $k => $v) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            return Promise\promise_for($handler($request, $options));
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            return Promise\rejection_for($e);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:        if (isset($options['form_params'])) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:                    . 'form_params and multipart at the same time. Use the '
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:                    . 'form_params option if you want to send application/'
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:                    . 'x-www-form-urlencoded requests, and the multipart '
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:                    . 'option to send multipart/form-data requests.');
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            $options['body'] = http_build_query($options['form_params'], '', '&');
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            unset($options['form_params']);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            $options['_conditional']['Content-Type'] = 'application/x-www-form-urlencoded';
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            $modify['body'] = Psr7\stream_for($options['body']);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            $modify['body'] = Psr7\stream_for($jsonStr);
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            // Use a multipart/form-data POST if a Content-Type is not set.
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            $options['_conditional']['Content-Type'] = 'multipart/form-data; boundary='
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            foreach ($options['_conditional'] as $k => $v) {
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            . 'Please use the "form_params" request option to send a '
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            . 'application/x-www-form-urlencoded request, or a the "multipart" '
/Users/a01064483/desktop/current/exam/GuzzleHttp/Client.php:            . 'request option to send a multipart/form-data request.');
/Users/a01064483/desktop/current/exam/JmesPath/TreeCompiler.php:     * that match the format of sprintf.
/Users/a01064483/desktop/current/exam/JmesPath/TreeCompiler.php:        $a = $this->makeVar('beforeOr');
/Users/a01064483/desktop/current/exam/JmesPath/TreeCompiler.php:        $a = $this->makeVar('beforeAnd');
/Users/a01064483/desktop/current/exam/JmesPath/TreeCompiler.php:        foreach ($node['children'] as $child) {
/Users/a01064483/desktop/current/exam/JmesPath/TreeCompiler.php:        foreach ($node['children'] as $arg) {
/Users/a01064483/desktop/current/exam/JmesPath/TreeCompiler.php:                ->write('foreach ($value as %s) {', $val)
/Users/a01064483/desktop/current/exam/JmesPath/TreeCompiler.php:            ->write('foreach ((array) $value as %s) {', $val)
/Users/a01064483/desktop/current/exam/JmesPath/TreeCompiler.php:        $value = $this->makeVar('beforeCondition');
/Users/a01064483/desktop/current/exam/JmesPath/Parser.php:            throw $this->syntax('Expected a closing rbracket for the filter');
/Users/a01064483/desktop/current/exam/JmesPath/Env.php:        foreach (glob("{$compileDir}/jmespath_*.php") as $file) {
/Users/a01064483/desktop/current/exam/JmesPath/TreeInterpreter.php:     * The evaluation logic for each node type is embedded into a large switch
/Users/a01064483/desktop/current/exam/JmesPath/TreeInterpreter.php:                foreach ((array) $left as $val) {
/Users/a01064483/desktop/current/exam/JmesPath/TreeInterpreter.php:                foreach ($value as $values) {
/Users/a01064483/desktop/current/exam/JmesPath/TreeInterpreter.php:                foreach ($node['children'] as $node) {
/Users/a01064483/desktop/current/exam/JmesPath/TreeInterpreter.php:                foreach ($node['children'] as $node) {
/Users/a01064483/desktop/current/exam/JmesPath/TreeInterpreter.php:                foreach ($node['children'] as $arg) {
/Users/a01064483/desktop/current/exam/JmesPath/DebugRuntime.php: * Provides CLI debugging information for the AST and Compiler runtimes.
/Users/a01064483/desktop/current/exam/JmesPath/DebugRuntime.php:        foreach ($tokens as $t) {
/Users/a01064483/desktop/current/exam/JmesPath/Lexer.php:     * characters. Escaped delimiters will be adjusted before returning a
/Users/a01064483/desktop/current/exam/JmesPath/Lexer.php:            // Legacy support for elided quotes. Try to parse again by adding
/Users/a01064483/desktop/current/exam/JmesPath/Utils.php:     * a simple Schwartzian transform that uses array index positions as tie
/Users/a01064483/desktop/current/exam/JmesPath/Utils.php:     * @link http://en.wikipedia.org/wiki/Schwartzian_transform
/Users/a01064483/desktop/current/exam/JmesPath/Utils.php:            for ($i = $start; $i < $stop; $i += $step) {
/Users/a01064483/desktop/current/exam/JmesPath/Utils.php:            for ($i = $start; $i > $stop; $i += $step) {
/Users/a01064483/desktop/current/exam/JmesPath/FnDispatcher.php:        foreach ($args[1] as $a) {
/Users/a01064483/desktop/current/exam/JmesPath/FnDispatcher.php:        foreach ($args as $index => $value) {
/Users/a01064483/desktop/current/exam/LICENSE.md:"License" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1
/Users/a01064483/desktop/current/exam/LICENSE.md:"Source" form shall mean the preferred form for making modifications, including but not limited to software
/Users/a01064483/desktop/current/exam/LICENSE.md:"Object" form shall mean any form resulting from mechanical transformation or translation of a Source form,
/Users/a01064483/desktop/current/exam/LICENSE.md:"Work" shall mean the work of authorship, whether in Source or Object form, made available under the License,
/Users/a01064483/desktop/current/exam/LICENSE.md:"Derivative Works" shall mean any work, whether in Source or Object form, that is based on (or derived from)
/Users/a01064483/desktop/current/exam/LICENSE.md:the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent,
/Users/a01064483/desktop/current/exam/LICENSE.md:Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to
/Users/a01064483/desktop/current/exam/LICENSE.md:submit on behalf of the copyright owner. For the purposes of this definition, "submitted" means any form of
/Users/a01064483/desktop/current/exam/LICENSE.md:that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but
/Users/a01064483/desktop/current/exam/LICENSE.md:Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such
/Users/a01064483/desktop/current/exam/LICENSE.md:Derivative Works in Source or Object form.
/Users/a01064483/desktop/current/exam/LICENSE.md:License for that Work shall terminate as of the date such litigation is filed.
/Users/a01064483/desktop/current/exam/LICENSE.md:modifications, and in Source or Object form, provided that You meet the following conditions:
/Users/a01064483/desktop/current/exam/LICENSE.md:   3. You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent,
/Users/a01064483/desktop/current/exam/LICENSE.md:	  trademark, and attribution notices from the Source form of the Work, excluding those notices that do
/Users/a01064483/desktop/current/exam/LICENSE.md:	  the Source form or documentation, if provided along with the Derivative Works; or, within a display
/Users/a01064483/desktop/current/exam/LICENSE.md:	  contents of the NOTICE file are for informational purposes only and do not modify the License. You may
/Users/a01064483/desktop/current/exam/LICENSE.md:terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative
/Users/a01064483/desktop/current/exam/LICENSE.md:Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by
/Users/a01064483/desktop/current/exam/LICENSE.md:the Licensor, except as required for reasonable and customary use in describing the origin of the Work and
/Users/a01064483/desktop/current/exam/LICENSE.md:MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the
/Users/a01064483/desktop/current/exam/LICENSE.md:Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential
/Users/a01064483/desktop/current/exam/LICENSE.md:(including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or
/Users/a01064483/desktop/current/exam/LICENSE.md:While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for,
/Users/a01064483/desktop/current/exam/LICENSE.md:each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason
/Users/a01064483/desktop/current/exam/NOTICE.md:# AWS SDK for PHP
/Users/a01064483/desktop/current/exam/NOTICE.md:express or implied. See the License for the specific language governing
/Users/a01064483/desktop/current/exam/Psr/Http/Message/ServerRequestInterface.php: * Per the HTTP specification, this interface includes properties for
/Users/a01064483/desktop/current/exam/Psr/Http/Message/ServerRequestInterface.php: * matching, decrypting cookie values, deserializing non-form-encoded body
/Users/a01064483/desktop/current/exam/Psr/Http/Message/ServerRequestInterface.php:     * MUST be compatible with what PHP's parse_str() would return for
/Users/a01064483/desktop/current/exam/Psr/Http/Message/ServerRequestInterface.php:     * If the request Content-Type is either application/x-www-form-urlencoded
/Users/a01064483/desktop/current/exam/Psr/Http/Message/ServerRequestInterface.php:     * or multipart/form-data, and the request method is POST, this method MUST
/Users/a01064483/desktop/current/exam/Psr/Http/Message/ServerRequestInterface.php:     * If the request Content-Type is either application/x-www-form-urlencoded
/Users/a01064483/desktop/current/exam/Psr/Http/Message/ServerRequestInterface.php:     * or multipart/form-data, and the request method is POST, use this method
/Users/a01064483/desktop/current/exam/Psr/Http/Message/ServerRequestInterface.php:     * deserializing non-form-encoded message bodies; etc. Attributes
/Users/a01064483/desktop/current/exam/Psr/Http/Message/ServerRequestInterface.php:     * This method obviates the need for a hasAttribute() method, as it allows
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php: * provide methods for most common operations. Additional functionality for
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php: * Its primary use is for HTTP requests, but may also be used in other
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * If no authority information is present, this method MUST return an empty
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * If the port component is not set or is the standard port for the current
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * @return string The URI authority, in "[user-info@]host[:port]" format.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * Retrieve the user information component of the URI.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * If no user information is present, this method MUST return an empty
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * The trailing "@" character is not part of the user information and MUST
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * @return string The URI user information, in "username[:password]" format.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * If a port is present, and it is non-standard for the current scheme,
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * the standard port for that scheme, but SHOULD return null.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * form (e.g., "%2F") to the instance.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * that value MUST be passed in encoded form (e.g., "%26") to the instance.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * @throws \InvalidArgumentException for invalid or unsupported schemes.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * Return an instance with the specified user information.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * an instance that contains the specified user information.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * Password is optional, but the user information MUST include the
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * user; an empty string for the user is equivalent to removing user
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * information.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * @param string $user The user name to use for authority.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * @return self A new instance with the specified user information.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * @throws \InvalidArgumentException for invalid hostnames.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * Implementations MUST raise an exception for ports outside the
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * A null value provided for the port is equivalent to removing the port
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * information.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     *     removes the port information.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * @throws \InvalidArgumentException for invalid ports.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * @throws \InvalidArgumentException for invalid paths.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UriInterface.php:     * @throws \InvalidArgumentException for invalid query strings.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/StreamInterface.php:     * This method MUST attempt to seek to the beginning of the stream before
/Users/a01064483/desktop/current/exam/Psr/Http/Message/StreamInterface.php:     * This method MUST NOT raise an exception in order to conform with PHP's
/Users/a01064483/desktop/current/exam/Psr/Http/Message/StreamInterface.php:     *     PHP $whence values for `fseek()`.  SEEK_SET: Set position equal to
/Users/a01064483/desktop/current/exam/Psr/Http/Message/StreamInterface.php:     * otherwise, it will perform a seek(0).
/Users/a01064483/desktop/current/exam/Psr/Http/Message/UploadedFileInterface.php:     * operation) to perform the operation.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/RequestInterface.php: * Per the HTTP specification, this interface includes properties for
/Users/a01064483/desktop/current/exam/Psr/Http/Message/RequestInterface.php:     * Retrieves the message's request-target either as it will appear (for
/Users/a01064483/desktop/current/exam/Psr/Http/Message/RequestInterface.php:     * clients), as it appeared at request (for servers), or as it was
/Users/a01064483/desktop/current/exam/Psr/Http/Message/RequestInterface.php:     * specified for the instance (see withRequestTarget()).
/Users/a01064483/desktop/current/exam/Psr/Http/Message/RequestInterface.php:     * In most cases, this will be the origin-form of the composed URI,
/Users/a01064483/desktop/current/exam/Psr/Http/Message/RequestInterface.php:     * If the request needs a non-origin-form request-target — e.g., for
/Users/a01064483/desktop/current/exam/Psr/Http/Message/RequestInterface.php:     * specifying an absolute-form, authority-form, or asterisk-form —
/Users/a01064483/desktop/current/exam/Psr/Http/Message/RequestInterface.php:     * @link http://tools.ietf.org/html/rfc7230#section-2.7 (for the various
/Users/a01064483/desktop/current/exam/Psr/Http/Message/RequestInterface.php:     *     request-target forms allowed in request messages)
/Users/a01064483/desktop/current/exam/Psr/Http/Message/RequestInterface.php:     * @throws \InvalidArgumentException for invalid HTTP methods.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/ResponseInterface.php: * Per the HTTP specification, this interface includes properties for
/Users/a01064483/desktop/current/exam/Psr/Http/Message/ResponseInterface.php:     * to the RFC 7231 or IANA recommended reason phrase for the response's
/Users/a01064483/desktop/current/exam/Psr/Http/Message/ResponseInterface.php:     * listed in the IANA HTTP Status Code Registry) for the response's
/Users/a01064483/desktop/current/exam/Psr/Http/Message/MessageInterface.php:     *     foreach ($message->getHeaders() as $name => $values) {
/Users/a01064483/desktop/current/exam/Psr/Http/Message/MessageInterface.php:     *     foreach ($message->getHeaders() as $name => $values) {
/Users/a01064483/desktop/current/exam/Psr/Http/Message/MessageInterface.php:     *         foreach ($values as $value) {
/Users/a01064483/desktop/current/exam/Psr/Http/Message/MessageInterface.php:     *     for that header.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/MessageInterface.php:     * @return string[] An array of string values as provided for the given
/Users/a01064483/desktop/current/exam/Psr/Http/Message/MessageInterface.php:     * Retrieves a comma-separated string of the values for a single header.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/MessageInterface.php:     * @return string A string of values as provided for the given header
/Users/a01064483/desktop/current/exam/Psr/Http/Message/MessageInterface.php:     * @throws \InvalidArgumentException for invalid header names or values.
/Users/a01064483/desktop/current/exam/Psr/Http/Message/MessageInterface.php:     * Existing values for the specified header will be maintained. The new
/Users/a01064483/desktop/current/exam/Psr/Http/Message/MessageInterface.php:     * @throws \InvalidArgumentException for invalid header names or values.
/Users/a01064483/desktop/current/exam/README.md:# AWS SDK for PHP - Version 3
/Users/a01064483/desktop/current/exam/README.md:[![@awsforphp on Twitter](http://img.shields.io/badge/twitter-%40awsforphp-blue.svg?style=flat)](https://twitter.com/awsforphp)
/Users/a01064483/desktop/current/exam/README.md:The **AWS SDK for PHP** makes it easy for developers to access [Amazon Web
/Users/a01064483/desktop/current/exam/README.md:* [User Guide][docs-guide] – For both getting started and in-depth SDK usage information
/Users/a01064483/desktop/current/exam/README.md:* [Forum][sdk-forum] – Ask questions, get help, and give feedback
/Users/a01064483/desktop/current/exam/README.md:* [@awsforphp][sdk-twitter] – Follow us on Twitter
/Users/a01064483/desktop/current/exam/README.md:* Provides easy-to-use HTTP clients for all supported AWS
/Users/a01064483/desktop/current/exam/README.md:* Provides a [multipart uploader tool][docs-s3-multipart] for Amazon S3 and
/Users/a01064483/desktop/current/exam/README.md:* Provides the [Amazon DynamoDB Session Handler][docs-ddbsh] for easily scaling
/Users/a01064483/desktop/current/exam/README.md:1. **Sign up for AWS** – Before you begin, you need to
/Users/a01064483/desktop/current/exam/README.md:   sign up for an AWS account and retrieve your [AWS credentials][docs-signup].
/Users/a01064483/desktop/current/exam/README.md:   AWS SDK for PHP. The SDK is available via [Packagist] under the
/Users/a01064483/desktop/current/exam/README.md:   [Installation section of the User Guide][docs-installation] for more
/Users/a01064483/desktop/current/exam/README.md:   detailed information about installing the SDK through Composer and other
/Users/a01064483/desktop/current/exam/README.md:* [AWS Service Provider for Laravel][mod-laravel]
/Users/a01064483/desktop/current/exam/README.md:* [AWS Service Provider for Silex][mod-silex]
/Users/a01064483/desktop/current/exam/README.md:* [AWS SDK Bundle for Symfony][mod-symfony]
/Users/a01064483/desktop/current/exam/README.md:[sdk-website]: http://aws.amazon.com/sdkforphp
/Users/a01064483/desktop/current/exam/README.md:[sdk-forum]: https://forums.aws.amazon.com/forum.jspa?forumID=80
/Users/a01064483/desktop/current/exam/README.md:[sdk-twitter]: https://twitter.com/awsforphp
/Users/a01064483/desktop/current/exam/aws-autoloader.php:    'Aws\data\cloudformation\2010-05-15\api-2.json' => __DIR__ . '/Aws/data/cloudformation/2010-05-15/api-2.json.php',
/Users/a01064483/desktop/current/exam/aws-autoloader.php:    'Aws\data\cloudformation\2010-05-15\paginators-1.json' => __DIR__ . '/Aws/data/cloudformation/2010-05-15/paginators-1.json.php',
/Users/a01064483/desktop/current/exam/aws-autoloader.php:    'Aws\data\cloudformation\2010-05-15\waiters-2.json' => __DIR__ . '/Aws/data/cloudformation/2010-05-15/waiters-2.json.php',
/Users/a01064483/desktop/current/exam/aws-autoloader.php:    'Aws\S3\RetryableMalformedResponseParser' => __DIR__ . '/Aws/S3/RetryableMalformedResponseParser.php',
